; ModuleID = 'base64.e095cb54-cgu.0'
source_filename = "base64.e095cb54-cgu.0"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "bpfel"

%"std::panic::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"std::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"std::alloc::AllocError" = type {}
%"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<(), std::collections::TryReserveError>" = type { i64, [2 x i64] }
%"std::result::Result<(), std::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>" = type { i64, [2 x i64] }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>" = type { [1 x i64], i64, [1 x i64] }
%"std::alloc::LayoutError" = type {}
%"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::fmt::Error" = type {}
%"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err" = type { %"std::fmt::Error" }
%"std::result::Result<(), std::fmt::Error>::Err" = type { [1 x i8], %"std::fmt::Error" }
%"std::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::fmt::Opaque" = type {}
%"std::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"std::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"std::str::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"std::array::TryFromSliceError" = type { {} }
%"std::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>" = type { [1 x i64], i64, [1 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue" = type { { { i64, i64 }, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok" = type { { { i64, i64 }, i64 } }
%"std::result::Result<[u8; 8], std::array::TryFromSliceError>" = type { i8, [8 x i8] }
%"[closure@std::array::<impl std::convert::TryFrom<&[u8]> for [u8; 8]>::try_from::{closure#0}]" = type {}
%"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"std::result::Result<usize, std::alloc::LayoutError>::Err" = type { [8 x i8], %"std::alloc::LayoutError" }
%"std::result::Result<usize, std::alloc::LayoutError>::Ok" = type { [1 x i64], i64 }
%"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs:293:44: 293:64]" = type {}
%"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Err" = type { [1 x i8], %"std::array::TryFromSliceError" }
%"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok" = type { [1 x i8], [8 x i8] }
%"std::result::Result<&str, std::str::Utf8Error>" = type { i64, [2 x i64] }
%"std::result::Result<&str, std::str::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"std::result::Result<&str, std::str::Utf8Error>::Err" = type { [1 x i64], %"std::str::Utf8Error" }
%"std::result::Result<(), std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"std::result::Result<(), std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]" = type {}
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::option::Option<std::fmt::Arguments>" = type { {}*, [5 x i64] }
%"std::alloc::Global" = type {}
%"std::string::String" = type { %"std::vec::Vec<u8>" }
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>" = type { {}*, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Continue" = type { [1 x i8], {} }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Break" = type { [1 x i8], %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break" = type { [8 x i8], %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%Config = type { i8, i8, i8 }
%"chunked_encoder::ChunkedEncoder" = type { i64, %Config, [5 x i8] }
%"display::Base64Display" = type { { [0 x i8]*, i64 }, %"chunked_encoder::ChunkedEncoder" }
%"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>" = type { %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", i64, i64, %Config, [3 x i8], [1024 x i8], i8, [1 x i8] }
%"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>" = type { {}*, [2 x i64] }
%"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>" = type { %"std::string::String" }
%"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>::Some" = type { %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>" }
%"write::encoder_string_writer::EncoderStringWriter<std::string::String>" = type { %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>" }
%"decode::DecodeError" = type { i8, [15 x i8] }
%"decode::DecodeError::InvalidByte" = type { [1 x i8], i8, [6 x i8], i64 }
%"decode::DecodeError::InvalidLastSymbol" = type { [1 x i8], i8, [6 x i8], i64 }
%"std::fmt::DebugTuple" = type { %"std::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"std::fmt::DebugStruct" = type { %"std::fmt::Formatter"*, i8, i8, [6 x i8] }

@alloc587 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc588 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc589 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc588, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00c\01\00\00\0D\00\00\00" }>, align 8
@alloc590 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc591 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\BC\02\00\00\0D\00\00\00" }>, align 8
@alloc592 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/alloc/layout.rs" }>, align 1
@alloc593 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc592, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\10\01\00\009\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::str::Utf8Error"*)* @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17he3302857021bd81cE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::str::Utf8Error"*, %"std::fmt::Formatter"*)* @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h30ca2bf48c13fed8E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !0
@alloc605 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::array::TryFromSliceError"*)* @"_ZN4core3ptr51drop_in_place$LT$core..array..TryFromSliceError$GT$17h29be9cef0680fd88E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::array::TryFromSliceError"*, %"std::fmt::Formatter"*)* @"_ZN67_$LT$core..array..TryFromSliceError$u20$as$u20$core..fmt..Debug$GT$3fmt17hf76d34ae020e321eE" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !28
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::alloc::LayoutError"*)* @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h601ff0986ef5e0e7E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::alloc::LayoutError"*, %"std::fmt::Formatter"*)* @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdaf89633c8bfad9eE" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !36
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h644d93ab1f04cae5E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h15c1c9f7e8626237E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !42
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc609 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/raw_vec.rs" }>, align 1
@alloc610 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc609, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\97\01\00\00\09\00\00\00" }>, align 8
@str.4 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc630 = private unnamed_addr constant <{ [99 x i8] }> <{ [99 x i8] c"/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs" }>, align 1
@alloc612 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00+\00\00\00F\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc614 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00-\00\00\00-\00\00\00" }>, align 8
@str.6 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc616 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00-\00\00\00\1A\00\00\00" }>, align 8
@alloc618 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\001\00\00\00\0D\00\00\00" }>, align 8
@alloc620 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\007\00\00\00D\00\00\00" }>, align 8
@alloc622 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\007\00\00\00\11\00\00\00" }>, align 8
@alloc624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00:\00\00\00'\00\00\00" }>, align 8
@alloc625 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"Don't use a tiny buffer" }>, align 1
@alloc627 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00M\00\00\00\0E\00\00\00" }>, align 8
@alloc629 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00S\00\00\00\05\00\00\00" }>, align 8
@str.7 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc631 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc630, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00h\00\00\000\00\00\00" }>, align 8
@alloc632 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"base64 data was not utf8" }>, align 1
@alloc633 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs" }>, align 1
@alloc634 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc633, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\003\00\00\000\00\00\00" }>, align 8
@alloc892 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs" }>, align 1
@alloc638 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\8D\00\00\00\05\00\00\00" }>, align 8
@alloc640 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\92\00\00\00'\00\00\00" }>, align 8
@alloc641 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"usize overflow when calculating b64 length" }>, align 1
@alloc643 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\99\00\00\00\0A\00\00\00" }>, align 8
@alloc645 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\9B\00\00\00\05\00\00\00" }>, align 8
@alloc647 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\A0\00\00\00\18\00\00\00" }>, align 8
@alloc649 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\A0\00\00\00*\00\00\00" }>, align 8
@alloc651 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\B6\00\00\003\00\00\00" }>, align 8
@alloc653 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\B6\00\00\00 \00\00\00" }>, align 8
@alloc655 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\B7\00\00\00:\00\00\00" }>, align 8
@alloc657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\B7\00\00\00%\00\00\00" }>, align 8
@alloc659 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C1\00\00\00'\00\00\00" }>, align 8
@alloc661 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C3\00\00\00\1F\00\00\00" }>, align 8
@alloc663 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C3\00\00\00\0D\00\00\00" }>, align 8
@alloc665 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C4\00\00\00\1F\00\00\00" }>, align 8
@alloc667 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C4\00\00\00\0D\00\00\00" }>, align 8
@alloc669 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C5\00\00\00\1F\00\00\00" }>, align 8
@alloc671 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C5\00\00\00\0D\00\00\00" }>, align 8
@alloc673 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C6\00\00\00\1F\00\00\00" }>, align 8
@alloc675 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C6\00\00\00\0D\00\00\00" }>, align 8
@alloc677 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C7\00\00\00\1F\00\00\00" }>, align 8
@alloc679 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C7\00\00\00\0D\00\00\00" }>, align 8
@alloc681 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C8\00\00\00\1F\00\00\00" }>, align 8
@alloc683 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C8\00\00\00\0D\00\00\00" }>, align 8
@alloc685 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C9\00\00\00\1F\00\00\00" }>, align 8
@alloc687 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C9\00\00\00\0D\00\00\00" }>, align 8
@alloc689 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CA\00\00\00\1F\00\00\00" }>, align 8
@alloc691 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CA\00\00\00\0D\00\00\00" }>, align 8
@alloc693 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CC\00\00\00'\00\00\00" }>, align 8
@alloc695 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CE\00\00\00\1F\00\00\00" }>, align 8
@alloc697 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CE\00\00\00\0D\00\00\00" }>, align 8
@alloc699 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CF\00\00\00\1F\00\00\00" }>, align 8
@alloc701 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\CF\00\00\00\0D\00\00\00" }>, align 8
@alloc703 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D0\00\00\00 \00\00\00" }>, align 8
@alloc705 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D0\00\00\00\0D\00\00\00" }>, align 8
@alloc707 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D1\00\00\00 \00\00\00" }>, align 8
@alloc709 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D1\00\00\00\0D\00\00\00" }>, align 8
@alloc711 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D2\00\00\00 \00\00\00" }>, align 8
@alloc713 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D2\00\00\00\0D\00\00\00" }>, align 8
@alloc715 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D3\00\00\00 \00\00\00" }>, align 8
@alloc717 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D3\00\00\00\0D\00\00\00" }>, align 8
@alloc719 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D4\00\00\00 \00\00\00" }>, align 8
@alloc721 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D4\00\00\00\0D\00\00\00" }>, align 8
@alloc723 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D5\00\00\00 \00\00\00" }>, align 8
@alloc725 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D5\00\00\00\0D\00\00\00" }>, align 8
@alloc727 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D7\00\00\00'\00\00\00" }>, align 8
@alloc729 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D9\00\00\00 \00\00\00" }>, align 8
@alloc731 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D9\00\00\00\0D\00\00\00" }>, align 8
@alloc733 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DA\00\00\00 \00\00\00" }>, align 8
@alloc735 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DA\00\00\00\0D\00\00\00" }>, align 8
@alloc737 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DB\00\00\00 \00\00\00" }>, align 8
@alloc739 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DB\00\00\00\0D\00\00\00" }>, align 8
@alloc741 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DC\00\00\00 \00\00\00" }>, align 8
@alloc743 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DC\00\00\00\0D\00\00\00" }>, align 8
@alloc745 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DD\00\00\00 \00\00\00" }>, align 8
@alloc747 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DD\00\00\00\0D\00\00\00" }>, align 8
@alloc749 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DE\00\00\00 \00\00\00" }>, align 8
@alloc751 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DE\00\00\00\0D\00\00\00" }>, align 8
@alloc753 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DF\00\00\00 \00\00\00" }>, align 8
@alloc755 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\DF\00\00\00\0D\00\00\00" }>, align 8
@alloc757 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E0\00\00\00 \00\00\00" }>, align 8
@alloc759 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E0\00\00\00\0D\00\00\00" }>, align 8
@alloc761 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E2\00\00\00'\00\00\00" }>, align 8
@alloc763 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E4\00\00\00 \00\00\00" }>, align 8
@alloc765 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E4\00\00\00\0D\00\00\00" }>, align 8
@alloc767 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E5\00\00\00 \00\00\00" }>, align 8
@alloc769 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E5\00\00\00\0D\00\00\00" }>, align 8
@alloc771 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E6\00\00\00 \00\00\00" }>, align 8
@alloc773 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E6\00\00\00\0D\00\00\00" }>, align 8
@alloc775 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E7\00\00\00 \00\00\00" }>, align 8
@alloc777 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E7\00\00\00\0D\00\00\00" }>, align 8
@alloc779 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E8\00\00\00 \00\00\00" }>, align 8
@alloc781 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E8\00\00\00\0D\00\00\00" }>, align 8
@alloc783 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E9\00\00\00 \00\00\00" }>, align 8
@alloc785 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\E9\00\00\00\0D\00\00\00" }>, align 8
@alloc787 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\EA\00\00\00 \00\00\00" }>, align 8
@alloc789 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\EA\00\00\00\0D\00\00\00" }>, align 8
@alloc791 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\EB\00\00\00 \00\00\00" }>, align 8
@alloc793 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\EB\00\00\00\0D\00\00\00" }>, align 8
@alloc795 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\ED\00\00\00\0D\00\00\00" }>, align 8
@alloc797 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\EE\00\00\00\0D\00\00\00" }>, align 8
@alloc799 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\F7\00\00\00\18\00\00\00" }>, align 8
@alloc801 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FC\00\00\00/\00\00\00" }>, align 8
@alloc803 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FC\00\00\00\1C\00\00\00" }>, align 8
@alloc805 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FD\00\00\006\00\00\00" }>, align 8
@alloc807 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FD\00\00\00!\00\00\00" }>, align 8
@alloc809 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FF\00\00\00)\00\00\00" }>, align 8
@alloc811 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FF\00\00\00\1B\00\00\00" }>, align 8
@alloc813 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\FF\00\00\00\09\00\00\00" }>, align 8
@alloc815 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\01\01\00\00\1C\00\00\00" }>, align 8
@alloc817 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\01\01\00\002\00\00\00" }>, align 8
@alloc819 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\01\01\00\00\0D\00\00\00" }>, align 8
@alloc821 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\00\01\00\00\09\00\00\00" }>, align 8
@alloc823 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\03\01\00\00\1C\00\00\00" }>, align 8
@alloc825 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\03\01\00\002\00\00\00" }>, align 8
@alloc827 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\03\01\00\00\0D\00\00\00" }>, align 8
@alloc829 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\02\01\00\00\09\00\00\00" }>, align 8
@alloc831 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\04\01\00\00)\00\00\00" }>, align 8
@alloc833 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\04\01\00\00\1B\00\00\00" }>, align 8
@alloc835 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\04\01\00\00\09\00\00\00" }>, align 8
@alloc837 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\06\01\00\00\09\00\00\00" }>, align 8
@alloc839 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\07\01\00\00\09\00\00\00" }>, align 8
@alloc841 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\13\01\00\00.\00\00\00" }>, align 8
@alloc843 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\13\01\00\00 \00\00\00" }>, align 8
@alloc845 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\13\01\00\00\09\00\00\00" }>, align 8
@alloc847 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\15\01\00\00\1C\00\00\00" }>, align 8
@alloc849 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\15\01\00\00\0D\00\00\00" }>, align 8
@alloc851 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\14\01\00\00\10\00\00\00" }>, align 8
@alloc853 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\14\01\00\00\09\00\00\00" }>, align 8
@alloc855 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\16\01\00\00\09\00\00\00" }>, align 8
@alloc857 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0B\01\00\00.\00\00\00" }>, align 8
@alloc859 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0B\01\00\00 \00\00\00" }>, align 8
@alloc861 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0B\01\00\00\09\00\00\00" }>, align 8
@alloc863 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0C\01\00\003\00\00\00" }>, align 8
@alloc865 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0D\01\00\00\15\00\00\00" }>, align 8
@alloc867 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0D\01\00\00\0F\00\00\00" }>, align 8
@alloc869 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0C\01\00\00$\00\00\00" }>, align 8
@alloc871 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0C\01\00\00\10\00\00\00" }>, align 8
@alloc873 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0C\01\00\00\09\00\00\00" }>, align 8
@alloc875 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\10\01\00\00\22\00\00\00" }>, align 8
@alloc877 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\10\01\00\00\1C\00\00\00" }>, align 8
@alloc879 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\10\01\00\00\0D\00\00\00" }>, align 8
@alloc881 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0F\01\00\00\10\00\00\00" }>, align 8
@alloc883 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0F\01\00\00\09\00\00\00" }>, align 8
@alloc885 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\11\01\00\00\09\00\00\00" }>, align 8
@alloc495 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"Impossible remainder" }>, align 1
@alloc496 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc495, i32 0, i32 0, i32 0), [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc500 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"internal error: entered unreachable code: " }>, align 1
@alloc501 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [42 x i8] }>, <{ [42 x i8] }>* @alloc500, i32 0, i32 0, i32 0), [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc887 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00*\01\00\00\16\00\00\00" }>, align 8
@alloc889 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00:\01\00\00\12\00\00\00" }>, align 8
@alloc891 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00;\01\00\00\09\00\00\00" }>, align 8
@alloc893 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc892, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00<\01\00\00\09\00\00\00" }>, align 8
@alloc521 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"Invalid last symbol " }>, align 1
@alloc513 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c", offset " }>, align 1
@alloc514 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"." }>, align 1
@alloc522 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc521, i32 0, i32 0, i32 0), [8 x i8] c"\14\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc513, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc514, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc516 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 8
@alloc518 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"Encoded text cannot have a 6-bit remainder." }>, align 1
@alloc519 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [43 x i8] }>, <{ [43 x i8] }>* @alloc518, i32 0, i32 0, i32 0), [8 x i8] c"+\00\00\00\00\00\00\00" }>, align 8
@alloc511 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"Invalid byte " }>, align 1
@alloc512 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc511, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc513, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc514, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc894 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"invalid last symbol" }>, align 1
@alloc895 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"invalid length" }>, align 1
@alloc896 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid byte" }>, align 1
@alloc897 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"Overflow when calculating number of chunks in input" }>, align 1
@alloc898 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs" }>, align 1
@alloc899 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc898, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\BC\00\00\00\0A\00\00\00" }>, align 8
@alloc57 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"!\22#$%&'()*+,-0123456789@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdehijklmpqr" }>, align 1
@alloc51 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+," }>, align 1
@alloc45 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789" }>, align 1
@alloc39 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" }>, align 1
@alloc33 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" }>, align 1
@alloc27 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" }>, align 1
@alloc60 = private unnamed_addr constant <{ [256 x i8] }> <{ [256 x i8] c}>, align 1
@alloc54 = private unnamed_addr constant <{ [256 x i8] }> <{ [256 x i8] c}>, align 1
@alloc48 = private unnamed_addr constant <{ [256 x i8] }> <{ [256 x i8] c}>, align 1
@alloc42 = private unnamed_addr constant <{ [256 x i8] }> <{ [256 x i8] c}>, align 1
@alloc36 = private unnamed_addr constant <{ [256 x i8] }> <{ [256 x i8] c}>, align 1
@alloc30 = private unnamed_addr constant <{ [256 x i8] }> <{ [256 x i8] c}>, align 1
@alloc900 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"InvalidLastSymbol" }>, align 1
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2747f93badf96cc3E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h20a18daf423b9470E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !46
@alloc904 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"InvalidLength" }>, align 1
@alloc905 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"InvalidByte" }>, align 1
@alloc906 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"BinHex" }>, align 1
@alloc907 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"ImapMutf7" }>, align 1
@alloc908 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Bcrypt" }>, align 1
@alloc909 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Crypt" }>, align 1
@alloc910 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"UrlSafe" }>, align 1
@alloc911 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Standard" }>, align 1
@alloc912 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Config" }>, align 1
@alloc913 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"char_set" }>, align 1
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr45drop_in_place$LT$$RF$base64..CharacterSet$GT$17h07288ddd5b2375fbE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2113a1daaec7addaE" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !50
@alloc917 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"pad" }>, align 1
@vtable.a = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17he29f517b582b2d4aE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61857a7b61451390E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !63
@alloc921 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"decode_allow_trailing_bits" }>, align 1

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hef2ad988239277b8E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !107 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !127, metadata !DIExpression()), !dbg !129
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !128, metadata !DIExpression()), !dbg !130
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb891ac95b6994738E"([0 x i8]* %slice.0, i64 %slice.1), !dbg !131
  br label %bb1, !dbg !131

bb1:                                              ; preds = %start
  store i8* %_4, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !132, metadata !DIExpression()), !dbg !142
  store i64 %self.0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !141, metadata !DIExpression()), !dbg !144
  store i8* %_4, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !145, metadata !DIExpression()), !dbg !152
  store i64 %self.0, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !151, metadata !DIExpression()), !dbg !154
  %5 = getelementptr inbounds i8, i8* %_4, i64 %self.0, !dbg !155
  store i8* %5, i8** %0, align 8, !dbg !155
  %6 = load i8*, i8** %0, align 8, !dbg !155
  br label %bb2, !dbg !131

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0, !dbg !156
; call core::ptr::slice_from_raw_parts
  %7 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hff1b586a1ad451d5E(i8* %6, i64 %_7), !dbg !157
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !157
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !157
  br label %bb3, !dbg !157

bb3:                                              ; preds = %bb2
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !158
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1, !dbg !158
  ret { [0 x i8]*, i64 } %11, !dbg !158
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h345558571a3a14d0E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !159 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i8*, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !167, metadata !DIExpression()), !dbg !169
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !168, metadata !DIExpression()), !dbg !170
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !171, metadata !DIExpression()), !dbg !180
  %7 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !182
  br label %bb1, !dbg !183

bb1:                                              ; preds = %start
  store i8* %7, i8** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i1, metadata !184, metadata !DIExpression()), !dbg !191
  store i64 %self.0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !190, metadata !DIExpression()), !dbg !193
  store i8* %7, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !194, metadata !DIExpression()), !dbg !200
  store i64 %self.0, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !199, metadata !DIExpression()), !dbg !202
  %8 = getelementptr inbounds i8, i8* %7, i64 %self.0, !dbg !203
  store i8* %8, i8** %0, align 8, !dbg !203
  %_3.i.i = load i8*, i8** %0, align 8, !dbg !203
  br label %bb2, !dbg !183

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0, !dbg !204
; call core::ptr::slice_from_raw_parts_mut
  %9 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h808069bf2fa712efE(i8* %_3.i.i, i64 %_7), !dbg !205
  %10 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !205
  %11 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !205
  br label %bb3, !dbg !205

bb3:                                              ; preds = %bb2
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !206
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !206
  ret { [0 x i8]*, i64 } %13, !dbg !206
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h972185dcfd91effbE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !207 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !228, metadata !DIExpression()), !dbg !230
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !229, metadata !DIExpression()), !dbg !231
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !232
  br i1 %_3, label %bb1, label %bb2, !dbg !232

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1, !dbg !233
  br i1 %_8, label %bb3, label %bb4, !dbg !233

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h0a02db5c3145b3dbE(i64 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !234
  unreachable, !dbg !234

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hef2ad988239277b8E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !235
  %_15.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !235
  %_15.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !235
  br label %bb5, !dbg !235

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc9093b080894820aE(i64 %self.1, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !236
  unreachable, !dbg !236

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0, !dbg !237
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_15.1, 1, !dbg !237
  ret { [0 x i8]*, i64 } %7, !dbg !237
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17heef28bf0af95df53E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !238 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !246, metadata !DIExpression()), !dbg !248
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !247, metadata !DIExpression()), !dbg !249
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !250
  br i1 %_4, label %bb1, label %bb2, !dbg !250

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !251
  br i1 %_9, label %bb3, label %bb4, !dbg !251

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h0a02db5c3145b3dbE(i64 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !252
  unreachable, !dbg !252

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h345558571a3a14d0E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !253
  %_18.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !253
  %_18.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !253
  br label %bb5, !dbg !253

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc9093b080894820aE(i64 %self.1, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !254
  unreachable, !dbg !254

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0, !dbg !255
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_18.1, 1, !dbg !255
  ret { [0 x i8]*, i64 } %7, !dbg !255
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h890a93239c421e89E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !256 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !264, metadata !DIExpression()), !dbg !266
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !265, metadata !DIExpression()), !dbg !267
  %3 = bitcast { i64, i64 }* %_3 to i64*, !dbg !268
  store i64 0, i64* %3, align 8, !dbg !268
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !268
  store i64 %self, i64* %4, align 8, !dbg !268
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !268
  %6 = load i64, i64* %5, align 8, !dbg !268
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !268
  %8 = load i64, i64* %7, align 8, !dbg !268
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %9 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h972185dcfd91effbE"(i64 %6, i64 %8, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !268
  %10 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !268
  %11 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !268
  br label %bb1, !dbg !268

bb1:                                              ; preds = %start
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !269
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !269
  ret { [0 x i8]*, i64 } %13, !dbg !269
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha0aaf566236448aeE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !270 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !278, metadata !DIExpression()), !dbg !280
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !279, metadata !DIExpression()), !dbg !281
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h072db4e2e33b785dE"([0 x i8]* %slice.0, i64 %slice.1), !dbg !282
  br label %bb1, !dbg !282

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %_3 to i64*, !dbg !283
  store i64 %self, i64* %2, align 8, !dbg !283
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !283
  store i64 %_5, i64* %3, align 8, !dbg !283
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !283
  %5 = load i64, i64* %4, align 8, !dbg !283
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !283
  %7 = load i64, i64* %6, align 8, !dbg !283
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hef2ad988239277b8E"(i64 %5, i64 %7, [0 x i8]* %slice.0, i64 %slice.1), !dbg !283
  %9 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !283
  %10 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !283
  br label %bb2, !dbg !283

bb2:                                              ; preds = %bb1
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !284
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !284
  ret { [0 x i8]*, i64 } %12, !dbg !284
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1adc4106be506d33E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !285 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !289, metadata !DIExpression()), !dbg !291
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !290, metadata !DIExpression()), !dbg !292
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !293, metadata !DIExpression()) #12, !dbg !298
; call core::ptr::metadata::metadata
  %4 = call i64 @_ZN4core3ptr8metadata8metadata17h725a86abc3d48e13E([0 x i8]* %slice.0, i64 %slice.1) #12, !dbg !300
  br label %bb1, !dbg !301

bb1:                                              ; preds = %start
  %5 = bitcast { i64, i64 }* %_3 to i64*, !dbg !302
  store i64 %self, i64* %5, align 8, !dbg !302
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !302
  store i64 %4, i64* %6, align 8, !dbg !302
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !302
  %8 = load i64, i64* %7, align 8, !dbg !302
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !302
  %10 = load i64, i64* %9, align 8, !dbg !302
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %11 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h345558571a3a14d0E"(i64 %8, i64 %10, [0 x i8]* %slice.0, i64 %slice.1), !dbg !302
  %12 = extractvalue { [0 x i8]*, i64 } %11, 0, !dbg !302
  %13 = extractvalue { [0 x i8]*, i64 } %11, 1, !dbg !302
  br label %bb2, !dbg !302

bb2:                                              ; preds = %bb1
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %12, 0, !dbg !303
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !303
  ret { [0 x i8]*, i64 } %15, !dbg !303
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hdb0c9cae618d6eadE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !304 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !308, metadata !DIExpression()), !dbg !310
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !309, metadata !DIExpression()), !dbg !311
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !312
  br i1 %_3, label %bb1, label %bb2, !dbg !312

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha0aaf566236448aeE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !313
  %_10.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !313
  %_10.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !313
  br label %bb3, !dbg !313

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64 %self, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !314
  unreachable, !dbg !314

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_10.0, 0, !dbg !315
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_10.1, 1, !dbg !315
  ret { [0 x i8]*, i64 } %5, !dbg !315
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h73b65c63e86e8014E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !316 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !320, metadata !DIExpression()), !dbg !322
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !321, metadata !DIExpression()), !dbg !323
  %_4 = icmp ugt i64 %self, %slice.1, !dbg !324
  br i1 %_4, label %bb1, label %bb2, !dbg !324

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1adc4106be506d33E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !325
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !325
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !325
  br label %bb3, !dbg !325

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64 %self, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !326
  unreachable, !dbg !326

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0, !dbg !327
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_13.1, 1, !dbg !327
  ret { [0 x i8]*, i64 } %5, !dbg !327
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h99883b75b91a7081E"(i8* nonnull %unique) unnamed_addr #0 !dbg !328 {
start:
  %unique.dbg.spill = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !345, metadata !DIExpression()), !dbg !346
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he5d69e45e78cd043E"(i8* nonnull %unique), !dbg !347
  br label %bb1, !dbg !347

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %_2), !dbg !348
  br label %bb2, !dbg !348

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !349
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h7c35ac9202f87533E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !350 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !383, metadata !DIExpression()), !dbg !384
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !385
  store i64 %kind.0, i64* %3, align 8, !dbg !385
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !385
  store i64 %kind.1, i64* %4, align 8, !dbg !385
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !386
  %6 = load i64, i64* %5, align 8, !dbg !386
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !386
  %8 = load i64, i64* %7, align 8, !dbg !386
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !386
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !386
  ret { i64, i64 } %10, !dbg !386
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nounwind
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17heb625a0bacfbfb97E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* nonnull %0, i8* %1) unnamed_addr #1 !dbg !387 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<u8>"*, align 8
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  store %"std::vec::Vec<u8>"* %self, %"std::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<u8>"** %self.dbg.spill, metadata !419, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iterator, metadata !420, metadata !DIExpression()), !dbg !424
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h46531a544f030047E"({ i8*, i8* }* align 8 dereferenceable(16) %iterator), !dbg !425
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !425
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !425
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !425
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !425
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !425
  store i64 %slice.1, i64* %6, align 8, !dbg !425
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !421, metadata !DIExpression()), !dbg !426
  br label %bb1, !dbg !425

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hec3f55b8c142a6c0E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !427
  br label %bb2, !dbg !427

bb2:                                              ; preds = %bb1
  ret void, !dbg !428
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h051f26f94fd4eb93E"() unnamed_addr #0 !dbg !429 {
start:
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %0 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !474, metadata !DIExpression()), !dbg !479
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !475, metadata !DIExpression()), !dbg !480
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4a57be64dba231c9E"(), !dbg !481
  br label %bb1, !dbg !481

bb1:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"*, !dbg !482
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"* %1 to %"std::alloc::AllocError"*, !dbg !482
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !482
  store {}* null, {}** %3, align 8, !dbg !482
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !483
  %5 = load i8*, i8** %4, align 8, !dbg !483
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !483
  %7 = load i64, i64* %6, align 8, !dbg !483
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !483
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1, !dbg !483
  ret { i8*, i64 } %9, !dbg !483
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0638a3fa5c9d1c70E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !484 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !513, metadata !DIExpression()), !dbg !518
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !519
  %e.0 = load i64, i64* %5, align 8, !dbg !519
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !519
  %e.1 = load i64, i64* %6, align 8, !dbg !519
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !519
  store i64 %e.0, i64* %7, align 8, !dbg !519
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !519
  store i64 %e.1, i64* %8, align 8, !dbg !519
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !520
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %9 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h7c35ac9202f87533E"(i64 %e.0, i64 %e.1), !dbg !521
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !521
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !521
  br label %bb1, !dbg !521

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !522
  %11 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !522
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !522
  store i64 %_3.0, i64* %12, align 8, !dbg !522
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !522
  store i64 %_3.1, i64* %13, align 8, !dbg !522
  %14 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !522
  store i64 1, i64* %14, align 8, !dbg !522
  ret void, !dbg !523
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0e621aa07e75d8edE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !524 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !541, metadata !DIExpression()), !dbg !545
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !546
  %e.0 = load i64, i64* %5, align 8, !dbg !546
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !546
  %e.1 = load i64, i64* %6, align 8, !dbg !546
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !546
  store i64 %e.0, i64* %7, align 8, !dbg !546
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !546
  store i64 %e.1, i64* %8, align 8, !dbg !546
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !542, metadata !DIExpression()), !dbg !547
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %9 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h7c35ac9202f87533E"(i64 %e.0, i64 %e.1), !dbg !548
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !548
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !548
  br label %bb1, !dbg !548

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !549
  %11 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !549
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !549
  store i64 %_3.0, i64* %12, align 8, !dbg !549
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !549
  store i64 %_3.1, i64* %13, align 8, !dbg !549
  %14 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !549
  store i64 1, i64* %14, align 8, !dbg !549
  ret void, !dbg !550
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h36480700bbcbd701E"(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0) unnamed_addr #0 !dbg !551 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !584, metadata !DIExpression()), !dbg !589
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !585, metadata !DIExpression()), !dbg !590
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h19eff3d6610a01acE"(), !dbg !591
  br label %bb1, !dbg !591

bb1:                                              ; preds = %start
  %1 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0 to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err"*, !dbg !592
  %2 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err"* %1 to %"std::alloc::LayoutError"*, !dbg !592
  %3 = getelementptr inbounds %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0, i32 0, i32 1, !dbg !592
  store i64 0, i64* %3, align 8, !dbg !592
  ret void, !dbg !593
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5f65b0aa4fa525baE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !594 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !607, metadata !DIExpression()), !dbg !611
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !612
  %e.0 = load i64, i64* %5, align 8, !dbg !612
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !612
  %e.1 = load i64, i64* %6, align 8, !dbg !612
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !612
  store i64 %e.0, i64* %7, align 8, !dbg !612
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !612
  store i64 %e.1, i64* %8, align 8, !dbg !612
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !608, metadata !DIExpression()), !dbg !613
; call <T as core::convert::From<T>>::from
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hff23e38d31e42dfeE"(i64 %e.0, i64 %e.1), !dbg !614
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !614
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !614
  br label %bb1, !dbg !614

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !615
  %11 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !615
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !615
  store i64 %_3.0, i64* %12, align 8, !dbg !615
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !615
  store i64 %_3.1, i64* %13, align 8, !dbg !615
  %14 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !615
  store i64 1, i64* %14, align 8, !dbg !615
  ret void, !dbg !616
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8673e32ce17afa86E"() unnamed_addr #0 !dbg !617 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !635, metadata !DIExpression()), !dbg !639
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !636, metadata !DIExpression()), !dbg !640
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h19eff3d6610a01acE"(), !dbg !641
  br label %bb1, !dbg !641

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to %"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err"*, !dbg !642
  %2 = bitcast %"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err"* %1 to %"std::alloc::LayoutError"*, !dbg !642
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !642
  store i64 0, i64* %3, align 8, !dbg !642
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !643
  %5 = load i64, i64* %4, align 8, !dbg !643
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !643
  %7 = load i64, i64* %6, align 8, !dbg !643
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !643
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !643
  ret { i64, i64 } %9, !dbg !643
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf77e9885a26c284E"() unnamed_addr #0 !dbg !644 {
start:
  %e.dbg.spill = alloca %"std::fmt::Error", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err", align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err"* %residual.dbg.spill, metadata !659, metadata !DIExpression()), !dbg !664
  call void @llvm.dbg.declare(metadata %"std::fmt::Error"* %e.dbg.spill, metadata !660, metadata !DIExpression()), !dbg !665
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h563240e1381f8ccaE"(), !dbg !666
  br label %bb1, !dbg !666

bb1:                                              ; preds = %start
  %1 = bitcast i8* %0 to %"std::result::Result<(), std::fmt::Error>::Err"*, !dbg !667
  %2 = getelementptr inbounds %"std::result::Result<(), std::fmt::Error>::Err", %"std::result::Result<(), std::fmt::Error>::Err"* %1, i32 0, i32 1, !dbg !667
  store i8 1, i8* %0, align 1, !dbg !667
  %3 = load i8, i8* %0, align 1, !dbg !668, !range !669
  %4 = trunc i8 %3 to i1, !dbg !668
  ret i1 %4, !dbg !668
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd7edc681497ec821E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !670 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !674, metadata !DIExpression()), !dbg !678
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !679
  %e.0 = load i64, i64* %5, align 8, !dbg !679
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !679
  %e.1 = load i64, i64* %6, align 8, !dbg !679
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !679
  store i64 %e.0, i64* %7, align 8, !dbg !679
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !679
  store i64 %e.1, i64* %8, align 8, !dbg !679
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !675, metadata !DIExpression()), !dbg !680
; call <T as core::convert::From<T>>::from
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hff23e38d31e42dfeE"(i64 %e.0, i64 %e.1), !dbg !681
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !681
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !681
  br label %bb1, !dbg !681

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !682
  %11 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !682
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !682
  store i64 %_3.0, i64* %12, align 8, !dbg !682
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !682
  store i64 %_3.1, i64* %13, align 8, !dbg !682
  %14 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !682
  store i64 1, i64* %14, align 8, !dbg !682
  ret void, !dbg !683
}

; <bool as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e6ced1fefbce2d7E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 !dbg !684 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !721, metadata !DIExpression()), !dbg !723
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !722, metadata !DIExpression()), !dbg !724
; call <bool as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h8cd87f7769d26608E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !725
  br label %bb1, !dbg !725

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !726
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h15c1c9f7e8626237E"(i64** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !727 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !733, metadata !DIExpression()), !dbg !735
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !734, metadata !DIExpression()), !dbg !736
  %_4 = load i64*, i64** %self, align 8, !dbg !737, !nonnull !4
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17he41e7c5843afa2a8E"(i64* align 8 dereferenceable(8) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !738
  br label %bb1, !dbg !738

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !739
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h20a18daf423b9470E"(i8** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !740 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !745, metadata !DIExpression()), !dbg !747
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !746, metadata !DIExpression()), !dbg !748
  %_4 = load i8*, i8** %self, align 8, !dbg !749, !nonnull !4
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h6b4be609af0d5e66E"(i8* align 1 dereferenceable(1) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !750
  br label %bb1, !dbg !750

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !751
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2113a1daaec7addaE"(i8** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !752 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !757, metadata !DIExpression()), !dbg !761
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !758, metadata !DIExpression()), !dbg !762
  %_4 = load i8*, i8** %self, align 8, !dbg !763, !nonnull !4
; call <base64::CharacterSet as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN57_$LT$base64..CharacterSet$u20$as$u20$core..fmt..Debug$GT$3fmt17he02be908e3c415b2E"(i8* align 1 dereferenceable(1) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !764
  br label %bb1, !dbg !764

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !765
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61857a7b61451390E"(i8** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !766 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !771, metadata !DIExpression()), !dbg !775
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !772, metadata !DIExpression()), !dbg !776
  %_4 = load i8*, i8** %self, align 8, !dbg !777, !nonnull !4
; call <bool as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e6ced1fefbce2d7E"(i8* align 1 dereferenceable(1) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !778
  br label %bb1, !dbg !778

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !779
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h37d009f9a141a023E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !780 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !786, metadata !DIExpression()), !dbg !791
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !787, metadata !DIExpression()), !dbg !792
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !793
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !793, !nonnull !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !793
  %_4.1 = load i64, i64* %1, align 8, !dbg !793
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h22e9b1a86f36eac1E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !794
  br label %bb1, !dbg !794

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !795
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17ha589c00b0b84353dE"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !796 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !804, metadata !DIExpression()), !dbg !806
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !805, metadata !DIExpression()), !dbg !807
  store i64 %start1, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !808, metadata !DIExpression()), !dbg !814
  store i64 %n, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !813, metadata !DIExpression()), !dbg !816
  %1 = add nuw i64 %start1, %n, !dbg !817
  store i64 %1, i64* %0, align 8, !dbg !817
  %2 = load i64, i64* %0, align 8, !dbg !817
  br label %bb1, !dbg !818

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !819
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics11write_bytes17h24882474a550ec7eE(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 !dbg !820 {
start:
  %count.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i8, align 1
  %dst.dbg.spill = alloca i8*, align 8
  store i8* %dst, i8** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !826, metadata !DIExpression()), !dbg !829
  store i8 %val, i8* %val.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill, metadata !827, metadata !DIExpression()), !dbg !830
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !828, metadata !DIExpression()), !dbg !831
  %0 = mul i64 1, %count, !dbg !832
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false), !dbg !832
  br label %bb1, !dbg !832

bb1:                                              ; preds = %start
  ret void, !dbg !833
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h1b004e6041875ef7E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 !dbg !834 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  store i8* %src, i8** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !838, metadata !DIExpression()), !dbg !841
  store i8* %dst, i8** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !839, metadata !DIExpression()), !dbg !842
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !840, metadata !DIExpression()), !dbg !843
  %0 = mul i64 %count, 1, !dbg !844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false), !dbg !844
  ret void, !dbg !845
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3Ord3max17hcd028c09ea6e96c4E(i64 %self, i64 %other) unnamed_addr #0 !dbg !846 {
start:
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !850, metadata !DIExpression()), !dbg !854
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !851, metadata !DIExpression()), !dbg !855
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h05be1819ddb2d709E(i64 %self, i64 %other), !dbg !856
  br label %bb1, !dbg !856

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !857
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3Ord3min17h17d4a739f1616196E(i64 %self, i64 %other) unnamed_addr #0 !dbg !858 {
start:
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !860, metadata !DIExpression()), !dbg !862
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !861, metadata !DIExpression()), !dbg !863
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17h3e2c791d1ec1a841E(i64 %self, i64 %other), !dbg !864
  br label %bb1, !dbg !864

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !865
}

; core::cmp::max
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3max17h7dec65f8c7a01985E(i64 %v1, i64 %v2) unnamed_addr #0 !dbg !866 {
start:
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  store i64 %v1, i64* %v1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !868, metadata !DIExpression()), !dbg !870
  store i64 %v2, i64* %v2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !869, metadata !DIExpression()), !dbg !871
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17hcd028c09ea6e96c4E(i64 %v1, i64 %v2), !dbg !872
  br label %bb1, !dbg !872

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !873
}

; core::cmp::min
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3min17h5809023887dbf599E(i64 %v1, i64 %v2) unnamed_addr #0 !dbg !874 {
start:
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  store i64 %v1, i64* %v1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !876, metadata !DIExpression()), !dbg !878
  store i64 %v2, i64* %v2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !877, metadata !DIExpression()), !dbg !879
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17h17d4a739f1616196E(i64 %v1, i64 %v2), !dbg !880
  br label %bb1, !dbg !880

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !881
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17he9d47f91f55bfd10E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !882 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !888, metadata !DIExpression()), !dbg !890
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !889, metadata !DIExpression()), !dbg !891
  %_4 = load i64, i64* %self, align 8, !dbg !892
  %_5 = load i64, i64* %other, align 8, !dbg !893
  %_3 = icmp ult i64 %_4, %_5, !dbg !892
  br i1 %_3, label %bb1, label %bb2, !dbg !892

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !894
  %_8 = load i64, i64* %other, align 8, !dbg !895
  %_6 = icmp eq i64 %_7, %_8, !dbg !894
  br i1 %_6, label %bb3, label %bb4, !dbg !894

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !896
  br label %bb6, !dbg !897

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !898, !range !899
  ret i8 %1, !dbg !898

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !900
  br label %bb5, !dbg !901

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !902
  br label %bb5, !dbg !901

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !897
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h802cd51cfb80ef88E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !903 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !908, metadata !DIExpression()), !dbg !910
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !909, metadata !DIExpression()), !dbg !911
  %_3 = load i64, i64* %self, align 8, !dbg !912
  %_4 = load i64, i64* %other, align 8, !dbg !913
  %0 = icmp ult i64 %_3, %_4, !dbg !912
  ret i1 %0, !dbg !914
}

; core::cmp::max_by
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp6max_by17h05be1819ddb2d709E(i64 %0, i64 %1) unnamed_addr #0 !dbg !915 {
start:
  %compare.dbg.spill = alloca {}, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  call void @llvm.dbg.declare(metadata i64* %v1, metadata !920, metadata !DIExpression()), !dbg !925
  call void @llvm.dbg.declare(metadata i64* %v2, metadata !921, metadata !DIExpression()), !dbg !926
  call void @llvm.dbg.declare(metadata {}* %compare.dbg.spill, metadata !922, metadata !DIExpression()), !dbg !927
  store i8 0, i8* %_13, align 1, !dbg !928
  store i8 0, i8* %_12, align 1, !dbg !928
  store i8 1, i8* %_13, align 1, !dbg !928
  store i8 1, i8* %_12, align 1, !dbg !928
  %3 = bitcast { i64*, i64* }* %_6 to i64**, !dbg !928
  store i64* %v1, i64** %3, align 8, !dbg !928
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !928
  store i64* %v2, i64** %4, align 8, !dbg !928
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0, !dbg !928
  %6 = load i64*, i64** %5, align 8, !dbg !928, !nonnull !4
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !928
  %8 = load i64*, i64** %7, align 8, !dbg !928, !nonnull !4
; call core::ops::function::FnOnce::call_once
  %9 = call i8 @_ZN4core3ops8function6FnOnce9call_once17h64bb9e7959e17e58E(i64* align 8 dereferenceable(8) %6, i64* align 8 dereferenceable(8) %8), !dbg !928, !range !899
  store i8 %9, i8* %_4, align 1, !dbg !928
  br label %bb1, !dbg !928

bb1:                                              ; preds = %start
  %10 = load i8, i8* %_4, align 1, !dbg !928, !range !899
  %_11 = sext i8 %10 to i64, !dbg !928
  switch i64 %_11, label %bb3 [
    i64 -1, label %bb4
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !929

bb3:                                              ; preds = %bb1
  unreachable, !dbg !928

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1, !dbg !930
  %11 = load i64, i64* %v2, align 8, !dbg !930
  store i64 %11, i64* %2, align 8, !dbg !930
  br label %bb5, !dbg !930

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1, !dbg !931
  %12 = load i64, i64* %v1, align 8, !dbg !931
  store i64 %12, i64* %2, align 8, !dbg !931
  br label %bb5, !dbg !931

bb5:                                              ; preds = %bb4, %bb2
  %13 = load i8, i8* %_12, align 1, !dbg !932, !range !669
  %14 = trunc i8 %13 to i1, !dbg !932
  br i1 %14, label %bb8, label %bb6, !dbg !932

bb6:                                              ; preds = %bb8, %bb5
  %15 = load i8, i8* %_13, align 1, !dbg !932, !range !669
  %16 = trunc i8 %15 to i1, !dbg !932
  br i1 %16, label %bb9, label %bb7, !dbg !932

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !932

bb7:                                              ; preds = %bb9, %bb6
  %17 = load i64, i64* %2, align 8, !dbg !933
  ret i64 %17, !dbg !933

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !932
}

; core::cmp::min_by
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp6min_by17h3e2c791d1ec1a841E(i64 %0, i64 %1) unnamed_addr #0 !dbg !934 {
start:
  %compare.dbg.spill = alloca {}, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  call void @llvm.dbg.declare(metadata i64* %v1, metadata !936, metadata !DIExpression()), !dbg !939
  call void @llvm.dbg.declare(metadata i64* %v2, metadata !937, metadata !DIExpression()), !dbg !940
  call void @llvm.dbg.declare(metadata {}* %compare.dbg.spill, metadata !938, metadata !DIExpression()), !dbg !941
  store i8 0, i8* %_13, align 1, !dbg !942
  store i8 0, i8* %_12, align 1, !dbg !942
  store i8 1, i8* %_13, align 1, !dbg !942
  store i8 1, i8* %_12, align 1, !dbg !942
  %3 = bitcast { i64*, i64* }* %_6 to i64**, !dbg !942
  store i64* %v1, i64** %3, align 8, !dbg !942
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !942
  store i64* %v2, i64** %4, align 8, !dbg !942
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0, !dbg !942
  %6 = load i64*, i64** %5, align 8, !dbg !942, !nonnull !4
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !942
  %8 = load i64*, i64** %7, align 8, !dbg !942, !nonnull !4
; call core::ops::function::FnOnce::call_once
  %9 = call i8 @_ZN4core3ops8function6FnOnce9call_once17h64bb9e7959e17e58E(i64* align 8 dereferenceable(8) %6, i64* align 8 dereferenceable(8) %8), !dbg !942, !range !899
  store i8 %9, i8* %_4, align 1, !dbg !942
  br label %bb1, !dbg !942

bb1:                                              ; preds = %start
  %10 = load i8, i8* %_4, align 1, !dbg !942, !range !899
  %_11 = sext i8 %10 to i64, !dbg !942
  switch i64 %_11, label %bb3 [
    i64 -1, label %bb4
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !943

bb3:                                              ; preds = %bb1
  unreachable, !dbg !942

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_13, align 1, !dbg !944
  %11 = load i64, i64* %v1, align 8, !dbg !944
  store i64 %11, i64* %2, align 8, !dbg !944
  br label %bb5, !dbg !944

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_12, align 1, !dbg !945
  %12 = load i64, i64* %v2, align 8, !dbg !945
  store i64 %12, i64* %2, align 8, !dbg !945
  br label %bb5, !dbg !945

bb5:                                              ; preds = %bb4, %bb2
  %13 = load i8, i8* %_12, align 1, !dbg !946, !range !669
  %14 = trunc i8 %13 to i1, !dbg !946
  br i1 %14, label %bb8, label %bb6, !dbg !946

bb6:                                              ; preds = %bb8, %bb5
  %15 = load i8, i8* %_13, align 1, !dbg !946, !range !669
  %16 = trunc i8 %15 to i1, !dbg !946
  br i1 %16, label %bb9, label %bb7, !dbg !946

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !946

bb7:                                              ; preds = %bb9, %bb6
  %17 = load i64, i64* %2, align 8, !dbg !947
  ret i64 %17, !dbg !947

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !946
}

; core::fmt::ArgumentV1::new
; Function Attrs: nounwind
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8b0f37a7e5622812E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 !dbg !948 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)*, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !962, metadata !DIExpression()), !dbg !966
  store i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* %f, i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)** %f.dbg.spill, metadata !963, metadata !DIExpression()), !dbg !967
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, !dbg !968
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !dbg !968
  %_3 = load i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !dbg !968, !nonnull !4
  br label %bb1, !dbg !968

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*, !dbg !969
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8, !dbg !969
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !969, !nonnull !4
  br label %bb2, !dbg !969

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !970
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8, !dbg !970
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !970
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)**, !dbg !970
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %7, align 8, !dbg !970
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !971
  %9 = load i8*, i8** %8, align 8, !dbg !971, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !971
  %11 = load i64*, i64** %10, align 8, !dbg !971, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0, !dbg !971
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1, !dbg !971
  ret { i8*, i64* } %13, !dbg !971
}

; core::fmt::ArgumentV1::new
; Function Attrs: nounwind
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb2beae2a027d7513E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"std::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 !dbg !972 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"std::fmt::Formatter"*)*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store i64* %x, i64** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !979, metadata !DIExpression()), !dbg !981
  store i1 (i64*, %"std::fmt::Formatter"*)* %f, i1 (i64*, %"std::fmt::Formatter"*)** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i1 (i64*, %"std::fmt::Formatter"*)** %f.dbg.spill, metadata !980, metadata !DIExpression()), !dbg !982
  %3 = bitcast i1 (i64*, %"std::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, !dbg !983
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !dbg !983
  %_3 = load i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !dbg !983, !nonnull !4
  br label %bb1, !dbg !983

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*, !dbg !984
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8, !dbg !984
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !984, !nonnull !4
  br label %bb2, !dbg !984

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !985
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8, !dbg !985
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !985
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)**, !dbg !985
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %7, align 8, !dbg !985
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !986
  %9 = load i8*, i8** %8, align 8, !dbg !986, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !986
  %11 = load i64*, i64** %10, align 8, !dbg !986, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0, !dbg !986
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1, !dbg !986
  ret { i8*, i64* } %13, !dbg !986
}

; core::fmt::ArgumentV1::new
; Function Attrs: nounwind
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hca9c87ff4cc79f6eE(i8* align 1 dereferenceable(1) %x, i1 (i8*, %"std::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 !dbg !987 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i8*, %"std::fmt::Formatter"*)*, align 8
  %x.dbg.spill = alloca i8*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store i8* %x, i8** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %x.dbg.spill, metadata !994, metadata !DIExpression()), !dbg !996
  store i1 (i8*, %"std::fmt::Formatter"*)* %f, i1 (i8*, %"std::fmt::Formatter"*)** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, %"std::fmt::Formatter"*)** %f.dbg.spill, metadata !995, metadata !DIExpression()), !dbg !997
  %3 = bitcast i1 (i8*, %"std::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, !dbg !998
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !dbg !998
  %_3 = load i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !dbg !998, !nonnull !4
  br label %bb1, !dbg !998

bb1:                                              ; preds = %start
  %4 = bitcast i8* %x to %"core::fmt::Opaque"*, !dbg !999
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8, !dbg !999
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !999, !nonnull !4
  br label %bb2, !dbg !999

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !1000
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8, !dbg !1000
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !1000
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)**, !dbg !1000
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %7, align 8, !dbg !1000
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !1001
  %9 = load i8*, i8** %8, align 8, !dbg !1001, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !1001
  %11 = load i64*, i64** %10, align 8, !dbg !1001, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0, !dbg !1001
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1, !dbg !1001
  ret { i8*, i64* } %13, !dbg !1001
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h6b4be609af0d5e66E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 !dbg !1002 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1007, metadata !DIExpression()), !dbg !1009
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !1008, metadata !DIExpression()), !dbg !1010
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1011
  br label %bb1, !dbg !1011

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !1011

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1012
  br label %bb5, !dbg !1012

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h52fce89fd538b8d7E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1013
  %2 = zext i1 %1 to i8, !dbg !1013
  store i8 %2, i8* %0, align 1, !dbg !1013
  br label %bb3, !dbg !1013

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !1014

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !1015, !range !669
  %4 = trunc i8 %3 to i1, !dbg !1015
  ret i1 %4, !dbg !1015

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !1012

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hc42da508ea712cdeE"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1016
  %6 = zext i1 %5 to i8, !dbg !1016
  store i8 %6, i8* %0, align 1, !dbg !1016
  br label %bb9, !dbg !1016

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h95190d87891fc6a4E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1017
  %8 = zext i1 %7 to i8, !dbg !1017
  store i8 %8, i8* %0, align 1, !dbg !1017
  br label %bb7, !dbg !1017

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !1018

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !1014

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !1018
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17he41e7c5843afa2a8E"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 !dbg !1019 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1022, metadata !DIExpression()), !dbg !1024
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !1023, metadata !DIExpression()), !dbg !1025
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1026
  br label %bb1, !dbg !1026

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !1026

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1027
  br label %bb5, !dbg !1027

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h1a12a50969152654E"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1028
  %2 = zext i1 %1 to i8, !dbg !1028
  store i8 %2, i8* %0, align 1, !dbg !1028
  br label %bb3, !dbg !1028

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !1029

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !1030, !range !669
  %4 = trunc i8 %3 to i1, !dbg !1030
  ret i1 %4, !dbg !1030

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !1027

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1031
  %6 = zext i1 %5 to i8, !dbg !1031
  store i8 %6, i8* %0, align 1, !dbg !1031
  br label %bb9, !dbg !1031

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h571918675fe47debE"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !1032
  %8 = zext i1 %7 to i8, !dbg !1032
  store i8 %8, i8* %0, align 1, !dbg !1032
  br label %bb7, !dbg !1032

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !1033

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !1029

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !1033
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3fmt9Arguments6new_v117h610361d4e31c85f1E(%"std::fmt::Arguments"* noalias nocapture sret(%"std::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !1034 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !1096, metadata !DIExpression()), !dbg !1098
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !1097, metadata !DIExpression()), !dbg !1099
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !1100
  br i1 %_4, label %bb1, label %bb2, !dbg !1100

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !1101
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !1102
  %5 = zext i1 %_9 to i8, !dbg !1100
  store i8 %5, i8* %_3, align 1, !dbg !1100
  br label %bb3, !dbg !1100

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !1100
  br label %bb3, !dbg !1100

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !1100, !range !669
  %7 = trunc i8 %6 to i1, !dbg !1100
  br i1 %7, label %bb4, label %bb5, !dbg !1100

bb5:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_16 to {}**, !dbg !1103
  store {}* null, {}** %8, align 8, !dbg !1103
  %9 = bitcast %"std::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !1104
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !1104
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !1104
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !1104
  store i64 %pieces.1, i64* %11, align 8, !dbg !1104
  %12 = getelementptr inbounds %"std::fmt::Arguments", %"std::fmt::Arguments"* %0, i32 0, i32 1, !dbg !1104
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0, !dbg !1104
  %14 = load i64*, i64** %13, align 8, !dbg !1104
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1, !dbg !1104
  %16 = load i64, i64* %15, align 8, !dbg !1104
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !1104
  store i64* %14, i64** %17, align 8, !dbg !1104
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !1104
  store i64 %16, i64* %18, align 8, !dbg !1104
  %19 = getelementptr inbounds %"std::fmt::Arguments", %"std::fmt::Arguments"* %0, i32 0, i32 2, !dbg !1104
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !1104
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !1104
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !1104
  store i64 %args.1, i64* %21, align 8, !dbg !1104
  ret void, !dbg !1105

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc587 to [0 x i8]*), i64 12, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc589 to %"std::panic::Location"*)), !dbg !1106
  unreachable, !dbg !1106
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3mem7replace17h59dfc2df994720ceE(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 !dbg !1107 {
start:
  %result.dbg.spill = alloca i64, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !1114, metadata !DIExpression()), !dbg !1118
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !1115, metadata !DIExpression()), !dbg !1119
; call core::ptr::read
  %result = call i64 @_ZN4core3ptr4read17hcc2213ce829579b8E(i64* %dest), !dbg !1120
  store i64 %result, i64* %result.dbg.spill, align 8, !dbg !1120
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !1116, metadata !DIExpression()), !dbg !1121
  br label %bb1, !dbg !1120

bb1:                                              ; preds = %start
; call core::ptr::write
  call void @_ZN4core3ptr5write17hede3e19507b36777E(i64* %dest, i64 %src), !dbg !1122
  br label %bb2, !dbg !1122

bb2:                                              ; preds = %bb1
  ret i64 %result, !dbg !1123
}

; core::num::<impl u64>::from_be_bytes
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$13from_be_bytes17hf082046d9e109eaeE"(i64 %0) unnamed_addr #0 !dbg !1124 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %x.dbg.spill.i = alloca i64, align 8
  %_3 = alloca [8 x i8], align 1
  %2 = alloca i64, align 8
  %bytes = alloca [8 x i8], align 1
  store i64 %0, i64* %2, align 8
  %3 = bitcast [8 x i8]* %bytes to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata [8 x i8]* %bytes, metadata !1132, metadata !DIExpression()), !dbg !1133
  %5 = bitcast [8 x i8]* %_3 to i8*, !dbg !1134
  %6 = bitcast [8 x i8]* %bytes to i8*, !dbg !1134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false), !dbg !1134
  %7 = bitcast [8 x i8]* %_3 to i64*, !dbg !1135
  %8 = load i64, i64* %7, align 1, !dbg !1135
; call core::num::<impl u64>::from_ne_bytes
  %_2 = call i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$13from_ne_bytes17hdef0dfdb4bc9c615E"(i64 %8), !dbg !1135
  br label %bb1, !dbg !1135

bb1:                                              ; preds = %start
  store i64 %_2, i64* %x.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill.i, metadata !1136, metadata !DIExpression()) #12, !dbg !1141
  store i64 %_2, i64* %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i.i, metadata !1143, metadata !DIExpression()) #12, !dbg !1146
  %9 = call i64 @llvm.bswap.i64(i64 %_2) #12, !dbg !1148
  store i64 %9, i64* %1, align 8, !dbg !1148
  %10 = load i64, i64* %1, align 8, !dbg !1148
  br label %bb2, !dbg !1149

bb2:                                              ; preds = %bb1
  ret i64 %10, !dbg !1150
}

; core::num::<impl u64>::from_ne_bytes
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$13from_ne_bytes17hdef0dfdb4bc9c615E"(i64 %0) unnamed_addr #0 !dbg !1151 {
start:
  %1 = alloca i64, align 8
  %_2 = alloca [8 x i8], align 1
  %2 = alloca i64, align 8
  %bytes = alloca [8 x i8], align 1
  store i64 %0, i64* %2, align 8
  %3 = bitcast [8 x i8]* %bytes to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata [8 x i8]* %bytes, metadata !1153, metadata !DIExpression()), !dbg !1154
  %5 = bitcast [8 x i8]* %_2 to i8*, !dbg !1155
  %6 = bitcast [8 x i8]* %bytes to i8*, !dbg !1155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false), !dbg !1155
  %7 = bitcast i64* %1 to [8 x i8]*, !dbg !1156
  %8 = bitcast [8 x i8]* %7 to i8*, !dbg !1156
  %9 = bitcast [8 x i8]* %_2 to i8*, !dbg !1156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 8, i1 false), !dbg !1156
  %10 = load i64, i64* %1, align 8, !dbg !1156
  br label %bb1, !dbg !1156

bb1:                                              ; preds = %start
  ret i64 %10, !dbg !1157
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1158 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1162, metadata !DIExpression()), !dbg !1167
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1163, metadata !DIExpression()), !dbg !1168
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1169, metadata !DIExpression()) #12, !dbg !1182
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1178, metadata !DIExpression()) #12, !dbg !1184
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1185
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1185
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1185
  %7 = zext i1 %6 to i8, !dbg !1185
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1185
  store i64 %5, i64* %8, align 8, !dbg !1185
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1185
  store i8 %7, i8* %9, align 8, !dbg !1185
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1185
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1185
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1185
  %12 = load i8, i8* %11, align 8, !dbg !1185, !range !669
  %_5.1.i = trunc i8 %12 to i1, !dbg !1185
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1186
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1179, metadata !DIExpression()) #12, !dbg !1187
  %13 = zext i1 %_5.1.i to i8, !dbg !1188
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1188
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1181, metadata !DIExpression()) #12, !dbg !1189
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1190
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1190
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1190
  %16 = zext i1 %_5.1.i to i8, !dbg !1190
  store i8 %16, i8* %15, align 8, !dbg !1190
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1191
  %18 = load i64, i64* %17, align 8, !dbg !1191
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1191
  %20 = load i8, i8* %19, align 8, !dbg !1191, !range !669
  %21 = trunc i8 %20 to i1, !dbg !1191
  %22 = zext i1 %21 to i8, !dbg !1191
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1191
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1191
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1192
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1192
  %_5.1 = trunc i8 %25 to i1, !dbg !1192
  br label %bb1, !dbg !1192

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1193
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1164, metadata !DIExpression()), !dbg !1194
  %26 = zext i1 %_5.1 to i8, !dbg !1195
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1195
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1166, metadata !DIExpression()), !dbg !1196
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1197
  %28 = zext i1 %27 to i8, !dbg !1197
  store i8 %28, i8* %2, align 1, !dbg !1197
  %29 = load i8, i8* %2, align 1, !dbg !1197, !range !669
  %_8 = trunc i8 %29 to i1, !dbg !1197
  br label %bb2, !dbg !1197

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1197

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1198
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1198
  store i64 %_5.0, i64* %31, align 8, !dbg !1198
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1198
  store i64 1, i64* %32, align 8, !dbg !1198
  br label %bb5, !dbg !1199

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1200
  store i64 0, i64* %33, align 8, !dbg !1200
  br label %bb5, !dbg !1199

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1201
  %35 = load i64, i64* %34, align 8, !dbg !1201, !range !1202
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1201
  %37 = load i64, i64* %36, align 8, !dbg !1201
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1201
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1201
  ret { i64, i64 } %39, !dbg !1201
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hd802f3514088ff87E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1203 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1205, metadata !DIExpression()), !dbg !1210
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1206, metadata !DIExpression()), !dbg !1211
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1212, metadata !DIExpression()) #12, !dbg !1219
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1215, metadata !DIExpression()) #12, !dbg !1221
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1222
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1222
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1222
  %7 = zext i1 %6 to i8, !dbg !1222
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1222
  store i64 %5, i64* %8, align 8, !dbg !1222
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1222
  store i8 %7, i8* %9, align 8, !dbg !1222
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1222
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1222
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1222
  %12 = load i8, i8* %11, align 8, !dbg !1222, !range !669
  %_5.1.i = trunc i8 %12 to i1, !dbg !1222
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1223
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1216, metadata !DIExpression()) #12, !dbg !1224
  %13 = zext i1 %_5.1.i to i8, !dbg !1225
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1225
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1218, metadata !DIExpression()) #12, !dbg !1226
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1227
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1227
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1227
  %16 = zext i1 %_5.1.i to i8, !dbg !1227
  store i8 %16, i8* %15, align 8, !dbg !1227
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1228
  %18 = load i64, i64* %17, align 8, !dbg !1228
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1228
  %20 = load i8, i8* %19, align 8, !dbg !1228, !range !669
  %21 = trunc i8 %20 to i1, !dbg !1228
  %22 = zext i1 %21 to i8, !dbg !1228
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1228
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1228
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1229
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1229
  %_5.1 = trunc i8 %25 to i1, !dbg !1229
  br label %bb1, !dbg !1229

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1230
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1207, metadata !DIExpression()), !dbg !1231
  %26 = zext i1 %_5.1 to i8, !dbg !1232
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1232
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1209, metadata !DIExpression()), !dbg !1233
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1234
  %28 = zext i1 %27 to i8, !dbg !1234
  store i8 %28, i8* %2, align 1, !dbg !1234
  %29 = load i8, i8* %2, align 1, !dbg !1234, !range !669
  %_8 = trunc i8 %29 to i1, !dbg !1234
  br label %bb2, !dbg !1234

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1234

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1235
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1235
  store i64 %_5.0, i64* %31, align 8, !dbg !1235
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1235
  store i64 1, i64* %32, align 8, !dbg !1235
  br label %bb5, !dbg !1236

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1237
  store i64 0, i64* %33, align 8, !dbg !1237
  br label %bb5, !dbg !1236

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1238
  %35 = load i64, i64* %34, align 8, !dbg !1238, !range !1202
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1238
  %37 = load i64, i64* %36, align 8, !dbg !1238
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1238
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1238
  ret { i64, i64 } %39, !dbg !1238
}

; core::num::<impl usize>::checked_sub
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h86f2db25a39a5439E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1239 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1241, metadata !DIExpression()), !dbg !1246
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1242, metadata !DIExpression()), !dbg !1247
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1248, metadata !DIExpression()) #12, !dbg !1255
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1251, metadata !DIExpression()) #12, !dbg !1257
  %4 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1258
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1258
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1258
  %7 = zext i1 %6 to i8, !dbg !1258
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1258
  store i64 %5, i64* %8, align 8, !dbg !1258
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1258
  store i8 %7, i8* %9, align 8, !dbg !1258
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1258
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1258
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1258
  %12 = load i8, i8* %11, align 8, !dbg !1258, !range !669
  %_5.1.i = trunc i8 %12 to i1, !dbg !1258
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1259
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1252, metadata !DIExpression()) #12, !dbg !1260
  %13 = zext i1 %_5.1.i to i8, !dbg !1261
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1261
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1254, metadata !DIExpression()) #12, !dbg !1262
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1263
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1263
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1263
  %16 = zext i1 %_5.1.i to i8, !dbg !1263
  store i8 %16, i8* %15, align 8, !dbg !1263
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1264
  %18 = load i64, i64* %17, align 8, !dbg !1264
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1264
  %20 = load i8, i8* %19, align 8, !dbg !1264, !range !669
  %21 = trunc i8 %20 to i1, !dbg !1264
  %22 = zext i1 %21 to i8, !dbg !1264
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1264
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1264
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1265
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1265
  %_5.1 = trunc i8 %25 to i1, !dbg !1265
  br label %bb1, !dbg !1265

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1266
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1243, metadata !DIExpression()), !dbg !1267
  %26 = zext i1 %_5.1 to i8, !dbg !1268
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1268
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1245, metadata !DIExpression()), !dbg !1269
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1270
  %28 = zext i1 %27 to i8, !dbg !1270
  store i8 %28, i8* %2, align 1, !dbg !1270
  %29 = load i8, i8* %2, align 1, !dbg !1270, !range !669
  %_8 = trunc i8 %29 to i1, !dbg !1270
  br label %bb2, !dbg !1270

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1270

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1271
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1271
  store i64 %_5.0, i64* %31, align 8, !dbg !1271
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1271
  store i64 1, i64* %32, align 8, !dbg !1271
  br label %bb5, !dbg !1272

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1273
  store i64 0, i64* %33, align 8, !dbg !1273
  br label %bb5, !dbg !1272

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1274
  %35 = load i64, i64* %34, align 8, !dbg !1274, !range !1202
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1274
  %37 = load i64, i64* %36, align 8, !dbg !1274
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1274
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1274
  ret { i64, i64 } %39, !dbg !1274
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd28c89d6839f40a2E(i64 %n) unnamed_addr #0 !dbg !1275 {
start:
  %n.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1280, metadata !DIExpression()), !dbg !1281
  store i64 %n, i64* %0, align 8, !dbg !1282
  %1 = load i64, i64* %0, align 8, !dbg !1283, !range !1284
  ret i64 %1, !dbg !1283
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h458dba242e4aeebbE(i64 %self) unnamed_addr #0 !dbg !1285 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1289, metadata !DIExpression()), !dbg !1290
  ret i64 %self, !dbg !1291
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nounwind
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h64bb9e7959e17e58E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 !dbg !1292 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !1299, metadata !DIExpression()), !dbg !1308
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_2, metadata !1300, metadata !DIExpression()), !dbg !1308
  %4 = bitcast { i64*, i64* }* %_2 to i64**, !dbg !1308
  %5 = load i64*, i64** %4, align 8, !dbg !1308, !nonnull !4
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1, !dbg !1308
  %7 = load i64*, i64** %6, align 8, !dbg !1308, !nonnull !4
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17he9d47f91f55bfd10E"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !dbg !1308, !range !899
  br label %bb1, !dbg !1308

bb1:                                              ; preds = %start
  ret i8 %8, !dbg !1308
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hff1b586a1ad451d5E(i8* %data, i64 %len) unnamed_addr #0 !dbg !1309 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1314, metadata !DIExpression()), !dbg !1316
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1315, metadata !DIExpression()), !dbg !1317
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd10c413d61c24af9E"(i8* %data), !dbg !1318
  br label %bb1, !dbg !1318

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h2cacccae7c77a293E({}* %_3, i64 %len), !dbg !1319
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !1319
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !1319
  br label %bb2, !dbg !1319

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0, !dbg !1320
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1, !dbg !1320
  ret { [0 x i8]*, i64 } %4, !dbg !1320
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h808069bf2fa712efE(i8* %data, i64 %len) unnamed_addr #0 !dbg !1321 {
start:
  %self.dbg.spill.i = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1325, metadata !DIExpression()), !dbg !1327
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1326, metadata !DIExpression()), !dbg !1328
  store i8* %data, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !1329, metadata !DIExpression()), !dbg !1337
  %0 = bitcast i8* %data to {}*, !dbg !1339
  br label %bb1, !dbg !1340

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h61252ae899d7367cE({}* %0, i64 %len), !dbg !1341
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !1341
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !1341
  br label %bb2, !dbg !1341

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !1342
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1, !dbg !1342
  ret { [0 x i8]*, i64 } %5, !dbg !1342
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2747f93badf96cc3E"(i8** %_1) unnamed_addr #0 !dbg !1343 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !1348, metadata !DIExpression()), !dbg !1349
  ret void, !dbg !1349
}

; core::ptr::drop_in_place<&bool>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17he29f517b582b2d4aE"(i8** %_1) unnamed_addr #0 !dbg !1350 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !1355, metadata !DIExpression()), !dbg !1358
  ret void, !dbg !1358
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h644d93ab1f04cae5E"(i64** %_1) unnamed_addr #0 !dbg !1359 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1364, metadata !DIExpression()), !dbg !1367
  ret void, !dbg !1367
}

; core::ptr::drop_in_place<&base64::CharacterSet>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr45drop_in_place$LT$$RF$base64..CharacterSet$GT$17h07288ddd5b2375fbE"(i8** %_1) unnamed_addr #0 !dbg !1368 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !1373, metadata !DIExpression()), !dbg !1376
  ret void, !dbg !1376
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17he3302857021bd81cE"(%"std::str::Utf8Error"* %_1) unnamed_addr #0 !dbg !1377 {
start:
  %_1.dbg.spill = alloca %"std::str::Utf8Error"*, align 8
  store %"std::str::Utf8Error"* %_1, %"std::str::Utf8Error"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::str::Utf8Error"** %_1.dbg.spill, metadata !1382, metadata !DIExpression()), !dbg !1385
  ret void, !dbg !1385
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr4read17hcc2213ce829579b8E(i64* %src) unnamed_addr #0 !dbg !1386 {
start:
  %self.dbg.spill.i1 = alloca i64*, align 8
  %slot.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca i64, align 8
  %src.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i64* %src, i64** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill, metadata !1391, metadata !DIExpression()), !dbg !1403
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !1392, metadata !DIExpression()), !dbg !1404
  %1 = bitcast i64* %0 to {}*, !dbg !1405
  %2 = load i64, i64* %0, align 8, !dbg !1411
  store i64 %2, i64* %tmp, align 8, !dbg !1412
  br label %bb1, !dbg !1412

bb1:                                              ; preds = %start
  store i64* %tmp, i64** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i1, metadata !1413, metadata !DIExpression()), !dbg !1420
  br label %bb2, !dbg !1422

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*, !dbg !1423
  %4 = bitcast i64* %src to i8*, !dbg !1423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false), !dbg !1423
  %_6 = load i64, i64* %tmp, align 8, !dbg !1424
  store i64 %_6, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1425, metadata !DIExpression()), !dbg !1430
  store i64 %_6, i64* %slot.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill.i.i, metadata !1432, metadata !DIExpression()), !dbg !1438
  br label %bb3, !dbg !1424

bb3:                                              ; preds = %bb2
  ret i64 %_6, !dbg !1440
}

; core::ptr::drop_in_place<core::array::TryFromSliceError>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr51drop_in_place$LT$core..array..TryFromSliceError$GT$17h29be9cef0680fd88E"(%"std::array::TryFromSliceError"* %_1) unnamed_addr #0 !dbg !1441 {
start:
  %_1.dbg.spill = alloca %"std::array::TryFromSliceError"*, align 8
  store %"std::array::TryFromSliceError"* %_1, %"std::array::TryFromSliceError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::array::TryFromSliceError"** %_1.dbg.spill, metadata !1446, metadata !DIExpression()), !dbg !1449
  ret void, !dbg !1449
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h601ff0986ef5e0e7E"(%"std::alloc::LayoutError"* %_1) unnamed_addr #0 !dbg !1450 {
start:
  %_1.dbg.spill = alloca %"std::alloc::LayoutError"*, align 8
  store %"std::alloc::LayoutError"* %_1, %"std::alloc::LayoutError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"** %_1.dbg.spill, metadata !1455, metadata !DIExpression()), !dbg !1458
  ret void, !dbg !1458
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define void @_ZN4core3ptr5write17hede3e19507b36777E(i64* %dst, i64 %0) unnamed_addr #0 !dbg !1459 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !1463, metadata !DIExpression()), !dbg !1465
  call void @llvm.dbg.declare(metadata i64* %src, metadata !1464, metadata !DIExpression()), !dbg !1466
  %1 = bitcast i64* %dst to i8*, !dbg !1467
  %2 = bitcast i64* %src to i8*, !dbg !1467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !dbg !1467
  ret void, !dbg !1468
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hde5b232dfedbca2fE"(i8* %ptr) unnamed_addr #0 !dbg !1469 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1474, metadata !DIExpression()), !dbg !1475
  store i8* %ptr, i8** %0, align 8, !dbg !1476
  %1 = load i8*, i8** %0, align 8, !dbg !1477, !nonnull !4
  ret i8* %1, !dbg !1477
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf231c292f916b7e4E"(i8* nonnull %self) unnamed_addr #0 !dbg !1478 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1482, metadata !DIExpression()), !dbg !1485
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he5d69e45e78cd043E"(i8* nonnull %self), !dbg !1486
  br label %bb1, !dbg !1486

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hde5b232dfedbca2fE"(i8* %_3), !dbg !1487
  br label %bb2, !dbg !1487

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !1488
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he5d69e45e78cd043E"(i8* nonnull %self) unnamed_addr #0 !dbg !1489 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1493, metadata !DIExpression()), !dbg !1494
  ret i8* %self, !dbg !1495
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h1be5abe869fd48d5E"(i8* %self, i8* %other) unnamed_addr #0 !dbg !1496 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1500, metadata !DIExpression()), !dbg !1502
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1501, metadata !DIExpression()), !dbg !1503
  %1 = icmp eq i8* %self, %other, !dbg !1504
  %2 = zext i1 %1 to i8, !dbg !1504
  store i8 %2, i8* %0, align 1, !dbg !1504
  %3 = load i8, i8* %0, align 1, !dbg !1504, !range !669
  %4 = trunc i8 %3 to i1, !dbg !1504
  br label %bb1, !dbg !1504

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !1505
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1f9b252d562c3132E"(i8* %self) unnamed_addr #0 !dbg !1506 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1510, metadata !DIExpression()), !dbg !1511
  br label %bb1, !dbg !1512

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h1be5abe869fd48d5E"(i8* %self, i8* null), !dbg !1513
  br label %bb2, !dbg !1513

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !1514
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h2cacccae7c77a293E({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1515 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[u8]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1522, metadata !DIExpression()), !dbg !1524
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1523, metadata !DIExpression()), !dbg !1525
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1526
  store {}* %data_address, {}** %0, align 8, !dbg !1526
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1526
  store i64 %metadata, i64* %1, align 8, !dbg !1526
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*, !dbg !1527
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1527
  %4 = load i8*, i8** %3, align 8, !dbg !1527
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1527
  %6 = load i64, i64* %5, align 8, !dbg !1527
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1527
  store i8* %4, i8** %7, align 8, !dbg !1527
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1527
  store i64 %6, i64* %8, align 8, !dbg !1527
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*, !dbg !1527
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1527
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1527
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1527
  %13 = load i64, i64* %12, align 8, !dbg !1527
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !1528
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !1528
  ret { [0 x i8]*, i64 } %15, !dbg !1528
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h61252ae899d7367cE({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1529 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[u8]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1533, metadata !DIExpression()), !dbg !1535
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1534, metadata !DIExpression()), !dbg !1536
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1537
  store {}* %data_address, {}** %0, align 8, !dbg !1537
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1537
  store i64 %metadata, i64* %1, align 8, !dbg !1537
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*, !dbg !1538
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1538
  %4 = load i8*, i8** %3, align 8, !dbg !1538
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1538
  %6 = load i64, i64* %5, align 8, !dbg !1538
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1538
  store i8* %4, i8** %7, align 8, !dbg !1538
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1538
  store i64 %6, i64* %8, align 8, !dbg !1538
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*, !dbg !1538
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1538
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1538
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1538
  %13 = load i64, i64* %12, align 8, !dbg !1538
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !1539
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !1539
  ret { [0 x i8]*, i64 } %15, !dbg !1539
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h725a86abc3d48e13E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1540 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"std::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1544, metadata !DIExpression()), !dbg !1545
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*, !dbg !1546
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !1546
  store [0 x i8]* %ptr.0, [0 x i8]** %3, align 8, !dbg !1546
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !1546
  store i64 %ptr.1, i64* %4, align 8, !dbg !1546
  %5 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*, !dbg !1546
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !1546
  %7 = load i64, i64* %6, align 8, !dbg !1546
  ret i64 %7, !dbg !1547
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %ptr) unnamed_addr #0 !dbg !1548 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1552, metadata !DIExpression()), !dbg !1553
  store i8* %ptr, i8** %0, align 8, !dbg !1554
  %1 = load i8*, i8** %0, align 8, !dbg !1555, !nonnull !4
  ret i8* %1, !dbg !1555
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcb2192e54c474bd9E"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1556 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1560, metadata !DIExpression()), !dbg !1561
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !1562
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !1562
  store [0 x i8]* %ptr.0, [0 x i8]** %4, align 8, !dbg !1562
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !1562
  store i64 %ptr.1, i64* %5, align 8, !dbg !1562
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !1563
  %7 = load i8*, i8** %6, align 8, !dbg !1563, !nonnull !4
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !1563
  %9 = load i64, i64* %8, align 8, !dbg !1563
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0, !dbg !1563
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1, !dbg !1563
  ret { i8*, i64 } %11, !dbg !1563
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h349bd3bee514206bE"(i8* %ptr) unnamed_addr #0 !dbg !1564 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1580, metadata !DIExpression()), !dbg !1581
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1f9b252d562c3132E"(i8* %ptr), !dbg !1582
  br label %bb1, !dbg !1582

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !1583
  br i1 %_2, label %bb2, label %bb4, !dbg !1583

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**, !dbg !1584
  store {}* null, {}** %1, align 8, !dbg !1584
  br label %bb5, !dbg !1585

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %ptr), !dbg !1586
  br label %bb3, !dbg !1586

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8, !dbg !1587
  br label %bb5, !dbg !1585

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8, !dbg !1588
  ret i8* %2, !dbg !1588
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h32573d73af02b004E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1589 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1593, metadata !DIExpression()), !dbg !1595
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbf166fe06cdfed2fE"(i8* nonnull %self.0, i64 %self.1), !dbg !1596
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1596
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1596
  br label %bb1, !dbg !1596

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*, !dbg !1596
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %_2), !dbg !1597
  br label %bb2, !dbg !1597

bb2:                                              ; preds = %bb1
  ret i8* %3, !dbg !1598
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbf166fe06cdfed2fE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1599 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1603, metadata !DIExpression()), !dbg !1604
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !1605
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0, !dbg !1606
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !1606
  ret { [0 x i8]*, i64 } %3, !dbg !1606
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %self) unnamed_addr #0 !dbg !1607 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1611, metadata !DIExpression()), !dbg !1612
  ret i8* %self, !dbg !1613
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h4188c478b7037b90E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1614 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1618, metadata !DIExpression()), !dbg !1619
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h4586dfe21f8b9c5dE"(i8* nonnull %self.0, i64 %self.1), !dbg !1620
  br label %bb1, !dbg !1620

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %_2), !dbg !1620
  br label %bb2, !dbg !1620

bb2:                                              ; preds = %bb1
  ret i8* %2, !dbg !1621
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h4586dfe21f8b9c5dE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1622 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1624, metadata !DIExpression()), !dbg !1625
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbf166fe06cdfed2fE"(i8* nonnull %self.0, i64 %self.1), !dbg !1626
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1626
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1626
  br label %bb1, !dbg !1626

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %_3.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !171, metadata !DIExpression()), !dbg !1627
  %5 = bitcast [0 x i8]* %_3.0 to i8*, !dbg !1629
  br label %bb2, !dbg !1626

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %6 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %5), !dbg !1630
  br label %bb3, !dbg !1630

bb3:                                              ; preds = %bb2
  ret i8* %6, !dbg !1631
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hd438f0971ae73bbfE"(i8* nonnull %data, i64 %len) unnamed_addr #0 !dbg !1632 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1636, metadata !DIExpression()), !dbg !1638
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1637, metadata !DIExpression()), !dbg !1639
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %data), !dbg !1640
  br label %bb1, !dbg !1640

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h808069bf2fa712efE(i8* %_4, i64 %len), !dbg !1641
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !1641
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !1641
  br label %bb2, !dbg !1641

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcb2192e54c474bd9E"([0 x i8]* %_3.0, i64 %_3.1), !dbg !1642
  %2 = extractvalue { i8*, i64 } %1, 0, !dbg !1642
  %3 = extractvalue { i8*, i64 } %1, 1, !dbg !1642
  br label %bb3, !dbg !1642

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0, !dbg !1643
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1, !dbg !1643
  ret { i8*, i64 } %5, !dbg !1643
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h5b5316406c8edcc3E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1644 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1648, metadata !DIExpression()), !dbg !1649
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbf166fe06cdfed2fE"(i8* nonnull %self.0, i64 %self.1), !dbg !1650
  %_2.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1650
  %_2.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1650
  br label %bb1, !dbg !1650

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %_2.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %_2.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !293, metadata !DIExpression()) #12, !dbg !1651
; call core::ptr::metadata::metadata
  %5 = call i64 @_ZN4core3ptr8metadata8metadata17h725a86abc3d48e13E([0 x i8]* %_2.0, i64 %_2.1) #12, !dbg !1653
  br label %bb2, !dbg !1650

bb2:                                              ; preds = %bb1
  ret i64 %5, !dbg !1654
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h3589b1ddfd70936dE"(i8* %self, i8* %other) unnamed_addr #0 !dbg !1655 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1659, metadata !DIExpression()), !dbg !1661
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1660, metadata !DIExpression()), !dbg !1662
  %1 = icmp eq i8* %self, %other, !dbg !1663
  %2 = zext i1 %1 to i8, !dbg !1663
  store i8 %2, i8* %0, align 1, !dbg !1663
  %3 = load i8, i8* %0, align 1, !dbg !1663, !range !669
  %4 = trunc i8 %3 to i1, !dbg !1663
  br label %bb1, !dbg !1663

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !1664
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nounwind
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd10c413d61c24af9E"(i8* %self) unnamed_addr #0 !dbg !1665 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1669, metadata !DIExpression()), !dbg !1670
  %0 = bitcast i8* %self to {}*, !dbg !1671
  ret {}* %0, !dbg !1672
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdd278f7c65bef5d2E"(i8* %self) unnamed_addr #0 !dbg !1673 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1677, metadata !DIExpression()), !dbg !1678
  br label %bb1, !dbg !1679

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h3589b1ddfd70936dE"(i8* %self, i8* null), !dbg !1680
  br label %bb2, !dbg !1680

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !1681
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h072db4e2e33b785dE"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 !dbg !1682 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1685, metadata !DIExpression()), !dbg !1686
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17h725a86abc3d48e13E([0 x i8]* %self.0, i64 %self.1), !dbg !1687
  br label %bb1, !dbg !1687

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !1688
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb891ac95b6994738E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 !dbg !1689 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1693, metadata !DIExpression()), !dbg !1694
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !1695
  ret i8* %2, !dbg !1696
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h6b597f304f210581E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1697 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1703, metadata !DIExpression()), !dbg !1706
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h3f59e5d448d51f31E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1707
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1707
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1707
  br label %bb1, !dbg !1707

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1708
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1708
  ret { i64, i64 } %4, !dbg !1708
}

; core::alloc::layout::size_align
; Function Attrs: nounwind
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h8973d6f27cea8369E() unnamed_addr #1 !dbg !1709 {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  br label %bb1, !dbg !1717

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !1718
  %2 = load i64, i64* %0, align 8, !dbg !1718
  br label %bb2, !dbg !1723

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %1 to i64*, !dbg !1724
  store i64 1, i64* %3, align 8, !dbg !1724
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1724
  store i64 %2, i64* %4, align 8, !dbg !1724
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1725
  %6 = load i64, i64* %5, align 8, !dbg !1725
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1725
  %8 = load i64, i64* %7, align 8, !dbg !1725
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !1725
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !1725
  ret { i64, i64 } %10, !dbg !1725
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h356c043d8961d2f8E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1726 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %pad.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1736
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1737
  br label %bb1, !dbg !1737

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17hf1fc490a8f5f2505E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_4), !dbg !1738
  store i64 %pad, i64* %pad.dbg.spill, align 8, !dbg !1738
  call void @llvm.dbg.declare(metadata i64* %pad.dbg.spill, metadata !1732, metadata !DIExpression()), !dbg !1739
  br label %bb2, !dbg !1738

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1740
  br label %bb3, !dbg !1740

bb3:                                              ; preds = %bb2
  %new_size = add i64 %_7, %pad, !dbg !1740
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !1740
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !1734, metadata !DIExpression()), !dbg !1741
; call core::alloc::layout::Layout::align
  %_12 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1742
  br label %bb4, !dbg !1742

bb4:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h31000980634a8d62E(i64 %new_size, i64 %_12), !dbg !1743
  %_10.0 = extractvalue { i64, i64 } %0, 0, !dbg !1743
  %_10.1 = extractvalue { i64, i64 } %0, 1, !dbg !1743
  br label %bb5, !dbg !1743

bb5:                                              ; preds = %bb4
; call core::result::Result<T,E>::unwrap
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h30a0b31dcf695d90E"(i64 %_10.0, i64 %_10.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc593 to %"std::panic::Location"*)), !dbg !1743
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !1743
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !1743
  br label %bb6, !dbg !1743

bb6:                                              ; preds = %bb5
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !1744
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !1744
  ret { i64, i64 } %5, !dbg !1744
}

; core::alloc::layout::Layout::from_size_align
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h31000980634a8d62E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1745 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1749, metadata !DIExpression()), !dbg !1751
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1750, metadata !DIExpression()), !dbg !1752
  store i64 %align, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1753, metadata !DIExpression()) #12, !dbg !1758
  store i64 %align, i64* %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i.i, metadata !1760, metadata !DIExpression()) #12, !dbg !1765
  %2 = call i64 @llvm.ctpop.i64(i64 %align) #12, !dbg !1767
  store i64 %2, i64* %0, align 8, !dbg !1767
  %_2.i.i = load i64, i64* %0, align 8, !dbg !1767
  %3 = trunc i64 %_2.i.i to i32, !dbg !1767
  %4 = icmp eq i32 %3, 1, !dbg !1768
  br label %bb1, !dbg !1769

bb1:                                              ; preds = %start
  %_3 = xor i1 %4, true, !dbg !1770
  br i1 %_3, label %bb2, label %bb3, !dbg !1770

bb3:                                              ; preds = %bb1
  %_9 = sub i64 %align, 1, !dbg !1771
  %_8 = sub i64 -1, %_9, !dbg !1772
  %_6 = icmp ugt i64 %size, %_8, !dbg !1773
  br i1 %_6, label %bb4, label %bb5, !dbg !1773

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1774
  store i64 0, i64* %5, align 8, !dbg !1774
  br label %bb7, !dbg !1775

bb7:                                              ; preds = %bb6, %bb4, %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1778
  %7 = load i64, i64* %6, align 8, !dbg !1778
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1778
  %9 = load i64, i64* %8, align 8, !dbg !1778
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0, !dbg !1778
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !1778
  ret { i64, i64 } %11, !dbg !1778

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align_unchecked
  %12 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h7d3db9df0e7e4b98E(i64 %size, i64 %align), !dbg !1779
  %_11.0 = extractvalue { i64, i64 } %12, 0, !dbg !1779
  %_11.1 = extractvalue { i64, i64 } %12, 1, !dbg !1779
  br label %bb6, !dbg !1779

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1780
  store i64 0, i64* %13, align 8, !dbg !1780
  br label %bb7, !dbg !1775

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1781
  store i64 %_11.0, i64* %14, align 8, !dbg !1781
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1781
  store i64 %_11.1, i64* %15, align 8, !dbg !1781
  br label %bb7, !dbg !1778
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17hf1fc490a8f5f2505E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %align) unnamed_addr #0 !dbg !1782 {
start:
  %rhs.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca i64, align 8
  %rhs.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64, align 8
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %len_rounded_up.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1786, metadata !DIExpression()), !dbg !1792
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1787, metadata !DIExpression()), !dbg !1793
; call core::alloc::layout::Layout::size
  %len = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1794
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !1794
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1788, metadata !DIExpression()), !dbg !1795
  br label %bb1, !dbg !1794

bb1:                                              ; preds = %start
  store i64 %len, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1796, metadata !DIExpression()), !dbg !1800
  store i64 %align, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1799, metadata !DIExpression()), !dbg !1802
  %0 = add i64 %len, %align, !dbg !1803
  br label %bb2, !dbg !1804

bb2:                                              ; preds = %bb1
  store i64 %0, i64* %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i6, metadata !1805, metadata !DIExpression()), !dbg !1809
  store i64 1, i64* %rhs.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i5, metadata !1808, metadata !DIExpression()), !dbg !1811
  %1 = sub i64 %0, 1, !dbg !1812
  br label %bb3, !dbg !1804

bb3:                                              ; preds = %bb2
  store i64 %align, i64* %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i4, metadata !1805, metadata !DIExpression()), !dbg !1813
  store i64 1, i64* %rhs.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i3, metadata !1808, metadata !DIExpression()), !dbg !1815
  %2 = sub i64 %align, 1, !dbg !1816
  br label %bb4, !dbg !1817

bb4:                                              ; preds = %bb3
  %_10 = xor i64 %2, -1, !dbg !1818
  %len_rounded_up = and i64 %1, %_10, !dbg !1804
  store i64 %len_rounded_up, i64* %len_rounded_up.dbg.spill, align 8, !dbg !1804
  call void @llvm.dbg.declare(metadata i64* %len_rounded_up.dbg.spill, metadata !1790, metadata !DIExpression()), !dbg !1819
  store i64 %len_rounded_up, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !1805, metadata !DIExpression()), !dbg !1820
  store i64 %len, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !1808, metadata !DIExpression()), !dbg !1822
  %3 = sub i64 %len_rounded_up, %len, !dbg !1823
  br label %bb5, !dbg !1824

bb5:                                              ; preds = %bb4
  ret i64 %3, !dbg !1825
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h7d3db9df0e7e4b98E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1826 {
start:
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1830, metadata !DIExpression()), !dbg !1832
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1831, metadata !DIExpression()), !dbg !1833
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd28c89d6839f40a2E(i64 %align), !dbg !1834, !range !1284
  br label %bb1, !dbg !1834

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !1835
  store i64 %size, i64* %1, align 8, !dbg !1835
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1835
  store i64 %_4, i64* %2, align 8, !dbg !1835
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1836
  %4 = load i64, i64* %3, align 8, !dbg !1836
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1836
  %6 = load i64, i64* %5, align 8, !dbg !1836, !range !1284
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !1836
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !1836
  ret { i64, i64 } %8, !dbg !1836
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h6ff726810dd00e39E() unnamed_addr #0 !dbg !1837 {
start:
  %align.dbg.spill = alloca i64, align 8, !dbg !1844
  %size.dbg.spill = alloca i64, align 8, !dbg !1844
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h8973d6f27cea8369E(), !dbg !1844
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !1844
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !1844
  br label %bb1, !dbg !1844

bb1:                                              ; preds = %start
  store i64 %_3.0, i64* %size.dbg.spill, align 8, !dbg !1845
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1841, metadata !DIExpression()), !dbg !1846
  store i64 %_3.1, i64* %align.dbg.spill, align 8, !dbg !1847
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1843, metadata !DIExpression()), !dbg !1848
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h7d3db9df0e7e4b98E(i64 %_3.0, i64 %_3.1), !dbg !1849
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !1849
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !1849
  br label %bb2, !dbg !1849

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !1850
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !1850
  ret { i64, i64 } %5, !dbg !1850
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1851 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1855, metadata !DIExpression()), !dbg !1856
  %0 = bitcast { i64, i64 }* %self to i64*, !dbg !1857
  %1 = load i64, i64* %0, align 8, !dbg !1857
  ret i64 %1, !dbg !1858
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1859 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1861, metadata !DIExpression()), !dbg !1862
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1863
  %_2 = load i64, i64* %0, align 8, !dbg !1863, !range !1284
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h458dba242e4aeebbE(i64 %_2), !dbg !1863
  br label %bb1, !dbg !1863

bb1:                                              ; preds = %start
  ret i64 %1, !dbg !1864
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1035d8e9ef9f5dd1E(i64 %n) unnamed_addr #0 !dbg !1865 {
start:
  %offset.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %n.dbg.spill = alloca i64, align 8
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", align 8
  %_5 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1869, metadata !DIExpression()), !dbg !1885
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !1870, metadata !DIExpression()), !dbg !1886
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !1873, metadata !DIExpression()), !dbg !1887
  call void @llvm.dbg.declare(metadata { { i64, i64 }, i64 }* %val, metadata !1875, metadata !DIExpression()), !dbg !1888
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h6ff726810dd00e39E(), !dbg !1889
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8, !dbg !1889
  br label %bb1, !dbg !1889

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h429e1d1584eb7728E(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n), !dbg !1889
  br label %bb2, !dbg !1889

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3787c517dd758825E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>") dereferenceable(24) %_5, %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture dereferenceable(24) %_6), !dbg !1889
  br label %bb3, !dbg !1889

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %_5, i32 0, i32 1, !dbg !1889
  %3 = load i64, i64* %2, align 8, !dbg !1889
  %4 = icmp eq i64 %3, 0, !dbg !1889
  %_10 = select i1 %4, i64 1, i64 0, !dbg !1889
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !1889

bb5:                                              ; preds = %bb3
  unreachable, !dbg !1889

bb4:                                              ; preds = %bb3
  %5 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"*, !dbg !1889
  %6 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*, !dbg !1889
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*, !dbg !1889
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*, !dbg !1889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !1889
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !1888
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*, !dbg !1888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !1888
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*, !dbg !1890
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !1890
  %13 = load i64, i64* %12, align 8, !dbg !1890
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !1890
  %15 = load i64, i64* %14, align 8, !dbg !1890, !range !1284
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !1890
  store i64 %13, i64* %16, align 8, !dbg !1890
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !1890
  store i64 %15, i64* %17, align 8, !dbg !1890
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1, !dbg !1891
  %offset = load i64, i64* %18, align 8, !dbg !1891
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !1891
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !1872, metadata !DIExpression()), !dbg !1892
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h356c043d8961d2f8E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !1893
  %_17.0 = extractvalue { i64, i64 } %19, 0, !dbg !1893
  %_17.1 = extractvalue { i64, i64 } %19, 1, !dbg !1893
  br label %bb8, !dbg !1893

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8673e32ce17afa86E"(), !dbg !1894
  store { i64, i64 } %20, { i64, i64 }* %0, align 8, !dbg !1894
  br label %bb7, !dbg !1894

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !1895

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1895
  %22 = load i64, i64* %21, align 8, !dbg !1895
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1895
  %24 = load i64, i64* %23, align 8, !dbg !1895
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0, !dbg !1895
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1, !dbg !1895
  ret { i64, i64 } %26, !dbg !1895

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1896
  store i64 %_17.0, i64* %27, align 8, !dbg !1896
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1896
  store i64 %_17.1, i64* %28, align 8, !dbg !1896
  br label %bb9, !dbg !1895
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5alloc6layout6Layout6repeat17h429e1d1584eb7728E(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #0 !dbg !1897 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %padded_size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_21 = alloca { { i64, i64 }, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1901, metadata !DIExpression()), !dbg !1911
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1902, metadata !DIExpression()), !dbg !1912
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !1907, metadata !DIExpression()), !dbg !1913
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1914
  br label %bb1, !dbg !1914

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1915
  br label %bb2, !dbg !1915

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::padding_needed_for
  %_6 = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17hf1fc490a8f5f2505E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_8), !dbg !1916
  br label %bb3, !dbg !1916

bb3:                                              ; preds = %bb2
  %padded_size = add i64 %_4, %_6, !dbg !1914
  store i64 %padded_size, i64* %padded_size.dbg.spill, align 8, !dbg !1914
  call void @llvm.dbg.declare(metadata i64* %padded_size.dbg.spill, metadata !1903, metadata !DIExpression()), !dbg !1917
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hd802f3514088ff87E"(i64 %padded_size, i64 %n), !dbg !1918
  %_13.0 = extractvalue { i64, i64 } %1, 0, !dbg !1918
  %_13.1 = extractvalue { i64, i64 } %1, 1, !dbg !1918
  br label %bb4, !dbg !1918

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9e999bc306c8c66aE"(i64 %_13.0, i64 %_13.1), !dbg !1918
  %_12.0 = extractvalue { i64, i64 } %2, 0, !dbg !1918
  %_12.1 = extractvalue { i64, i64 } %2, 1, !dbg !1918
  br label %bb5, !dbg !1918

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc80254b40107cb29E"(i64 %_12.0, i64 %_12.1), !dbg !1918
  store { i64, i64 } %3, { i64, i64 }* %_11, align 8, !dbg !1918
  br label %bb6, !dbg !1918

bb6:                                              ; preds = %bb5
  %4 = bitcast { i64, i64 }* %_11 to i64*, !dbg !1918
  %_17 = load i64, i64* %4, align 8, !dbg !1918, !range !1202
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !1918

bb8:                                              ; preds = %bb6
  unreachable, !dbg !1918

bb7:                                              ; preds = %bb6
  %5 = bitcast { i64, i64 }* %_11 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"*, !dbg !1918
  %6 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"* %5, i32 0, i32 1, !dbg !1918
  %val = load i64, i64* %6, align 8, !dbg !1918
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1918
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1909, metadata !DIExpression()), !dbg !1919
  store i64 %val, i64* %alloc_size.dbg.spill, align 8, !dbg !1919
  call void @llvm.dbg.declare(metadata i64* %alloc_size.dbg.spill, metadata !1905, metadata !DIExpression()), !dbg !1920
; call core::alloc::layout::Layout::align
  %_24 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1921
  br label %bb11, !dbg !1921

bb9:                                              ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h36480700bbcbd701E"(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0), !dbg !1922
  br label %bb10, !dbg !1922

bb10:                                             ; preds = %bb9
  br label %bb13, !dbg !1923

bb13:                                             ; preds = %bb12, %bb10
  ret void, !dbg !1923

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::from_size_align_unchecked
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h7d3db9df0e7e4b98E(i64 %val, i64 %_24), !dbg !1924
  %_22.0 = extractvalue { i64, i64 } %7, 0, !dbg !1924
  %_22.1 = extractvalue { i64, i64 } %7, 1, !dbg !1924
  br label %bb12, !dbg !1924

bb12:                                             ; preds = %bb11
  %8 = bitcast { { i64, i64 }, i64 }* %_21 to { i64, i64 }*, !dbg !1925
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0, !dbg !1925
  store i64 %_22.0, i64* %9, align 8, !dbg !1925
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1, !dbg !1925
  store i64 %_22.1, i64* %10, align 8, !dbg !1925
  %11 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_21, i32 0, i32 1, !dbg !1925
  store i64 %padded_size, i64* %11, align 8, !dbg !1925
  %12 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0 to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"*, !dbg !1926
  %13 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"* %12 to { { i64, i64 }, i64 }*, !dbg !1926
  %14 = bitcast { { i64, i64 }, i64 }* %13 to i8*, !dbg !1926
  %15 = bitcast { { i64, i64 }, i64 }* %_21 to i8*, !dbg !1926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !1926
  br label %bb13, !dbg !1923
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nounwind
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17hd9dc7e269411dacaE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1927 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1931, metadata !DIExpression()), !dbg !1932
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1933
  br label %bb1, !dbg !1933

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*, !dbg !1933
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %_2), !dbg !1934
  br label %bb2, !dbg !1934

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !1935
}

; core::array::<impl core::convert::TryFrom<&[T]> for &[T; N]>::try_from
; Function Attrs: nounwind
define align 1 dereferenceable_or_null(8) i8* @"_ZN4core5array102_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$RF$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17hd234cc5c4292c193E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !1936 {
start:
  %ptr.dbg.spill = alloca [8 x i8]*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca i8*, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1958, metadata !DIExpression()), !dbg !1962
  %_2 = icmp eq i64 %slice.1, 8, !dbg !1963
  br i1 %_2, label %bb1, label %bb3, !dbg !1963

bb3:                                              ; preds = %start
  %3 = bitcast i8** %0 to {}**, !dbg !1964
  store {}* null, {}** %3, align 8, !dbg !1964
  br label %bb4, !dbg !1965

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::as_ptr
  %_6 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4a1dfe72a7ae1c25E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1), !dbg !1966
  br label %bb2, !dbg !1966

bb2:                                              ; preds = %bb1
  %ptr = bitcast i8* %_6 to [8 x i8]*, !dbg !1966
  store [8 x i8]* %ptr, [8 x i8]** %ptr.dbg.spill, align 8, !dbg !1966
  call void @llvm.dbg.declare(metadata [8 x i8]** %ptr.dbg.spill, metadata !1959, metadata !DIExpression()), !dbg !1967
  %4 = bitcast i8** %0 to [8 x i8]**, !dbg !1968
  store [8 x i8]* %ptr, [8 x i8]** %4, align 8, !dbg !1968
  br label %bb4, !dbg !1965

bb4:                                              ; preds = %bb3, %bb2
  %5 = load i8*, i8** %0, align 8, !dbg !1969
  ret i8* %5, !dbg !1969
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf860101d79e0a39dE"([1024 x i8]* align 1 dereferenceable(1024) %self, i64 %index.0, i64 %index.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1970 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca [1024 x i8]*, align 8
  store [1024 x i8]* %self, [1024 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1024 x i8]** %self.dbg.spill, metadata !1979, metadata !DIExpression()), !dbg !1983
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill, metadata !1980, metadata !DIExpression()), !dbg !1984
  %_4.0 = bitcast [1024 x i8]* %self to [0 x i8]*, !dbg !1985
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18ebf1aaf5f6628fE"([0 x i8]* nonnull align 1 %_4.0, i64 1024, i64 %index.0, i64 %index.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1986
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1986
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1986
  br label %bb1, !dbg !1986

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !1987
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !1987
  ret { [0 x i8]*, i64 } %7, !dbg !1987
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hbb781dce4f95e74cE"([1024 x i8]* align 1 dereferenceable(1024) %self, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1988 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1024 x i8]*, align 8
  store [1024 x i8]* %self, [1024 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1024 x i8]** %self.dbg.spill, metadata !1994, metadata !DIExpression()), !dbg !1998
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1995, metadata !DIExpression()), !dbg !1999
  %_6.0 = bitcast [1024 x i8]* %self to [0 x i8]*, !dbg !2000
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56f891b2dcb4eeb3E"([0 x i8]* nonnull align 1 %_6.0, i64 1024, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2001
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !2001
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !2001
  br label %bb1, !dbg !2001

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !2002
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1, !dbg !2002
  ret { [0 x i8]*, i64 } %3, !dbg !2002
}

; core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from
; Function Attrs: nounwind
define i72 @"_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17h775279382fad47f5E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !2003 {
start:
  %0 = alloca i72, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"std::result::Result<[u8; 8], std::array::TryFromSliceError>", align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2023, metadata !DIExpression()), !dbg !2024
; call core::array::<impl core::convert::TryFrom<&[T]> for &[T; N]>::try_from
  %_2 = call align 1 dereferenceable_or_null(8) i8* @"_ZN4core5array102_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$RF$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17hd234cc5c4292c193E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1), !dbg !2025
  br label %bb1, !dbg !2025

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::map
  %4 = call i72 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17ha0c0183fc4cc3207E"(i8* align 1 dereferenceable_or_null(8) %_2), !dbg !2025
  store i72 %4, i72* %0, align 8, !dbg !2025
  %5 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %1 to i8*, !dbg !2025
  %6 = bitcast i72* %0 to i8*, !dbg !2025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 8 %6, i64 9, i1 false), !dbg !2025
  br label %bb2, !dbg !2025

bb2:                                              ; preds = %bb1
  %7 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %1 to i72*, !dbg !2026
  %8 = load i72, i72* %7, align 1, !dbg !2026
  ret i72 %8, !dbg !2026
}

; core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from::{{closure}}
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from28_$u7b$$u7b$closure$u7d$$u7d$17h83050287f4cb8fbdE"([8 x i8]* align 1 dereferenceable(8) %r) unnamed_addr #0 !dbg !2027 {
start:
  %r.dbg.spill = alloca [8 x i8]*, align 8
  %_1.dbg.spill = alloca %"[closure@std::array::<impl std::convert::TryFrom<&[u8]> for [u8; 8]>::try_from::{closure#0}]", align 1
  %0 = alloca [8 x i8], align 1
  call void @llvm.dbg.declare(metadata %"[closure@std::array::<impl std::convert::TryFrom<&[u8]> for [u8; 8]>::try_from::{closure#0}]"* %_1.dbg.spill, metadata !2034, metadata !DIExpression()), !dbg !2035
  store [8 x i8]* %r, [8 x i8]** %r.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %r.dbg.spill, metadata !2033, metadata !DIExpression()), !dbg !2036
  %1 = bitcast [8 x i8]* %0 to i8*, !dbg !2037
  %2 = bitcast [8 x i8]* %r to i8*, !dbg !2037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 8, i1 false), !dbg !2037
  %3 = bitcast [8 x i8]* %0 to i64*, !dbg !2038
  %4 = load i64, i64* %3, align 1, !dbg !2038
  ret i64 %4, !dbg !2038
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5clone5Clone5clone17h9ddcdd57b0b34dcdE({}* nonnull align 1 %_1) unnamed_addr #0 !dbg !2039 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !2047, metadata !DIExpression()), !dbg !2050
  ret void, !dbg !2050
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0ab4e7fd709d2e2aE"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 !dbg !2051 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2057, metadata !DIExpression()), !dbg !2058
  %0 = load i64, i64* %self, align 8, !dbg !2059
  ret i64 %0, !dbg !2060
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hac4a531d961be437E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2061 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2067, metadata !DIExpression()), !dbg !2068
; call core::slice::iter::Iter<T>::new
  %2 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h0eeb7e14bbbf3bdcE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2069
  %3 = extractvalue { i8*, i8* } %2, 0, !dbg !2069
  %4 = extractvalue { i8*, i8* } %2, 1, !dbg !2069
  br label %bb1, !dbg !2069

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !2070
  %6 = insertvalue { i8*, i8* } %5, i8* %4, 1, !dbg !2070
  ret { i8*, i8* } %6, !dbg !2070
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4a1dfe72a7ae1c25E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2071 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2075, metadata !DIExpression()), !dbg !2076
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !2077
  ret i8* %2, !dbg !2078
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcebcc6b396e9a846E(i8* %data, i64 %len) unnamed_addr #0 !dbg !2079 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2085, metadata !DIExpression()), !dbg !2087
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2086, metadata !DIExpression()), !dbg !2088
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hff1b586a1ad451d5E(i8* %data, i64 %len), !dbg !2089
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !2089
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !2089
  br label %bb1, !dbg !2089

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !2090
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1, !dbg !2090
  ret { [0 x i8]*, i64 } %2, !dbg !2090
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h0eeb7e14bbbf3bdcE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2091 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i1 = alloca i64, align 8
  %self.dbg.spill.i.i2 = alloca i8*, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2094, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2097, metadata !DIExpression()), !dbg !2100
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4a1dfe72a7ae1c25E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1), !dbg !2101
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2101
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2095, metadata !DIExpression()), !dbg !2102
  br label %bb1, !dbg !2101

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdd278f7c65bef5d2E"(i8* %ptr), !dbg !2103
  br label %bb2, !dbg !2103

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true, !dbg !2104
  call void @llvm.assume(i1 %_5), !dbg !2105
  br label %bb3, !dbg !2105

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2106

bb4:                                              ; preds = %bb3
  %5 = icmp eq i64 1, 0, !dbg !2106
  br i1 %5, label %bb5, label %bb7, !dbg !2106

bb5:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !2107, metadata !DIExpression()), !dbg !2111
  store i64 %slice.1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2110, metadata !DIExpression()), !dbg !2113
  store i8* %ptr, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !2114, metadata !DIExpression()), !dbg !2118
  store i64 %slice.1, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2117, metadata !DIExpression()), !dbg !2120
  %6 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !2121
  store i8* %6, i8** %1, align 8, !dbg !2121
  %7 = load i8*, i8** %1, align 8, !dbg !2121
  br label %bb6, !dbg !2122

bb7:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i4, metadata !132, metadata !DIExpression()), !dbg !2123
  store i64 %slice.1, i64* %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i3, metadata !141, metadata !DIExpression()), !dbg !2125
  store i8* %ptr, i8** %self.dbg.spill.i.i2, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i2, metadata !145, metadata !DIExpression()), !dbg !2126
  store i64 %slice.1, i64* %count.dbg.spill.i.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i1, metadata !151, metadata !DIExpression()), !dbg !2128
  %8 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !2129
  store i8* %8, i8** %0, align 8, !dbg !2129
  %9 = load i8*, i8** %0, align 8, !dbg !2129
  store i8* %9, i8** %end, align 8, !dbg !2130
  br label %bb8, !dbg !2130

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !2131

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE"(i8* %ptr), !dbg !2132
  br label %bb10, !dbg !2132

bb6:                                              ; preds = %bb5
  store i8* %7, i8** %end, align 8, !dbg !2122
  br label %bb9, !dbg !2131

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8, !dbg !2133
  %10 = bitcast { i8*, i8* }* %2 to i8**, !dbg !2134
  store i8* %_18, i8** %10, align 8, !dbg !2134
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1, !dbg !2134
  store i8* %_21, i8** %11, align 8, !dbg !2134
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0, !dbg !2135
  %13 = load i8*, i8** %12, align 8, !dbg !2135, !nonnull !4
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1, !dbg !2135
  %15 = load i8*, i8** %14, align 8, !dbg !2135
  %16 = insertvalue { i8*, i8* } undef, i8* %13, 0, !dbg !2135
  %17 = insertvalue { i8*, i8* } %16, i8* %15, 1, !dbg !2135
  ret { i8*, i8* } %17, !dbg !2135
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h46531a544f030047E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !2136 {
start:
  %_1.dbg.spill.i.i = alloca i8*, align 8
  %diff.dbg.spill.i = alloca i64, align 8
  %0 = alloca i64, align 8
  %size.dbg.spill.i = alloca i64, align 8
  %start.dbg.spill.i = alloca i8*, align 8
  %self.dbg.spill.i = alloca { i8*, i8* }*, align 8
  %_5.i = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !2141, metadata !DIExpression()), !dbg !2142
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill.i, metadata !2143, metadata !DIExpression()) #12, !dbg !2153
  %1 = bitcast { i8*, i8* }* %self to i8**, !dbg !2155
  %_4.i = load i8*, i8** %1, align 8, !dbg !2155, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %_4.i) #12, !dbg !2155
  %2 = bitcast { i8*, i8* }* %self to i8**, !dbg !2156
  %start1.i = load i8*, i8** %2, align 8, !dbg !2156, !nonnull !4
  store i8* %start1.i, i8** %start.dbg.spill.i, align 8, !dbg !2156
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill.i, metadata !2147, metadata !DIExpression()) #12, !dbg !2157
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %start1.i) #12, !dbg !2157
  store i8* %_9.i, i8** %_1.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %_1.dbg.spill.i.i, metadata !2158, metadata !DIExpression()) #12, !dbg !2163
  store i64 1, i64* %size.dbg.spill.i, align 8, !dbg !2157
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill.i, metadata !2149, metadata !DIExpression()) #12, !dbg !2165
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !2165
  %_19.i = load i8*, i8** %3, align 8, !dbg !2165
  %_18.i = ptrtoint i8* %_19.i to i64, !dbg !2165
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %start1.i) #12, !dbg !2165
  %_20.i = ptrtoint i8* %_21.i to i64, !dbg !2165
  %4 = sub nuw i64 %_18.i, %_20.i, !dbg !2165
  store i64 %4, i64* %0, align 8, !dbg !2165
  %diff.i = load i64, i64* %0, align 8, !dbg !2165
  store i64 %diff.i, i64* %diff.dbg.spill.i, align 8, !dbg !2165
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill.i, metadata !2151, metadata !DIExpression()) #12, !dbg !2166
  store i64 %diff.i, i64* %_5.i, align 8, !dbg !2166
  %5 = load i64, i64* %_5.i, align 8, !dbg !2167
; call core::slice::raw::from_raw_parts
  %6 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcebcc6b396e9a846E(i8* %_3.i, i64 %5) #12, !dbg !2167
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0, !dbg !2167
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1, !dbg !2167
  %9 = extractvalue { [0 x i8]*, i64 } %6, 0, !dbg !2168
  %10 = extractvalue { [0 x i8]*, i64 } %6, 1, !dbg !2168
  br label %bb1, !dbg !2168

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !2169
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !2169
  ret { [0 x i8]*, i64 } %12, !dbg !2169
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18ebf1aaf5f6628fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2170 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2175, metadata !DIExpression()), !dbg !2177
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill, metadata !2176, metadata !DIExpression()), !dbg !2178
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h972185dcfd91effbE"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2179
  %6 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !2179
  %7 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !2179
  br label %bb1, !dbg !2179

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0, !dbg !2180
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1, !dbg !2180
  ret { [0 x i8]*, i64 } %9, !dbg !2180
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h237b54ed02ea05a2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2181 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2185, metadata !DIExpression()), !dbg !2187
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2186, metadata !DIExpression()), !dbg !2188
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hdb0c9cae618d6eadE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2189
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !2189
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !2189
  br label %bb1, !dbg !2189

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !2190
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !2190
  ret { [0 x i8]*, i64 } %7, !dbg !2190
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17he7b9d962652cc13aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2191 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2195, metadata !DIExpression()), !dbg !2199
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2196, metadata !DIExpression()), !dbg !2200
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h890a93239c421e89E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2201
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !2201
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !2201
  br label %bb1, !dbg !2201

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !2202
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !2202
  ret { [0 x i8]*, i64 } %7, !dbg !2202
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h22af83885446f654E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2203 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2208, metadata !DIExpression()), !dbg !2210
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill, metadata !2209, metadata !DIExpression()), !dbg !2211
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17heef28bf0af95df53E"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2212
  %_4.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !2212
  %_4.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !2212
  br label %bb1, !dbg !2212

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !2213
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_4.1, 1, !dbg !2213
  ret { [0 x i8]*, i64 } %7, !dbg !2213
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56f891b2dcb4eeb3E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2214 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2218, metadata !DIExpression()), !dbg !2220
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2219, metadata !DIExpression()), !dbg !2221
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h73b65c63e86e8014E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2222
  %_4.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !2222
  %_4.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !2222
  br label %bb1, !dbg !2222

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !2223
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_4.1, 1, !dbg !2223
  ret { [0 x i8]*, i64 } %5, !dbg !2223
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h41060ee3aa6261a6E"(i8* %0) unnamed_addr #0 !dbg !2224 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %err.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2242, metadata !DIExpression()), !dbg !2246
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %err.dbg.spill, metadata !2243, metadata !DIExpression()), !dbg !2247
  store i8 0, i8* %_7, align 1, !dbg !2248
  store i8 1, i8* %_7, align 1, !dbg !2248
  %2 = bitcast i8** %self to {}**, !dbg !2248
  %3 = load {}*, {}** %2, align 8, !dbg !2248
  %4 = icmp eq {}* %3, null, !dbg !2248
  %_3 = select i1 %4, i64 0, i64 1, !dbg !2248
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2249

bb2:                                              ; preds = %start
  unreachable, !dbg !2248

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2250
  %5 = bitcast i8** %1 to %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"*, !dbg !2251
  %6 = bitcast %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"* %5 to %"std::alloc::AllocError"*, !dbg !2251
  %7 = bitcast i8** %1 to {}**, !dbg !2251
  store {}* null, {}** %7, align 8, !dbg !2251
  br label %bb4, !dbg !2252

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !2253, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2253
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2244, metadata !DIExpression()), !dbg !2254
  store i8* %v, i8** %1, align 8, !dbg !2255
  br label %bb4, !dbg !2256

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !dbg !2257, !range !669
  %9 = trunc i8 %8 to i1, !dbg !2257
  br i1 %9, label %bb6, label %bb5, !dbg !2257

bb5:                                              ; preds = %bb6, %bb4
  %10 = load i8*, i8** %1, align 8, !dbg !2258
  ret i8* %10, !dbg !2258

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2257
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h75cec8057cc6e5f6E"(%"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<usize, std::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 !dbg !2259 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2276, metadata !DIExpression()), !dbg !2280
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err.dbg.spill, i32 0, i32 0
  store i64 %err.0, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err.dbg.spill, i32 0, i32 1
  store i64 %err.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err.dbg.spill, metadata !2277, metadata !DIExpression()), !dbg !2281
  store i8 0, i8* %_7, align 1, !dbg !2282
  store i8 1, i8* %_7, align 1, !dbg !2282
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !2282
  %_3 = load i64, i64* %7, align 8, !dbg !2282, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2283

bb2:                                              ; preds = %start
  unreachable, !dbg !2282

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2284
  %8 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"*, !dbg !2285
  %9 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1, !dbg !2285
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !2285
  store i64 %err.0, i64* %10, align 8, !dbg !2285
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !2285
  store i64 %err.1, i64* %11, align 8, !dbg !2285
  %12 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2285
  store i64 1, i64* %12, align 8, !dbg !2285
  br label %bb4, !dbg !2286

bb3:                                              ; preds = %start
  %13 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2287
  %14 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %13, i32 0, i32 1, !dbg !2287
  %v = load i64, i64* %14, align 8, !dbg !2287
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2287
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2278, metadata !DIExpression()), !dbg !2288
  %15 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"*, !dbg !2289
  %16 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"* %15, i32 0, i32 1, !dbg !2289
  store i64 %v, i64* %16, align 8, !dbg !2289
  %17 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2289
  store i64 0, i64* %17, align 8, !dbg !2289
  br label %bb4, !dbg !2290

bb4:                                              ; preds = %bb1, %bb3
  %18 = load i8, i8* %_7, align 1, !dbg !2291, !range !669
  %19 = trunc i8 %18 to i1, !dbg !2291
  br i1 %19, label %bb6, label %bb5, !dbg !2291

bb5:                                              ; preds = %bb6, %bb4
  ret void, !dbg !2292

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2291
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9e999bc306c8c66aE"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2293 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2310, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %err.dbg.spill, metadata !2311, metadata !DIExpression()), !dbg !2315
  store i8 0, i8* %_7, align 1, !dbg !2316
  store i8 1, i8* %_7, align 1, !dbg !2316
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2316
  %_3 = load i64, i64* %5, align 8, !dbg !2316, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2317

bb2:                                              ; preds = %start
  unreachable, !dbg !2316

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2318
  %6 = bitcast { i64, i64 }* %2 to %"std::result::Result<usize, std::alloc::LayoutError>::Err"*, !dbg !2319
  %7 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Err", %"std::result::Result<usize, std::alloc::LayoutError>::Err"* %6, i32 0, i32 1, !dbg !2319
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !2319
  store i64 1, i64* %8, align 8, !dbg !2319
  br label %bb4, !dbg !2320

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2321
  %10 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %9, i32 0, i32 1, !dbg !2321
  %v = load i64, i64* %10, align 8, !dbg !2321
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2321
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2312, metadata !DIExpression()), !dbg !2322
  %11 = bitcast { i64, i64 }* %2 to %"std::result::Result<usize, std::alloc::LayoutError>::Ok"*, !dbg !2323
  %12 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Ok", %"std::result::Result<usize, std::alloc::LayoutError>::Ok"* %11, i32 0, i32 1, !dbg !2323
  store i64 %v, i64* %12, align 8, !dbg !2323
  %13 = bitcast { i64, i64 }* %2 to i64*, !dbg !2323
  store i64 0, i64* %13, align 8, !dbg !2323
  br label %bb4, !dbg !2324

bb4:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !dbg !2325, !range !669
  %15 = trunc i8 %14 to i1, !dbg !2325
  br i1 %15, label %bb6, label %bb5, !dbg !2325

bb5:                                              ; preds = %bb6, %bb4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2326
  %17 = load i64, i64* %16, align 8, !dbg !2326, !range !1202
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2326
  %19 = load i64, i64* %18, align 8, !dbg !2326
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !2326
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !2326
  ret { i64, i64 } %21, !dbg !2326

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2325
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h57e4f65c536141c1E"(i64 %0, i64 %1, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 !dbg !2327 {
start:
  %val.dbg.spill = alloca i64, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2331, metadata !DIExpression()), !dbg !2335
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !2332, metadata !DIExpression()), !dbg !2336
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !2337
  %_3 = load i64, i64* %7, align 8, !dbg !2337, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2338

bb2:                                              ; preds = %start
  unreachable, !dbg !2337

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hc7542e6963b38cc8E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %2), !dbg !2339
  unreachable, !dbg !2339

bb3:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2340
  %9 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %8, i32 0, i32 1, !dbg !2340
  %val = load i64, i64* %9, align 8, !dbg !2340
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2340
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2333, metadata !DIExpression()), !dbg !2341
  ret i64 %val, !dbg !2342
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h342793af43b424cdE"(i64 %0, i64 %1, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 !dbg !2343 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca i64*, align 8
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2352, metadata !DIExpression()), !dbg !2359
  store i64* %f, i64** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !2353, metadata !DIExpression()), !dbg !2360
  store i8 0, i8* %_8, align 1, !dbg !2361
  store i8 1, i8* %_8, align 1, !dbg !2361
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2361
  %_3 = load i64, i64* %5, align 8, !dbg !2361, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2362

bb2:                                              ; preds = %start
  unreachable, !dbg !2361

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !2363
  store i64 0, i64* %6, align 8, !dbg !2363
  br label %bb7, !dbg !2363

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2364
  %8 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %7, i32 0, i32 1, !dbg !2364
  %x = load i64, i64* %8, align 8, !dbg !2364
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !2364
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !2354, metadata !DIExpression()), !dbg !2365
  store i8 0, i8* %_8, align 1, !dbg !2366
  store i64 %x, i64* %_6, align 8, !dbg !2366
  %9 = load i64, i64* %_6, align 8, !dbg !2366
; call base64::encode::encoded_size::{{closure}}
  %10 = call { i64, i64 } @"_ZN6base646encode12encoded_size28_$u7b$$u7b$closure$u7d$$u7d$17h6db7cfe2e3285615E"(i64* align 8 dereferenceable(8) %f, i64 %9), !dbg !2366
  store { i64, i64 } %10, { i64, i64 }* %2, align 8, !dbg !2366
  br label %bb4, !dbg !2366

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !2367

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !dbg !2367, !range !669
  %12 = trunc i8 %11 to i1, !dbg !2367
  br i1 %12, label %bb6, label %bb5, !dbg !2367

bb5:                                              ; preds = %bb6, %bb7
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2368
  %14 = load i64, i64* %13, align 8, !dbg !2368, !range !1202
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2368
  %16 = load i64, i64* %15, align 8, !dbg !2368
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !2368
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !2368
  ret { i64, i64 } %18, !dbg !2368

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2367
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h94e65d268d4149fdE"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2369 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs:293:44: 293:64]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2374, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.declare(metadata %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs:293:44: 293:64]"* %f.dbg.spill, metadata !2375, metadata !DIExpression()), !dbg !2381
  store i8 0, i8* %_8, align 1, !dbg !2382
  store i8 1, i8* %_8, align 1, !dbg !2382
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2382
  %_3 = load i64, i64* %5, align 8, !dbg !2382, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2383

bb2:                                              ; preds = %start
  unreachable, !dbg !2382

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !2384
  store i64 0, i64* %6, align 8, !dbg !2384
  br label %bb7, !dbg !2384

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2385
  %8 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %7, i32 0, i32 1, !dbg !2385
  %x = load i64, i64* %8, align 8, !dbg !2385
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !2385
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !2376, metadata !DIExpression()), !dbg !2386
  store i8 0, i8* %_8, align 1, !dbg !2387
  store i64 %x, i64* %_6, align 8, !dbg !2387
  %9 = load i64, i64* %_6, align 8, !dbg !2387
; call base64::encode::encoded_size::{{closure}}
  %10 = call { i64, i64 } @"_ZN6base646encode12encoded_size28_$u7b$$u7b$closure$u7d$$u7d$17h67d94fbfae20557fE"(i64 %9), !dbg !2387
  store { i64, i64 } %10, { i64, i64 }* %2, align 8, !dbg !2387
  br label %bb4, !dbg !2387

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !2388

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !dbg !2388, !range !669
  %12 = trunc i8 %11 to i1, !dbg !2388
  br i1 %12, label %bb6, label %bb5, !dbg !2388

bb5:                                              ; preds = %bb6, %bb7
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2389
  %14 = load i64, i64* %13, align 8, !dbg !2389, !range !1202
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2389
  %16 = load i64, i64* %15, align 8, !dbg !2389
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !2389
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !2389
  ret { i64, i64 } %18, !dbg !2389

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2388
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nounwind
define i72 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17ha0c0183fc4cc3207E"(i8* align 1 dereferenceable_or_null(8) %0) unnamed_addr #0 !dbg !2390 {
start:
  %1 = alloca i64, align 8
  %t.dbg.spill = alloca [8 x i8]*, align 8
  %e.dbg.spill = alloca %"std::array::TryFromSliceError", align 1
  %op.dbg.spill = alloca %"[closure@std::array::<impl std::convert::TryFrom<&[u8]> for [u8; 8]>::try_from::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_7 = alloca i8*, align 8
  %_5 = alloca [8 x i8], align 1
  %2 = alloca %"std::result::Result<[u8; 8], std::array::TryFromSliceError>", align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2394, metadata !DIExpression()), !dbg !2403
  call void @llvm.dbg.declare(metadata %"[closure@std::array::<impl std::convert::TryFrom<&[u8]> for [u8; 8]>::try_from::{closure#0}]"* %op.dbg.spill, metadata !2395, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.declare(metadata %"std::array::TryFromSliceError"* %e.dbg.spill, metadata !2398, metadata !DIExpression()), !dbg !2405
  store i8 0, i8* %_11, align 1, !dbg !2406
  store i8 1, i8* %_11, align 1, !dbg !2406
  %3 = bitcast i8** %self to {}**, !dbg !2406
  %4 = load {}*, {}** %3, align 8, !dbg !2406
  %5 = icmp eq {}* %4, null, !dbg !2406
  %_3 = select i1 %5, i64 1, i64 0, !dbg !2406
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2407

bb2:                                              ; preds = %start
  unreachable, !dbg !2406

bb3:                                              ; preds = %start
  %6 = bitcast i8** %self to [8 x i8]**, !dbg !2408
  %t = load [8 x i8]*, [8 x i8]** %6, align 8, !dbg !2408, !nonnull !4
  store [8 x i8]* %t, [8 x i8]** %t.dbg.spill, align 8, !dbg !2408
  call void @llvm.dbg.declare(metadata [8 x i8]** %t.dbg.spill, metadata !2396, metadata !DIExpression()), !dbg !2409
  store i8 0, i8* %_11, align 1, !dbg !2410
  %7 = bitcast i8** %_7 to [8 x i8]**, !dbg !2410
  store [8 x i8]* %t, [8 x i8]** %7, align 8, !dbg !2410
  %8 = load i8*, i8** %_7, align 8, !dbg !2410, !nonnull !4
  %9 = bitcast i8* %8 to [8 x i8]*, !dbg !2410
; call core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from::{{closure}}
  %10 = call i64 @"_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from28_$u7b$$u7b$closure$u7d$$u7d$17h83050287f4cb8fbdE"([8 x i8]* align 1 dereferenceable(8) %9), !dbg !2410
  store i64 %10, i64* %1, align 8, !dbg !2410
  %11 = bitcast [8 x i8]* %_5 to i8*, !dbg !2410
  %12 = bitcast i64* %1 to i8*, !dbg !2410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %12, i64 8, i1 false), !dbg !2410
  br label %bb4, !dbg !2410

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %2 to %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Err"*, !dbg !2411
  %14 = getelementptr inbounds %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Err", %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Err"* %13, i32 0, i32 1, !dbg !2411
  %15 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %2 to i8*, !dbg !2411
  store i8 1, i8* %15, align 1, !dbg !2411
  br label %bb5, !dbg !2412

bb5:                                              ; preds = %bb4, %bb1
  %16 = load i8, i8* %_11, align 1, !dbg !2413, !range !669
  %17 = trunc i8 %16 to i1, !dbg !2413
  br i1 %17, label %bb7, label %bb6, !dbg !2413

bb4:                                              ; preds = %bb3
  %18 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %2 to %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok"*, !dbg !2414
  %19 = getelementptr inbounds %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok", %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok"* %18, i32 0, i32 1, !dbg !2414
  %20 = bitcast [8 x i8]* %19 to i8*, !dbg !2414
  %21 = bitcast [8 x i8]* %_5 to i8*, !dbg !2414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 8, i1 false), !dbg !2414
  %22 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %2 to i8*, !dbg !2414
  store i8 0, i8* %22, align 1, !dbg !2414
  br label %bb5, !dbg !2415

bb6:                                              ; preds = %bb7, %bb5
  %23 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %2 to i72*, !dbg !2416
  %24 = load i72, i72* %23, align 1, !dbg !2416
  ret i72 %24, !dbg !2416

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2413
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h620d377fa2cc28a2E"(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2417 {
start:
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e = alloca %"std::str::Utf8Error", align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<&str, std::str::Utf8Error>"* %self, metadata !2435, metadata !DIExpression()), !dbg !2441
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !2436, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.declare(metadata %"std::str::Utf8Error"* %e, metadata !2439, metadata !DIExpression()), !dbg !2443
  %3 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to i64*, !dbg !2444
  %_3 = load i64, i64* %3, align 8, !dbg !2444, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2445

bb2:                                              ; preds = %start
  unreachable, !dbg !2444

bb3:                                              ; preds = %start
  %4 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to %"std::result::Result<&str, std::str::Utf8Error>::Ok"*, !dbg !2446
  %5 = getelementptr inbounds %"std::result::Result<&str, std::str::Utf8Error>::Ok", %"std::result::Result<&str, std::str::Utf8Error>::Ok"* %4, i32 0, i32 1, !dbg !2446
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !2446
  %t.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !2446, !nonnull !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !2446
  %t.1 = load i64, i64* %7, align 8, !dbg !2446
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2446
  store [0 x i8]* %t.0, [0 x i8]** %8, align 8, !dbg !2446
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2446
  store i64 %t.1, i64* %9, align 8, !dbg !2446
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !2437, metadata !DIExpression()), !dbg !2447
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %t.0, 0, !dbg !2448
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %t.1, 1, !dbg !2448
  ret { [0 x i8]*, i64 } %11, !dbg !2448

bb1:                                              ; preds = %start
  %12 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to %"std::result::Result<&str, std::str::Utf8Error>::Err"*, !dbg !2449
  %13 = getelementptr inbounds %"std::result::Result<&str, std::str::Utf8Error>::Err", %"std::result::Result<&str, std::str::Utf8Error>::Err"* %12, i32 0, i32 1, !dbg !2449
  %14 = bitcast %"std::str::Utf8Error"* %e to i8*, !dbg !2449
  %15 = bitcast %"std::str::Utf8Error"* %13 to i8*, !dbg !2449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false), !dbg !2449
  %_6.0 = bitcast %"std::str::Utf8Error"* %e to {}*, !dbg !2450
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2451
  unreachable, !dbg !2451
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h24feb326e3ba8f0cE"(i72 %0, %"std::panic::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 !dbg !2452 {
start:
  %e = alloca %"std::array::TryFromSliceError", align 1
  %t = alloca [8 x i8], align 1
  %2 = alloca i72, align 8
  %self = alloca %"std::result::Result<[u8; 8], std::array::TryFromSliceError>", align 1
  store i72 %0, i72* %2, align 8
  %3 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %self to i8*
  %4 = bitcast i72* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %4, i64 9, i1 false)
  call void @llvm.dbg.declare(metadata [8 x i8]* %t, metadata !2457, metadata !DIExpression()), !dbg !2461
  call void @llvm.dbg.declare(metadata %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %self, metadata !2456, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.declare(metadata %"std::array::TryFromSliceError"* %e, metadata !2459, metadata !DIExpression()), !dbg !2463
  %5 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %self to i8*, !dbg !2464
  %6 = load i8, i8* %5, align 1, !dbg !2464, !range !669
  %7 = trunc i8 %6 to i1, !dbg !2464
  %_2 = zext i1 %7 to i64, !dbg !2464
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2465

bb2:                                              ; preds = %start
  unreachable, !dbg !2464

bb3:                                              ; preds = %start
  %8 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %self to %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok"*, !dbg !2466
  %9 = getelementptr inbounds %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok", %"std::result::Result<[u8; 8], std::array::TryFromSliceError>::Ok"* %8, i32 0, i32 1, !dbg !2466
  %10 = bitcast [8 x i8]* %t to i8*, !dbg !2466
  %11 = bitcast [8 x i8]* %9 to i8*, !dbg !2466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 8, i1 false), !dbg !2466
  %12 = bitcast [8 x i8]* %t to i64*, !dbg !2467
  %13 = load i64, i64* %12, align 1, !dbg !2467
  ret i64 %13, !dbg !2467

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::array::TryFromSliceError"* %e to {}*, !dbg !2468
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc605 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*), %"std::panic::Location"* align 8 dereferenceable(24) %1), !dbg !2469
  unreachable, !dbg !2469
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h30a0b31dcf695d90E"(i64 %0, i64 %1, %"std::panic::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 !dbg !2470 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e = alloca %"std::alloc::LayoutError", align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2474, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e, metadata !2477, metadata !DIExpression()), !dbg !2480
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2481
  %6 = load i64, i64* %5, align 8, !dbg !2481
  %7 = icmp eq i64 %6, 0, !dbg !2481
  %_2 = select i1 %7, i64 1, i64 0, !dbg !2481
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2482

bb2:                                              ; preds = %start
  unreachable, !dbg !2481

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2483
  %t.0 = load i64, i64* %8, align 8, !dbg !2483
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2483
  %t.1 = load i64, i64* %9, align 8, !dbg !2483, !range !1284
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2483
  store i64 %t.0, i64* %10, align 8, !dbg !2483
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2483
  store i64 %t.1, i64* %11, align 8, !dbg !2483
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2475, metadata !DIExpression()), !dbg !2484
  %12 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2485
  %13 = insertvalue { i64, i64 } %12, i64 %t.1, 1, !dbg !2485
  ret { i64, i64 } %13, !dbg !2485

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::alloc::LayoutError"* %e to {}*, !dbg !2486
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc605 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), %"std::panic::Location"* align 8 dereferenceable(24) %2), !dbg !2487
  unreachable, !dbg !2487
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hb84fb383a45a1a1fE"(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture dereferenceable(24) %self, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2488 {
start:
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e = alloca %"std::str::Utf8Error", align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<&str, std::str::Utf8Error>"* %self, metadata !2492, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.declare(metadata %"std::str::Utf8Error"* %e, metadata !2495, metadata !DIExpression()), !dbg !2498
  %1 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to i64*, !dbg !2499
  %_2 = load i64, i64* %1, align 8, !dbg !2499, !range !1202
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2500

bb2:                                              ; preds = %start
  unreachable, !dbg !2499

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to %"std::result::Result<&str, std::str::Utf8Error>::Ok"*, !dbg !2501
  %3 = getelementptr inbounds %"std::result::Result<&str, std::str::Utf8Error>::Ok", %"std::result::Result<&str, std::str::Utf8Error>::Ok"* %2, i32 0, i32 1, !dbg !2501
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !2501
  %t.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !dbg !2501, !nonnull !4
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !2501
  %t.1 = load i64, i64* %5, align 8, !dbg !2501
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2501
  store [0 x i8]* %t.0, [0 x i8]** %6, align 8, !dbg !2501
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2501
  store i64 %t.1, i64* %7, align 8, !dbg !2501
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !2493, metadata !DIExpression()), !dbg !2502
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %t.0, 0, !dbg !2503
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %t.1, 1, !dbg !2503
  ret { [0 x i8]*, i64 } %9, !dbg !2503

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to %"std::result::Result<&str, std::str::Utf8Error>::Err"*, !dbg !2504
  %11 = getelementptr inbounds %"std::result::Result<&str, std::str::Utf8Error>::Err", %"std::result::Result<&str, std::str::Utf8Error>::Err"* %10, i32 0, i32 1, !dbg !2504
  %12 = bitcast %"std::str::Utf8Error"* %e to i8*, !dbg !2504
  %13 = bitcast %"std::str::Utf8Error"* %11 to i8*, !dbg !2504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false), !dbg !2504
  %_6.0 = bitcast %"std::str::Utf8Error"* %e to {}*, !dbg !2505
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc605 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2506
  unreachable, !dbg !2506
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h56cc90635870d0f6E"(%"std::result::Result<(), std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !2507 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %self, metadata !2526, metadata !DIExpression()), !dbg !2535
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !2527, metadata !DIExpression()), !dbg !2536
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !2528, metadata !DIExpression()), !dbg !2537
  store i8 0, i8* %_11, align 1, !dbg !2538
  store i8 1, i8* %_11, align 1, !dbg !2538
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to i64*, !dbg !2538
  %_3 = load i64, i64* %1, align 8, !dbg !2538, !range !1202
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2539

bb2:                                              ; preds = %start
  unreachable, !dbg !2538

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok"*, !dbg !2540
  %3 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !2540
  %4 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2540
  store i64 0, i64* %4, align 8, !dbg !2540
  br label %bb5, !dbg !2541

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !2542
  %6 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %5, i32 0, i32 1, !dbg !2542
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !2542
  %e.0 = load i64, i64* %7, align 8, !dbg !2542
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !2542
  %e.1 = load i64, i64* %8, align 8, !dbg !2542
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2542
  store i64 %e.0, i64* %9, align 8, !dbg !2542
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2542
  store i64 %e.1, i64* %10, align 8, !dbg !2542
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2530, metadata !DIExpression()), !dbg !2543
  store i8 0, i8* %_11, align 1, !dbg !2544
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2544
  store i64 %e.0, i64* %11, align 8, !dbg !2544
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2544
  store i64 %e.1, i64* %12, align 8, !dbg !2544
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2544
  %14 = load i64, i64* %13, align 8, !dbg !2544
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2544
  %16 = load i64, i64* %15, align 8, !dbg !2544
; call alloc::raw_vec::handle_reserve::{{closure}}
  %17 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hd123aeda357833bdE"(i64 %14, i64 %16), !dbg !2544
  %_7.0 = extractvalue { i64, i64 } %17, 0, !dbg !2544
  %_7.1 = extractvalue { i64, i64 } %17, 1, !dbg !2544
  br label %bb4, !dbg !2544

bb4:                                              ; preds = %bb1
  %18 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !2545
  %19 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %18, i32 0, i32 1, !dbg !2545
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !2545
  store i64 %_7.0, i64* %20, align 8, !dbg !2545
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !2545
  store i64 %_7.1, i64* %21, align 8, !dbg !2545
  %22 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2545
  store i64 1, i64* %22, align 8, !dbg !2545
  br label %bb5, !dbg !2546

bb5:                                              ; preds = %bb3, %bb4
  %23 = load i8, i8* %_11, align 1, !dbg !2547, !range !669
  %24 = trunc i8 %23 to i1, !dbg !2547
  br i1 %24, label %bb7, label %bb6, !dbg !2547

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2548

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2547
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17heaafb5592dcec240E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 !dbg !2549 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"std::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !2557, metadata !DIExpression()), !dbg !2565
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !2558, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !2561, metadata !DIExpression()), !dbg !2567
  store i8 0, i8* %_11, align 1, !dbg !2568
  store i8 1, i8* %_11, align 1, !dbg !2568
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !2568
  %6 = load {}*, {}** %5, align 8, !dbg !2568
  %7 = icmp eq {}* %6, null, !dbg !2568
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2568
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2569

bb2:                                              ; preds = %start
  unreachable, !dbg !2568

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !2570
  %t.0 = load i8*, i8** %8, align 8, !dbg !2570, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2570
  %t.1 = load i64, i64* %9, align 8, !dbg !2570
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2570
  store i8* %t.0, i8** %10, align 8, !dbg !2570
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2570
  store i64 %t.1, i64* %11, align 8, !dbg !2570
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !2559, metadata !DIExpression()), !dbg !2571
  %12 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"*, !dbg !2572
  %13 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !2572
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !2572
  store i8* %t.0, i8** %14, align 8, !dbg !2572
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !2572
  store i64 %t.1, i64* %15, align 8, !dbg !2572
  %16 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !2572
  store i64 0, i64* %16, align 8, !dbg !2572
  br label %bb5, !dbg !2573

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2574
  %17 = bitcast { %"std::alloc::AllocError" }* %_9 to %"std::alloc::AllocError"*, !dbg !2574
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h29083cc2a5f7d6fdE"(i64* align 8 dereferenceable(16) %op), !dbg !2574
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2574
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2574
  br label %bb4, !dbg !2574

bb4:                                              ; preds = %bb1
  %19 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !2575
  %20 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !2575
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2575
  store i64 %_7.0, i64* %21, align 8, !dbg !2575
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2575
  store i64 %_7.1, i64* %22, align 8, !dbg !2575
  %23 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !2575
  store i64 1, i64* %23, align 8, !dbg !2575
  br label %bb5, !dbg !2576

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2577, !range !669
  %25 = trunc i8 %24 to i1, !dbg !2577
  br i1 %25, label %bb7, label %bb6, !dbg !2577

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2578

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2577
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf824c341c5ca14f7E"(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !2579 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"std::alloc::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2597, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !2598, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !2601, metadata !DIExpression()), !dbg !2607
  store i8 0, i8* %_11, align 1, !dbg !2608
  store i8 1, i8* %_11, align 1, !dbg !2608
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2608
  %6 = load i64, i64* %5, align 8, !dbg !2608
  %7 = icmp eq i64 %6, 0, !dbg !2608
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2608
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2609

bb2:                                              ; preds = %start
  unreachable, !dbg !2608

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2610
  %t.0 = load i64, i64* %8, align 8, !dbg !2610
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2610
  %t.1 = load i64, i64* %9, align 8, !dbg !2610, !range !1284
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2610
  store i64 %t.0, i64* %10, align 8, !dbg !2610
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2610
  store i64 %t.1, i64* %11, align 8, !dbg !2610
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2599, metadata !DIExpression()), !dbg !2611
  %12 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"*, !dbg !2612
  %13 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !2612
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2612
  store i64 %t.0, i64* %14, align 8, !dbg !2612
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2612
  store i64 %t.1, i64* %15, align 8, !dbg !2612
  %16 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2612
  store i64 0, i64* %16, align 8, !dbg !2612
  br label %bb5, !dbg !2613

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2614
  %17 = bitcast { %"std::alloc::LayoutError" }* %_9 to %"std::alloc::LayoutError"*, !dbg !2614
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hd783327bfb176413E"(), !dbg !2614
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2614
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2614
  br label %bb4, !dbg !2614

bb4:                                              ; preds = %bb1
  %19 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"*, !dbg !2615
  %20 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !2615
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2615
  store i64 %_7.0, i64* %21, align 8, !dbg !2615
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2615
  store i64 %_7.1, i64* %22, align 8, !dbg !2615
  %23 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2615
  store i64 1, i64* %23, align 8, !dbg !2615
  br label %bb5, !dbg !2616

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2617, !range !669
  %25 = trunc i8 %24 to i1, !dbg !2617
  br i1 %25, label %bb7, label %bb6, !dbg !2617

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2618

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2617
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nounwind
define void @_ZN4core9panicking13assert_failed17h40df432cd6565ea0E(i8 %kind, i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1, %"std::option::Option<std::fmt::Arguments>"* noalias nocapture dereferenceable(48) %args, %"std::panic::Location"* align 8 dereferenceable(24) %2) unnamed_addr #2 !dbg !2619 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_12 = alloca %"std::option::Option<std::fmt::Arguments>", align 8
  %right = alloca i64*, align 8
  %left = alloca i64*, align 8
  store i64* %0, i64** %left, align 8
  store i64* %1, i64** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2636, metadata !DIExpression()), !dbg !2641
  call void @llvm.dbg.declare(metadata i64** %left, metadata !2637, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.declare(metadata i64** %right, metadata !2638, metadata !DIExpression()), !dbg !2643
  call void @llvm.dbg.declare(metadata %"std::option::Option<std::fmt::Arguments>"* %args, metadata !2639, metadata !DIExpression()), !dbg !2644
  %_6.0 = bitcast i64** %left to {}*, !dbg !2645
  %_9.0 = bitcast i64** %right to {}*, !dbg !2646
  %3 = bitcast %"std::option::Option<std::fmt::Arguments>"* %_12 to i8*, !dbg !2647
  %4 = bitcast %"std::option::Option<std::fmt::Arguments>"* %args to i8*, !dbg !2647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2647
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17hb980cfe34185be0eE(i8 %kind, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*), {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*), %"std::option::Option<std::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_12, %"std::panic::Location"* align 8 dereferenceable(24) %2), !dbg !2648
  unreachable, !dbg !2648
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h19eff3d6610a01acE"() unnamed_addr #1 !dbg !2649 {
start:
  %t.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %t.dbg.spill, metadata !2655, metadata !DIExpression()), !dbg !2656
  ret void, !dbg !2657
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4a57be64dba231c9E"() unnamed_addr #1 !dbg !2658 {
start:
  %t.dbg.spill = alloca %"std::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %t.dbg.spill, metadata !2662, metadata !DIExpression()), !dbg !2665
  ret void, !dbg !2666
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h563240e1381f8ccaE"() unnamed_addr #1 !dbg !2667 {
start:
  %t.dbg.spill = alloca %"std::fmt::Error", align 1
  call void @llvm.dbg.declare(metadata %"std::fmt::Error"* %t.dbg.spill, metadata !2671, metadata !DIExpression()), !dbg !2674
  ret void, !dbg !2675
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hff23e38d31e42dfeE"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !2676 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2680, metadata !DIExpression()), !dbg !2683
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2684
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !2684
  ret { i64, i64 } %3, !dbg !2684
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1e25107d500986d6E"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2685 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2688, metadata !DIExpression()), !dbg !2692
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h7c35ac9202f87533E"(i64 %self.0, i64 %self.1), !dbg !2693
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !2693
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !2693
  br label %bb1, !dbg !2693

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2694
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !2694
  ret { i64, i64 } %6, !dbg !2694
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nounwind
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3d7093146eb41820E"(i8* nonnull %self) unnamed_addr #1 !dbg !2695 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2697, metadata !DIExpression()), !dbg !2701
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h99883b75b91a7081E"(i8* nonnull %self), !dbg !2702
  br label %bb1, !dbg !2702

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2703
}

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: nounwind
define i72 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h8a1e94ac34abf8afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2704 {
start:
  %0 = alloca i72, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"std::result::Result<[u8; 8], std::array::TryFromSliceError>", align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2707, metadata !DIExpression()), !dbg !2710
; call core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from
  %4 = call i72 @"_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17h775279382fad47f5E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2711
  store i72 %4, i72* %0, align 8, !dbg !2711
  %5 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %1 to i8*, !dbg !2711
  %6 = bitcast i72* %0 to i8*, !dbg !2711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 8 %6, i64 9, i1 false), !dbg !2711
  br label %bb1, !dbg !2711

bb1:                                              ; preds = %start
  %7 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %1 to i72*, !dbg !2712
  %8 = load i72, i72* %7, align 1, !dbg !2712
  ret i72 %8, !dbg !2712
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h4eaf909971c165c7E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2713 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2718, metadata !DIExpression()), !dbg !2719
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h2366f127084da3c7E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2720
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !2720
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !2720
  br label %bb1, !dbg !2720

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !2721
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !2721
  ret { i64, i64 } %4, !dbg !2721
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hbdfdbad8ee616e3dE"(%"std::vec::Vec<u8>"* noalias nocapture sret(%"std::vec::Vec<u8>") dereferenceable(24) %0) unnamed_addr #0 !dbg !2722 {
start:
  %1 = bitcast %"std::vec::Vec<u8>"* %0 to { i8*, i64 }*, !dbg !2726
  %2 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !2726, !nonnull !4
  %3 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !2726
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !2726
  store i8* %2, i8** %4, align 8, !dbg !2726
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !2726
  store i64 %3, i64* %5, align 8, !dbg !2726
  %6 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %0, i32 0, i32 1, !dbg !2726
  store i64 0, i64* %6, align 8, !dbg !2726
  ret void, !dbg !2727
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h915d4f9ff0fbaca9E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2728 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<u8>"*, align 8
  store %"std::vec::Vec<u8>"* %self, %"std::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<u8>"** %self.dbg.spill, metadata !2732, metadata !DIExpression()), !dbg !2735
  %_2 = bitcast %"std::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2736
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf1183ce48bc9b222E"({ i8*, i64 }* align 8 dereferenceable(16) %_2), !dbg !2736
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2736
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2733, metadata !DIExpression()), !dbg !2737
  br label %bb1, !dbg !2736

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1f9b252d562c3132E"(i8* %ptr), !dbg !2738
  br label %bb2, !dbg !2738

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true, !dbg !2739
  call void @llvm.assume(i1 %_4), !dbg !2740
  br label %bb3, !dbg !2740

bb3:                                              ; preds = %bb2
  ret i8* %ptr, !dbg !2741
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hec3f55b8c142a6c0E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 !dbg !2742 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<u8>"*, align 8
  store %"std::vec::Vec<u8>"* %self, %"std::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<u8>"** %self.dbg.spill, metadata !2746, metadata !DIExpression()), !dbg !2752
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2747, metadata !DIExpression()), !dbg !2753
  store i64 %other.1, i64* %count.dbg.spill, align 8, !dbg !2754
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2748, metadata !DIExpression()), !dbg !2755
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h032d8606687b5a6dE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %other.1), !dbg !2756
  br label %bb1, !dbg !2756

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hdf1c07633a954033E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self), !dbg !2757
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2757
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2750, metadata !DIExpression()), !dbg !2758
  br label %bb2, !dbg !2757

bb2:                                              ; preds = %bb1
  %_11 = bitcast [0 x i8]* %other.0 to i8*, !dbg !2759
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h915d4f9ff0fbaca9E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self), !dbg !2760
  br label %bb3, !dbg !2760

bb3:                                              ; preds = %bb2
  store i8* %_14, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !184, metadata !DIExpression()), !dbg !2761
  store i64 %len, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !190, metadata !DIExpression()), !dbg !2763
  store i8* %_14, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !194, metadata !DIExpression()), !dbg !2764
  store i64 %len, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !199, metadata !DIExpression()), !dbg !2766
  %3 = getelementptr inbounds i8, i8* %_14, i64 %len, !dbg !2767
  store i8* %3, i8** %0, align 8, !dbg !2767
  %_3.i.i = load i8*, i8** %0, align 8, !dbg !2767
  br label %bb4, !dbg !2760

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h1b004e6041875ef7E(i8* %_11, i8* %_3.i.i, i64 %other.1), !dbg !2768
  br label %bb5, !dbg !2768

bb5:                                              ; preds = %bb4
  %4 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2769
  %5 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2769
  %6 = load i64, i64* %5, align 8, !dbg !2769
  %7 = add i64 %6, %other.1, !dbg !2769
  store i64 %7, i64* %4, align 8, !dbg !2769
  ret void, !dbg !2770
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17heb35d8c4afc6b2fdE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !2771 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<u8>"*, align 8
  store %"std::vec::Vec<u8>"* %self, %"std::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<u8>"** %self.dbg.spill, metadata !2775, metadata !DIExpression()), !dbg !2777
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2776, metadata !DIExpression()), !dbg !2778
; call core::slice::<impl [T]>::iter
  %2 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hac4a531d961be437E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1), !dbg !2779
  %_4.0 = extractvalue { i8*, i8* } %2, 0, !dbg !2779
  %_4.1 = extractvalue { i8*, i8* } %2, 1, !dbg !2779
  br label %bb1, !dbg !2779

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17heb625a0bacfbfb97E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* nonnull %_4.0, i8* %_4.1), !dbg !2780
  br label %bb2, !dbg !2780

bb2:                                              ; preds = %bb1
  ret void, !dbg !2781
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hdf1c07633a954033E"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2782 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<u8>"*, align 8
  store %"std::vec::Vec<u8>"* %self, %"std::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<u8>"** %self.dbg.spill, metadata !2787, metadata !DIExpression()), !dbg !2788
  %0 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2789
  %1 = load i64, i64* %0, align 8, !dbg !2789
  ret i64 %1, !dbg !2790
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h032d8606687b5a6dE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 !dbg !2791 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<u8>"*, align 8
  store %"std::vec::Vec<u8>"* %self, %"std::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<u8>"** %self.dbg.spill, metadata !2795, metadata !DIExpression()), !dbg !2797
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2796, metadata !DIExpression()), !dbg !2798
  %_4 = bitcast %"std::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2799
  %0 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !2800
  %_5 = load i64, i64* %0, align 8, !dbg !2800
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h73529b1a11a28a37E"({ i8*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional), !dbg !2799
  br label %bb1, !dbg !2799

bb1:                                              ; preds = %start
  ret void, !dbg !2801
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17hb397420605ad409eE(i64 %0, i64 %1) unnamed_addr #0 !dbg !2802 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2807, metadata !DIExpression()), !dbg !2808
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2809
  br label %bb1, !dbg !2809

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2810
  br label %bb2, !dbg !2810

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4), !dbg !2811
  br label %bb3, !dbg !2811

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2812
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc5alloc17h2a2edc77c15269e2E(i64 %0, i64 %1) unnamed_addr #0 !dbg !2813 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2815, metadata !DIExpression()), !dbg !2816
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2817
  br label %bb1, !dbg !2817

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2818
  br label %bb2, !dbg !2818

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4), !dbg !2819
  br label %bb3, !dbg !2819

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2820
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc99a6dc20dd53f8eE(%"std::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2821 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !2826, metadata !DIExpression()), !dbg !2839
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2827, metadata !DIExpression()), !dbg !2840
  %5 = zext i1 %zeroed to i8
  store i8 %5, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2828, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !2831, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2835, metadata !DIExpression()), !dbg !2843
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2844
  br label %bb1, !dbg !2844

bb1:                                              ; preds = %start
  %6 = icmp eq i64 %_4, 0, !dbg !2845
  br i1 %6, label %bb3, label %bb2, !dbg !2845

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17hd9dc7e269411dacaE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2846
  br label %bb4, !dbg !2846

bb2:                                              ; preds = %bb1
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !2847
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2829, metadata !DIExpression()), !dbg !2848
  br i1 %zeroed, label %bb6, label %bb8, !dbg !2849

bb8:                                              ; preds = %bb2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2850
  %_13.0 = load i64, i64* %7, align 8, !dbg !2850
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2850
  %_13.1 = load i64, i64* %8, align 8, !dbg !2850, !range !1284
; call alloc::alloc::alloc
  %9 = call i8* @_ZN5alloc5alloc5alloc17h2a2edc77c15269e2E(i64 %_13.0, i64 %_13.1), !dbg !2851
  store i8* %9, i8** %raw_ptr, align 8, !dbg !2851
  br label %bb9, !dbg !2851

bb6:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2852
  %_12.0 = load i64, i64* %10, align 8, !dbg !2852
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2852
  %_12.1 = load i64, i64* %11, align 8, !dbg !2852, !range !1284
; call alloc::alloc::alloc_zeroed
  %12 = call i8* @_ZN5alloc5alloc12alloc_zeroed17hb397420605ad409eE(i64 %_12.0, i64 %_12.1), !dbg !2853
  store i8* %12, i8** %raw_ptr, align 8, !dbg !2853
  br label %bb7, !dbg !2853

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !2854

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !2855
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h349bd3bee514206bE"(i8* %_18), !dbg !2856
  br label %bb11, !dbg !2856

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !2854

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h41060ee3aa6261a6E"(i8* %_17), !dbg !2856
  br label %bb12, !dbg !2856

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %13 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eb1432c9029ceffE"(i8* %_16), !dbg !2856
  store i8* %13, i8** %_15, align 8, !dbg !2856
  br label %bb13, !dbg !2856

bb13:                                             ; preds = %bb12
  %14 = bitcast i8** %_15 to {}**, !dbg !2856
  %15 = load {}*, {}** %14, align 8, !dbg !2856
  %16 = icmp eq {}* %15, null, !dbg !2856
  %_20 = select i1 %16, i64 1, i64 0, !dbg !2856
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ], !dbg !2856

bb15:                                             ; preds = %bb13
  unreachable, !dbg !2856

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !dbg !2856, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2856
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2837, metadata !DIExpression()), !dbg !2857
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !2857
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2833, metadata !DIExpression()), !dbg !2858
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %17 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hd438f0971ae73bbfE"(i8* nonnull %val, i64 %_4), !dbg !2859
  %_24.0 = extractvalue { i8*, i64 } %17, 0, !dbg !2859
  %_24.1 = extractvalue { i8*, i64 } %17, 1, !dbg !2859
  br label %bb18, !dbg !2859

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h051f26f94fd4eb93E"(), !dbg !2860
  store { i8*, i64 } %18, { i8*, i64 }* %2, align 8, !dbg !2860
  br label %bb17, !dbg !2860

bb17:                                             ; preds = %bb16
  br label %bb20, !dbg !2861

bb20:                                             ; preds = %bb19, %bb17
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2861
  %20 = load i8*, i8** %19, align 8, !dbg !2861
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2861
  %22 = load i64, i64* %21, align 8, !dbg !2861
  %23 = insertvalue { i8*, i64 } undef, i8* %20, 0, !dbg !2861
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1, !dbg !2861
  ret { i8*, i64 } %24, !dbg !2861

bb18:                                             ; preds = %bb14
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2862
  store i8* %_24.0, i8** %25, align 8, !dbg !2862
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2862
  store i64 %_24.1, i64* %26, align 8, !dbg !2862
  br label %bb19, !dbg !2863

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20, !dbg !2861

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %27 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hd438f0971ae73bbfE"(i8* nonnull %_7, i64 0), !dbg !2864
  %_6.0 = extractvalue { i8*, i64 } %27, 0, !dbg !2864
  %_6.1 = extractvalue { i8*, i64 } %27, 1, !dbg !2864
  br label %bb5, !dbg !2864

bb5:                                              ; preds = %bb4
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2865
  store i8* %_6.0, i8** %28, align 8, !dbg !2865
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2865
  store i64 %_6.1, i64* %29, align 8, !dbg !2865
  br label %bb19, !dbg !2866
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h4fd0747ea7453b42E(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2867 {
start:
  %count.dbg.spill.i7 = alloca i64, align 8
  %val.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i8 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill6 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill5 = alloca i64, align 8
  %ptr.dbg.spill3 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %old_size.dbg.spill2 = alloca i64, align 8
  %old_size.dbg.spill = alloca i64*, align 8
  %residual.dbg.spill1 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !2871, metadata !DIExpression()), !dbg !2897
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2872, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !2873, metadata !DIExpression()), !dbg !2899
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !2874, metadata !DIExpression()), !dbg !2900
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2875, metadata !DIExpression()), !dbg !2901
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2885, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill1, metadata !2893, metadata !DIExpression()), !dbg !2903
; call core::alloc::layout::Layout::size
  %11 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2904
  store i64 %11, i64* %_6, align 8, !dbg !2904
  br label %bb1, !dbg !2904

bb1:                                              ; preds = %start
  %12 = load i64, i64* %_6, align 8, !dbg !2905
  %13 = icmp eq i64 %12, 0, !dbg !2905
  br i1 %13, label %bb2, label %bb4, !dbg !2905

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2906
  %_9.0 = load i64, i64* %14, align 8, !dbg !2906
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2906
  %_9.1 = load i64, i64* %15, align 8, !dbg !2906, !range !1284
; call alloc::alloc::Global::alloc_impl
  %16 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc99a6dc20dd53f8eE(%"std::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed), !dbg !2907
  store { i8*, i64 } %16, { i8*, i64 }* %5, align 8, !dbg !2907
  br label %bb3, !dbg !2907

bb4:                                              ; preds = %bb1
  store i64* %_6, i64** %old_size.dbg.spill, align 8, !dbg !2908
  call void @llvm.dbg.declare(metadata i64** %old_size.dbg.spill, metadata !2878, metadata !DIExpression()), !dbg !2909
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2910
  br label %bb5, !dbg !2910

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !2911
  br label %bb6, !dbg !2911

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16, !dbg !2910
  br i1 %_13, label %bb7, label %bb8, !dbg !2910

bb8:                                              ; preds = %bb6
  %old_size4 = load i64, i64* %_6, align 8, !dbg !2912
  store i64 %old_size4, i64* %old_size.dbg.spill5, align 8, !dbg !2912
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill5, metadata !2889, metadata !DIExpression()), !dbg !2913
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2914
  %_56.0 = load i64, i64* %17, align 8, !dbg !2914
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2914
  %_56.1 = load i64, i64* %18, align 8, !dbg !2914, !range !1284
; call alloc::alloc::Global::alloc_impl
  %19 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc99a6dc20dd53f8eE(%"std::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed), !dbg !2915
  %_54.0 = extractvalue { i8*, i64 } %19, 0, !dbg !2915
  %_54.1 = extractvalue { i8*, i64 } %19, 1, !dbg !2915
  br label %bb26, !dbg !2915

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8, !dbg !2908
  store i64 %old_size, i64* %old_size.dbg.spill2, align 8, !dbg !2908
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill2, metadata !2876, metadata !DIExpression()), !dbg !2909
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !2916
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !2916
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !2879, metadata !DIExpression()), !dbg !2917
  br label %bb9, !dbg !2916

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2918
  br label %bb10, !dbg !2918

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23, !dbg !2919
  call void @llvm.assume(i1 %_21), !dbg !2920
  br label %bb11, !dbg !2920

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %ptr), !dbg !2921
  br label %bb12, !dbg !2921

bb12:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2922
  %_28.0 = load i64, i64* %20, align 8, !dbg !2922
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2922
  %_28.1 = load i64, i64* %21, align 8, !dbg !2922, !range !1284
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h52d43d327aca9338E(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size), !dbg !2923
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !2923
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !2881, metadata !DIExpression()), !dbg !2924
  br label %bb13, !dbg !2923

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h349bd3bee514206bE"(i8* %raw_ptr), !dbg !2925
  br label %bb14, !dbg !2925

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h41060ee3aa6261a6E"(i8* %_33), !dbg !2925
  br label %bb15, !dbg !2925

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %22 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eb1432c9029ceffE"(i8* %_32), !dbg !2925
  store i8* %22, i8** %_31, align 8, !dbg !2925
  br label %bb16, !dbg !2925

bb16:                                             ; preds = %bb15
  %23 = bitcast i8** %_31 to {}**, !dbg !2925
  %24 = load {}*, {}** %23, align 8, !dbg !2925
  %25 = icmp eq {}* %24, null, !dbg !2925
  %_36 = select i1 %25, i64 1, i64 0, !dbg !2925
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !2925

bb18:                                             ; preds = %bb16
  unreachable, !dbg !2925

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !dbg !2925, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2925
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2887, metadata !DIExpression()), !dbg !2926
  store i8* %val, i8** %ptr.dbg.spill3, align 8, !dbg !2926
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill3, metadata !2883, metadata !DIExpression()), !dbg !2927
  br i1 %zeroed, label %bb21, label %bb24, !dbg !2928

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %26 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h051f26f94fd4eb93E"(), !dbg !2929
  store { i8*, i64 } %26, { i8*, i64 }* %5, align 8, !dbg !2929
  br label %bb20, !dbg !2929

bb20:                                             ; preds = %bb19
  br label %bb37, !dbg !2930

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38, !dbg !2932

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %27 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hd438f0971ae73bbfE"(i8* nonnull %val, i64 %new_size), !dbg !2933
  %_48.0 = extractvalue { i8*, i64 } %27, 0, !dbg !2933
  %_48.1 = extractvalue { i8*, i64 } %27, 1, !dbg !2933
  br label %bb25, !dbg !2933

bb21:                                             ; preds = %bb17
  store i8* %raw_ptr, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !184, metadata !DIExpression()), !dbg !2934
  store i64 %old_size, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !190, metadata !DIExpression()), !dbg !2936
  store i8* %raw_ptr, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !194, metadata !DIExpression()), !dbg !2937
  store i64 %old_size, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !199, metadata !DIExpression()), !dbg !2939
  %28 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size, !dbg !2940
  store i8* %28, i8** %4, align 8, !dbg !2940
  %_3.i.i = load i8*, i8** %4, align 8, !dbg !2940
  br label %bb22, !dbg !2941

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size, !dbg !2942
  store i8* %_3.i.i, i8** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i8, metadata !2943, metadata !DIExpression()) #12, !dbg !2948
  store i8 0, i8* %val.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill.i, metadata !2946, metadata !DIExpression()) #12, !dbg !2950
  store i64 %_45, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !2947, metadata !DIExpression()) #12, !dbg !2951
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h24882474a550ec7eE(i8* %_3.i.i, i8 0, i64 %_45) #12, !dbg !2952
  br label %bb23, !dbg !2941

bb23:                                             ; preds = %bb22
  br label %bb24, !dbg !2953

bb25:                                             ; preds = %bb24
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2954
  store i8* %_48.0, i8** %29, align 8, !dbg !2954
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2954
  store i64 %_48.1, i64* %30, align 8, !dbg !2954
  br label %bb36, !dbg !2955

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38, !dbg !2932

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %31 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc8a595b640c8fdfdE"(i8* %_54.0, i64 %_54.1), !dbg !2915
  store { i8*, i64 } %31, { i8*, i64 }* %_53, align 8, !dbg !2915
  br label %bb27, !dbg !2915

bb27:                                             ; preds = %bb26
  %32 = bitcast { i8*, i64 }* %_53 to {}**, !dbg !2915
  %33 = load {}*, {}** %32, align 8, !dbg !2915
  %34 = icmp eq {}* %33, null, !dbg !2915
  %_58 = select i1 %34, i64 1, i64 0, !dbg !2915
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ], !dbg !2915

bb29:                                             ; preds = %bb27
  unreachable, !dbg !2915

bb28:                                             ; preds = %bb27
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0, !dbg !2915
  %val.0 = load i8*, i8** %35, align 8, !dbg !2915, !nonnull !4
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1, !dbg !2915
  %val.1 = load i64, i64* %36, align 8, !dbg !2915
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 0, !dbg !2915
  store i8* %val.0, i8** %37, align 8, !dbg !2915
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 1, !dbg !2915
  store i64 %val.1, i64* %38, align 8, !dbg !2915
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill6, metadata !2895, metadata !DIExpression()), !dbg !2956
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !2956
  store i8* %val.0, i8** %39, align 8, !dbg !2956
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !2956
  store i64 %val.1, i64* %40, align 8, !dbg !2956
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !2891, metadata !DIExpression()), !dbg !2957
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %ptr), !dbg !2958
  br label %bb32, !dbg !2958

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h051f26f94fd4eb93E"(), !dbg !2959
  store { i8*, i64 } %41, { i8*, i64 }* %5, align 8, !dbg !2959
  br label %bb31, !dbg !2959

bb31:                                             ; preds = %bb30
  br label %bb37, !dbg !2930

bb38:                                             ; preds = %bb36, %bb37
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2932
  %43 = load i8*, i8** %42, align 8, !dbg !2932
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2932
  %45 = load i64, i64* %44, align 8, !dbg !2932
  %46 = insertvalue { i8*, i64 } undef, i8* %43, 0, !dbg !2932
  %47 = insertvalue { i8*, i64 } %46, i64 %45, 1, !dbg !2932
  ret { i8*, i64 } %47, !dbg !2932

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h4188c478b7037b90E"(i8* nonnull %val.0, i64 %val.1), !dbg !2960
  br label %bb33, !dbg !2960

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h1b004e6041875ef7E(i8* %_64, i8* %_66, i64 %old_size4), !dbg !2961
  br label %bb34, !dbg !2961

bb34:                                             ; preds = %bb33
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2962
  %_72.0 = load i64, i64* %48, align 8, !dbg !2962
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2962
  %_72.1 = load i64, i64* %49, align 8, !dbg !2962, !range !1284
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h958b856d17a62832E"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1), !dbg !2963
  br label %bb35, !dbg !2963

bb35:                                             ; preds = %bb34
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2964
  store i8* %val.0, i8** %50, align 8, !dbg !2964
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2964
  store i64 %val.1, i64* %51, align 8, !dbg !2964
  br label %bb36, !dbg !2965

bb3:                                              ; preds = %bb2
  br label %bb36, !dbg !2966
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc5alloc7dealloc17h50b535b87d8fa895E(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !2967 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2971, metadata !DIExpression()), !dbg !2973
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2972, metadata !DIExpression()), !dbg !2974
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2975
  br label %bb1, !dbg !2975

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2976
  br label %bb2, !dbg !2976

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6), !dbg !2977
  br label %bb3, !dbg !2977

bb3:                                              ; preds = %bb2
  ret void, !dbg !2978
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc7realloc17h52d43d327aca9338E(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 !dbg !2979 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2983, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2984, metadata !DIExpression()), !dbg !2987
  store i64 %new_size, i64* %new_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !2985, metadata !DIExpression()), !dbg !2988
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2989
  br label %bb1, !dbg !2989

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2990
  br label %bb2, !dbg !2990

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size), !dbg !2991
  br label %bb3, !dbg !2991

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2992
}

; alloc::string::String::new
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String3new17h86acb02421f1b154E(%"std::string::String"* noalias nocapture sret(%"std::string::String") dereferenceable(24) %0) unnamed_addr #0 !dbg !2993 {
start:
  %_1 = alloca %"std::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hbdfdbad8ee616e3dE"(%"std::vec::Vec<u8>"* noalias nocapture sret(%"std::vec::Vec<u8>") dereferenceable(24) %_1), !dbg !3001
  br label %bb1, !dbg !3001

bb1:                                              ; preds = %start
  %1 = bitcast %"std::string::String"* %0 to %"std::vec::Vec<u8>"*, !dbg !3002
  %2 = bitcast %"std::vec::Vec<u8>"* %1 to i8*, !dbg !3002
  %3 = bitcast %"std::vec::Vec<u8>"* %_1 to i8*, !dbg !3002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !3002
  ret void, !dbg !3003
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String8push_str17hb4f4780068992a9bE(%"std::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #0 !dbg !3004 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"std::string::String"*, align 8
  store %"std::string::String"* %self, %"std::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::string::String"** %self.dbg.spill, metadata !3009, metadata !DIExpression()), !dbg !3011
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1
  store i64 %string.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !3010, metadata !DIExpression()), !dbg !3012
  %_3 = bitcast %"std::string::String"* %self to %"std::vec::Vec<u8>"*, !dbg !3013
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %string.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !3014, metadata !DIExpression()), !dbg !3021
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !3023
  store [0 x i8]* %string.0, [0 x i8]** %5, align 8, !dbg !3023
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !3023
  store i64 %string.1, i64* %6, align 8, !dbg !3023
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !3023
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !3023, !nonnull !4
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !3023
  %10 = load i64, i64* %9, align 8, !dbg !3023
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !3024
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !3024
  %_5.0 = extractvalue { [0 x i8]*, i64 } %12, 0, !dbg !3025
  %_5.1 = extractvalue { [0 x i8]*, i64 } %12, 1, !dbg !3025
  br label %bb1, !dbg !3025

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17heb35d8c4afc6b2fdE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !3013
  br label %bb2, !dbg !3013

bb2:                                              ; preds = %bb1
  ret void, !dbg !3026
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec11alloc_guard17h76e86e4ca8d90673E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 !dbg !3027 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %alloc_size, i64* %alloc_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %alloc_size.dbg.spill, metadata !3032, metadata !DIExpression()), !dbg !3033
  br i1 false, label %bb1, label %bb3, !dbg !3034

bb3:                                              ; preds = %start
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3035
  store i64 0, i64* %1, align 8, !dbg !3035
  br label %bb4, !dbg !3036

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !3037
  store i64 0, i64* %2, align 8, !dbg !3037
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0, !dbg !3037
  %4 = load i64, i64* %3, align 8, !dbg !3037
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !3037
  %6 = load i64, i64* %5, align 8, !dbg !3037
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1e25107d500986d6E"(i64 %4, i64 %6), !dbg !3037
  %_3.0 = extractvalue { i64, i64 } %7, 0, !dbg !3037
  %_3.1 = extractvalue { i64, i64 } %7, 1, !dbg !3037
  br label %bb2, !dbg !3037

bb2:                                              ; preds = %bb1
  %8 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3038
  %9 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %8, i32 0, i32 1, !dbg !3038
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3038
  store i64 %_3.0, i64* %10, align 8, !dbg !3038
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3038
  store i64 %_3.1, i64* %11, align 8, !dbg !3038
  %12 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3038
  store i64 1, i64* %12, align 8, !dbg !3038
  br label %bb4, !dbg !3036

bb4:                                              ; preds = %bb3, %bb2
  ret void, !dbg !3039
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nounwind
define void @_ZN5alloc7raw_vec11finish_grow17h7e3762d17e93e098E(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"std::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #3 !dbg !3040 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill4 = alloca { i64, i64 }, align 8
  %val.dbg.spill1 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_13 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>", align 8
  %_6 = alloca %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3061, metadata !DIExpression()), !dbg !3087
  call void @llvm.dbg.declare(metadata %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory, metadata !3062, metadata !DIExpression()), !dbg !3088
  store %"std::alloc::Global"* %alloc, %"std::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %alloc.dbg.spill, metadata !3063, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3064, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !3072, metadata !DIExpression()), !dbg !3091
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !3074, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3078, metadata !DIExpression()), !dbg !3093
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf824c341c5ca14f7E"(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1), !dbg !3094
  br label %bb1, !dbg !3094

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he6c115823028548aE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>") dereferenceable(24) %_5, %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6), !dbg !3094
  br label %bb2, !dbg !3094

bb2:                                              ; preds = %bb1
  %3 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to i64*, !dbg !3094
  %_9 = load i64, i64* %3, align 8, !dbg !3094, !range !1202
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !3094

bb4:                                              ; preds = %bb2
  unreachable, !dbg !3094

bb3:                                              ; preds = %bb2
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"*, !dbg !3094
  %5 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"* %4, i32 0, i32 1, !dbg !3094
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !3094
  %val.0 = load i64, i64* %6, align 8, !dbg !3094
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !3094
  %val.1 = load i64, i64* %7, align 8, !dbg !3094, !range !1284
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill1, i32 0, i32 0, !dbg !3094
  store i64 %val.0, i64* %8, align 8, !dbg !3094
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill1, i32 0, i32 1, !dbg !3094
  store i64 %val.1, i64* %9, align 8, !dbg !3094
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill1, metadata !3068, metadata !DIExpression()), !dbg !3095
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3095
  store i64 %val.0, i64* %10, align 8, !dbg !3095
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3095
  store i64 %val.1, i64* %11, align 8, !dbg !3095
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !3096
  br label %bb7, !dbg !3096

bb5:                                              ; preds = %bb2
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"*, !dbg !3097
  %13 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"* %12, i32 0, i32 1, !dbg !3097
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !3097
  %residual.0 = load i64, i64* %14, align 8, !dbg !3097
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !3097
  %residual.1 = load i64, i64* %15, align 8, !dbg !3097
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3097
  store i64 %residual.0, i64* %16, align 8, !dbg !3097
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3097
  store i64 %residual.1, i64* %17, align 8, !dbg !3097
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3066, metadata !DIExpression()), !dbg !3098
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0e621aa07e75d8edE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1), !dbg !3099
  br label %bb6, !dbg !3099

bb6:                                              ; preds = %bb5
  br label %bb23, !dbg !3100

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24, !dbg !3102

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17h76e86e4ca8d90673E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15), !dbg !3103
  br label %bb8, !dbg !3103

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcc47ee8dc75b2c75E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>") dereferenceable(24) %_13, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14), !dbg !3103
  br label %bb9, !dbg !3103

bb9:                                              ; preds = %bb8
  %18 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %_13 to i64*, !dbg !3103
  %_17 = load i64, i64* %18, align 8, !dbg !3103, !range !1202
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ], !dbg !3103

bb11:                                             ; preds = %bb9
  unreachable, !dbg !3103

bb10:                                             ; preds = %bb9
  %19 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to {}**, !dbg !3104
  %20 = load {}*, {}** %19, align 8, !dbg !3104
  %21 = icmp eq {}* %20, null, !dbg !3104
  %_22 = select i1 %21, i64 0, i64 1, !dbg !3104
  %22 = icmp eq i64 %_22, 1, !dbg !3104
  br i1 %22, label %bb15, label %bb14, !dbg !3104

bb12:                                             ; preds = %bb9
  %23 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %_13 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"*, !dbg !3105
  %24 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"* %23, i32 0, i32 1, !dbg !3105
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !3105
  %residual.02 = load i64, i64* %25, align 8, !dbg !3105
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !3105
  %residual.13 = load i64, i64* %26, align 8, !dbg !3105
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill4, i32 0, i32 0, !dbg !3105
  store i64 %residual.02, i64* %27, align 8, !dbg !3105
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill4, i32 0, i32 1, !dbg !3105
  store i64 %residual.13, i64* %28, align 8, !dbg !3105
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill4, metadata !3070, metadata !DIExpression()), !dbg !3106
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5f65b0aa4fa525baE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13), !dbg !3107
  br label %bb13, !dbg !3107

bb13:                                             ; preds = %bb12
  br label %bb23, !dbg !3108

bb24:                                             ; preds = %bb22, %bb23
  ret void, !dbg !3102

bb15:                                             ; preds = %bb10
  %29 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3110
  %30 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %29 to { i8*, { i64, i64 } }*, !dbg !3110
  %31 = bitcast { i8*, { i64, i64 } }* %30 to i8**, !dbg !3110
  %ptr = load i8*, i8** %31, align 8, !dbg !3110, !nonnull !4
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3110
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3076, metadata !DIExpression()), !dbg !3111
  %32 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3112
  %33 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %32 to { i8*, { i64, i64 } }*, !dbg !3112
  %34 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %33, i32 0, i32 1, !dbg !3112
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !3112
  %36 = load i64, i64* %35, align 8, !dbg !3112
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !3112
  %38 = load i64, i64* %37, align 8, !dbg !3112, !range !1284
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3112
  store i64 %36, i64* %39, align 8, !dbg !3112
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3112
  store i64 %38, i64* %40, align 8, !dbg !3112
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !3113
  br label %bb16, !dbg !3113

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3114
  %_39.0 = load i64, i64* %41, align 8, !dbg !3114
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3114
  %_39.1 = load i64, i64* %42, align 8, !dbg !3114, !range !1284
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %43 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h94e492fd0d60c6c6E"(%"std::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1), !dbg !3115
  store { i8*, i64 } %43, { i8*, i64 }* %memory, align 8, !dbg !3115
  br label %bb20, !dbg !3115

bb20:                                             ; preds = %bb14
  br label %bb21, !dbg !3116

bb21:                                             ; preds = %bb19, %bb20
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !3117
  %_40.0 = load i8*, i8** %44, align 8, !dbg !3117
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !3117
  %_40.1 = load i64, i64* %45, align 8, !dbg !3117
  %46 = bitcast i64** %_41 to { i64, i64 }**, !dbg !3118
  store { i64, i64 }* %new_layout, { i64, i64 }** %46, align 8, !dbg !3118
  %47 = load i64*, i64** %_41, align 8, !dbg !3117, !nonnull !4
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17heaafb5592dcec240E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %47), !dbg !3117
  br label %bb22, !dbg !3117

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !3119
  br label %bb17, !dbg !3119

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32, !dbg !3113
  call void @llvm.assume(i1 %_29), !dbg !3120
  br label %bb18, !dbg !3120

bb18:                                             ; preds = %bb17
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3121
  %_36.0 = load i64, i64* %48, align 8, !dbg !3121
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3121
  %_36.1 = load i64, i64* %49, align 8, !dbg !3121, !range !1284
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3122
  %_37.0 = load i64, i64* %50, align 8, !dbg !3122
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3122
  %_37.1 = load i64, i64* %51, align 8, !dbg !3122, !range !1284
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %52 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h143895933a07d858E"(%"std::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1), !dbg !3123
  store { i8*, i64 } %52, { i8*, i64 }* %memory, align 8, !dbg !3123
  br label %bb19, !dbg !3123

bb19:                                             ; preds = %bb18
  br label %bb21, !dbg !3116

bb22:                                             ; preds = %bb21
  br label %bb24, !dbg !3102
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h29083cc2a5f7d6fdE"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 !dbg !3124 {
start:
  %_2.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_1.dbg.spill = alloca i64*, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = bitcast i64** %_1.dbg.spill to { i64, i64 }**
  %1 = load { i64, i64 }*, { i64, i64 }** %0, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !3128, metadata !DIExpression(DW_OP_deref)), !dbg !3130
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %_2.dbg.spill, metadata !3129, metadata !DIExpression()), !dbg !3131
  %2 = bitcast i64* %_1 to { i64, i64 }*, !dbg !3132
  %3 = bitcast i64* %_1 to { i64, i64 }*, !dbg !3132
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !3132
  %_4.0 = load i64, i64* %4, align 8, !dbg !3132
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3132
  %_4.1 = load i64, i64* %5, align 8, !dbg !3132, !range !1284
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3133
  store i64 %_4.0, i64* %6, align 8, !dbg !3133
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3133
  store i64 %_4.1, i64* %7, align 8, !dbg !3133
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3133
  %9 = load i64, i64* %8, align 8, !dbg !3133
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3133
  %11 = load i64, i64* %10, align 8, !dbg !3133
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1e25107d500986d6E"(i64 %9, i64 %11), !dbg !3133
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !3133
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !3133
  br label %bb1, !dbg !3133

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !3134
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !3134
  ret { i64, i64 } %16, !dbg !3134
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hd783327bfb176413E"() unnamed_addr #0 !dbg !3135 {
start:
  %_2.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !3139, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %_2.dbg.spill, metadata !3140, metadata !DIExpression()), !dbg !3142
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3143
  store i64 0, i64* %1, align 8, !dbg !3143
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3144
  %3 = load i64, i64* %2, align 8, !dbg !3144
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3144
  %5 = load i64, i64* %4, align 8, !dbg !3144
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !3144
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !3144
  ret { i64, i64 } %7, !dbg !3144
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec14handle_reserve17haac1436dcf7a5c86E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #0 !dbg !3145 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_2 = alloca %"std::result::Result<(), std::collections::TryReserveErrorKind>", align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %result, metadata !3149, metadata !DIExpression()), !dbg !3152
  %0 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %_3 to i8*, !dbg !3153
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %result to i8*, !dbg !3153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !3153
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h56cc90635870d0f6E"(%"std::result::Result<(), std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3), !dbg !3153
  br label %bb1, !dbg !3153

bb1:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to i64*, !dbg !3153
  %_6 = load i64, i64* %2, align 8, !dbg !3153, !range !1202
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !3154

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !3153

bb2:                                              ; preds = %bb1
  ret void, !dbg !3155

bb3:                                              ; preds = %bb1
  %3 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !3153
  %4 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1, !dbg !3153
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !3153
  %6 = load i64, i64* %5, align 8, !dbg !3153
  %7 = icmp eq i64 %6, 0, !dbg !3153
  %_5 = select i1 %7, i64 0, i64 1, !dbg !3153
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !3154

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd70bf339531c8dfaE(), !dbg !3156
  unreachable, !dbg !3156

bb6:                                              ; preds = %bb3
  %8 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !3157
  %9 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1, !dbg !3157
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3157
  %layout.0 = load i64, i64* %10, align 8, !dbg !3157
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3157
  %layout.1 = load i64, i64* %11, align 8, !dbg !3157, !range !1284
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3157
  store i64 %layout.0, i64* %12, align 8, !dbg !3157
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3157
  store i64 %layout.1, i64* %13, align 8, !dbg !3157
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3150, metadata !DIExpression()), !dbg !3158
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17hc3aabe6032ee3c5aE(i64 %layout.0, i64 %layout.1), !dbg !3159
  unreachable, !dbg !3159
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hd123aeda357833bdE"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3160 {
start:
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !3165, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !3164, metadata !DIExpression()), !dbg !3167
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h4eaf909971c165c7E({ i64, i64 }* align 8 dereferenceable(16) %e), !dbg !3168
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !3168
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !3168
  br label %bb1, !dbg !3168

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !3169
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !3169
  ret { i64, i64 } %8, !dbg !3169
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nounwind
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h6ea77e83982143b4E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !3170 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i = alloca { i8*, i64 }*, align 8
  %0 = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3175, metadata !DIExpression()), !dbg !3178
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3176, metadata !DIExpression()), !dbg !3179
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3177, metadata !DIExpression()), !dbg !3180
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill.i, metadata !3181, metadata !DIExpression()), !dbg !3186
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3188
  %2 = load i64, i64* %1, align 8, !dbg !3188
  store i64 %2, i64* %0, align 8, !dbg !3188
  %3 = load i64, i64* %0, align 8, !dbg !3189
  br label %bb1, !dbg !3190

bb1:                                              ; preds = %start
  store i64 %3, i64* %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i1, metadata !1805, metadata !DIExpression()), !dbg !3191
  store i64 %len, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1808, metadata !DIExpression()), !dbg !3193
  %4 = sub i64 %3, %len, !dbg !3194
  br label %bb2, !dbg !3190

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4, !dbg !3195
  ret i1 %5, !dbg !3196
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hc35b9c18fdd642c2E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !3197 {
start:
  %1 = alloca i64, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3201, metadata !DIExpression()), !dbg !3208
  br label %bb4, !dbg !3209

bb4:                                              ; preds = %start
  %2 = icmp eq i64 1, 0, !dbg !3209
  br i1 %2, label %bb1, label %bb2, !dbg !3209

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1, !dbg !3209
  br label %bb3, !dbg !3209

bb2:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3210
  %_5 = load i64, i64* %3, align 8, !dbg !3210
  %_4 = icmp eq i64 %_5, 0, !dbg !3210
  %4 = zext i1 %_4 to i8, !dbg !3209
  store i8 %4, i8* %_2, align 1, !dbg !3209
  br label %bb3, !dbg !3209

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_2, align 1, !dbg !3209, !range !669
  %6 = trunc i8 %5 to i1, !dbg !3209
  br i1 %6, label %bb5, label %bb6, !dbg !3209

bb6:                                              ; preds = %bb3
  store i64 1, i64* %1, align 8, !dbg !3211
  %7 = load i64, i64* %1, align 8, !dbg !3211
  store i64 %7, i64* %align.dbg.spill, align 8, !dbg !3213
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !3202, metadata !DIExpression()), !dbg !3214
  br label %bb7, !dbg !3213

bb5:                                              ; preds = %bb3
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**, !dbg !3215
  store {}* null, {}** %8, align 8, !dbg !3215
  br label %bb12, !dbg !3216

bb12:                                             ; preds = %bb11, %bb5
  ret void, !dbg !3217

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !3218

bb8:                                              ; preds = %bb7
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3219
  %_9 = load i64, i64* %9, align 8, !dbg !3219
  %size = mul i64 1, %_9, !dbg !3218
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !3218
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3204, metadata !DIExpression()), !dbg !3220
; call core::alloc::layout::Layout::from_size_align_unchecked
  %10 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h7d3db9df0e7e4b98E(i64 %size, i64 %7), !dbg !3221
  %layout.0 = extractvalue { i64, i64 } %10, 0, !dbg !3221
  %layout.1 = extractvalue { i64, i64 } %10, 1, !dbg !3221
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3221
  store i64 %layout.0, i64* %11, align 8, !dbg !3221
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3221
  store i64 %layout.1, i64* %12, align 8, !dbg !3221
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3206, metadata !DIExpression()), !dbg !3222
  br label %bb9, !dbg !3221

bb9:                                              ; preds = %bb8
  %13 = bitcast { i8*, i64 }* %self to i8**, !dbg !3223
  %_16 = load i8*, i8** %13, align 8, !dbg !3223, !nonnull !4
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf231c292f916b7e4E"(i8* nonnull %_16), !dbg !3223
  br label %bb10, !dbg !3223

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3d7093146eb41820E"(i8* nonnull %_15), !dbg !3223
  br label %bb11, !dbg !3223

bb11:                                             ; preds = %bb10
  %14 = bitcast { i8*, { i64, i64 } }* %_13 to i8**, !dbg !3224
  store i8* %_14, i8** %14, align 8, !dbg !3224
  %15 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1, !dbg !3224
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !3224
  store i64 %layout.0, i64* %16, align 8, !dbg !3224
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !3224
  store i64 %layout.1, i64* %17, align 8, !dbg !3224
  %18 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3225
  %19 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %18 to { i8*, { i64, i64 } }*, !dbg !3225
  %20 = bitcast { i8*, { i64, i64 } }* %19 to i8*, !dbg !3225
  %21 = bitcast { i8*, { i64, i64 } }* %_13 to i8*, !dbg !3225
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !3225
  br label %bb12, !dbg !3216
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h5e6971fe7a7770e5E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !3226 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill6 = alloca { i8*, i64 }, align 8
  %residual.dbg.spill5 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill2 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_30 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %_28 = alloca %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>", align 8
  %_27 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"std::result::Result<usize, std::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3231, metadata !DIExpression()), !dbg !3252
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3232, metadata !DIExpression()), !dbg !3253
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3233, metadata !DIExpression()), !dbg !3254
  br label %bb1, !dbg !3255

bb1:                                              ; preds = %start
  %1 = icmp eq i64 1, 0, !dbg !3255
  br i1 %1, label %bb2, label %bb4, !dbg !3255

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3256
  store i64 0, i64* %2, align 8, !dbg !3256
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3256
  %4 = load i64, i64* %3, align 8, !dbg !3256
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3256
  %6 = load i64, i64* %5, align 8, !dbg !3256
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1e25107d500986d6E"(i64 %4, i64 %6), !dbg !3256
  %_5.0 = extractvalue { i64, i64 } %7, 0, !dbg !3256
  %_5.1 = extractvalue { i64, i64 } %7, 1, !dbg !3256
  br label %bb3, !dbg !3256

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E"(i64 %len, i64 %additional), !dbg !3257
  %_10.0 = extractvalue { i64, i64 } %8, 0, !dbg !3257
  %_10.1 = extractvalue { i64, i64 } %8, 1, !dbg !3257
  br label %bb5, !dbg !3257

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3258
  store i64 0, i64* %9, align 8, !dbg !3258
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !3257
  %11 = load i64, i64* %10, align 8, !dbg !3257
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3257
  %13 = load i64, i64* %12, align 8, !dbg !3257
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h75cec8057cc6e5f6E"(%"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<usize, std::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13), !dbg !3257
  br label %bb6, !dbg !3257

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h59a97845db608ecaE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9), !dbg !3257
  br label %bb7, !dbg !3257

bb7:                                              ; preds = %bb6
  %14 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !3257
  %_14 = load i64, i64* %14, align 8, !dbg !3257, !range !1202
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !3257

bb9:                                              ; preds = %bb7
  unreachable, !dbg !3257

bb8:                                              ; preds = %bb7
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !3257
  %16 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1, !dbg !3257
  %val = load i64, i64* %16, align 8, !dbg !3257
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !3257
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !3238, metadata !DIExpression()), !dbg !3259
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !3259
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !3234, metadata !DIExpression()), !dbg !3260
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3261
  %_20 = load i64, i64* %17, align 8, !dbg !3261
  %_19 = mul i64 %_20, 2, !dbg !3261
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h7dec65f8c7a01985E(i64 %_19, i64 %val), !dbg !3262
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !3262
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !3240, metadata !DIExpression()), !dbg !3263
  br label %bb12, !dbg !3262

bb10:                                             ; preds = %bb7
  %18 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !3264
  %19 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1, !dbg !3264
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !3264
  %residual.0 = load i64, i64* %20, align 8, !dbg !3264
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !3264
  %residual.1 = load i64, i64* %21, align 8, !dbg !3264
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3264
  store i64 %residual.0, i64* %22, align 8, !dbg !3264
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3264
  store i64 %residual.1, i64* %23, align 8, !dbg !3264
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3236, metadata !DIExpression()), !dbg !3265
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0638a3fa5c9d1c70E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1), !dbg !3266
  br label %bb11, !dbg !3266

bb11:                                             ; preds = %bb10
  br label %bb23, !dbg !3267

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24, !dbg !3267

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h7dec65f8c7a01985E(i64 8, i64 %cap), !dbg !3269
  store i64 %cap1, i64* %cap.dbg.spill2, align 8, !dbg !3269
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill2, metadata !3242, metadata !DIExpression()), !dbg !3270
  br label %bb13, !dbg !3269

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %24 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1035d8e9ef9f5dd1E(i64 %cap1), !dbg !3271
  %new_layout.0 = extractvalue { i64, i64 } %24, 0, !dbg !3271
  %new_layout.1 = extractvalue { i64, i64 } %24, 1, !dbg !3271
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !3271
  store i64 %new_layout.0, i64* %25, align 8, !dbg !3271
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !3271
  store i64 %new_layout.1, i64* %26, align 8, !dbg !3271
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3244, metadata !DIExpression()), !dbg !3272
  br label %bb14, !dbg !3271

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hc35b9c18fdd642c2E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %_30, { i8*, i64 }* align 8 dereferenceable(16) %self), !dbg !3273
  br label %bb15, !dbg !3273

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i8*, i64 }* %self to %"std::alloc::Global"*, !dbg !3274
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h7e3762d17e93e098E(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"std::alloc::Global"* nonnull align 1 %_33), !dbg !3275
  br label %bb16, !dbg !3275

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1cd7a44d34d49feeE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>") dereferenceable(24) %_27, %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28), !dbg !3275
  br label %bb17, !dbg !3275

bb17:                                             ; preds = %bb16
  %27 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to i64*, !dbg !3275
  %_34 = load i64, i64* %27, align 8, !dbg !3275, !range !1202
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ], !dbg !3275

bb19:                                             ; preds = %bb17
  unreachable, !dbg !3275

bb18:                                             ; preds = %bb17
  %28 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"*, !dbg !3275
  %29 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"* %28, i32 0, i32 1, !dbg !3275
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %29, i32 0, i32 0, !dbg !3275
  %val.0 = load i8*, i8** %30, align 8, !dbg !3275, !nonnull !4
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %29, i32 0, i32 1, !dbg !3275
  %val.1 = load i64, i64* %31, align 8, !dbg !3275
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 0, !dbg !3275
  store i8* %val.0, i8** %32, align 8, !dbg !3275
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 1, !dbg !3275
  store i64 %val.1, i64* %33, align 8, !dbg !3275
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill6, metadata !3250, metadata !DIExpression()), !dbg !3276
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !3276
  store i8* %val.0, i8** %34, align 8, !dbg !3276
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !3276
  store i64 %val.1, i64* %35, align 8, !dbg !3276
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3246, metadata !DIExpression()), !dbg !3277
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17he29706b1362af101E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1), !dbg !3278
  br label %bb22, !dbg !3278

bb20:                                             ; preds = %bb17
  %36 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !3279
  %37 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"* %36, i32 0, i32 1, !dbg !3279
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i32 0, i32 0, !dbg !3279
  %residual.03 = load i64, i64* %38, align 8, !dbg !3279
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i32 0, i32 1, !dbg !3279
  %residual.14 = load i64, i64* %39, align 8, !dbg !3279
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill5, i32 0, i32 0, !dbg !3279
  store i64 %residual.03, i64* %40, align 8, !dbg !3279
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill5, i32 0, i32 1, !dbg !3279
  store i64 %residual.14, i64* %41, align 8, !dbg !3279
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill5, metadata !3248, metadata !DIExpression()), !dbg !3280
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd7edc681497ec821E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.03, i64 %residual.14), !dbg !3281
  br label %bb21, !dbg !3281

bb21:                                             ; preds = %bb20
  br label %bb23, !dbg !3282

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void, !dbg !3284

bb22:                                             ; preds = %bb18
  %42 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3285
  store i64 0, i64* %42, align 8, !dbg !3285
  br label %bb24, !dbg !3284

bb3:                                              ; preds = %bb2
  %43 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3286
  %44 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %43, i32 0, i32 1, !dbg !3286
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 0, !dbg !3286
  store i64 %_5.0, i64* %45, align 8, !dbg !3286
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 1, !dbg !3286
  store i64 %_5.1, i64* %46, align 8, !dbg !3286
  %47 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3286
  store i64 1, i64* %47, align 8, !dbg !3286
  br label %bb24, !dbg !3267
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nounwind
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hf4e51fe44a6d771bE"(i64 %excess) unnamed_addr #1 !dbg !3287 {
start:
  %excess.dbg.spill = alloca i64, align 8
  store i64 %excess, i64* %excess.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %excess.dbg.spill, metadata !3291, metadata !DIExpression()), !dbg !3299
  br label %bb1, !dbg !3300

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 1, 0, !dbg !3301
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !3301
  br i1 %0, label %panic, label %bb2, !dbg !3301

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 1, !dbg !3301
  ret i64 %1, !dbg !3302

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.4 to [0 x i8]*), i64 25, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc610 to %"std::panic::Location"*)), !dbg !3301
  unreachable, !dbg !3301
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf1183ce48bc9b222E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3303 {
start:
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3307, metadata !DIExpression()), !dbg !3308
  %0 = bitcast { i8*, i64 }* %self to i8**, !dbg !3309
  %_2 = load i8*, i8** %0, align 8, !dbg !3309, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he5d69e45e78cd043E"(i8* nonnull %_2), !dbg !3309
  br label %bb1, !dbg !3309

bb1:                                              ; preds = %start
  ret i8* %1, !dbg !3310
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h73529b1a11a28a37E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !3311 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3315, metadata !DIExpression()), !dbg !3318
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3316, metadata !DIExpression()), !dbg !3319
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3317, metadata !DIExpression()), !dbg !3320
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h6ea77e83982143b4E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional), !dbg !3321
  br label %bb1, !dbg !3321

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !3321

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3322

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h7cfa440340ad8c7aE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional), !dbg !3323
  br label %bb3, !dbg !3323

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3324
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h7cfa440340ad8c7aE"({ i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !3325 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i8*, i64 }*, align 8
  %_5 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  store { i8*, i64 }* %slf, { i8*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %slf.dbg.spill, metadata !3329, metadata !DIExpression()), !dbg !3332
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3330, metadata !DIExpression()), !dbg !3333
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3331, metadata !DIExpression()), !dbg !3334
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h5e6971fe7a7770e5E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_5, { i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional), !dbg !3335
  br label %bb1, !dbg !3335

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17haac1436dcf7a5c86E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5), !dbg !3336
  br label %bb2, !dbg !3336

bb2:                                              ; preds = %bb1
  ret void, !dbg !3337
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17he29706b1362af101E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3338 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3342, metadata !DIExpression()), !dbg !3344
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3343, metadata !DIExpression()), !dbg !3345
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h32573d73af02b004E"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !3346
  br label %bb1, !dbg !3346

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %_5), !dbg !3346
  br label %bb2, !dbg !3346

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hde5b232dfedbca2fE"(i8* %_4), !dbg !3347
  br label %bb3, !dbg !3347

bb3:                                              ; preds = %bb2
  %2 = bitcast { i8*, i64 }* %self to i8**, !dbg !3348
  store i8* %_3, i8** %2, align 8, !dbg !3348
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h5b5316406c8edcc3E"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !3349
  br label %bb4, !dbg !3349

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hf4e51fe44a6d771bE"(i64 %_8), !dbg !3350
  br label %bb5, !dbg !3350

bb5:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3351
  store i64 %_7, i64* %3, align 8, !dbg !3351
  ret void, !dbg !3352
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h62f91d88f08779feE"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !3353 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !3361, metadata !DIExpression()), !dbg !3363
  %2 = insertvalue { i64, i64 } undef, i64 %self.0, 0, !dbg !3364
  %3 = insertvalue { i64, i64 } %2, i64 %self.1, 1, !dbg !3364
  ret { i64, i64 } %3, !dbg !3364
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nounwind
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h958b856d17a62832E"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !3365 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3370, metadata !DIExpression()), !dbg !3373
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3371, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3372, metadata !DIExpression()), !dbg !3375
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3376
  br label %bb1, !dbg !3376

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0, !dbg !3376
  br i1 %4, label %bb5, label %bb2, !dbg !3376

bb5:                                              ; preds = %bb1
  br label %bb6, !dbg !3377

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E"(i8* nonnull %ptr), !dbg !3378
  br label %bb3, !dbg !3378

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3379
  %_8.0 = load i64, i64* %5, align 8, !dbg !3379
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3379
  %_8.1 = load i64, i64* %6, align 8, !dbg !3379, !range !1284
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h50b535b87d8fa895E(i8* %_6, i64 %_8.0, i64 %_8.1), !dbg !3380
  br label %bb4, !dbg !3380

bb4:                                              ; preds = %bb3
  br label %bb6, !dbg !3377

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !3381
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h143895933a07d858E"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !3382 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3386, metadata !DIExpression()), !dbg !3390
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3387, metadata !DIExpression()), !dbg !3391
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !3388, metadata !DIExpression()), !dbg !3392
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3389, metadata !DIExpression()), !dbg !3393
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h4fd0747ea7453b42E(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !3394
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !3394
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !3394
  br label %bb1, !dbg !3394

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !3395
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !3395
  ret { i8*, i64 } %8, !dbg !3395
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h94e492fd0d60c6c6E"(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !3396 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3400, metadata !DIExpression()), !dbg !3402
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3401, metadata !DIExpression()), !dbg !3403
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc99a6dc20dd53f8eE(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !3404
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3404
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3404
  br label %bb1, !dbg !3404

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3405
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3405
  ret { i8*, i64 } %6, !dbg !3405
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h3b4371900ece6238E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3406 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3409, metadata !DIExpression()), !dbg !3410
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !3410
  %1 = load i64, i64* %0, align 8, !dbg !3410
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3410
  %3 = load i64, i64* %2, align 8, !dbg !3410, !range !1284
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !3411
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !3411
  ret { i64, i64 } %5, !dbg !3411
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h2366f127084da3c7E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3412 {
start:
  %__self_1.dbg.spill = alloca {}*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3418, metadata !DIExpression()), !dbg !3422
  %1 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3422
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8, !dbg !3422
  %2 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3422
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !dbg !3422, !nonnull !4
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3422
  %5 = load i64, i64* %4, align 8, !dbg !3422
  %6 = icmp eq i64 %5, 0, !dbg !3422
  %_4 = select i1 %6, i64 0, i64 1, !dbg !3422
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3422

bb2:                                              ; preds = %start
  unreachable, !dbg !3422

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3422
  store i64 0, i64* %7, align 8, !dbg !3422
  br label %bb6, !dbg !3422

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3423
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !dbg !3423, !nonnull !4
  store { i64, i64 }* %__self_0, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !3423
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !3419, metadata !DIExpression()), !dbg !3424
  %9 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3425
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !dbg !3425, !nonnull !4
  %__self_1 = bitcast { i64, i64 }* %10 to {}*, !dbg !3425
  store {}* %__self_1, {}** %__self_1.dbg.spill, align 8, !dbg !3425
  call void @llvm.dbg.declare(metadata {}** %__self_1.dbg.spill, metadata !3421, metadata !DIExpression()), !dbg !3426
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h3b4371900ece6238E"({ i64, i64 }* align 8 dereferenceable(16) %__self_0), !dbg !3424
  %_7.0 = extractvalue { i64, i64 } %11, 0, !dbg !3424
  %_7.1 = extractvalue { i64, i64 } %11, 1, !dbg !3424
  br label %bb4, !dbg !3424

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17h9ddcdd57b0b34dcdE({}* nonnull align 1 %__self_1), !dbg !3426
  br label %bb5, !dbg !3426

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3427
  store i64 %_7.0, i64* %12, align 8, !dbg !3427
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3427
  store i64 %_7.1, i64* %13, align 8, !dbg !3427
  br label %bb6, !dbg !3428

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3429
  %15 = load i64, i64* %14, align 8, !dbg !3429
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3429
  %17 = load i64, i64* %16, align 8, !dbg !3429
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !3429
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !3429
  ret { i64, i64 } %19, !dbg !3429
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1cd7a44d34d49feeE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>") dereferenceable(24) %0, %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3430 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self, metadata !3451, metadata !DIExpression()), !dbg !3456
  %1 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to i64*, !dbg !3457
  %_2 = load i64, i64* %1, align 8, !dbg !3457, !range !1202
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3458

bb2:                                              ; preds = %start
  unreachable, !dbg !3457

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"*, !dbg !3459
  %3 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"* %2, i32 0, i32 1, !dbg !3459
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3459
  %v.0 = load i8*, i8** %4, align 8, !dbg !3459, !nonnull !4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3459
  %v.1 = load i64, i64* %5, align 8, !dbg !3459
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3459
  store i8* %v.0, i8** %6, align 8, !dbg !3459
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3459
  store i64 %v.1, i64* %7, align 8, !dbg !3459
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !3452, metadata !DIExpression()), !dbg !3460
  %8 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"*, !dbg !3461
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"* %8, i32 0, i32 1, !dbg !3461
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !3461
  store i8* %v.0, i8** %10, align 8, !dbg !3461
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !3461
  store i64 %v.1, i64* %11, align 8, !dbg !3461
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to i64*, !dbg !3461
  store i64 0, i64* %12, align 8, !dbg !3461
  br label %bb4, !dbg !3462

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !3463
  %14 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %13, i32 0, i32 1, !dbg !3463
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3463
  %e.0 = load i64, i64* %15, align 8, !dbg !3463
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3463
  %e.1 = load i64, i64* %16, align 8, !dbg !3463
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3463
  store i64 %e.0, i64* %17, align 8, !dbg !3463
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3463
  store i64 %e.1, i64* %18, align 8, !dbg !3463
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3454, metadata !DIExpression()), !dbg !3464
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3465
  store i64 %e.0, i64* %19, align 8, !dbg !3465
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3465
  store i64 %e.1, i64* %20, align 8, !dbg !3465
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !3466
  %22 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"* %21, i32 0, i32 1, !dbg !3466
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3466
  %24 = load i64, i64* %23, align 8, !dbg !3466
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3466
  %26 = load i64, i64* %25, align 8, !dbg !3466
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !3466
  store i64 %24, i64* %27, align 8, !dbg !3466
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !3466
  store i64 %26, i64* %28, align 8, !dbg !3466
  %29 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to i64*, !dbg !3466
  store i64 1, i64* %29, align 8, !dbg !3466
  br label %bb4, !dbg !3467

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3468
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3787c517dd758825E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>") dereferenceable(24) %0, %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3469 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %v = alloca { { i64, i64 }, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self, metadata !3489, metadata !DIExpression()), !dbg !3494
  call void @llvm.dbg.declare(metadata { { i64, i64 }, i64 }* %v, metadata !3490, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !3492, metadata !DIExpression()), !dbg !3496
  %1 = getelementptr inbounds %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self, i32 0, i32 1, !dbg !3497
  %2 = load i64, i64* %1, align 8, !dbg !3497
  %3 = icmp eq i64 %2, 0, !dbg !3497
  %_2 = select i1 %3, i64 1, i64 0, !dbg !3497
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3498

bb2:                                              ; preds = %start
  unreachable, !dbg !3497

bb3:                                              ; preds = %start
  %4 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"*, !dbg !3499
  %5 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"* %4 to { { i64, i64 }, i64 }*, !dbg !3499
  %6 = bitcast { { i64, i64 }, i64 }* %v to i8*, !dbg !3499
  %7 = bitcast { { i64, i64 }, i64 }* %5 to i8*, !dbg !3499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !3499
  %8 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !3500
  %9 = bitcast { { i64, i64 }, i64 }* %v to i8*, !dbg !3500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !3500
  %10 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"*, !dbg !3501
  %11 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"* %10 to { { i64, i64 }, i64 }*, !dbg !3501
  %12 = bitcast { { i64, i64 }, i64 }* %11 to i8*, !dbg !3501
  %13 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !3501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3501
  br label %bb4, !dbg !3502

bb1:                                              ; preds = %start
  %14 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %_6 to %"std::alloc::LayoutError"*, !dbg !3503
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break"*, !dbg !3504
  %16 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break"* %15 to %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"*, !dbg !3504
  %17 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0, i32 0, i32 1, !dbg !3504
  store i64 0, i64* %17, align 8, !dbg !3504
  br label %bb4, !dbg !3505

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3506
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h59a97845db608ecaE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3507 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self, metadata !3526, metadata !DIExpression()), !dbg !3531
  %1 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3532
  %_2 = load i64, i64* %1, align 8, !dbg !3532, !range !1202
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3533

bb2:                                              ; preds = %start
  unreachable, !dbg !3532

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"*, !dbg !3534
  %3 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !3534
  %v = load i64, i64* %3, align 8, !dbg !3534
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3534
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3527, metadata !DIExpression()), !dbg !3535
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !3536
  %5 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1, !dbg !3536
  store i64 %v, i64* %5, align 8, !dbg !3536
  %6 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to i64*, !dbg !3536
  store i64 0, i64* %6, align 8, !dbg !3536
  br label %bb4, !dbg !3537

bb1:                                              ; preds = %start
  %7 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"*, !dbg !3538
  %8 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1, !dbg !3538
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0, !dbg !3538
  %e.0 = load i64, i64* %9, align 8, !dbg !3538
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1, !dbg !3538
  %e.1 = load i64, i64* %10, align 8, !dbg !3538
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3538
  store i64 %e.0, i64* %11, align 8, !dbg !3538
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3538
  store i64 %e.1, i64* %12, align 8, !dbg !3538
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3529, metadata !DIExpression()), !dbg !3539
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3540
  store i64 %e.0, i64* %13, align 8, !dbg !3540
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3540
  store i64 %e.1, i64* %14, align 8, !dbg !3540
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !3541
  %16 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"* %15, i32 0, i32 1, !dbg !3541
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3541
  %18 = load i64, i64* %17, align 8, !dbg !3541
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3541
  %20 = load i64, i64* %19, align 8, !dbg !3541
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !3541
  store i64 %18, i64* %21, align 8, !dbg !3541
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !3541
  store i64 %20, i64* %22, align 8, !dbg !3541
  %23 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to i64*, !dbg !3541
  store i64 1, i64* %23, align 8, !dbg !3541
  br label %bb4, !dbg !3542

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3543
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6c99521caefd605eE"(i1 zeroext %0) unnamed_addr #0 !dbg !3544 {
start:
  %e.dbg.spill = alloca %"std::fmt::Error", align 1
  %v.dbg.spill = alloca {}, align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !3548, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !3549, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.declare(metadata %"std::fmt::Error"* %e.dbg.spill, metadata !3551, metadata !DIExpression()), !dbg !3556
  %3 = load i8, i8* %self, align 1, !dbg !3557, !range !669
  %4 = trunc i8 %3 to i1, !dbg !3557
  %_2 = zext i1 %4 to i64, !dbg !3557
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3558

bb2:                                              ; preds = %start
  unreachable, !dbg !3557

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Continue"*, !dbg !3559
  %6 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Continue"* %5, i32 0, i32 1, !dbg !3559
  store i8 0, i8* %1, align 1, !dbg !3559
  br label %bb4, !dbg !3560

bb1:                                              ; preds = %start
  %7 = bitcast %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err"* %_6 to %"std::fmt::Error"*, !dbg !3561
  %8 = bitcast i8* %1 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Break"*, !dbg !3562
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>::Break"* %8, i32 0, i32 1, !dbg !3562
  store i8 1, i8* %1, align 1, !dbg !3562
  br label %bb4, !dbg !3563

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !dbg !3564, !range !669
  %11 = trunc i8 %10 to i1, !dbg !3564
  ret i1 %11, !dbg !3564
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eb1432c9029ceffE"(i8* %0) unnamed_addr #0 !dbg !3565 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !3584, metadata !DIExpression()), !dbg !3589
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3590
  %2 = bitcast i8** %self to {}**, !dbg !3591
  %3 = load {}*, {}** %2, align 8, !dbg !3591
  %4 = icmp eq {}* %3, null, !dbg !3591
  %_2 = select i1 %4, i64 1, i64 0, !dbg !3591
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3592

bb2:                                              ; preds = %start
  unreachable, !dbg !3591

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !3593, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3593
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3585, metadata !DIExpression()), !dbg !3594
  store i8* %v, i8** %1, align 8, !dbg !3595
  br label %bb4, !dbg !3596

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %_6 to %"std::alloc::AllocError"*, !dbg !3597
  %6 = bitcast i8** %1 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break"*, !dbg !3598
  %7 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break"* %6 to %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"*, !dbg !3598
  %8 = bitcast i8** %1 to {}**, !dbg !3598
  store {}* null, {}** %8, align 8, !dbg !3598
  br label %bb4, !dbg !3599

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8, !dbg !3600
  ret i8* %9, !dbg !3600
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc80254b40107cb29E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3601 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !3618, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !3621, metadata !DIExpression()), !dbg !3624
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !3625
  %_2 = load i64, i64* %5, align 8, !dbg !3625, !range !1202
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3626

bb2:                                              ; preds = %start
  unreachable, !dbg !3625

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"std::result::Result<usize, std::alloc::LayoutError>::Ok"*, !dbg !3627
  %7 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Ok", %"std::result::Result<usize, std::alloc::LayoutError>::Ok"* %6, i32 0, i32 1, !dbg !3627
  %v = load i64, i64* %7, align 8, !dbg !3627
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3627
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3619, metadata !DIExpression()), !dbg !3628
  %8 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"*, !dbg !3629
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"* %8, i32 0, i32 1, !dbg !3629
  store i64 %v, i64* %9, align 8, !dbg !3629
  %10 = bitcast { i64, i64 }* %2 to i64*, !dbg !3629
  store i64 0, i64* %10, align 8, !dbg !3629
  br label %bb4, !dbg !3630

bb1:                                              ; preds = %start
  %11 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %_6 to %"std::alloc::LayoutError"*, !dbg !3631
  %12 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break"*, !dbg !3632
  %13 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break"* %12, i32 0, i32 1, !dbg !3632
  %14 = bitcast { i64, i64 }* %2 to i64*, !dbg !3632
  store i64 1, i64* %14, align 8, !dbg !3632
  br label %bb4, !dbg !3633

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3634
  %16 = load i64, i64* %15, align 8, !dbg !3634, !range !1202
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3634
  %18 = load i64, i64* %17, align 8, !dbg !3634
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0, !dbg !3634
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !3634
  ret { i64, i64 } %20, !dbg !3634
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc8a595b640c8fdfdE"(i8* %0, i64 %1) unnamed_addr #0 !dbg !3635 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !3652, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !3655, metadata !DIExpression()), !dbg !3658
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !3659
  %6 = load {}*, {}** %5, align 8, !dbg !3659
  %7 = icmp eq {}* %6, null, !dbg !3659
  %_2 = select i1 %7, i64 1, i64 0, !dbg !3659
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3660

bb2:                                              ; preds = %start
  unreachable, !dbg !3659

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !3661
  %v.0 = load i8*, i8** %8, align 8, !dbg !3661, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3661
  %v.1 = load i64, i64* %9, align 8, !dbg !3661
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3661
  store i8* %v.0, i8** %10, align 8, !dbg !3661
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3661
  store i64 %v.1, i64* %11, align 8, !dbg !3661
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !3653, metadata !DIExpression()), !dbg !3662
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3663
  store i8* %v.0, i8** %12, align 8, !dbg !3663
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3663
  store i64 %v.1, i64* %13, align 8, !dbg !3663
  br label %bb4, !dbg !3664

bb1:                                              ; preds = %start
  %14 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %_6 to %"std::alloc::AllocError"*, !dbg !3665
  %15 = bitcast { i8*, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !3666
  %16 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break"* %15 to %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"*, !dbg !3666
  %17 = bitcast { i8*, i64 }* %2 to {}**, !dbg !3666
  store {}* null, {}** %17, align 8, !dbg !3666
  br label %bb4, !dbg !3667

bb4:                                              ; preds = %bb3, %bb1
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3668
  %19 = load i8*, i8** %18, align 8, !dbg !3668
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3668
  %21 = load i64, i64* %20, align 8, !dbg !3668
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0, !dbg !3668
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1, !dbg !3668
  ret { i8*, i64 } %23, !dbg !3668
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcc47ee8dc75b2c75E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>") dereferenceable(24) %0, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3669 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %self, metadata !3687, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !3688, metadata !DIExpression()), !dbg !3693
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to i64*, !dbg !3694
  %_2 = load i64, i64* %1, align 8, !dbg !3694, !range !1202
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3695

bb2:                                              ; preds = %start
  unreachable, !dbg !3694

bb3:                                              ; preds = %start
  %2 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue"*, !dbg !3696
  %3 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1, !dbg !3696
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to i64*, !dbg !3696
  store i64 0, i64* %4, align 8, !dbg !3696
  br label %bb4, !dbg !3697

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3698
  %6 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %5, i32 0, i32 1, !dbg !3698
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !3698
  %e.0 = load i64, i64* %7, align 8, !dbg !3698
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !3698
  %e.1 = load i64, i64* %8, align 8, !dbg !3698
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3698
  store i64 %e.0, i64* %9, align 8, !dbg !3698
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3698
  store i64 %e.1, i64* %10, align 8, !dbg !3698
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3690, metadata !DIExpression()), !dbg !3699
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3700
  store i64 %e.0, i64* %11, align 8, !dbg !3700
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3700
  store i64 %e.1, i64* %12, align 8, !dbg !3700
  %13 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"*, !dbg !3701
  %14 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"* %13, i32 0, i32 1, !dbg !3701
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3701
  %16 = load i64, i64* %15, align 8, !dbg !3701
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3701
  %18 = load i64, i64* %17, align 8, !dbg !3701
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3701
  store i64 %16, i64* %19, align 8, !dbg !3701
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3701
  store i64 %18, i64* %20, align 8, !dbg !3701
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to i64*, !dbg !3701
  store i64 1, i64* %21, align 8, !dbg !3701
  br label %bb4, !dbg !3702

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3703
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he6c115823028548aE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>") dereferenceable(24) %0, %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3704 {
start:
  %v.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self, metadata !3722, metadata !DIExpression()), !dbg !3727
  %1 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3728
  %_2 = load i64, i64* %1, align 8, !dbg !3728, !range !1202
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3729

bb2:                                              ; preds = %start
  unreachable, !dbg !3728

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"*, !dbg !3730
  %3 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !3730
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !3730
  %v.0 = load i64, i64* %4, align 8, !dbg !3730
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3730
  %v.1 = load i64, i64* %5, align 8, !dbg !3730, !range !1284
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3730
  store i64 %v.0, i64* %6, align 8, !dbg !3730
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3730
  store i64 %v.1, i64* %7, align 8, !dbg !3730
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill, metadata !3723, metadata !DIExpression()), !dbg !3731
  %8 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"*, !dbg !3732
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"* %8, i32 0, i32 1, !dbg !3732
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3732
  store i64 %v.0, i64* %10, align 8, !dbg !3732
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3732
  store i64 %v.1, i64* %11, align 8, !dbg !3732
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to i64*, !dbg !3732
  store i64 0, i64* %12, align 8, !dbg !3732
  br label %bb4, !dbg !3733

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"*, !dbg !3734
  %14 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"* %13, i32 0, i32 1, !dbg !3734
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3734
  %e.0 = load i64, i64* %15, align 8, !dbg !3734
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3734
  %e.1 = load i64, i64* %16, align 8, !dbg !3734
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3734
  store i64 %e.0, i64* %17, align 8, !dbg !3734
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3734
  store i64 %e.1, i64* %18, align 8, !dbg !3734
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3725, metadata !DIExpression()), !dbg !3735
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3736
  store i64 %e.0, i64* %19, align 8, !dbg !3736
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3736
  store i64 %e.1, i64* %20, align 8, !dbg !3736
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"*, !dbg !3737
  %22 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"* %21, i32 0, i32 1, !dbg !3737
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3737
  %24 = load i64, i64* %23, align 8, !dbg !3737
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3737
  %26 = load i64, i64* %25, align 8, !dbg !3737
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !3737
  store i64 %24, i64* %27, align 8, !dbg !3737
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !3737
  store i64 %26, i64* %28, align 8, !dbg !3737
  %29 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to i64*, !dbg !3737
  store i64 1, i64* %29, align 8, !dbg !3737
  br label %bb4, !dbg !3738

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3739
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h3f59e5d448d51f31E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3740 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3743, metadata !DIExpression()), !dbg !3746
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !3747
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3748
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h802cd51cfb80ef88E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4), !dbg !3747
  br label %bb1, !dbg !3747

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !3747

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !3749
  store i64 0, i64* %1, align 8, !dbg !3749
  br label %bb7, !dbg !3750

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !3751
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0ab4e7fd709d2e2aE"(i64* align 8 dereferenceable(8) %_7), !dbg !3751
  br label %bb3, !dbg !3751

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17ha589c00b0b84353dE"(i64 %_6, i64 1), !dbg !3752
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !3752
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3744, metadata !DIExpression()), !dbg !3753
  br label %bb4, !dbg !3752

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !3754
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h59dfc2df994720ceE(i64* align 8 dereferenceable(8) %_10, i64 %n), !dbg !3755
  br label %bb5, !dbg !3755

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"std::option::Option<usize>::Some"*, !dbg !3756
  %3 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %2, i32 0, i32 1, !dbg !3756
  store i64 %_8, i64* %3, align 8, !dbg !3756
  %4 = bitcast { i64, i64 }* %0 to i64*, !dbg !3756
  store i64 1, i64* %4, align 8, !dbg !3756
  br label %bb7, !dbg !3750

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3757
  %6 = load i64, i64* %5, align 8, !dbg !3757, !range !1202
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3757
  %8 = load i64, i64* %7, align 8, !dbg !3757
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !3757
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !3757
  ret { i64, i64 } %10, !dbg !3757
}

; base64::chunked_encoder::ChunkedEncoder::new
; Function Attrs: nounwind
define i128 @_ZN6base6415chunked_encoder14ChunkedEncoder3new17h23c62a5165c1e72dE(i24 %0) unnamed_addr #1 !dbg !3758 {
start:
  %_4 = alloca %Config, align 1
  %_2 = alloca %Config, align 1
  %1 = alloca %"chunked_encoder::ChunkedEncoder", align 8
  %2 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %0, i24* %2, align 4
  %3 = bitcast %Config* %config to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !3773, metadata !DIExpression()), !dbg !3774
  %5 = bitcast %Config* %_2 to i8*, !dbg !3775
  %6 = bitcast %Config* %config to i8*, !dbg !3775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 3, i1 false), !dbg !3775
  %7 = bitcast %Config* %_4 to i8*, !dbg !3776
  %8 = bitcast %Config* %config to i8*, !dbg !3776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 3, i1 false), !dbg !3776
  %9 = bitcast %Config* %_4 to i24*, !dbg !3777
  %10 = load i24, i24* %9, align 1, !dbg !3777
; call base64::chunked_encoder::max_input_length
  %_3 = call i64 @_ZN6base6415chunked_encoder16max_input_length17h194a0dedd164dbb2E(i64 1024, i24 %10), !dbg !3777
  br label %bb1, !dbg !3777

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds %"chunked_encoder::ChunkedEncoder", %"chunked_encoder::ChunkedEncoder"* %1, i32 0, i32 1, !dbg !3778
  %12 = bitcast %Config* %11 to i8*, !dbg !3778
  %13 = bitcast %Config* %_2 to i8*, !dbg !3778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 %13, i64 3, i1 false), !dbg !3778
  %14 = bitcast %"chunked_encoder::ChunkedEncoder"* %1 to i64*, !dbg !3778
  store i64 %_3, i64* %14, align 8, !dbg !3778
  %15 = bitcast %"chunked_encoder::ChunkedEncoder"* %1 to i128*, !dbg !3779
  %16 = load i128, i128* %15, align 8, !dbg !3779
  ret i128 %16, !dbg !3779
}

; base64::chunked_encoder::ChunkedEncoder::encode
; Function Attrs: nounwind
define zeroext i1 @_ZN6base6415chunked_encoder14ChunkedEncoder6encode17hc729c4c2477484a9E(%"chunked_encoder::ChunkedEncoder"* align 8 dereferenceable(16) %self, [0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1, i64** align 8 dereferenceable(8) %sink) unnamed_addr #1 !dbg !3780 {
start:
  %more_input_left.dbg.spill = alloca i8, align 1
  %chunk.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %input_chunk_len.dbg.spill = alloca i64, align 8
  %encode_table.dbg.spill = alloca [64 x i8]*, align 8
  %val.dbg.spill = alloca {}, align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err", align 1
  %sink.dbg.spill = alloca i64**, align 8
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"chunked_encoder::ChunkedEncoder"*, align 8
  %_61 = alloca { i64, i64 }, align 8
  %_54 = alloca i8, align 1
  %_51 = alloca i64, align 8
  %_40 = alloca i8, align 1
  %b64_bytes_written = alloca i64, align 8
  %_22 = alloca { i64, i64 }, align 8
  %input_index = alloca i64, align 8
  %encode_buf = alloca [1024 x i8], align 1
  %0 = alloca i8, align 1
  store %"chunked_encoder::ChunkedEncoder"* %self, %"chunked_encoder::ChunkedEncoder"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"chunked_encoder::ChunkedEncoder"** %self.dbg.spill, metadata !3790, metadata !DIExpression()), !dbg !3817
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %bytes.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1
  store i64 %bytes.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !3791, metadata !DIExpression()), !dbg !3818
  store i64** %sink, i64*** %sink.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %sink.dbg.spill, metadata !3792, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.declare(metadata [1024 x i8]* %encode_buf, metadata !3793, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.declare(metadata i64* %input_index, metadata !3801, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.declare(metadata i64* %b64_bytes_written, metadata !3807, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::fmt::Error>::Err"* %residual.dbg.spill, metadata !3811, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !3813, metadata !DIExpression()), !dbg !3824
  %3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %encode_buf, i64 0, i64 0, !dbg !3825
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 1024, i1 false), !dbg !3825
  %4 = getelementptr inbounds %"chunked_encoder::ChunkedEncoder", %"chunked_encoder::ChunkedEncoder"* %self, i32 0, i32 1, !dbg !3826
  %5 = bitcast %Config* %4 to i8*, !dbg !3826
  %_6 = load i8, i8* %5, align 8, !dbg !3826, !range !3827
; call base64::CharacterSet::encode_table
  %encode_table = call align 1 dereferenceable(64) [64 x i8]* @_ZN6base6412CharacterSet12encode_table17h9d36b7121cb3fda5E(i8 %_6), !dbg !3826
  store [64 x i8]* %encode_table, [64 x i8]** %encode_table.dbg.spill, align 8, !dbg !3826
  call void @llvm.dbg.declare(metadata [64 x i8]** %encode_table.dbg.spill, metadata !3795, metadata !DIExpression()), !dbg !3828
  br label %bb1, !dbg !3826

bb1:                                              ; preds = %start
  store i64 0, i64* %input_index, align 8, !dbg !3829
  br label %bb2, !dbg !3830

bb2:                                              ; preds = %bb21, %bb1
  %_9 = load i64, i64* %input_index, align 8, !dbg !3831
  %_8 = icmp ult i64 %_9, %bytes.1, !dbg !3831
  br i1 %_8, label %bb3, label %bb25, !dbg !3831

bb25:                                             ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !3832
  br label %bb26, !dbg !3833

bb3:                                              ; preds = %bb2
  %6 = bitcast %"chunked_encoder::ChunkedEncoder"* %self to i64*, !dbg !3834
  %_13 = load i64, i64* %6, align 8, !dbg !3834
  %_17 = load i64, i64* %input_index, align 8, !dbg !3835
  %7 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %bytes.1, i64 %_17), !dbg !3836
  %_18.0 = extractvalue { i64, i1 } %7, 0, !dbg !3836
  %_18.1 = extractvalue { i64, i1 } %7, 1, !dbg !3836
  %8 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !3836
  br i1 %8, label %panic, label %bb4, !dbg !3836

bb4:                                              ; preds = %bb3
; call core::cmp::min
  %input_chunk_len = call i64 @_ZN4core3cmp3min17h5809023887dbf599E(i64 %_13, i64 %_18.0), !dbg !3837
  store i64 %input_chunk_len, i64* %input_chunk_len.dbg.spill, align 8, !dbg !3837
  call void @llvm.dbg.declare(metadata i64* %input_chunk_len.dbg.spill, metadata !3803, metadata !DIExpression()), !dbg !3838
  br label %bb5, !dbg !3837

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc612 to %"std::panic::Location"*)), !dbg !3836
  unreachable, !dbg !3836

bb5:                                              ; preds = %bb4
  %_23 = load i64, i64* %input_index, align 8, !dbg !3839
  %_25 = load i64, i64* %input_index, align 8, !dbg !3840
  %9 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_25, i64 %input_chunk_len), !dbg !3841
  %_27.0 = extractvalue { i64, i1 } %9, 0, !dbg !3841
  %_27.1 = extractvalue { i64, i1 } %9, 1, !dbg !3841
  %10 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !3841
  br i1 %10, label %panic1, label %bb6, !dbg !3841

bb6:                                              ; preds = %bb5
  %11 = bitcast { i64, i64 }* %_22 to i64*, !dbg !3839
  store i64 %_23, i64* %11, align 8, !dbg !3839
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1, !dbg !3839
  store i64 %_27.0, i64* %12, align 8, !dbg !3839
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 0, !dbg !3842
  %14 = load i64, i64* %13, align 8, !dbg !3842
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1, !dbg !3842
  %16 = load i64, i64* %15, align 8, !dbg !3842
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %17 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18ebf1aaf5f6628fE"([0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1, i64 %14, i64 %16, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc616 to %"std::panic::Location"*)), !dbg !3842
  %_20.0 = extractvalue { [0 x i8]*, i64 } %17, 0, !dbg !3842
  %_20.1 = extractvalue { [0 x i8]*, i64 } %17, 1, !dbg !3842
  br label %bb7, !dbg !3842

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc614 to %"std::panic::Location"*)), !dbg !3841
  unreachable, !dbg !3841

bb7:                                              ; preds = %bb6
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %chunk.dbg.spill, i32 0, i32 0, !dbg !3843
  store [0 x i8]* %_20.0, [0 x i8]** %18, align 8, !dbg !3843
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %chunk.dbg.spill, i32 0, i32 1, !dbg !3843
  store i64 %_20.1, i64* %19, align 8, !dbg !3843
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %chunk.dbg.spill, metadata !3805, metadata !DIExpression()), !dbg !3844
  %_30.0 = bitcast [1024 x i8]* %encode_buf to [0 x i8]*, !dbg !3845
; call base64::encode::encode_to_slice
  %20 = call i64 @_ZN6base646encode15encode_to_slice17h9d7946914443da15E([0 x i8]* nonnull align 1 %_20.0, i64 %_20.1, [0 x i8]* nonnull align 1 %_30.0, i64 1024, [64 x i8]* align 1 dereferenceable(64) %encode_table), !dbg !3846
  store i64 %20, i64* %b64_bytes_written, align 8, !dbg !3846
  br label %bb8, !dbg !3846

bb8:                                              ; preds = %bb7
  %21 = load i64, i64* %input_index, align 8, !dbg !3847
  %22 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %input_chunk_len), !dbg !3847
  %_35.0 = extractvalue { i64, i1 } %22, 0, !dbg !3847
  %_35.1 = extractvalue { i64, i1 } %22, 1, !dbg !3847
  %23 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !3847
  br i1 %23, label %panic2, label %bb9, !dbg !3847

bb9:                                              ; preds = %bb8
  store i64 %_35.0, i64* %input_index, align 8, !dbg !3847
  %_37 = load i64, i64* %input_index, align 8, !dbg !3848
  %more_input_left = icmp ult i64 %_37, %bytes.1, !dbg !3848
  %24 = zext i1 %more_input_left to i8, !dbg !3848
  store i8 %24, i8* %more_input_left.dbg.spill, align 1, !dbg !3848
  call void @llvm.dbg.declare(metadata i8* %more_input_left.dbg.spill, metadata !3809, metadata !DIExpression()), !dbg !3849
  %25 = getelementptr inbounds %"chunked_encoder::ChunkedEncoder", %"chunked_encoder::ChunkedEncoder"* %self, i32 0, i32 1, !dbg !3850
  %26 = getelementptr inbounds %Config, %Config* %25, i32 0, i32 1, !dbg !3850
  %27 = load i8, i8* %26, align 1, !dbg !3850, !range !669
  %_41 = trunc i8 %27 to i1, !dbg !3850
  br i1 %_41, label %bb11, label %bb10, !dbg !3850

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc618 to %"std::panic::Location"*)), !dbg !3847
  unreachable, !dbg !3847

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_40, align 1, !dbg !3850
  br label %bb12, !dbg !3850

bb11:                                             ; preds = %bb9
  %_42 = xor i1 %more_input_left, true, !dbg !3851
  %28 = zext i1 %_42 to i8, !dbg !3850
  store i8 %28, i8* %_40, align 1, !dbg !3850
  br label %bb12, !dbg !3850

bb12:                                             ; preds = %bb10, %bb11
  %29 = load i8, i8* %_40, align 1, !dbg !3850, !range !669
  %30 = trunc i8 %29 to i1, !dbg !3850
  br i1 %30, label %bb13, label %bb17, !dbg !3850

bb17:                                             ; preds = %bb16, %bb12
  %_62 = load i64, i64* %b64_bytes_written, align 8, !dbg !3852
  %31 = bitcast { i64, i64 }* %_61 to i64*, !dbg !3853
  store i64 0, i64* %31, align 8, !dbg !3853
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_61, i32 0, i32 1, !dbg !3853
  store i64 %_62, i64* %32, align 8, !dbg !3853
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_61, i32 0, i32 0, !dbg !3854
  %34 = load i64, i64* %33, align 8, !dbg !3854
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_61, i32 0, i32 1, !dbg !3854
  %36 = load i64, i64* %35, align 8, !dbg !3854
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %37 = call { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf860101d79e0a39dE"([1024 x i8]* align 1 dereferenceable(1024) %encode_buf, i64 %34, i64 %36, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc624 to %"std::panic::Location"*)), !dbg !3854
  %_59.0 = extractvalue { [0 x i8]*, i64 } %37, 0, !dbg !3854
  %_59.1 = extractvalue { [0 x i8]*, i64 } %37, 1, !dbg !3854
  br label %bb18, !dbg !3854

bb13:                                             ; preds = %bb12
  %_52 = load i64, i64* %b64_bytes_written, align 8, !dbg !3855
  store i64 %_52, i64* %_51, align 8, !dbg !3855
  %38 = load i64, i64* %_51, align 8, !dbg !3856
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %39 = call { [0 x i8]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hbb781dce4f95e74cE"([1024 x i8]* align 1 dereferenceable(1024) %encode_buf, i64 %38, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc620 to %"std::panic::Location"*)), !dbg !3856
  %_49.0 = extractvalue { [0 x i8]*, i64 } %39, 0, !dbg !3856
  %_49.1 = extractvalue { [0 x i8]*, i64 } %39, 1, !dbg !3856
  br label %bb14, !dbg !3856

bb14:                                             ; preds = %bb13
; call base64::encode::add_padding
  %_44 = call i64 @_ZN6base646encode11add_padding17h9d64c96abebfa52eE(i64 %bytes.1, [0 x i8]* nonnull align 1 %_49.0, i64 %_49.1), !dbg !3857
  br label %bb15, !dbg !3857

bb15:                                             ; preds = %bb14
  %40 = load i64, i64* %b64_bytes_written, align 8, !dbg !3858
  %41 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %40, i64 %_44), !dbg !3858
  %_53.0 = extractvalue { i64, i1 } %41, 0, !dbg !3858
  %_53.1 = extractvalue { i64, i1 } %41, 1, !dbg !3858
  %42 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !3858
  br i1 %42, label %panic3, label %bb16, !dbg !3858

bb16:                                             ; preds = %bb15
  store i64 %_53.0, i64* %b64_bytes_written, align 8, !dbg !3858
  br label %bb17, !dbg !3859

panic3:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc622 to %"std::panic::Location"*)), !dbg !3858
  unreachable, !dbg !3858

bb18:                                             ; preds = %bb17
; call <base64::display::FormatterSink as base64::chunked_encoder::Sink>::write_encoded_bytes
  %_55 = call zeroext i1 @"_ZN80_$LT$base64..display..FormatterSink$u20$as$u20$base64..chunked_encoder..Sink$GT$19write_encoded_bytes17h4ccfcedf507c6196E"(i64** align 8 dereferenceable(8) %sink, [0 x i8]* nonnull align 1 %_59.0, i64 %_59.1), !dbg !3860
  br label %bb19, !dbg !3860

bb19:                                             ; preds = %bb18
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %43 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6c99521caefd605eE"(i1 zeroext %_55), !dbg !3860
  %44 = zext i1 %43 to i8, !dbg !3860
  store i8 %44, i8* %_54, align 1, !dbg !3860
  br label %bb20, !dbg !3860

bb20:                                             ; preds = %bb19
  %45 = load i8, i8* %_54, align 1, !dbg !3860, !range !669
  %46 = trunc i8 %45 to i1, !dbg !3860
  %_63 = zext i1 %46 to i64, !dbg !3860
  switch i64 %_63, label %bb22 [
    i64 0, label %bb21
    i64 1, label %bb23
  ], !dbg !3860

bb22:                                             ; preds = %bb20
  unreachable, !dbg !3860

bb21:                                             ; preds = %bb20
  br label %bb2, !dbg !3830

bb23:                                             ; preds = %bb20
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %47 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf77e9885a26c284E"(), !dbg !3861
  %48 = zext i1 %47 to i8, !dbg !3861
  store i8 %48, i8* %0, align 1, !dbg !3861
  br label %bb24, !dbg !3861

bb24:                                             ; preds = %bb23
  br label %bb26, !dbg !3833

bb26:                                             ; preds = %bb25, %bb24
  %49 = load i8, i8* %0, align 1, !dbg !3833, !range !669
  %50 = trunc i8 %49 to i1, !dbg !3833
  ret i1 %50, !dbg !3833
}

; base64::chunked_encoder::max_input_length
; Function Attrs: nounwind
define internal i64 @_ZN6base6415chunked_encoder16max_input_length17h194a0dedd164dbb2E(i64 %encoded_buf_len, i24 %0) unnamed_addr #1 !dbg !3862 {
start:
  %encoded_buf_len.dbg.spill = alloca i64, align 8
  %effective_buf_len = alloca i64, align 8
  %1 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %0, i24* %1, align 4
  %2 = bitcast %Config* %config to i8*
  %3 = bitcast i24* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 4 %3, i64 3, i1 false)
  store i64 %encoded_buf_len, i64* %encoded_buf_len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %encoded_buf_len.dbg.spill, metadata !3866, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !3867, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata i64* %effective_buf_len, metadata !3868, metadata !DIExpression()), !dbg !3872
  %4 = getelementptr inbounds %Config, %Config* %config, i32 0, i32 1, !dbg !3873
  %5 = load i8, i8* %4, align 1, !dbg !3873, !range !669
  %_4 = trunc i8 %5 to i1, !dbg !3873
  br i1 %_4, label %bb1, label %bb3, !dbg !3873

bb3:                                              ; preds = %start
  store i64 %encoded_buf_len, i64* %effective_buf_len, align 8, !dbg !3874
  br label %bb4, !dbg !3875

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_sub
  %6 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h86f2db25a39a5439E"(i64 %encoded_buf_len, i64 2), !dbg !3876
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !3876
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !3876
  br label %bb2, !dbg !3876

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::expect
  %7 = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h57e4f65c536141c1E"(i64 %_5.0, i64 %_5.1, [0 x i8]* nonnull align 1 bitcast (<{ [23 x i8] }>* @alloc625 to [0 x i8]*), i64 23, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc627 to %"std::panic::Location"*)), !dbg !3876
  store i64 %7, i64* %effective_buf_len, align 8, !dbg !3876
  br label %bb4, !dbg !3876

bb4:                                              ; preds = %bb3, %bb2
  %_10 = load i64, i64* %effective_buf_len, align 8, !dbg !3877
  %_9 = udiv i64 %_10, 4, !dbg !3878
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_9, i64 3), !dbg !3878
  %_11.0 = extractvalue { i64, i1 } %8, 0, !dbg !3878
  %_11.1 = extractvalue { i64, i1 } %8, 1, !dbg !3878
  %9 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !3878
  br i1 %9, label %panic, label %bb5, !dbg !3878

bb5:                                              ; preds = %bb4
  ret i64 %_11.0, !dbg !3879

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.7 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc629 to %"std::panic::Location"*)), !dbg !3878
  unreachable, !dbg !3878
}

; base64::chunked_encoder::StringSink::new
; Function Attrs: nounwind
define align 8 dereferenceable(24) i64* @_ZN6base6415chunked_encoder10StringSink3new17h1c640b7892727830E(%"std::string::String"* align 8 dereferenceable(24) %s) unnamed_addr #1 !dbg !3880 {
start:
  %s.dbg.spill = alloca %"std::string::String"*, align 8
  %0 = alloca i64*, align 8
  store %"std::string::String"* %s, %"std::string::String"** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::string::String"** %s.dbg.spill, metadata !3887, metadata !DIExpression()), !dbg !3888
  %1 = bitcast i64** %0 to %"std::string::String"**, !dbg !3889
  store %"std::string::String"* %s, %"std::string::String"** %1, align 8, !dbg !3889
  %2 = load i64*, i64** %0, align 8, !dbg !3890, !nonnull !4
  ret i64* %2, !dbg !3890
}

; <base64::chunked_encoder::StringSink as base64::chunked_encoder::Sink>::write_encoded_bytes
; Function Attrs: nounwind
define zeroext i1 @"_ZN85_$LT$base64..chunked_encoder..StringSink$u20$as$u20$base64..chunked_encoder..Sink$GT$19write_encoded_bytes17ha7d70f54bf66fc7bE"(i64** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !3891 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_7 = alloca %"std::result::Result<&str, std::str::Utf8Error>", align 8
  %0 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !3897, metadata !DIExpression()), !dbg !3899
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !3898, metadata !DIExpression()), !dbg !3900
  %3 = bitcast i64** %self to %"std::string::String"**, !dbg !3901
  %_4 = load %"std::string::String"*, %"std::string::String"** %3, align 8, !dbg !3901, !nonnull !4
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817hbd7abfa9d190c3c9E(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture sret(%"std::result::Result<&str, std::str::Utf8Error>") dereferenceable(24) %_7, [0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !3902
  br label %bb1, !dbg !3902

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %4 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hb84fb383a45a1a1fE"(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture dereferenceable(24) %_7, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc631 to %"std::panic::Location"*)), !dbg !3902
  %_6.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !3902
  %_6.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !3902
  br label %bb2, !dbg !3902

bb2:                                              ; preds = %bb1
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hb4f4780068992a9bE(%"std::string::String"* align 8 dereferenceable(24) %_4, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1), !dbg !3901
  br label %bb3, !dbg !3901

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !3903
  %5 = load i8, i8* %0, align 1, !dbg !3904, !range !669
  %6 = trunc i8 %5 to i1, !dbg !3904
  ret i1 %6, !dbg !3904
}

; base64::display::Base64Display::with_config
; Function Attrs: nounwind
define void @_ZN6base647display13Base64Display11with_config17hb0c493ca9e3f6c59E(%"display::Base64Display"* noalias nocapture sret(%"display::Base64Display") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1, i24 %1) unnamed_addr #1 !dbg !3905 {
start:
  %2 = alloca i128, align 8
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca %Config, align 1
  %_4 = alloca %"chunked_encoder::ChunkedEncoder", align 8
  %3 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %1, i24* %3, align 4
  %4 = bitcast %Config* %config to i8*
  %5 = bitcast i24* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 4 %5, i64 3, i1 false)
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0
  store [0 x i8]* %bytes.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1
  store i64 %bytes.1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !3914, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !3915, metadata !DIExpression()), !dbg !3917
  %8 = bitcast %Config* %_5 to i8*, !dbg !3918
  %9 = bitcast %Config* %config to i8*, !dbg !3918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 3, i1 false), !dbg !3918
  %10 = bitcast %Config* %_5 to i24*, !dbg !3919
  %11 = load i24, i24* %10, align 1, !dbg !3919
; call base64::chunked_encoder::ChunkedEncoder::new
  %12 = call i128 @_ZN6base6415chunked_encoder14ChunkedEncoder3new17h23c62a5165c1e72dE(i24 %11), !dbg !3919
  store i128 %12, i128* %2, align 8, !dbg !3919
  %13 = bitcast %"chunked_encoder::ChunkedEncoder"* %_4 to i8*, !dbg !3919
  %14 = bitcast i128* %2 to i8*, !dbg !3919
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false), !dbg !3919
  br label %bb1, !dbg !3919

bb1:                                              ; preds = %start
  %15 = bitcast %"display::Base64Display"* %0 to { [0 x i8]*, i64 }*, !dbg !3920
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !3920
  store [0 x i8]* %bytes.0, [0 x i8]** %16, align 8, !dbg !3920
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !3920
  store i64 %bytes.1, i64* %17, align 8, !dbg !3920
  %18 = getelementptr inbounds %"display::Base64Display", %"display::Base64Display"* %0, i32 0, i32 1, !dbg !3920
  %19 = bitcast %"chunked_encoder::ChunkedEncoder"* %18 to i8*, !dbg !3920
  %20 = bitcast %"chunked_encoder::ChunkedEncoder"* %_4 to i8*, !dbg !3920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false), !dbg !3920
  ret void, !dbg !3921
}

; <base64::display::Base64Display as core::fmt::Display>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN69_$LT$base64..display..Base64Display$u20$as$u20$core..fmt..Display$GT$3fmt17h73b6e52abf80a8f1E"(%"display::Base64Display"* align 8 dereferenceable(32) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %formatter) unnamed_addr #1 !dbg !3922 {
start:
  %formatter.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"display::Base64Display"*, align 8
  %sink = alloca i64*, align 8
  store %"display::Base64Display"* %self, %"display::Base64Display"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"display::Base64Display"** %self.dbg.spill, metadata !3928, metadata !DIExpression()), !dbg !3932
  store %"std::fmt::Formatter"* %formatter, %"std::fmt::Formatter"** %formatter.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %formatter.dbg.spill, metadata !3929, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.declare(metadata i64** %sink, metadata !3930, metadata !DIExpression()), !dbg !3934
  %0 = bitcast i64** %sink to %"std::fmt::Formatter"**, !dbg !3935
  store %"std::fmt::Formatter"* %formatter, %"std::fmt::Formatter"** %0, align 8, !dbg !3935
  %_5 = getelementptr inbounds %"display::Base64Display", %"display::Base64Display"* %self, i32 0, i32 1, !dbg !3936
  %1 = bitcast %"display::Base64Display"* %self to { [0 x i8]*, i64 }*, !dbg !3937
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !3937
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !3937, !nonnull !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !3937
  %_6.1 = load i64, i64* %3, align 8, !dbg !3937
; call base64::chunked_encoder::ChunkedEncoder::encode
  %4 = call zeroext i1 @_ZN6base6415chunked_encoder14ChunkedEncoder6encode17hc729c4c2477484a9E(%"chunked_encoder::ChunkedEncoder"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64** align 8 dereferenceable(8) %sink), !dbg !3936
  br label %bb1, !dbg !3936

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !3938
}

; <base64::display::FormatterSink as base64::chunked_encoder::Sink>::write_encoded_bytes
; Function Attrs: nounwind
define zeroext i1 @"_ZN80_$LT$base64..display..FormatterSink$u20$as$u20$base64..chunked_encoder..Sink$GT$19write_encoded_bytes17h4ccfcedf507c6196E"(i64** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %encoded.0, i64 %encoded.1) unnamed_addr #1 !dbg !3939 {
start:
  %encoded.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_6 = alloca %"std::result::Result<&str, std::str::Utf8Error>", align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !3944, metadata !DIExpression()), !dbg !3946
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %encoded.dbg.spill, i32 0, i32 0
  store [0 x i8]* %encoded.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %encoded.dbg.spill, i32 0, i32 1
  store i64 %encoded.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %encoded.dbg.spill, metadata !3945, metadata !DIExpression()), !dbg !3947
  %2 = bitcast i64** %self to %"std::fmt::Formatter"**, !dbg !3948
  %_3 = load %"std::fmt::Formatter"*, %"std::fmt::Formatter"** %2, align 8, !dbg !3948, !nonnull !4
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817hbd7abfa9d190c3c9E(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture sret(%"std::result::Result<&str, std::str::Utf8Error>") dereferenceable(24) %_6, [0 x i8]* nonnull align 1 %encoded.0, i64 %encoded.1), !dbg !3949
  br label %bb1, !dbg !3949

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %3 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h620d377fa2cc28a2E"(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture dereferenceable(24) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [24 x i8] }>* @alloc632 to [0 x i8]*), i64 24, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc634 to %"std::panic::Location"*)), !dbg !3949
  %_5.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3949
  %_5.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3949
  br label %bb2, !dbg !3949

bb2:                                              ; preds = %bb1
; call core::fmt::Formatter::write_str
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h1c97a1e0c2250458E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %_3, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !3948
  br label %bb3, !dbg !3948

bb3:                                              ; preds = %bb2
  ret i1 %4, !dbg !3950
}

; base64::write::encoder::EncoderWriter<W>::new
; Function Attrs: nounwind
define void @"_ZN6base645write7encoder22EncoderWriter$LT$W$GT$3new17hdc67f4c08f466593E"(%"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* noalias nocapture sret(%"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>") dereferenceable(1072) %0, %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* noalias nocapture dereferenceable(24) %w, i24 %1) unnamed_addr #1 !dbg !3951 {
start:
  %_7 = alloca [1024 x i8], align 1
  %_6 = alloca [3 x i8], align 1
  %_5 = alloca %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>", align 8
  %_4 = alloca %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", align 8
  %_3 = alloca %Config, align 1
  %2 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %1, i24* %2, align 4
  %3 = bitcast %Config* %config to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  call void @llvm.dbg.declare(metadata %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* %w, metadata !3988, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !3989, metadata !DIExpression()), !dbg !3991
  %5 = bitcast %Config* %_3 to i8*, !dbg !3992
  %6 = bitcast %Config* %config to i8*, !dbg !3992
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 3, i1 false), !dbg !3992
  %7 = bitcast %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* %_5 to i8*, !dbg !3993
  %8 = bitcast %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* %w to i8*, !dbg !3993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !3993
  %9 = bitcast %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %_4 to %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>::Some"*, !dbg !3994
  %10 = bitcast %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>::Some"* %9 to %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"*, !dbg !3994
  %11 = bitcast %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* %10 to i8*, !dbg !3994
  %12 = bitcast %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* %_5 to i8*, !dbg !3994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !dbg !3994
  %13 = getelementptr inbounds [3 x i8], [3 x i8]* %_6, i64 0, i64 0, !dbg !3995
  call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 3, i1 false), !dbg !3995
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %_7, i64 0, i64 0, !dbg !3996
  call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 1024, i1 false), !dbg !3996
  %15 = getelementptr inbounds %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0, i32 0, i32 3, !dbg !3997
  %16 = bitcast %Config* %15 to i8*, !dbg !3997
  %17 = bitcast %Config* %_3 to i8*, !dbg !3997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 %17, i64 3, i1 false), !dbg !3997
  %18 = bitcast %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0 to %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"*, !dbg !3997
  %19 = bitcast %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %18 to i8*, !dbg !3997
  %20 = bitcast %"std::option::Option<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %_4 to i8*, !dbg !3997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !3997
  %21 = getelementptr inbounds %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0, i32 0, i32 4, !dbg !3997
  %22 = bitcast [3 x i8]* %21 to i8*, !dbg !3997
  %23 = bitcast [3 x i8]* %_6 to i8*, !dbg !3997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 3, i1 false), !dbg !3997
  %24 = getelementptr inbounds %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0, i32 0, i32 1, !dbg !3997
  store i64 0, i64* %24, align 8, !dbg !3997
  %25 = getelementptr inbounds %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0, i32 0, i32 5, !dbg !3997
  %26 = bitcast [1024 x i8]* %25 to i8*, !dbg !3997
  %27 = bitcast [1024 x i8]* %_7 to i8*, !dbg !3997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %26, i8* align 1 %27, i64 1024, i1 false), !dbg !3997
  %28 = getelementptr inbounds %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0, i32 0, i32 2, !dbg !3997
  store i64 0, i64* %28, align 8, !dbg !3997
  %29 = getelementptr inbounds %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %0, i32 0, i32 6, !dbg !3997
  store i8 0, i8* %29, align 2, !dbg !3997
  ret void, !dbg !3998
}

; base64::write::encoder_string_writer::EncoderStringWriter<S>::from
; Function Attrs: nounwind
define void @"_ZN6base645write21encoder_string_writer28EncoderStringWriter$LT$S$GT$4from17hea0732520b2d62aeE"(%"write::encoder_string_writer::EncoderStringWriter<std::string::String>"* noalias nocapture sret(%"write::encoder_string_writer::EncoderStringWriter<std::string::String>") dereferenceable(1072) %0, %"std::string::String"* noalias nocapture dereferenceable(24) %str_consumer, i24 %1) unnamed_addr #1 !dbg !3999 {
start:
  %_6 = alloca %Config, align 1
  %_5 = alloca %"std::string::String", align 8
  %_4 = alloca %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>", align 8
  %_3 = alloca %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>", align 8
  %2 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %1, i24* %2, align 4
  %3 = bitcast %Config* %config to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  call void @llvm.dbg.declare(metadata %"std::string::String"* %str_consumer, metadata !4007, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !4008, metadata !DIExpression()), !dbg !4010
  %5 = bitcast %"std::string::String"* %_5 to i8*, !dbg !4011
  %6 = bitcast %"std::string::String"* %str_consumer to i8*, !dbg !4011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !4011
  %7 = bitcast %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* %_4 to %"std::string::String"*, !dbg !4012
  %8 = bitcast %"std::string::String"* %7 to i8*, !dbg !4012
  %9 = bitcast %"std::string::String"* %_5 to i8*, !dbg !4012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !4012
  %10 = bitcast %Config* %_6 to i8*, !dbg !4013
  %11 = bitcast %Config* %config to i8*, !dbg !4013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 3, i1 false), !dbg !4013
  %12 = bitcast %Config* %_6 to i24*, !dbg !4014
  %13 = load i24, i24* %12, align 1, !dbg !4014
; call base64::write::encoder::EncoderWriter<W>::new
  call void @"_ZN6base645write7encoder22EncoderWriter$LT$W$GT$3new17hdc67f4c08f466593E"(%"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* noalias nocapture sret(%"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>") dereferenceable(1072) %_3, %"write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>"* noalias nocapture dereferenceable(24) %_4, i24 %13), !dbg !4014
  br label %bb1, !dbg !4014

bb1:                                              ; preds = %start
  %14 = bitcast %"write::encoder_string_writer::EncoderStringWriter<std::string::String>"* %0 to %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"*, !dbg !4015
  %15 = bitcast %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %14 to i8*, !dbg !4015
  %16 = bitcast %"write::encoder::EncoderWriter<write::encoder_string_writer::Utf8SingleCodeUnitWriter<std::string::String>>"* %_3 to i8*, !dbg !4015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 1072, i1 false), !dbg !4015
  ret void, !dbg !4016
}

; base64::write::encoder_string_writer::EncoderStringWriter<alloc::string::String>::new
; Function Attrs: nounwind
define void @"_ZN6base645write21encoder_string_writer48EncoderStringWriter$LT$alloc..string..String$GT$3new17h15920b6e573c987eE"(%"write::encoder_string_writer::EncoderStringWriter<std::string::String>"* noalias nocapture sret(%"write::encoder_string_writer::EncoderStringWriter<std::string::String>") dereferenceable(1072) %0, i24 %1) unnamed_addr #1 !dbg !4017 {
start:
  %_3 = alloca %Config, align 1
  %_2 = alloca %"std::string::String", align 8
  %2 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %1, i24* %2, align 4
  %3 = bitcast %Config* %config to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !4021, metadata !DIExpression()), !dbg !4022
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17h86acb02421f1b154E(%"std::string::String"* noalias nocapture sret(%"std::string::String") dereferenceable(24) %_2), !dbg !4023
  br label %bb1, !dbg !4023

bb1:                                              ; preds = %start
  %5 = bitcast %Config* %_3 to i8*, !dbg !4024
  %6 = bitcast %Config* %config to i8*, !dbg !4024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 3, i1 false), !dbg !4024
  %7 = bitcast %Config* %_3 to i24*, !dbg !4025
  %8 = load i24, i24* %7, align 1, !dbg !4025
; call base64::write::encoder_string_writer::EncoderStringWriter<S>::from
  call void @"_ZN6base645write21encoder_string_writer28EncoderStringWriter$LT$S$GT$4from17hea0732520b2d62aeE"(%"write::encoder_string_writer::EncoderStringWriter<std::string::String>"* noalias nocapture sret(%"write::encoder_string_writer::EncoderStringWriter<std::string::String>") dereferenceable(1072) %0, %"std::string::String"* noalias nocapture dereferenceable(24) %_2, i24 %8), !dbg !4025
  br label %bb2, !dbg !4025

bb2:                                              ; preds = %bb1
  ret void, !dbg !4026
}

; <alloc::string::String as base64::write::encoder_string_writer::StrConsumer>::consume
; Function Attrs: nounwind
define void @"_ZN91_$LT$alloc..string..String$u20$as$u20$base64..write..encoder_string_writer..StrConsumer$GT$7consume17he758247ec10bfce0E"(%"std::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %buf.0, i64 %buf.1) unnamed_addr #1 !dbg !4027 {
start:
  %buf.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"std::string::String"*, align 8
  store %"std::string::String"* %self, %"std::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::string::String"** %self.dbg.spill, metadata !4030, metadata !DIExpression()), !dbg !4032
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf.dbg.spill, i32 0, i32 0
  store [0 x i8]* %buf.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf.dbg.spill, i32 0, i32 1
  store i64 %buf.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %buf.dbg.spill, metadata !4031, metadata !DIExpression()), !dbg !4033
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hb4f4780068992a9bE(%"std::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %buf.0, i64 %buf.1), !dbg !4034
  br label %bb1, !dbg !4034

bb1:                                              ; preds = %start
  ret void, !dbg !4035
}

; base64::encode::encode_with_padding
; Function Attrs: nounwind
define void @_ZN6base646encode19encode_with_padding17h1ee6cd47bb3955dfE([0 x i8]* nonnull align 1 %input.0, i64 %input.1, i24 %0, i64 %1, [0 x i8]* nonnull align 1 %output.0, i64 %output.1) unnamed_addr #1 !dbg !4036 {
start:
  %right_val.dbg.spill5 = alloca i64*, align 8
  %left_val.dbg.spill3 = alloca i64*, align 8
  %b64_bytes_written.dbg.spill = alloca i64, align 8
  %right_val.dbg.spill = alloca i64*, align 8
  %left_val.dbg.spill = alloca i64*, align 8
  %output.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %input.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_60 = alloca %"std::option::Option<std::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_45 = alloca { i64*, i64* }, align 8
  %encoded_bytes = alloca i64, align 8
  %_37 = alloca i64, align 8
  %padding_bytes = alloca i64, align 8
  %_22 = alloca %"std::option::Option<std::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_8 = alloca i64, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %encoded_size = alloca i64, align 8
  %2 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %0, i24* %2, align 4
  %3 = bitcast %Config* %config to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  store i64 %1, i64* %encoded_size, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input.dbg.spill, i32 0, i32 0
  store [0 x i8]* %input.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input.dbg.spill, i32 0, i32 1
  store i64 %input.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %input.dbg.spill, metadata !4041, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !4042, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.declare(metadata i64* %encoded_size, metadata !4043, metadata !DIExpression()), !dbg !4067
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output.dbg.spill, i32 0, i32 0
  store [0 x i8]* %output.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output.dbg.spill, i32 0, i32 1
  store i64 %output.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %output.dbg.spill, metadata !4044, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !4049, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.declare(metadata i64* %padding_bytes, metadata !4054, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.declare(metadata i64* %encoded_bytes, metadata !4056, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !4062, metadata !DIExpression()), !dbg !4072
  store i64 %output.1, i64* %_8, align 8, !dbg !4073
  %9 = bitcast { i64*, i64* }* %_5 to i64**, !dbg !4074
  store i64* %encoded_size, i64** %9, align 8, !dbg !4074
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !4074
  store i64* %_8, i64** %10, align 8, !dbg !4074
  %11 = bitcast { i64*, i64* }* %_5 to i64**, !dbg !4074
  %left_val = load i64*, i64** %11, align 8, !dbg !4074, !nonnull !4
  store i64* %left_val, i64** %left_val.dbg.spill, align 8, !dbg !4074
  call void @llvm.dbg.declare(metadata i64** %left_val.dbg.spill, metadata !4045, metadata !DIExpression()), !dbg !4075
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !4074
  %right_val = load i64*, i64** %12, align 8, !dbg !4074, !nonnull !4
  store i64* %right_val, i64** %right_val.dbg.spill, align 8, !dbg !4074
  call void @llvm.dbg.declare(metadata i64** %right_val.dbg.spill, metadata !4048, metadata !DIExpression()), !dbg !4075
  %_14 = load i64, i64* %left_val, align 8, !dbg !4075
  %_15 = load i64, i64* %right_val, align 8, !dbg !4075
  %_13 = icmp eq i64 %_14, %_15, !dbg !4075
  %_12 = xor i1 %_13, true, !dbg !4075
  br i1 %_12, label %bb1, label %bb2, !dbg !4075

bb2:                                              ; preds = %start
  %13 = bitcast %Config* %config to i8*, !dbg !4076
  %_28 = load i8, i8* %13, align 1, !dbg !4076, !range !3827
; call base64::CharacterSet::encode_table
  %_27 = call align 1 dereferenceable(64) [64 x i8]* @_ZN6base6412CharacterSet12encode_table17h9d36b7121cb3fda5E(i8 %_28), !dbg !4076
  br label %bb3, !dbg !4076

bb1:                                              ; preds = %start
  store i8 0, i8* %kind, align 1, !dbg !4075
  %14 = bitcast %"std::option::Option<std::fmt::Arguments>"* %_22 to {}**, !dbg !4069
  store {}* null, {}** %14, align 8, !dbg !4069
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h40df432cd6565ea0E(i8 0, i64* align 8 dereferenceable(8) %left_val, i64* align 8 dereferenceable(8) %right_val, %"std::option::Option<std::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_22, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc638 to %"std::panic::Location"*)), !dbg !4069
  unreachable, !dbg !4069

bb3:                                              ; preds = %bb2
; call base64::encode::encode_to_slice
  %b64_bytes_written = call i64 @_ZN6base646encode15encode_to_slice17h9d7946914443da15E([0 x i8]* nonnull align 1 %input.0, i64 %input.1, [0 x i8]* nonnull align 1 %output.0, i64 %output.1, [64 x i8]* align 1 dereferenceable(64) %_27), !dbg !4077
  store i64 %b64_bytes_written, i64* %b64_bytes_written.dbg.spill, align 8, !dbg !4077
  call void @llvm.dbg.declare(metadata i64* %b64_bytes_written.dbg.spill, metadata !4052, metadata !DIExpression()), !dbg !4078
  br label %bb4, !dbg !4077

bb4:                                              ; preds = %bb3
  %15 = getelementptr inbounds %Config, %Config* %config, i32 0, i32 1, !dbg !4079
  %16 = load i8, i8* %15, align 1, !dbg !4079, !range !669
  %_30 = trunc i8 %16 to i1, !dbg !4079
  br i1 %_30, label %bb5, label %bb7, !dbg !4079

bb7:                                              ; preds = %bb4
  store i64 0, i64* %padding_bytes, align 8, !dbg !4080
  br label %bb8, !dbg !4081

bb5:                                              ; preds = %bb4
  store i64 %b64_bytes_written, i64* %_37, align 8, !dbg !4082
  %17 = load i64, i64* %_37, align 8, !dbg !4083
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %18 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56f891b2dcb4eeb3E"([0 x i8]* nonnull align 1 %output.0, i64 %output.1, i64 %17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc640 to %"std::panic::Location"*)), !dbg !4083
  %_35.0 = extractvalue { [0 x i8]*, i64 } %18, 0, !dbg !4083
  %_35.1 = extractvalue { [0 x i8]*, i64 } %18, 1, !dbg !4083
  br label %bb6, !dbg !4083

bb6:                                              ; preds = %bb5
; call base64::encode::add_padding
  %19 = call i64 @_ZN6base646encode11add_padding17h9d64c96abebfa52eE(i64 %input.1, [0 x i8]* nonnull align 1 %_35.0, i64 %_35.1), !dbg !4084
  store i64 %19, i64* %padding_bytes, align 8, !dbg !4084
  br label %bb8, !dbg !4084

bb8:                                              ; preds = %bb7, %bb6
  %_42 = load i64, i64* %padding_bytes, align 8, !dbg !4085
; call core::num::<impl usize>::checked_add
  %20 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E"(i64 %b64_bytes_written, i64 %_42), !dbg !4086
  %_40.0 = extractvalue { i64, i64 } %20, 0, !dbg !4086
  %_40.1 = extractvalue { i64, i64 } %20, 1, !dbg !4086
  br label %bb9, !dbg !4086

bb9:                                              ; preds = %bb8
; call core::option::Option<T>::expect
  %21 = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h57e4f65c536141c1E"(i64 %_40.0, i64 %_40.1, [0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc641 to [0 x i8]*), i64 42, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc643 to %"std::panic::Location"*)), !dbg !4086
  store i64 %21, i64* %encoded_bytes, align 8, !dbg !4086
  br label %bb10, !dbg !4086

bb10:                                             ; preds = %bb9
  %22 = bitcast { i64*, i64* }* %_45 to i64**, !dbg !4087
  store i64* %encoded_size, i64** %22, align 8, !dbg !4087
  %23 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_45, i32 0, i32 1, !dbg !4087
  store i64* %encoded_bytes, i64** %23, align 8, !dbg !4087
  %24 = bitcast { i64*, i64* }* %_45 to i64**, !dbg !4087
  %left_val2 = load i64*, i64** %24, align 8, !dbg !4087, !nonnull !4
  store i64* %left_val2, i64** %left_val.dbg.spill3, align 8, !dbg !4087
  call void @llvm.dbg.declare(metadata i64** %left_val.dbg.spill3, metadata !4058, metadata !DIExpression()), !dbg !4088
  %25 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_45, i32 0, i32 1, !dbg !4087
  %right_val4 = load i64*, i64** %25, align 8, !dbg !4087, !nonnull !4
  store i64* %right_val4, i64** %right_val.dbg.spill5, align 8, !dbg !4087
  call void @llvm.dbg.declare(metadata i64** %right_val.dbg.spill5, metadata !4061, metadata !DIExpression()), !dbg !4088
  %_52 = load i64, i64* %left_val2, align 8, !dbg !4088
  %_53 = load i64, i64* %right_val4, align 8, !dbg !4088
  %_51 = icmp eq i64 %_52, %_53, !dbg !4088
  %_50 = xor i1 %_51, true, !dbg !4088
  br i1 %_50, label %bb11, label %bb12, !dbg !4088

bb12:                                             ; preds = %bb10
  ret void, !dbg !4089

bb11:                                             ; preds = %bb10
  store i8 0, i8* %kind1, align 1, !dbg !4088
  %26 = bitcast %"std::option::Option<std::fmt::Arguments>"* %_60 to {}**, !dbg !4072
  store {}* null, {}** %26, align 8, !dbg !4072
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h40df432cd6565ea0E(i8 0, i64* align 8 dereferenceable(8) %left_val2, i64* align 8 dereferenceable(8) %right_val4, %"std::option::Option<std::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_60, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc645 to %"std::panic::Location"*)), !dbg !4072
  unreachable, !dbg !4072
}

; base64::encode::read_u64
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN6base646encode8read_u6417h649c0944f46a022aE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !4090 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i72, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca i64, align 8
  %_3 = alloca %"std::result::Result<[u8; 8], std::array::TryFromSliceError>", align 1
  %_2 = alloca [8 x i8], align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !4094, metadata !DIExpression()), !dbg !4095
  store i64 8, i64* %_7, align 8, !dbg !4096
  %4 = load i64, i64* %_7, align 8, !dbg !4097
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %5 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17he7b9d962652cc13aE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %4, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc647 to %"std::panic::Location"*)), !dbg !4097
  %_5.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !4097
  %_5.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !4097
  br label %bb1, !dbg !4097

bb1:                                              ; preds = %start
; call <T as core::convert::TryInto<U>>::try_into
  %6 = call i72 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h8a1e94ac34abf8afE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !4097
  store i72 %6, i72* %1, align 8, !dbg !4097
  %7 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %_3 to i8*, !dbg !4097
  %8 = bitcast i72* %1 to i8*, !dbg !4097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %8, i64 9, i1 false), !dbg !4097
  br label %bb2, !dbg !4097

bb2:                                              ; preds = %bb1
  %9 = bitcast %"std::result::Result<[u8; 8], std::array::TryFromSliceError>"* %_3 to i72*, !dbg !4097
  %10 = load i72, i72* %9, align 1, !dbg !4097
; call core::result::Result<T,E>::unwrap
  %11 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h24feb326e3ba8f0cE"(i72 %10, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc649 to %"std::panic::Location"*)), !dbg !4097
  store i64 %11, i64* %0, align 8, !dbg !4097
  %12 = bitcast [8 x i8]* %_2 to i8*, !dbg !4097
  %13 = bitcast i64* %0 to i8*, !dbg !4097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 8 %13, i64 8, i1 false), !dbg !4097
  br label %bb3, !dbg !4097

bb3:                                              ; preds = %bb2
  %14 = bitcast [8 x i8]* %_2 to i64*, !dbg !4098
  %15 = load i64, i64* %14, align 1, !dbg !4098
; call core::num::<impl u64>::from_be_bytes
  %16 = call i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$13from_be_bytes17hf082046d9e109eaeE"(i64 %15), !dbg !4098
  br label %bb4, !dbg !4098

bb4:                                              ; preds = %bb3
  ret i64 %16, !dbg !4099
}

; base64::encode::encode_to_slice
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN6base646encode15encode_to_slice17h9d7946914443da15E([0 x i8]* nonnull align 1 %input.0, i64 %input.1, [0 x i8]* nonnull align 1 %output.0, i64 %output.1, [64 x i8]* align 1 dereferenceable(64) %encode_table) unnamed_addr #0 !dbg !4100 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %output_chunk.dbg.spill78 = alloca { [0 x i8]*, i64 }, align 8
  %input_chunk.dbg.spill76 = alloca { [0 x i8]*, i64 }, align 8
  %start_of_rem.dbg.spill = alloca i64, align 8
  %rem.dbg.spill = alloca i64, align 8
  %input_u64.dbg.spill55 = alloca i64, align 8
  %input_u64.dbg.spill37 = alloca i64, align 8
  %input_u64.dbg.spill19 = alloca i64, align 8
  %input_u64.dbg.spill = alloca i64, align 8
  %output_chunk.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %input_chunk.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %last_fast_index.dbg.spill = alloca i64, align 8
  %encode_table.dbg.spill = alloca [64 x i8]*, align 8
  %output.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %input.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_434 = alloca { i64, i64 }, align 8
  %_426 = alloca { i64, i64 }, align 8
  %_319 = alloca i64, align 8
  %_225 = alloca i64, align 8
  %_131 = alloca i64, align 8
  %_37 = alloca i64, align 8
  %_26 = alloca { i64, i64 }, align 8
  %_17 = alloca { i64, i64 }, align 8
  %input_index = alloca i64, align 8
  %output_index = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %output_index, metadata !4111, metadata !DIExpression()), !dbg !4133
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input.dbg.spill, i32 0, i32 0
  store [0 x i8]* %input.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input.dbg.spill, i32 0, i32 1
  store i64 %input.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %input.dbg.spill, metadata !4104, metadata !DIExpression()), !dbg !4134
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output.dbg.spill, i32 0, i32 0
  store [0 x i8]* %output.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output.dbg.spill, i32 0, i32 1
  store i64 %output.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %output.dbg.spill, metadata !4105, metadata !DIExpression()), !dbg !4135
  store [64 x i8]* %encode_table, [64 x i8]** %encode_table.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [64 x i8]** %encode_table.dbg.spill, metadata !4106, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata i64* %input_index, metadata !4107, metadata !DIExpression()), !dbg !4137
  store i64 0, i64* %input_index, align 8, !dbg !4138
  store i64 %input.1, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !4139, metadata !DIExpression()) #12, !dbg !4143
  store i64 26, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !4142, metadata !DIExpression()) #12, !dbg !4145
  %5 = call i64 @llvm.usub.sat.i64(i64 %input.1, i64 26) #12, !dbg !4146
  store i64 %5, i64* %0, align 8, !dbg !4146
  %6 = load i64, i64* %0, align 8, !dbg !4146
  store i64 %6, i64* %last_fast_index.dbg.spill, align 8, !dbg !4147
  call void @llvm.dbg.declare(metadata i64* %last_fast_index.dbg.spill, metadata !4109, metadata !DIExpression()), !dbg !4148
  br label %bb1, !dbg !4147

bb1:                                              ; preds = %start
  store i64 0, i64* %output_index, align 8, !dbg !4149
  %_9 = icmp ugt i64 %6, 0, !dbg !4150
  br i1 %_9, label %bb2, label %bb114, !dbg !4150

bb114:                                            ; preds = %bb2, %bb1
  %rem = urem i64 %input.1, 3, !dbg !4151
  store i64 %rem, i64* %rem.dbg.spill, align 8, !dbg !4151
  call void @llvm.dbg.declare(metadata i64* %rem.dbg.spill, metadata !4125, metadata !DIExpression()), !dbg !4152
  %7 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %input.1, i64 %rem), !dbg !4153
  %_419.0 = extractvalue { i64, i1 } %7, 0, !dbg !4153
  %_419.1 = extractvalue { i64, i1 } %7, 1, !dbg !4153
  %8 = call i1 @llvm.expect.i1(i1 %_419.1, i1 false), !dbg !4153
  br i1 %8, label %panic74, label %bb115, !dbg !4153

bb2:                                              ; preds = %bb113, %bb1
  %_12 = load i64, i64* %input_index, align 8, !dbg !4154
  %_11 = icmp ule i64 %_12, %6, !dbg !4154
  br i1 %_11, label %bb3, label %bb114, !dbg !4154

bb3:                                              ; preds = %bb2
  %_18 = load i64, i64* %input_index, align 8, !dbg !4155
  %_20 = load i64, i64* %input_index, align 8, !dbg !4156
  %9 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_20, i64 26), !dbg !4157
  %_22.0 = extractvalue { i64, i1 } %9, 0, !dbg !4157
  %_22.1 = extractvalue { i64, i1 } %9, 1, !dbg !4157
  %10 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !4157
  br i1 %10, label %panic, label %bb4, !dbg !4157

bb4:                                              ; preds = %bb3
  %11 = bitcast { i64, i64 }* %_17 to i64*, !dbg !4155
  store i64 %_18, i64* %11, align 8, !dbg !4155
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_17, i32 0, i32 1, !dbg !4155
  store i64 %_22.0, i64* %12, align 8, !dbg !4155
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_17, i32 0, i32 0, !dbg !4158
  %14 = load i64, i64* %13, align 8, !dbg !4158
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_17, i32 0, i32 1, !dbg !4158
  %16 = load i64, i64* %15, align 8, !dbg !4158
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %17 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18ebf1aaf5f6628fE"([0 x i8]* nonnull align 1 %input.0, i64 %input.1, i64 %14, i64 %16, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc653 to %"std::panic::Location"*)), !dbg !4158
  %_15.0 = extractvalue { [0 x i8]*, i64 } %17, 0, !dbg !4158
  %_15.1 = extractvalue { [0 x i8]*, i64 } %17, 1, !dbg !4158
  br label %bb5, !dbg !4158

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc651 to %"std::panic::Location"*)), !dbg !4157
  unreachable, !dbg !4157

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input_chunk.dbg.spill, i32 0, i32 0, !dbg !4159
  store [0 x i8]* %_15.0, [0 x i8]** %18, align 8, !dbg !4159
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input_chunk.dbg.spill, i32 0, i32 1, !dbg !4159
  store i64 %_15.1, i64* %19, align 8, !dbg !4159
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %input_chunk.dbg.spill, metadata !4113, metadata !DIExpression()), !dbg !4160
  %_27 = load i64, i64* %output_index, align 8, !dbg !4161
  %_29 = load i64, i64* %output_index, align 8, !dbg !4162
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_29, i64 32), !dbg !4163
  %_31.0 = extractvalue { i64, i1 } %20, 0, !dbg !4163
  %_31.1 = extractvalue { i64, i1 } %20, 1, !dbg !4163
  %21 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !4163
  br i1 %21, label %panic1, label %bb6, !dbg !4163

bb6:                                              ; preds = %bb5
  %22 = bitcast { i64, i64 }* %_26 to i64*, !dbg !4161
  store i64 %_27, i64* %22, align 8, !dbg !4161
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 1, !dbg !4161
  store i64 %_31.0, i64* %23, align 8, !dbg !4161
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 0, !dbg !4164
  %25 = load i64, i64* %24, align 8, !dbg !4164
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_26, i32 0, i32 1, !dbg !4164
  %27 = load i64, i64* %26, align 8, !dbg !4164
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %28 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h22af83885446f654E"([0 x i8]* nonnull align 1 %output.0, i64 %output.1, i64 %25, i64 %27, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc657 to %"std::panic::Location"*)), !dbg !4164
  %_24.0 = extractvalue { [0 x i8]*, i64 } %28, 0, !dbg !4164
  %_24.1 = extractvalue { [0 x i8]*, i64 } %28, 1, !dbg !4164
  br label %bb7, !dbg !4164

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc655 to %"std::panic::Location"*)), !dbg !4163
  unreachable, !dbg !4163

bb7:                                              ; preds = %bb6
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output_chunk.dbg.spill, i32 0, i32 0, !dbg !4165
  store [0 x i8]* %_24.0, [0 x i8]** %29, align 8, !dbg !4165
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output_chunk.dbg.spill, i32 0, i32 1, !dbg !4165
  store i64 %_24.1, i64* %30, align 8, !dbg !4165
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %output_chunk.dbg.spill, metadata !4115, metadata !DIExpression()), !dbg !4166
  store i64 0, i64* %_37, align 8, !dbg !4167
  %31 = load i64, i64* %_37, align 8, !dbg !4168
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %32 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h237b54ed02ea05a2E"([0 x i8]* nonnull align 1 %_15.0, i64 %_15.1, i64 %31, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc659 to %"std::panic::Location"*)), !dbg !4168
  %_35.0 = extractvalue { [0 x i8]*, i64 } %32, 0, !dbg !4168
  %_35.1 = extractvalue { [0 x i8]*, i64 } %32, 1, !dbg !4168
  br label %bb8, !dbg !4168

bb8:                                              ; preds = %bb7
; call base64::encode::read_u64
  %input_u64 = call i64 @_ZN6base646encode8read_u6417h649c0944f46a022aE([0 x i8]* nonnull align 1 %_35.0, i64 %_35.1), !dbg !4169
  store i64 %input_u64, i64* %input_u64.dbg.spill, align 8, !dbg !4169
  call void @llvm.dbg.declare(metadata i64* %input_u64.dbg.spill, metadata !4117, metadata !DIExpression()), !dbg !4170
  br label %bb9, !dbg !4169

bb9:                                              ; preds = %bb8
  %_43.0 = lshr i64 %input_u64, 58, !dbg !4171
  br label %bb10, !dbg !4171

bb10:                                             ; preds = %bb9
  %_40 = and i64 %_43.0, 63, !dbg !4172
  %_45 = icmp ult i64 %_40, 64, !dbg !4173
  %33 = call i1 @llvm.expect.i1(i1 %_45, i1 true), !dbg !4173
  br i1 %33, label %bb11, label %panic2, !dbg !4173

bb11:                                             ; preds = %bb10
  %34 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_40, !dbg !4173
  %_38 = load i8, i8* %34, align 1, !dbg !4173
  %_48 = icmp ult i64 0, %_24.1, !dbg !4174
  %35 = call i1 @llvm.expect.i1(i1 %_48, i1 true), !dbg !4174
  br i1 %35, label %bb12, label %panic3, !dbg !4174

panic2:                                           ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_40, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"std::panic::Location"*)), !dbg !4173
  unreachable, !dbg !4173

bb12:                                             ; preds = %bb11
  %36 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 0, !dbg !4174
  store i8 %_38, i8* %36, align 1, !dbg !4174
  %_54.0 = lshr i64 %input_u64, 52, !dbg !4175
  br label %bb13, !dbg !4175

panic3:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 0, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc663 to %"std::panic::Location"*)), !dbg !4174
  unreachable, !dbg !4174

bb13:                                             ; preds = %bb12
  %_51 = and i64 %_54.0, 63, !dbg !4176
  %_56 = icmp ult i64 %_51, 64, !dbg !4177
  %37 = call i1 @llvm.expect.i1(i1 %_56, i1 true), !dbg !4177
  br i1 %37, label %bb14, label %panic4, !dbg !4177

bb14:                                             ; preds = %bb13
  %38 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_51, !dbg !4177
  %_49 = load i8, i8* %38, align 1, !dbg !4177
  %_59 = icmp ult i64 1, %_24.1, !dbg !4178
  %39 = call i1 @llvm.expect.i1(i1 %_59, i1 true), !dbg !4178
  br i1 %39, label %bb15, label %panic5, !dbg !4178

panic4:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_51, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc665 to %"std::panic::Location"*)), !dbg !4177
  unreachable, !dbg !4177

bb15:                                             ; preds = %bb14
  %40 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 1, !dbg !4178
  store i8 %_49, i8* %40, align 1, !dbg !4178
  %_65.0 = lshr i64 %input_u64, 46, !dbg !4179
  br label %bb16, !dbg !4179

panic5:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 1, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc667 to %"std::panic::Location"*)), !dbg !4178
  unreachable, !dbg !4178

bb16:                                             ; preds = %bb15
  %_62 = and i64 %_65.0, 63, !dbg !4180
  %_67 = icmp ult i64 %_62, 64, !dbg !4181
  %41 = call i1 @llvm.expect.i1(i1 %_67, i1 true), !dbg !4181
  br i1 %41, label %bb17, label %panic6, !dbg !4181

bb17:                                             ; preds = %bb16
  %42 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_62, !dbg !4181
  %_60 = load i8, i8* %42, align 1, !dbg !4181
  %_70 = icmp ult i64 2, %_24.1, !dbg !4182
  %43 = call i1 @llvm.expect.i1(i1 %_70, i1 true), !dbg !4182
  br i1 %43, label %bb18, label %panic7, !dbg !4182

panic6:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_62, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc669 to %"std::panic::Location"*)), !dbg !4181
  unreachable, !dbg !4181

bb18:                                             ; preds = %bb17
  %44 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 2, !dbg !4182
  store i8 %_60, i8* %44, align 1, !dbg !4182
  %_76.0 = lshr i64 %input_u64, 40, !dbg !4183
  br label %bb19, !dbg !4183

panic7:                                           ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 2, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc671 to %"std::panic::Location"*)), !dbg !4182
  unreachable, !dbg !4182

bb19:                                             ; preds = %bb18
  %_73 = and i64 %_76.0, 63, !dbg !4184
  %_78 = icmp ult i64 %_73, 64, !dbg !4185
  %45 = call i1 @llvm.expect.i1(i1 %_78, i1 true), !dbg !4185
  br i1 %45, label %bb20, label %panic8, !dbg !4185

bb20:                                             ; preds = %bb19
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_73, !dbg !4185
  %_71 = load i8, i8* %46, align 1, !dbg !4185
  %_81 = icmp ult i64 3, %_24.1, !dbg !4186
  %47 = call i1 @llvm.expect.i1(i1 %_81, i1 true), !dbg !4186
  br i1 %47, label %bb21, label %panic9, !dbg !4186

panic8:                                           ; preds = %bb19
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_73, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc673 to %"std::panic::Location"*)), !dbg !4185
  unreachable, !dbg !4185

bb21:                                             ; preds = %bb20
  %48 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 3, !dbg !4186
  store i8 %_71, i8* %48, align 1, !dbg !4186
  %_87.0 = lshr i64 %input_u64, 34, !dbg !4187
  br label %bb22, !dbg !4187

panic9:                                           ; preds = %bb20
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 3, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc675 to %"std::panic::Location"*)), !dbg !4186
  unreachable, !dbg !4186

bb22:                                             ; preds = %bb21
  %_84 = and i64 %_87.0, 63, !dbg !4188
  %_89 = icmp ult i64 %_84, 64, !dbg !4189
  %49 = call i1 @llvm.expect.i1(i1 %_89, i1 true), !dbg !4189
  br i1 %49, label %bb23, label %panic10, !dbg !4189

bb23:                                             ; preds = %bb22
  %50 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_84, !dbg !4189
  %_82 = load i8, i8* %50, align 1, !dbg !4189
  %_92 = icmp ult i64 4, %_24.1, !dbg !4190
  %51 = call i1 @llvm.expect.i1(i1 %_92, i1 true), !dbg !4190
  br i1 %51, label %bb24, label %panic11, !dbg !4190

panic10:                                          ; preds = %bb22
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_84, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc677 to %"std::panic::Location"*)), !dbg !4189
  unreachable, !dbg !4189

bb24:                                             ; preds = %bb23
  %52 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 4, !dbg !4190
  store i8 %_82, i8* %52, align 1, !dbg !4190
  %_98.0 = lshr i64 %input_u64, 28, !dbg !4191
  br label %bb25, !dbg !4191

panic11:                                          ; preds = %bb23
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 4, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc679 to %"std::panic::Location"*)), !dbg !4190
  unreachable, !dbg !4190

bb25:                                             ; preds = %bb24
  %_95 = and i64 %_98.0, 63, !dbg !4192
  %_100 = icmp ult i64 %_95, 64, !dbg !4193
  %53 = call i1 @llvm.expect.i1(i1 %_100, i1 true), !dbg !4193
  br i1 %53, label %bb26, label %panic12, !dbg !4193

bb26:                                             ; preds = %bb25
  %54 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_95, !dbg !4193
  %_93 = load i8, i8* %54, align 1, !dbg !4193
  %_103 = icmp ult i64 5, %_24.1, !dbg !4194
  %55 = call i1 @llvm.expect.i1(i1 %_103, i1 true), !dbg !4194
  br i1 %55, label %bb27, label %panic13, !dbg !4194

panic12:                                          ; preds = %bb25
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_95, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc681 to %"std::panic::Location"*)), !dbg !4193
  unreachable, !dbg !4193

bb27:                                             ; preds = %bb26
  %56 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 5, !dbg !4194
  store i8 %_93, i8* %56, align 1, !dbg !4194
  %_109.0 = lshr i64 %input_u64, 22, !dbg !4195
  br label %bb28, !dbg !4195

panic13:                                          ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 5, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc683 to %"std::panic::Location"*)), !dbg !4194
  unreachable, !dbg !4194

bb28:                                             ; preds = %bb27
  %_106 = and i64 %_109.0, 63, !dbg !4196
  %_111 = icmp ult i64 %_106, 64, !dbg !4197
  %57 = call i1 @llvm.expect.i1(i1 %_111, i1 true), !dbg !4197
  br i1 %57, label %bb29, label %panic14, !dbg !4197

bb29:                                             ; preds = %bb28
  %58 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_106, !dbg !4197
  %_104 = load i8, i8* %58, align 1, !dbg !4197
  %_114 = icmp ult i64 6, %_24.1, !dbg !4198
  %59 = call i1 @llvm.expect.i1(i1 %_114, i1 true), !dbg !4198
  br i1 %59, label %bb30, label %panic15, !dbg !4198

panic14:                                          ; preds = %bb28
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_106, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc685 to %"std::panic::Location"*)), !dbg !4197
  unreachable, !dbg !4197

bb30:                                             ; preds = %bb29
  %60 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 6, !dbg !4198
  store i8 %_104, i8* %60, align 1, !dbg !4198
  %_120.0 = lshr i64 %input_u64, 16, !dbg !4199
  br label %bb31, !dbg !4199

panic15:                                          ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 6, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc687 to %"std::panic::Location"*)), !dbg !4198
  unreachable, !dbg !4198

bb31:                                             ; preds = %bb30
  %_117 = and i64 %_120.0, 63, !dbg !4200
  %_122 = icmp ult i64 %_117, 64, !dbg !4201
  %61 = call i1 @llvm.expect.i1(i1 %_122, i1 true), !dbg !4201
  br i1 %61, label %bb32, label %panic16, !dbg !4201

bb32:                                             ; preds = %bb31
  %62 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_117, !dbg !4201
  %_115 = load i8, i8* %62, align 1, !dbg !4201
  %_125 = icmp ult i64 7, %_24.1, !dbg !4202
  %63 = call i1 @llvm.expect.i1(i1 %_125, i1 true), !dbg !4202
  br i1 %63, label %bb33, label %panic17, !dbg !4202

panic16:                                          ; preds = %bb31
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_117, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc689 to %"std::panic::Location"*)), !dbg !4201
  unreachable, !dbg !4201

bb33:                                             ; preds = %bb32
  %64 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 7, !dbg !4202
  store i8 %_115, i8* %64, align 1, !dbg !4202
  store i64 6, i64* %_131, align 8, !dbg !4203
  %65 = load i64, i64* %_131, align 8, !dbg !4204
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %66 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h237b54ed02ea05a2E"([0 x i8]* nonnull align 1 %_15.0, i64 %_15.1, i64 %65, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc693 to %"std::panic::Location"*)), !dbg !4204
  %_129.0 = extractvalue { [0 x i8]*, i64 } %66, 0, !dbg !4204
  %_129.1 = extractvalue { [0 x i8]*, i64 } %66, 1, !dbg !4204
  br label %bb34, !dbg !4204

panic17:                                          ; preds = %bb32
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 7, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc691 to %"std::panic::Location"*)), !dbg !4202
  unreachable, !dbg !4202

bb34:                                             ; preds = %bb33
; call base64::encode::read_u64
  %input_u6418 = call i64 @_ZN6base646encode8read_u6417h649c0944f46a022aE([0 x i8]* nonnull align 1 %_129.0, i64 %_129.1), !dbg !4205
  store i64 %input_u6418, i64* %input_u64.dbg.spill19, align 8, !dbg !4205
  call void @llvm.dbg.declare(metadata i64* %input_u64.dbg.spill19, metadata !4119, metadata !DIExpression()), !dbg !4206
  br label %bb35, !dbg !4205

bb35:                                             ; preds = %bb34
  %_137.0 = lshr i64 %input_u6418, 58, !dbg !4207
  br label %bb36, !dbg !4207

bb36:                                             ; preds = %bb35
  %_134 = and i64 %_137.0, 63, !dbg !4208
  %_139 = icmp ult i64 %_134, 64, !dbg !4209
  %67 = call i1 @llvm.expect.i1(i1 %_139, i1 true), !dbg !4209
  br i1 %67, label %bb37, label %panic20, !dbg !4209

bb37:                                             ; preds = %bb36
  %68 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_134, !dbg !4209
  %_132 = load i8, i8* %68, align 1, !dbg !4209
  %_142 = icmp ult i64 8, %_24.1, !dbg !4210
  %69 = call i1 @llvm.expect.i1(i1 %_142, i1 true), !dbg !4210
  br i1 %69, label %bb38, label %panic21, !dbg !4210

panic20:                                          ; preds = %bb36
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_134, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc695 to %"std::panic::Location"*)), !dbg !4209
  unreachable, !dbg !4209

bb38:                                             ; preds = %bb37
  %70 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 8, !dbg !4210
  store i8 %_132, i8* %70, align 1, !dbg !4210
  %_148.0 = lshr i64 %input_u6418, 52, !dbg !4211
  br label %bb39, !dbg !4211

panic21:                                          ; preds = %bb37
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 8, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc697 to %"std::panic::Location"*)), !dbg !4210
  unreachable, !dbg !4210

bb39:                                             ; preds = %bb38
  %_145 = and i64 %_148.0, 63, !dbg !4212
  %_150 = icmp ult i64 %_145, 64, !dbg !4213
  %71 = call i1 @llvm.expect.i1(i1 %_150, i1 true), !dbg !4213
  br i1 %71, label %bb40, label %panic22, !dbg !4213

bb40:                                             ; preds = %bb39
  %72 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_145, !dbg !4213
  %_143 = load i8, i8* %72, align 1, !dbg !4213
  %_153 = icmp ult i64 9, %_24.1, !dbg !4214
  %73 = call i1 @llvm.expect.i1(i1 %_153, i1 true), !dbg !4214
  br i1 %73, label %bb41, label %panic23, !dbg !4214

panic22:                                          ; preds = %bb39
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_145, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc699 to %"std::panic::Location"*)), !dbg !4213
  unreachable, !dbg !4213

bb41:                                             ; preds = %bb40
  %74 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 9, !dbg !4214
  store i8 %_143, i8* %74, align 1, !dbg !4214
  %_159.0 = lshr i64 %input_u6418, 46, !dbg !4215
  br label %bb42, !dbg !4215

panic23:                                          ; preds = %bb40
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 9, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc701 to %"std::panic::Location"*)), !dbg !4214
  unreachable, !dbg !4214

bb42:                                             ; preds = %bb41
  %_156 = and i64 %_159.0, 63, !dbg !4216
  %_161 = icmp ult i64 %_156, 64, !dbg !4217
  %75 = call i1 @llvm.expect.i1(i1 %_161, i1 true), !dbg !4217
  br i1 %75, label %bb43, label %panic24, !dbg !4217

bb43:                                             ; preds = %bb42
  %76 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_156, !dbg !4217
  %_154 = load i8, i8* %76, align 1, !dbg !4217
  %_164 = icmp ult i64 10, %_24.1, !dbg !4218
  %77 = call i1 @llvm.expect.i1(i1 %_164, i1 true), !dbg !4218
  br i1 %77, label %bb44, label %panic25, !dbg !4218

panic24:                                          ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_156, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc703 to %"std::panic::Location"*)), !dbg !4217
  unreachable, !dbg !4217

bb44:                                             ; preds = %bb43
  %78 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 10, !dbg !4218
  store i8 %_154, i8* %78, align 1, !dbg !4218
  %_170.0 = lshr i64 %input_u6418, 40, !dbg !4219
  br label %bb45, !dbg !4219

panic25:                                          ; preds = %bb43
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 10, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc705 to %"std::panic::Location"*)), !dbg !4218
  unreachable, !dbg !4218

bb45:                                             ; preds = %bb44
  %_167 = and i64 %_170.0, 63, !dbg !4220
  %_172 = icmp ult i64 %_167, 64, !dbg !4221
  %79 = call i1 @llvm.expect.i1(i1 %_172, i1 true), !dbg !4221
  br i1 %79, label %bb46, label %panic26, !dbg !4221

bb46:                                             ; preds = %bb45
  %80 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_167, !dbg !4221
  %_165 = load i8, i8* %80, align 1, !dbg !4221
  %_175 = icmp ult i64 11, %_24.1, !dbg !4222
  %81 = call i1 @llvm.expect.i1(i1 %_175, i1 true), !dbg !4222
  br i1 %81, label %bb47, label %panic27, !dbg !4222

panic26:                                          ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_167, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc707 to %"std::panic::Location"*)), !dbg !4221
  unreachable, !dbg !4221

bb47:                                             ; preds = %bb46
  %82 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 11, !dbg !4222
  store i8 %_165, i8* %82, align 1, !dbg !4222
  %_181.0 = lshr i64 %input_u6418, 34, !dbg !4223
  br label %bb48, !dbg !4223

panic27:                                          ; preds = %bb46
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 11, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc709 to %"std::panic::Location"*)), !dbg !4222
  unreachable, !dbg !4222

bb48:                                             ; preds = %bb47
  %_178 = and i64 %_181.0, 63, !dbg !4224
  %_183 = icmp ult i64 %_178, 64, !dbg !4225
  %83 = call i1 @llvm.expect.i1(i1 %_183, i1 true), !dbg !4225
  br i1 %83, label %bb49, label %panic28, !dbg !4225

bb49:                                             ; preds = %bb48
  %84 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_178, !dbg !4225
  %_176 = load i8, i8* %84, align 1, !dbg !4225
  %_186 = icmp ult i64 12, %_24.1, !dbg !4226
  %85 = call i1 @llvm.expect.i1(i1 %_186, i1 true), !dbg !4226
  br i1 %85, label %bb50, label %panic29, !dbg !4226

panic28:                                          ; preds = %bb48
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_178, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc711 to %"std::panic::Location"*)), !dbg !4225
  unreachable, !dbg !4225

bb50:                                             ; preds = %bb49
  %86 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 12, !dbg !4226
  store i8 %_176, i8* %86, align 1, !dbg !4226
  %_192.0 = lshr i64 %input_u6418, 28, !dbg !4227
  br label %bb51, !dbg !4227

panic29:                                          ; preds = %bb49
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 12, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc713 to %"std::panic::Location"*)), !dbg !4226
  unreachable, !dbg !4226

bb51:                                             ; preds = %bb50
  %_189 = and i64 %_192.0, 63, !dbg !4228
  %_194 = icmp ult i64 %_189, 64, !dbg !4229
  %87 = call i1 @llvm.expect.i1(i1 %_194, i1 true), !dbg !4229
  br i1 %87, label %bb52, label %panic30, !dbg !4229

bb52:                                             ; preds = %bb51
  %88 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_189, !dbg !4229
  %_187 = load i8, i8* %88, align 1, !dbg !4229
  %_197 = icmp ult i64 13, %_24.1, !dbg !4230
  %89 = call i1 @llvm.expect.i1(i1 %_197, i1 true), !dbg !4230
  br i1 %89, label %bb53, label %panic31, !dbg !4230

panic30:                                          ; preds = %bb51
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_189, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc715 to %"std::panic::Location"*)), !dbg !4229
  unreachable, !dbg !4229

bb53:                                             ; preds = %bb52
  %90 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 13, !dbg !4230
  store i8 %_187, i8* %90, align 1, !dbg !4230
  %_203.0 = lshr i64 %input_u6418, 22, !dbg !4231
  br label %bb54, !dbg !4231

panic31:                                          ; preds = %bb52
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 13, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc717 to %"std::panic::Location"*)), !dbg !4230
  unreachable, !dbg !4230

bb54:                                             ; preds = %bb53
  %_200 = and i64 %_203.0, 63, !dbg !4232
  %_205 = icmp ult i64 %_200, 64, !dbg !4233
  %91 = call i1 @llvm.expect.i1(i1 %_205, i1 true), !dbg !4233
  br i1 %91, label %bb55, label %panic32, !dbg !4233

bb55:                                             ; preds = %bb54
  %92 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_200, !dbg !4233
  %_198 = load i8, i8* %92, align 1, !dbg !4233
  %_208 = icmp ult i64 14, %_24.1, !dbg !4234
  %93 = call i1 @llvm.expect.i1(i1 %_208, i1 true), !dbg !4234
  br i1 %93, label %bb56, label %panic33, !dbg !4234

panic32:                                          ; preds = %bb54
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_200, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc719 to %"std::panic::Location"*)), !dbg !4233
  unreachable, !dbg !4233

bb56:                                             ; preds = %bb55
  %94 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 14, !dbg !4234
  store i8 %_198, i8* %94, align 1, !dbg !4234
  %_214.0 = lshr i64 %input_u6418, 16, !dbg !4235
  br label %bb57, !dbg !4235

panic33:                                          ; preds = %bb55
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 14, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc721 to %"std::panic::Location"*)), !dbg !4234
  unreachable, !dbg !4234

bb57:                                             ; preds = %bb56
  %_211 = and i64 %_214.0, 63, !dbg !4236
  %_216 = icmp ult i64 %_211, 64, !dbg !4237
  %95 = call i1 @llvm.expect.i1(i1 %_216, i1 true), !dbg !4237
  br i1 %95, label %bb58, label %panic34, !dbg !4237

bb58:                                             ; preds = %bb57
  %96 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_211, !dbg !4237
  %_209 = load i8, i8* %96, align 1, !dbg !4237
  %_219 = icmp ult i64 15, %_24.1, !dbg !4238
  %97 = call i1 @llvm.expect.i1(i1 %_219, i1 true), !dbg !4238
  br i1 %97, label %bb59, label %panic35, !dbg !4238

panic34:                                          ; preds = %bb57
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_211, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc723 to %"std::panic::Location"*)), !dbg !4237
  unreachable, !dbg !4237

bb59:                                             ; preds = %bb58
  %98 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 15, !dbg !4238
  store i8 %_209, i8* %98, align 1, !dbg !4238
  store i64 12, i64* %_225, align 8, !dbg !4239
  %99 = load i64, i64* %_225, align 8, !dbg !4240
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %100 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h237b54ed02ea05a2E"([0 x i8]* nonnull align 1 %_15.0, i64 %_15.1, i64 %99, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc727 to %"std::panic::Location"*)), !dbg !4240
  %_223.0 = extractvalue { [0 x i8]*, i64 } %100, 0, !dbg !4240
  %_223.1 = extractvalue { [0 x i8]*, i64 } %100, 1, !dbg !4240
  br label %bb60, !dbg !4240

panic35:                                          ; preds = %bb58
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 15, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc725 to %"std::panic::Location"*)), !dbg !4238
  unreachable, !dbg !4238

bb60:                                             ; preds = %bb59
; call base64::encode::read_u64
  %input_u6436 = call i64 @_ZN6base646encode8read_u6417h649c0944f46a022aE([0 x i8]* nonnull align 1 %_223.0, i64 %_223.1), !dbg !4241
  store i64 %input_u6436, i64* %input_u64.dbg.spill37, align 8, !dbg !4241
  call void @llvm.dbg.declare(metadata i64* %input_u64.dbg.spill37, metadata !4121, metadata !DIExpression()), !dbg !4242
  br label %bb61, !dbg !4241

bb61:                                             ; preds = %bb60
  %_231.0 = lshr i64 %input_u6436, 58, !dbg !4243
  br label %bb62, !dbg !4243

bb62:                                             ; preds = %bb61
  %_228 = and i64 %_231.0, 63, !dbg !4244
  %_233 = icmp ult i64 %_228, 64, !dbg !4245
  %101 = call i1 @llvm.expect.i1(i1 %_233, i1 true), !dbg !4245
  br i1 %101, label %bb63, label %panic38, !dbg !4245

bb63:                                             ; preds = %bb62
  %102 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_228, !dbg !4245
  %_226 = load i8, i8* %102, align 1, !dbg !4245
  %_236 = icmp ult i64 16, %_24.1, !dbg !4246
  %103 = call i1 @llvm.expect.i1(i1 %_236, i1 true), !dbg !4246
  br i1 %103, label %bb64, label %panic39, !dbg !4246

panic38:                                          ; preds = %bb62
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_228, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc729 to %"std::panic::Location"*)), !dbg !4245
  unreachable, !dbg !4245

bb64:                                             ; preds = %bb63
  %104 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 16, !dbg !4246
  store i8 %_226, i8* %104, align 1, !dbg !4246
  %_242.0 = lshr i64 %input_u6436, 52, !dbg !4247
  br label %bb65, !dbg !4247

panic39:                                          ; preds = %bb63
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 16, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc731 to %"std::panic::Location"*)), !dbg !4246
  unreachable, !dbg !4246

bb65:                                             ; preds = %bb64
  %_239 = and i64 %_242.0, 63, !dbg !4248
  %_244 = icmp ult i64 %_239, 64, !dbg !4249
  %105 = call i1 @llvm.expect.i1(i1 %_244, i1 true), !dbg !4249
  br i1 %105, label %bb66, label %panic40, !dbg !4249

bb66:                                             ; preds = %bb65
  %106 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_239, !dbg !4249
  %_237 = load i8, i8* %106, align 1, !dbg !4249
  %_247 = icmp ult i64 17, %_24.1, !dbg !4250
  %107 = call i1 @llvm.expect.i1(i1 %_247, i1 true), !dbg !4250
  br i1 %107, label %bb67, label %panic41, !dbg !4250

panic40:                                          ; preds = %bb65
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_239, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc733 to %"std::panic::Location"*)), !dbg !4249
  unreachable, !dbg !4249

bb67:                                             ; preds = %bb66
  %108 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 17, !dbg !4250
  store i8 %_237, i8* %108, align 1, !dbg !4250
  %_253.0 = lshr i64 %input_u6436, 46, !dbg !4251
  br label %bb68, !dbg !4251

panic41:                                          ; preds = %bb66
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 17, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc735 to %"std::panic::Location"*)), !dbg !4250
  unreachable, !dbg !4250

bb68:                                             ; preds = %bb67
  %_250 = and i64 %_253.0, 63, !dbg !4252
  %_255 = icmp ult i64 %_250, 64, !dbg !4253
  %109 = call i1 @llvm.expect.i1(i1 %_255, i1 true), !dbg !4253
  br i1 %109, label %bb69, label %panic42, !dbg !4253

bb69:                                             ; preds = %bb68
  %110 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_250, !dbg !4253
  %_248 = load i8, i8* %110, align 1, !dbg !4253
  %_258 = icmp ult i64 18, %_24.1, !dbg !4254
  %111 = call i1 @llvm.expect.i1(i1 %_258, i1 true), !dbg !4254
  br i1 %111, label %bb70, label %panic43, !dbg !4254

panic42:                                          ; preds = %bb68
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_250, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc737 to %"std::panic::Location"*)), !dbg !4253
  unreachable, !dbg !4253

bb70:                                             ; preds = %bb69
  %112 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 18, !dbg !4254
  store i8 %_248, i8* %112, align 1, !dbg !4254
  %_264.0 = lshr i64 %input_u6436, 40, !dbg !4255
  br label %bb71, !dbg !4255

panic43:                                          ; preds = %bb69
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 18, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc739 to %"std::panic::Location"*)), !dbg !4254
  unreachable, !dbg !4254

bb71:                                             ; preds = %bb70
  %_261 = and i64 %_264.0, 63, !dbg !4256
  %_266 = icmp ult i64 %_261, 64, !dbg !4257
  %113 = call i1 @llvm.expect.i1(i1 %_266, i1 true), !dbg !4257
  br i1 %113, label %bb72, label %panic44, !dbg !4257

bb72:                                             ; preds = %bb71
  %114 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_261, !dbg !4257
  %_259 = load i8, i8* %114, align 1, !dbg !4257
  %_269 = icmp ult i64 19, %_24.1, !dbg !4258
  %115 = call i1 @llvm.expect.i1(i1 %_269, i1 true), !dbg !4258
  br i1 %115, label %bb73, label %panic45, !dbg !4258

panic44:                                          ; preds = %bb71
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_261, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc741 to %"std::panic::Location"*)), !dbg !4257
  unreachable, !dbg !4257

bb73:                                             ; preds = %bb72
  %116 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 19, !dbg !4258
  store i8 %_259, i8* %116, align 1, !dbg !4258
  %_275.0 = lshr i64 %input_u6436, 34, !dbg !4259
  br label %bb74, !dbg !4259

panic45:                                          ; preds = %bb72
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 19, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc743 to %"std::panic::Location"*)), !dbg !4258
  unreachable, !dbg !4258

bb74:                                             ; preds = %bb73
  %_272 = and i64 %_275.0, 63, !dbg !4260
  %_277 = icmp ult i64 %_272, 64, !dbg !4261
  %117 = call i1 @llvm.expect.i1(i1 %_277, i1 true), !dbg !4261
  br i1 %117, label %bb75, label %panic46, !dbg !4261

bb75:                                             ; preds = %bb74
  %118 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_272, !dbg !4261
  %_270 = load i8, i8* %118, align 1, !dbg !4261
  %_280 = icmp ult i64 20, %_24.1, !dbg !4262
  %119 = call i1 @llvm.expect.i1(i1 %_280, i1 true), !dbg !4262
  br i1 %119, label %bb76, label %panic47, !dbg !4262

panic46:                                          ; preds = %bb74
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_272, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc745 to %"std::panic::Location"*)), !dbg !4261
  unreachable, !dbg !4261

bb76:                                             ; preds = %bb75
  %120 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 20, !dbg !4262
  store i8 %_270, i8* %120, align 1, !dbg !4262
  %_286.0 = lshr i64 %input_u6436, 28, !dbg !4263
  br label %bb77, !dbg !4263

panic47:                                          ; preds = %bb75
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 20, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc747 to %"std::panic::Location"*)), !dbg !4262
  unreachable, !dbg !4262

bb77:                                             ; preds = %bb76
  %_283 = and i64 %_286.0, 63, !dbg !4264
  %_288 = icmp ult i64 %_283, 64, !dbg !4265
  %121 = call i1 @llvm.expect.i1(i1 %_288, i1 true), !dbg !4265
  br i1 %121, label %bb78, label %panic48, !dbg !4265

bb78:                                             ; preds = %bb77
  %122 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_283, !dbg !4265
  %_281 = load i8, i8* %122, align 1, !dbg !4265
  %_291 = icmp ult i64 21, %_24.1, !dbg !4266
  %123 = call i1 @llvm.expect.i1(i1 %_291, i1 true), !dbg !4266
  br i1 %123, label %bb79, label %panic49, !dbg !4266

panic48:                                          ; preds = %bb77
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_283, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc749 to %"std::panic::Location"*)), !dbg !4265
  unreachable, !dbg !4265

bb79:                                             ; preds = %bb78
  %124 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 21, !dbg !4266
  store i8 %_281, i8* %124, align 1, !dbg !4266
  %_297.0 = lshr i64 %input_u6436, 22, !dbg !4267
  br label %bb80, !dbg !4267

panic49:                                          ; preds = %bb78
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 21, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc751 to %"std::panic::Location"*)), !dbg !4266
  unreachable, !dbg !4266

bb80:                                             ; preds = %bb79
  %_294 = and i64 %_297.0, 63, !dbg !4268
  %_299 = icmp ult i64 %_294, 64, !dbg !4269
  %125 = call i1 @llvm.expect.i1(i1 %_299, i1 true), !dbg !4269
  br i1 %125, label %bb81, label %panic50, !dbg !4269

bb81:                                             ; preds = %bb80
  %126 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_294, !dbg !4269
  %_292 = load i8, i8* %126, align 1, !dbg !4269
  %_302 = icmp ult i64 22, %_24.1, !dbg !4270
  %127 = call i1 @llvm.expect.i1(i1 %_302, i1 true), !dbg !4270
  br i1 %127, label %bb82, label %panic51, !dbg !4270

panic50:                                          ; preds = %bb80
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_294, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc753 to %"std::panic::Location"*)), !dbg !4269
  unreachable, !dbg !4269

bb82:                                             ; preds = %bb81
  %128 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 22, !dbg !4270
  store i8 %_292, i8* %128, align 1, !dbg !4270
  %_308.0 = lshr i64 %input_u6436, 16, !dbg !4271
  br label %bb83, !dbg !4271

panic51:                                          ; preds = %bb81
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 22, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc755 to %"std::panic::Location"*)), !dbg !4270
  unreachable, !dbg !4270

bb83:                                             ; preds = %bb82
  %_305 = and i64 %_308.0, 63, !dbg !4272
  %_310 = icmp ult i64 %_305, 64, !dbg !4273
  %129 = call i1 @llvm.expect.i1(i1 %_310, i1 true), !dbg !4273
  br i1 %129, label %bb84, label %panic52, !dbg !4273

bb84:                                             ; preds = %bb83
  %130 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_305, !dbg !4273
  %_303 = load i8, i8* %130, align 1, !dbg !4273
  %_313 = icmp ult i64 23, %_24.1, !dbg !4274
  %131 = call i1 @llvm.expect.i1(i1 %_313, i1 true), !dbg !4274
  br i1 %131, label %bb85, label %panic53, !dbg !4274

panic52:                                          ; preds = %bb83
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_305, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc757 to %"std::panic::Location"*)), !dbg !4273
  unreachable, !dbg !4273

bb85:                                             ; preds = %bb84
  %132 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 23, !dbg !4274
  store i8 %_303, i8* %132, align 1, !dbg !4274
  store i64 18, i64* %_319, align 8, !dbg !4275
  %133 = load i64, i64* %_319, align 8, !dbg !4276
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %134 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h237b54ed02ea05a2E"([0 x i8]* nonnull align 1 %_15.0, i64 %_15.1, i64 %133, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc761 to %"std::panic::Location"*)), !dbg !4276
  %_317.0 = extractvalue { [0 x i8]*, i64 } %134, 0, !dbg !4276
  %_317.1 = extractvalue { [0 x i8]*, i64 } %134, 1, !dbg !4276
  br label %bb86, !dbg !4276

panic53:                                          ; preds = %bb84
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 23, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc759 to %"std::panic::Location"*)), !dbg !4274
  unreachable, !dbg !4274

bb86:                                             ; preds = %bb85
; call base64::encode::read_u64
  %input_u6454 = call i64 @_ZN6base646encode8read_u6417h649c0944f46a022aE([0 x i8]* nonnull align 1 %_317.0, i64 %_317.1), !dbg !4277
  store i64 %input_u6454, i64* %input_u64.dbg.spill55, align 8, !dbg !4277
  call void @llvm.dbg.declare(metadata i64* %input_u64.dbg.spill55, metadata !4123, metadata !DIExpression()), !dbg !4278
  br label %bb87, !dbg !4277

bb87:                                             ; preds = %bb86
  %_325.0 = lshr i64 %input_u6454, 58, !dbg !4279
  br label %bb88, !dbg !4279

bb88:                                             ; preds = %bb87
  %_322 = and i64 %_325.0, 63, !dbg !4280
  %_327 = icmp ult i64 %_322, 64, !dbg !4281
  %135 = call i1 @llvm.expect.i1(i1 %_327, i1 true), !dbg !4281
  br i1 %135, label %bb89, label %panic56, !dbg !4281

bb89:                                             ; preds = %bb88
  %136 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_322, !dbg !4281
  %_320 = load i8, i8* %136, align 1, !dbg !4281
  %_330 = icmp ult i64 24, %_24.1, !dbg !4282
  %137 = call i1 @llvm.expect.i1(i1 %_330, i1 true), !dbg !4282
  br i1 %137, label %bb90, label %panic57, !dbg !4282

panic56:                                          ; preds = %bb88
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_322, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc763 to %"std::panic::Location"*)), !dbg !4281
  unreachable, !dbg !4281

bb90:                                             ; preds = %bb89
  %138 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 24, !dbg !4282
  store i8 %_320, i8* %138, align 1, !dbg !4282
  %_336.0 = lshr i64 %input_u6454, 52, !dbg !4283
  br label %bb91, !dbg !4283

panic57:                                          ; preds = %bb89
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 24, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc765 to %"std::panic::Location"*)), !dbg !4282
  unreachable, !dbg !4282

bb91:                                             ; preds = %bb90
  %_333 = and i64 %_336.0, 63, !dbg !4284
  %_338 = icmp ult i64 %_333, 64, !dbg !4285
  %139 = call i1 @llvm.expect.i1(i1 %_338, i1 true), !dbg !4285
  br i1 %139, label %bb92, label %panic58, !dbg !4285

bb92:                                             ; preds = %bb91
  %140 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_333, !dbg !4285
  %_331 = load i8, i8* %140, align 1, !dbg !4285
  %_341 = icmp ult i64 25, %_24.1, !dbg !4286
  %141 = call i1 @llvm.expect.i1(i1 %_341, i1 true), !dbg !4286
  br i1 %141, label %bb93, label %panic59, !dbg !4286

panic58:                                          ; preds = %bb91
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_333, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc767 to %"std::panic::Location"*)), !dbg !4285
  unreachable, !dbg !4285

bb93:                                             ; preds = %bb92
  %142 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 25, !dbg !4286
  store i8 %_331, i8* %142, align 1, !dbg !4286
  %_347.0 = lshr i64 %input_u6454, 46, !dbg !4287
  br label %bb94, !dbg !4287

panic59:                                          ; preds = %bb92
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 25, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc769 to %"std::panic::Location"*)), !dbg !4286
  unreachable, !dbg !4286

bb94:                                             ; preds = %bb93
  %_344 = and i64 %_347.0, 63, !dbg !4288
  %_349 = icmp ult i64 %_344, 64, !dbg !4289
  %143 = call i1 @llvm.expect.i1(i1 %_349, i1 true), !dbg !4289
  br i1 %143, label %bb95, label %panic60, !dbg !4289

bb95:                                             ; preds = %bb94
  %144 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_344, !dbg !4289
  %_342 = load i8, i8* %144, align 1, !dbg !4289
  %_352 = icmp ult i64 26, %_24.1, !dbg !4290
  %145 = call i1 @llvm.expect.i1(i1 %_352, i1 true), !dbg !4290
  br i1 %145, label %bb96, label %panic61, !dbg !4290

panic60:                                          ; preds = %bb94
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_344, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc771 to %"std::panic::Location"*)), !dbg !4289
  unreachable, !dbg !4289

bb96:                                             ; preds = %bb95
  %146 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 26, !dbg !4290
  store i8 %_342, i8* %146, align 1, !dbg !4290
  %_358.0 = lshr i64 %input_u6454, 40, !dbg !4291
  br label %bb97, !dbg !4291

panic61:                                          ; preds = %bb95
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 26, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc773 to %"std::panic::Location"*)), !dbg !4290
  unreachable, !dbg !4290

bb97:                                             ; preds = %bb96
  %_355 = and i64 %_358.0, 63, !dbg !4292
  %_360 = icmp ult i64 %_355, 64, !dbg !4293
  %147 = call i1 @llvm.expect.i1(i1 %_360, i1 true), !dbg !4293
  br i1 %147, label %bb98, label %panic62, !dbg !4293

bb98:                                             ; preds = %bb97
  %148 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_355, !dbg !4293
  %_353 = load i8, i8* %148, align 1, !dbg !4293
  %_363 = icmp ult i64 27, %_24.1, !dbg !4294
  %149 = call i1 @llvm.expect.i1(i1 %_363, i1 true), !dbg !4294
  br i1 %149, label %bb99, label %panic63, !dbg !4294

panic62:                                          ; preds = %bb97
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_355, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc775 to %"std::panic::Location"*)), !dbg !4293
  unreachable, !dbg !4293

bb99:                                             ; preds = %bb98
  %150 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 27, !dbg !4294
  store i8 %_353, i8* %150, align 1, !dbg !4294
  %_369.0 = lshr i64 %input_u6454, 34, !dbg !4295
  br label %bb100, !dbg !4295

panic63:                                          ; preds = %bb98
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 27, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc777 to %"std::panic::Location"*)), !dbg !4294
  unreachable, !dbg !4294

bb100:                                            ; preds = %bb99
  %_366 = and i64 %_369.0, 63, !dbg !4296
  %_371 = icmp ult i64 %_366, 64, !dbg !4297
  %151 = call i1 @llvm.expect.i1(i1 %_371, i1 true), !dbg !4297
  br i1 %151, label %bb101, label %panic64, !dbg !4297

bb101:                                            ; preds = %bb100
  %152 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_366, !dbg !4297
  %_364 = load i8, i8* %152, align 1, !dbg !4297
  %_374 = icmp ult i64 28, %_24.1, !dbg !4298
  %153 = call i1 @llvm.expect.i1(i1 %_374, i1 true), !dbg !4298
  br i1 %153, label %bb102, label %panic65, !dbg !4298

panic64:                                          ; preds = %bb100
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_366, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc779 to %"std::panic::Location"*)), !dbg !4297
  unreachable, !dbg !4297

bb102:                                            ; preds = %bb101
  %154 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 28, !dbg !4298
  store i8 %_364, i8* %154, align 1, !dbg !4298
  %_380.0 = lshr i64 %input_u6454, 28, !dbg !4299
  br label %bb103, !dbg !4299

panic65:                                          ; preds = %bb101
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 28, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc781 to %"std::panic::Location"*)), !dbg !4298
  unreachable, !dbg !4298

bb103:                                            ; preds = %bb102
  %_377 = and i64 %_380.0, 63, !dbg !4300
  %_382 = icmp ult i64 %_377, 64, !dbg !4301
  %155 = call i1 @llvm.expect.i1(i1 %_382, i1 true), !dbg !4301
  br i1 %155, label %bb104, label %panic66, !dbg !4301

bb104:                                            ; preds = %bb103
  %156 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_377, !dbg !4301
  %_375 = load i8, i8* %156, align 1, !dbg !4301
  %_385 = icmp ult i64 29, %_24.1, !dbg !4302
  %157 = call i1 @llvm.expect.i1(i1 %_385, i1 true), !dbg !4302
  br i1 %157, label %bb105, label %panic67, !dbg !4302

panic66:                                          ; preds = %bb103
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_377, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"std::panic::Location"*)), !dbg !4301
  unreachable, !dbg !4301

bb105:                                            ; preds = %bb104
  %158 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 29, !dbg !4302
  store i8 %_375, i8* %158, align 1, !dbg !4302
  %_391.0 = lshr i64 %input_u6454, 22, !dbg !4303
  br label %bb106, !dbg !4303

panic67:                                          ; preds = %bb104
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 29, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc785 to %"std::panic::Location"*)), !dbg !4302
  unreachable, !dbg !4302

bb106:                                            ; preds = %bb105
  %_388 = and i64 %_391.0, 63, !dbg !4304
  %_393 = icmp ult i64 %_388, 64, !dbg !4305
  %159 = call i1 @llvm.expect.i1(i1 %_393, i1 true), !dbg !4305
  br i1 %159, label %bb107, label %panic68, !dbg !4305

bb107:                                            ; preds = %bb106
  %160 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_388, !dbg !4305
  %_386 = load i8, i8* %160, align 1, !dbg !4305
  %_396 = icmp ult i64 30, %_24.1, !dbg !4306
  %161 = call i1 @llvm.expect.i1(i1 %_396, i1 true), !dbg !4306
  br i1 %161, label %bb108, label %panic69, !dbg !4306

panic68:                                          ; preds = %bb106
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_388, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc787 to %"std::panic::Location"*)), !dbg !4305
  unreachable, !dbg !4305

bb108:                                            ; preds = %bb107
  %162 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 30, !dbg !4306
  store i8 %_386, i8* %162, align 1, !dbg !4306
  %_402.0 = lshr i64 %input_u6454, 16, !dbg !4307
  br label %bb109, !dbg !4307

panic69:                                          ; preds = %bb107
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 30, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc789 to %"std::panic::Location"*)), !dbg !4306
  unreachable, !dbg !4306

bb109:                                            ; preds = %bb108
  %_399 = and i64 %_402.0, 63, !dbg !4308
  %_404 = icmp ult i64 %_399, 64, !dbg !4309
  %163 = call i1 @llvm.expect.i1(i1 %_404, i1 true), !dbg !4309
  br i1 %163, label %bb110, label %panic70, !dbg !4309

bb110:                                            ; preds = %bb109
  %164 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_399, !dbg !4309
  %_397 = load i8, i8* %164, align 1, !dbg !4309
  %_407 = icmp ult i64 31, %_24.1, !dbg !4310
  %165 = call i1 @llvm.expect.i1(i1 %_407, i1 true), !dbg !4310
  br i1 %165, label %bb111, label %panic71, !dbg !4310

panic70:                                          ; preds = %bb109
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_399, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc791 to %"std::panic::Location"*)), !dbg !4309
  unreachable, !dbg !4309

bb111:                                            ; preds = %bb110
  %166 = getelementptr inbounds [0 x i8], [0 x i8]* %_24.0, i64 0, i64 31, !dbg !4310
  store i8 %_397, i8* %166, align 1, !dbg !4310
  %167 = load i64, i64* %output_index, align 8, !dbg !4311
  %168 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %167, i64 32), !dbg !4311
  %_409.0 = extractvalue { i64, i1 } %168, 0, !dbg !4311
  %_409.1 = extractvalue { i64, i1 } %168, 1, !dbg !4311
  %169 = call i1 @llvm.expect.i1(i1 %_409.1, i1 false), !dbg !4311
  br i1 %169, label %panic72, label %bb112, !dbg !4311

panic71:                                          ; preds = %bb110
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 31, i64 %_24.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc793 to %"std::panic::Location"*)), !dbg !4310
  unreachable, !dbg !4310

bb112:                                            ; preds = %bb111
  store i64 %_409.0, i64* %output_index, align 8, !dbg !4311
  %170 = load i64, i64* %input_index, align 8, !dbg !4312
  %171 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %170, i64 24), !dbg !4312
  %_411.0 = extractvalue { i64, i1 } %171, 0, !dbg !4312
  %_411.1 = extractvalue { i64, i1 } %171, 1, !dbg !4312
  %172 = call i1 @llvm.expect.i1(i1 %_411.1, i1 false), !dbg !4312
  br i1 %172, label %panic73, label %bb113, !dbg !4312

panic72:                                          ; preds = %bb111
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"std::panic::Location"*)), !dbg !4311
  unreachable, !dbg !4311

bb113:                                            ; preds = %bb112
  store i64 %_411.0, i64* %input_index, align 8, !dbg !4312
  br label %bb2, !dbg !4313

panic73:                                          ; preds = %bb112
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"std::panic::Location"*)), !dbg !4312
  unreachable, !dbg !4312

bb115:                                            ; preds = %bb114
  store i64 %_419.0, i64* %start_of_rem.dbg.spill, align 8, !dbg !4153
  call void @llvm.dbg.declare(metadata i64* %start_of_rem.dbg.spill, metadata !4127, metadata !DIExpression()), !dbg !4314
  br label %bb116, !dbg !4315

panic74:                                          ; preds = %bb114
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"std::panic::Location"*)), !dbg !4153
  unreachable, !dbg !4153

bb116:                                            ; preds = %bb142, %bb115
  %_421 = load i64, i64* %input_index, align 8, !dbg !4316
  %_420 = icmp ult i64 %_421, %_419.0, !dbg !4316
  br i1 %_420, label %bb117, label %bb143, !dbg !4316

bb143:                                            ; preds = %bb116
  %173 = icmp eq i64 %rem, 2, !dbg !4317
  br i1 %173, label %bb144, label %bb145, !dbg !4317

bb117:                                            ; preds = %bb116
  %_427 = load i64, i64* %input_index, align 8, !dbg !4318
  %_429 = load i64, i64* %input_index, align 8, !dbg !4319
  %174 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_429, i64 3), !dbg !4320
  %_430.0 = extractvalue { i64, i1 } %174, 0, !dbg !4320
  %_430.1 = extractvalue { i64, i1 } %174, 1, !dbg !4320
  %175 = call i1 @llvm.expect.i1(i1 %_430.1, i1 false), !dbg !4320
  br i1 %175, label %panic75, label %bb118, !dbg !4320

bb118:                                            ; preds = %bb117
  %176 = bitcast { i64, i64 }* %_426 to i64*, !dbg !4318
  store i64 %_427, i64* %176, align 8, !dbg !4318
  %177 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_426, i32 0, i32 1, !dbg !4318
  store i64 %_430.0, i64* %177, align 8, !dbg !4318
  %178 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_426, i32 0, i32 0, !dbg !4321
  %179 = load i64, i64* %178, align 8, !dbg !4321
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_426, i32 0, i32 1, !dbg !4321
  %181 = load i64, i64* %180, align 8, !dbg !4321
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %182 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18ebf1aaf5f6628fE"([0 x i8]* nonnull align 1 %input.0, i64 %input.1, i64 %179, i64 %181, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc803 to %"std::panic::Location"*)), !dbg !4321
  %_424.0 = extractvalue { [0 x i8]*, i64 } %182, 0, !dbg !4321
  %_424.1 = extractvalue { [0 x i8]*, i64 } %182, 1, !dbg !4321
  br label %bb119, !dbg !4321

panic75:                                          ; preds = %bb117
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc801 to %"std::panic::Location"*)), !dbg !4320
  unreachable, !dbg !4320

bb119:                                            ; preds = %bb118
  %183 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input_chunk.dbg.spill76, i32 0, i32 0, !dbg !4322
  store [0 x i8]* %_424.0, [0 x i8]** %183, align 8, !dbg !4322
  %184 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input_chunk.dbg.spill76, i32 0, i32 1, !dbg !4322
  store i64 %_424.1, i64* %184, align 8, !dbg !4322
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %input_chunk.dbg.spill76, metadata !4129, metadata !DIExpression()), !dbg !4323
  %_435 = load i64, i64* %output_index, align 8, !dbg !4324
  %_437 = load i64, i64* %output_index, align 8, !dbg !4325
  %185 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_437, i64 4), !dbg !4326
  %_438.0 = extractvalue { i64, i1 } %185, 0, !dbg !4326
  %_438.1 = extractvalue { i64, i1 } %185, 1, !dbg !4326
  %186 = call i1 @llvm.expect.i1(i1 %_438.1, i1 false), !dbg !4326
  br i1 %186, label %panic77, label %bb120, !dbg !4326

bb120:                                            ; preds = %bb119
  %187 = bitcast { i64, i64 }* %_434 to i64*, !dbg !4324
  store i64 %_435, i64* %187, align 8, !dbg !4324
  %188 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_434, i32 0, i32 1, !dbg !4324
  store i64 %_438.0, i64* %188, align 8, !dbg !4324
  %189 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_434, i32 0, i32 0, !dbg !4327
  %190 = load i64, i64* %189, align 8, !dbg !4327
  %191 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_434, i32 0, i32 1, !dbg !4327
  %192 = load i64, i64* %191, align 8, !dbg !4327
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %193 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h22af83885446f654E"([0 x i8]* nonnull align 1 %output.0, i64 %output.1, i64 %190, i64 %192, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc807 to %"std::panic::Location"*)), !dbg !4327
  %_432.0 = extractvalue { [0 x i8]*, i64 } %193, 0, !dbg !4327
  %_432.1 = extractvalue { [0 x i8]*, i64 } %193, 1, !dbg !4327
  br label %bb121, !dbg !4327

panic77:                                          ; preds = %bb119
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc805 to %"std::panic::Location"*)), !dbg !4326
  unreachable, !dbg !4326

bb121:                                            ; preds = %bb120
  %194 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output_chunk.dbg.spill78, i32 0, i32 0, !dbg !4328
  store [0 x i8]* %_432.0, [0 x i8]** %194, align 8, !dbg !4328
  %195 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output_chunk.dbg.spill78, i32 0, i32 1, !dbg !4328
  store i64 %_432.1, i64* %195, align 8, !dbg !4328
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %output_chunk.dbg.spill78, metadata !4131, metadata !DIExpression()), !dbg !4329
  %_445 = icmp ult i64 0, %_424.1, !dbg !4330
  %196 = call i1 @llvm.expect.i1(i1 %_445, i1 true), !dbg !4330
  br i1 %196, label %bb122, label %panic79, !dbg !4330

bb122:                                            ; preds = %bb121
  %197 = getelementptr inbounds [0 x i8], [0 x i8]* %_424.0, i64 0, i64 0, !dbg !4330
  %_442 = load i8, i8* %197, align 1, !dbg !4330
  %_446.0 = lshr i8 %_442, 2, !dbg !4331
  br label %bb123, !dbg !4331

panic79:                                          ; preds = %bb121
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 0, i64 %_424.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc809 to %"std::panic::Location"*)), !dbg !4330
  unreachable, !dbg !4330

bb123:                                            ; preds = %bb122
  %_440 = zext i8 %_446.0 to i64, !dbg !4331
  %_448 = icmp ult i64 %_440, 64, !dbg !4332
  %198 = call i1 @llvm.expect.i1(i1 %_448, i1 true), !dbg !4332
  br i1 %198, label %bb124, label %panic80, !dbg !4332

bb124:                                            ; preds = %bb123
  %199 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_440, !dbg !4332
  %_439 = load i8, i8* %199, align 1, !dbg !4332
  %_451 = icmp ult i64 0, %_432.1, !dbg !4333
  %200 = call i1 @llvm.expect.i1(i1 %_451, i1 true), !dbg !4333
  br i1 %200, label %bb125, label %panic81, !dbg !4333

panic80:                                          ; preds = %bb123
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_440, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc811 to %"std::panic::Location"*)), !dbg !4332
  unreachable, !dbg !4332

bb125:                                            ; preds = %bb124
  %201 = getelementptr inbounds [0 x i8], [0 x i8]* %_432.0, i64 0, i64 0, !dbg !4333
  store i8 %_439, i8* %201, align 1, !dbg !4333
  %_460 = icmp ult i64 0, %_424.1, !dbg !4334
  %202 = call i1 @llvm.expect.i1(i1 %_460, i1 true), !dbg !4334
  br i1 %202, label %bb126, label %panic82, !dbg !4334

panic81:                                          ; preds = %bb124
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 0, i64 %_432.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc813 to %"std::panic::Location"*)), !dbg !4333
  unreachable, !dbg !4333

bb126:                                            ; preds = %bb125
  %203 = getelementptr inbounds [0 x i8], [0 x i8]* %_424.0, i64 0, i64 0, !dbg !4334
  %_457 = load i8, i8* %203, align 1, !dbg !4334
  %_461.0 = shl i8 %_457, 4, !dbg !4334
  br label %bb127, !dbg !4334

panic82:                                          ; preds = %bb125
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 0, i64 %_424.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc815 to %"std::panic::Location"*)), !dbg !4334
  unreachable, !dbg !4334

bb127:                                            ; preds = %bb126
  %_466 = icmp ult i64 1, %_424.1, !dbg !4335
  %204 = call i1 @llvm.expect.i1(i1 %_466, i1 true), !dbg !4335
  br i1 %204, label %bb128, label %panic83, !dbg !4335

bb128:                                            ; preds = %bb127
  %205 = getelementptr inbounds [0 x i8], [0 x i8]* %_424.0, i64 0, i64 1, !dbg !4335
  %_463 = load i8, i8* %205, align 1, !dbg !4335
  %_467.0 = lshr i8 %_463, 4, !dbg !4335
  br label %bb129, !dbg !4335

panic83:                                          ; preds = %bb127
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 1, i64 %_424.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc817 to %"std::panic::Location"*)), !dbg !4335
  unreachable, !dbg !4335

bb129:                                            ; preds = %bb128
  %_455 = or i8 %_461.0, %_467.0, !dbg !4336
  %_454 = and i8 %_455, 63, !dbg !4337
  %_453 = zext i8 %_454 to i64, !dbg !4337
  %_469 = icmp ult i64 %_453, 64, !dbg !4338
  %206 = call i1 @llvm.expect.i1(i1 %_469, i1 true), !dbg !4338
  br i1 %206, label %bb130, label %panic84, !dbg !4338

bb130:                                            ; preds = %bb129
  %207 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_453, !dbg !4338
  %_452 = load i8, i8* %207, align 1, !dbg !4338
  %_472 = icmp ult i64 1, %_432.1, !dbg !4339
  %208 = call i1 @llvm.expect.i1(i1 %_472, i1 true), !dbg !4339
  br i1 %208, label %bb131, label %panic85, !dbg !4339

panic84:                                          ; preds = %bb129
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_453, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc819 to %"std::panic::Location"*)), !dbg !4338
  unreachable, !dbg !4338

bb131:                                            ; preds = %bb130
  %209 = getelementptr inbounds [0 x i8], [0 x i8]* %_432.0, i64 0, i64 1, !dbg !4339
  store i8 %_452, i8* %209, align 1, !dbg !4339
  %_481 = icmp ult i64 1, %_424.1, !dbg !4340
  %210 = call i1 @llvm.expect.i1(i1 %_481, i1 true), !dbg !4340
  br i1 %210, label %bb132, label %panic86, !dbg !4340

panic85:                                          ; preds = %bb130
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 1, i64 %_432.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc821 to %"std::panic::Location"*)), !dbg !4339
  unreachable, !dbg !4339

bb132:                                            ; preds = %bb131
  %211 = getelementptr inbounds [0 x i8], [0 x i8]* %_424.0, i64 0, i64 1, !dbg !4340
  %_478 = load i8, i8* %211, align 1, !dbg !4340
  %_482.0 = shl i8 %_478, 2, !dbg !4340
  br label %bb133, !dbg !4340

panic86:                                          ; preds = %bb131
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 1, i64 %_424.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc823 to %"std::panic::Location"*)), !dbg !4340
  unreachable, !dbg !4340

bb133:                                            ; preds = %bb132
  %_487 = icmp ult i64 2, %_424.1, !dbg !4341
  %212 = call i1 @llvm.expect.i1(i1 %_487, i1 true), !dbg !4341
  br i1 %212, label %bb134, label %panic87, !dbg !4341

bb134:                                            ; preds = %bb133
  %213 = getelementptr inbounds [0 x i8], [0 x i8]* %_424.0, i64 0, i64 2, !dbg !4341
  %_484 = load i8, i8* %213, align 1, !dbg !4341
  %_488.0 = lshr i8 %_484, 6, !dbg !4341
  br label %bb135, !dbg !4341

panic87:                                          ; preds = %bb133
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 2, i64 %_424.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc825 to %"std::panic::Location"*)), !dbg !4341
  unreachable, !dbg !4341

bb135:                                            ; preds = %bb134
  %_476 = or i8 %_482.0, %_488.0, !dbg !4342
  %_475 = and i8 %_476, 63, !dbg !4343
  %_474 = zext i8 %_475 to i64, !dbg !4343
  %_490 = icmp ult i64 %_474, 64, !dbg !4344
  %214 = call i1 @llvm.expect.i1(i1 %_490, i1 true), !dbg !4344
  br i1 %214, label %bb136, label %panic88, !dbg !4344

bb136:                                            ; preds = %bb135
  %215 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_474, !dbg !4344
  %_473 = load i8, i8* %215, align 1, !dbg !4344
  %_493 = icmp ult i64 2, %_432.1, !dbg !4345
  %216 = call i1 @llvm.expect.i1(i1 %_493, i1 true), !dbg !4345
  br i1 %216, label %bb137, label %panic89, !dbg !4345

panic88:                                          ; preds = %bb135
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_474, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc827 to %"std::panic::Location"*)), !dbg !4344
  unreachable, !dbg !4344

bb137:                                            ; preds = %bb136
  %217 = getelementptr inbounds [0 x i8], [0 x i8]* %_432.0, i64 0, i64 2, !dbg !4345
  store i8 %_473, i8* %217, align 1, !dbg !4345
  %_500 = icmp ult i64 2, %_424.1, !dbg !4346
  %218 = call i1 @llvm.expect.i1(i1 %_500, i1 true), !dbg !4346
  br i1 %218, label %bb138, label %panic90, !dbg !4346

panic89:                                          ; preds = %bb136
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 2, i64 %_432.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc829 to %"std::panic::Location"*)), !dbg !4345
  unreachable, !dbg !4345

bb138:                                            ; preds = %bb137
  %219 = getelementptr inbounds [0 x i8], [0 x i8]* %_424.0, i64 0, i64 2, !dbg !4346
  %_497 = load i8, i8* %219, align 1, !dbg !4346
  %_496 = and i8 %_497, 63, !dbg !4347
  %_495 = zext i8 %_496 to i64, !dbg !4347
  %_502 = icmp ult i64 %_495, 64, !dbg !4348
  %220 = call i1 @llvm.expect.i1(i1 %_502, i1 true), !dbg !4348
  br i1 %220, label %bb139, label %panic91, !dbg !4348

panic90:                                          ; preds = %bb137
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 2, i64 %_424.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc831 to %"std::panic::Location"*)), !dbg !4346
  unreachable, !dbg !4346

bb139:                                            ; preds = %bb138
  %221 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_495, !dbg !4348
  %_494 = load i8, i8* %221, align 1, !dbg !4348
  %_505 = icmp ult i64 3, %_432.1, !dbg !4349
  %222 = call i1 @llvm.expect.i1(i1 %_505, i1 true), !dbg !4349
  br i1 %222, label %bb140, label %panic92, !dbg !4349

panic91:                                          ; preds = %bb138
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_495, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc833 to %"std::panic::Location"*)), !dbg !4348
  unreachable, !dbg !4348

bb140:                                            ; preds = %bb139
  %223 = getelementptr inbounds [0 x i8], [0 x i8]* %_432.0, i64 0, i64 3, !dbg !4349
  store i8 %_494, i8* %223, align 1, !dbg !4349
  %224 = load i64, i64* %input_index, align 8, !dbg !4350
  %225 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %224, i64 3), !dbg !4350
  %_506.0 = extractvalue { i64, i1 } %225, 0, !dbg !4350
  %_506.1 = extractvalue { i64, i1 } %225, 1, !dbg !4350
  %226 = call i1 @llvm.expect.i1(i1 %_506.1, i1 false), !dbg !4350
  br i1 %226, label %panic93, label %bb141, !dbg !4350

panic92:                                          ; preds = %bb139
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 3, i64 %_432.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc835 to %"std::panic::Location"*)), !dbg !4349
  unreachable, !dbg !4349

bb141:                                            ; preds = %bb140
  store i64 %_506.0, i64* %input_index, align 8, !dbg !4350
  %227 = load i64, i64* %output_index, align 8, !dbg !4351
  %228 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %227, i64 4), !dbg !4351
  %_507.0 = extractvalue { i64, i1 } %228, 0, !dbg !4351
  %_507.1 = extractvalue { i64, i1 } %228, 1, !dbg !4351
  %229 = call i1 @llvm.expect.i1(i1 %_507.1, i1 false), !dbg !4351
  br i1 %229, label %panic94, label %bb142, !dbg !4351

panic93:                                          ; preds = %bb140
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc837 to %"std::panic::Location"*)), !dbg !4350
  unreachable, !dbg !4350

bb142:                                            ; preds = %bb141
  store i64 %_507.0, i64* %output_index, align 8, !dbg !4351
  br label %bb116, !dbg !4315

panic94:                                          ; preds = %bb141
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc839 to %"std::panic::Location"*)), !dbg !4351
  unreachable, !dbg !4351

bb144:                                            ; preds = %bb143
  %_515 = icmp ult i64 %_419.0, %input.1, !dbg !4352
  %230 = call i1 @llvm.expect.i1(i1 %_515, i1 true), !dbg !4352
  br i1 %230, label %bb146, label %panic103, !dbg !4352

bb145:                                            ; preds = %bb143
  %231 = icmp eq i64 %rem, 1, !dbg !4353
  br i1 %231, label %bb165, label %bb176, !dbg !4353

bb165:                                            ; preds = %bb145
  %_573 = icmp ult i64 %_419.0, %input.1, !dbg !4354
  %232 = call i1 @llvm.expect.i1(i1 %_573, i1 true), !dbg !4354
  br i1 %232, label %bb166, label %panic95, !dbg !4354

bb176:                                            ; preds = %bb164, %bb175, %bb145
  %233 = load i64, i64* %output_index, align 8, !dbg !4355
  ret i64 %233, !dbg !4355

bb166:                                            ; preds = %bb165
  %234 = getelementptr inbounds [0 x i8], [0 x i8]* %input.0, i64 0, i64 %_419.0, !dbg !4354
  %_570 = load i8, i8* %234, align 1, !dbg !4354
  %_574.0 = lshr i8 %_570, 2, !dbg !4356
  br label %bb167, !dbg !4356

panic95:                                          ; preds = %bb165
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_419.0, i64 %input.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc841 to %"std::panic::Location"*)), !dbg !4354
  unreachable, !dbg !4354

bb167:                                            ; preds = %bb166
  %_568 = zext i8 %_574.0 to i64, !dbg !4356
  %_576 = icmp ult i64 %_568, 64, !dbg !4357
  %235 = call i1 @llvm.expect.i1(i1 %_576, i1 true), !dbg !4357
  br i1 %235, label %bb168, label %panic96, !dbg !4357

bb168:                                            ; preds = %bb167
  %236 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_568, !dbg !4357
  %_567 = load i8, i8* %236, align 1, !dbg !4357
  %_577 = load i64, i64* %output_index, align 8, !dbg !4358
  %_579 = icmp ult i64 %_577, %output.1, !dbg !4359
  %237 = call i1 @llvm.expect.i1(i1 %_579, i1 true), !dbg !4359
  br i1 %237, label %bb169, label %panic97, !dbg !4359

panic96:                                          ; preds = %bb167
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_568, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc843 to %"std::panic::Location"*)), !dbg !4357
  unreachable, !dbg !4357

bb169:                                            ; preds = %bb168
  %238 = getelementptr inbounds [0 x i8], [0 x i8]* %output.0, i64 0, i64 %_577, !dbg !4359
  store i8 %_567, i8* %238, align 1, !dbg !4359
  %_587 = icmp ult i64 %_419.0, %input.1, !dbg !4360
  %239 = call i1 @llvm.expect.i1(i1 %_587, i1 true), !dbg !4360
  br i1 %239, label %bb170, label %panic98, !dbg !4360

panic97:                                          ; preds = %bb168
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_577, i64 %output.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc845 to %"std::panic::Location"*)), !dbg !4359
  unreachable, !dbg !4359

bb170:                                            ; preds = %bb169
  %240 = getelementptr inbounds [0 x i8], [0 x i8]* %input.0, i64 0, i64 %_419.0, !dbg !4360
  %_584 = load i8, i8* %240, align 1, !dbg !4360
  %_588.0 = shl i8 %_584, 4, !dbg !4361
  br label %bb171, !dbg !4361

panic98:                                          ; preds = %bb169
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_419.0, i64 %input.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc847 to %"std::panic::Location"*)), !dbg !4360
  unreachable, !dbg !4360

bb171:                                            ; preds = %bb170
  %_582 = and i8 %_588.0, 63, !dbg !4362
  %_581 = zext i8 %_582 to i64, !dbg !4362
  %_590 = icmp ult i64 %_581, 64, !dbg !4363
  %241 = call i1 @llvm.expect.i1(i1 %_590, i1 true), !dbg !4363
  br i1 %241, label %bb172, label %panic99, !dbg !4363

bb172:                                            ; preds = %bb171
  %242 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_581, !dbg !4363
  %_580 = load i8, i8* %242, align 1, !dbg !4363
  %_592 = load i64, i64* %output_index, align 8, !dbg !4364
  %243 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_592, i64 1), !dbg !4364
  %_593.0 = extractvalue { i64, i1 } %243, 0, !dbg !4364
  %_593.1 = extractvalue { i64, i1 } %243, 1, !dbg !4364
  %244 = call i1 @llvm.expect.i1(i1 %_593.1, i1 false), !dbg !4364
  br i1 %244, label %panic100, label %bb173, !dbg !4364

panic99:                                          ; preds = %bb171
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_581, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc849 to %"std::panic::Location"*)), !dbg !4363
  unreachable, !dbg !4363

bb173:                                            ; preds = %bb172
  %_595 = icmp ult i64 %_593.0, %output.1, !dbg !4365
  %245 = call i1 @llvm.expect.i1(i1 %_595, i1 true), !dbg !4365
  br i1 %245, label %bb174, label %panic101, !dbg !4365

panic100:                                         ; preds = %bb172
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc851 to %"std::panic::Location"*)), !dbg !4364
  unreachable, !dbg !4364

bb174:                                            ; preds = %bb173
  %246 = getelementptr inbounds [0 x i8], [0 x i8]* %output.0, i64 0, i64 %_593.0, !dbg !4365
  store i8 %_580, i8* %246, align 1, !dbg !4365
  %247 = load i64, i64* %output_index, align 8, !dbg !4366
  %248 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %247, i64 2), !dbg !4366
  %_596.0 = extractvalue { i64, i1 } %248, 0, !dbg !4366
  %_596.1 = extractvalue { i64, i1 } %248, 1, !dbg !4366
  %249 = call i1 @llvm.expect.i1(i1 %_596.1, i1 false), !dbg !4366
  br i1 %249, label %panic102, label %bb175, !dbg !4366

panic101:                                         ; preds = %bb173
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_593.0, i64 %output.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc853 to %"std::panic::Location"*)), !dbg !4365
  unreachable, !dbg !4365

bb175:                                            ; preds = %bb174
  store i64 %_596.0, i64* %output_index, align 8, !dbg !4366
  br label %bb176, !dbg !4367

panic102:                                         ; preds = %bb174
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc855 to %"std::panic::Location"*)), !dbg !4366
  unreachable, !dbg !4366

bb146:                                            ; preds = %bb144
  %250 = getelementptr inbounds [0 x i8], [0 x i8]* %input.0, i64 0, i64 %_419.0, !dbg !4352
  %_512 = load i8, i8* %250, align 1, !dbg !4352
  %_516.0 = lshr i8 %_512, 2, !dbg !4368
  br label %bb147, !dbg !4368

panic103:                                         ; preds = %bb144
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_419.0, i64 %input.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc857 to %"std::panic::Location"*)), !dbg !4352
  unreachable, !dbg !4352

bb147:                                            ; preds = %bb146
  %_510 = zext i8 %_516.0 to i64, !dbg !4368
  %_518 = icmp ult i64 %_510, 64, !dbg !4369
  %251 = call i1 @llvm.expect.i1(i1 %_518, i1 true), !dbg !4369
  br i1 %251, label %bb148, label %panic104, !dbg !4369

bb148:                                            ; preds = %bb147
  %252 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_510, !dbg !4369
  %_509 = load i8, i8* %252, align 1, !dbg !4369
  %_519 = load i64, i64* %output_index, align 8, !dbg !4370
  %_521 = icmp ult i64 %_519, %output.1, !dbg !4371
  %253 = call i1 @llvm.expect.i1(i1 %_521, i1 true), !dbg !4371
  br i1 %253, label %bb149, label %panic105, !dbg !4371

panic104:                                         ; preds = %bb147
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_510, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc859 to %"std::panic::Location"*)), !dbg !4369
  unreachable, !dbg !4369

bb149:                                            ; preds = %bb148
  %254 = getelementptr inbounds [0 x i8], [0 x i8]* %output.0, i64 0, i64 %_519, !dbg !4371
  store i8 %_509, i8* %254, align 1, !dbg !4371
  %_530 = icmp ult i64 %_419.0, %input.1, !dbg !4372
  %255 = call i1 @llvm.expect.i1(i1 %_530, i1 true), !dbg !4372
  br i1 %255, label %bb150, label %panic106, !dbg !4372

panic105:                                         ; preds = %bb148
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_519, i64 %output.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc861 to %"std::panic::Location"*)), !dbg !4371
  unreachable, !dbg !4371

bb150:                                            ; preds = %bb149
  %256 = getelementptr inbounds [0 x i8], [0 x i8]* %input.0, i64 0, i64 %_419.0, !dbg !4372
  %_527 = load i8, i8* %256, align 1, !dbg !4372
  %_531.0 = shl i8 %_527, 4, !dbg !4372
  br label %bb151, !dbg !4372

panic106:                                         ; preds = %bb149
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_419.0, i64 %input.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc863 to %"std::panic::Location"*)), !dbg !4372
  unreachable, !dbg !4372

bb151:                                            ; preds = %bb150
  %257 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_419.0, i64 1), !dbg !4373
  %_536.0 = extractvalue { i64, i1 } %257, 0, !dbg !4373
  %_536.1 = extractvalue { i64, i1 } %257, 1, !dbg !4373
  %258 = call i1 @llvm.expect.i1(i1 %_536.1, i1 false), !dbg !4373
  br i1 %258, label %panic107, label %bb152, !dbg !4373

bb152:                                            ; preds = %bb151
  %_538 = icmp ult i64 %_536.0, %input.1, !dbg !4374
  %259 = call i1 @llvm.expect.i1(i1 %_538, i1 true), !dbg !4374
  br i1 %259, label %bb153, label %panic108, !dbg !4374

panic107:                                         ; preds = %bb151
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc865 to %"std::panic::Location"*)), !dbg !4373
  unreachable, !dbg !4373

bb153:                                            ; preds = %bb152
  %260 = getelementptr inbounds [0 x i8], [0 x i8]* %input.0, i64 0, i64 %_536.0, !dbg !4374
  %_533 = load i8, i8* %260, align 1, !dbg !4374
  %_539.0 = lshr i8 %_533, 4, !dbg !4374
  br label %bb154, !dbg !4374

panic108:                                         ; preds = %bb152
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_536.0, i64 %input.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc867 to %"std::panic::Location"*)), !dbg !4374
  unreachable, !dbg !4374

bb154:                                            ; preds = %bb153
  %_525 = or i8 %_531.0, %_539.0, !dbg !4375
  %_524 = and i8 %_525, 63, !dbg !4376
  %_523 = zext i8 %_524 to i64, !dbg !4376
  %_541 = icmp ult i64 %_523, 64, !dbg !4377
  %261 = call i1 @llvm.expect.i1(i1 %_541, i1 true), !dbg !4377
  br i1 %261, label %bb155, label %panic109, !dbg !4377

bb155:                                            ; preds = %bb154
  %262 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_523, !dbg !4377
  %_522 = load i8, i8* %262, align 1, !dbg !4377
  %_543 = load i64, i64* %output_index, align 8, !dbg !4378
  %263 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_543, i64 1), !dbg !4378
  %_544.0 = extractvalue { i64, i1 } %263, 0, !dbg !4378
  %_544.1 = extractvalue { i64, i1 } %263, 1, !dbg !4378
  %264 = call i1 @llvm.expect.i1(i1 %_544.1, i1 false), !dbg !4378
  br i1 %264, label %panic110, label %bb156, !dbg !4378

panic109:                                         ; preds = %bb154
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_523, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc869 to %"std::panic::Location"*)), !dbg !4377
  unreachable, !dbg !4377

bb156:                                            ; preds = %bb155
  %_546 = icmp ult i64 %_544.0, %output.1, !dbg !4379
  %265 = call i1 @llvm.expect.i1(i1 %_546, i1 true), !dbg !4379
  br i1 %265, label %bb157, label %panic111, !dbg !4379

panic110:                                         ; preds = %bb155
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc871 to %"std::panic::Location"*)), !dbg !4378
  unreachable, !dbg !4378

bb157:                                            ; preds = %bb156
  %266 = getelementptr inbounds [0 x i8], [0 x i8]* %output.0, i64 0, i64 %_544.0, !dbg !4379
  store i8 %_522, i8* %266, align 1, !dbg !4379
  %267 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_419.0, i64 1), !dbg !4380
  %_554.0 = extractvalue { i64, i1 } %267, 0, !dbg !4380
  %_554.1 = extractvalue { i64, i1 } %267, 1, !dbg !4380
  %268 = call i1 @llvm.expect.i1(i1 %_554.1, i1 false), !dbg !4380
  br i1 %268, label %panic112, label %bb158, !dbg !4380

panic111:                                         ; preds = %bb156
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_544.0, i64 %output.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc873 to %"std::panic::Location"*)), !dbg !4379
  unreachable, !dbg !4379

bb158:                                            ; preds = %bb157
  %_556 = icmp ult i64 %_554.0, %input.1, !dbg !4381
  %269 = call i1 @llvm.expect.i1(i1 %_556, i1 true), !dbg !4381
  br i1 %269, label %bb159, label %panic113, !dbg !4381

panic112:                                         ; preds = %bb157
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc875 to %"std::panic::Location"*)), !dbg !4380
  unreachable, !dbg !4380

bb159:                                            ; preds = %bb158
  %270 = getelementptr inbounds [0 x i8], [0 x i8]* %input.0, i64 0, i64 %_554.0, !dbg !4381
  %_551 = load i8, i8* %270, align 1, !dbg !4381
  %_557.0 = shl i8 %_551, 2, !dbg !4382
  br label %bb160, !dbg !4382

panic113:                                         ; preds = %bb158
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_554.0, i64 %input.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc877 to %"std::panic::Location"*)), !dbg !4381
  unreachable, !dbg !4381

bb160:                                            ; preds = %bb159
  %_549 = and i8 %_557.0, 63, !dbg !4383
  %_548 = zext i8 %_549 to i64, !dbg !4383
  %_559 = icmp ult i64 %_548, 64, !dbg !4384
  %271 = call i1 @llvm.expect.i1(i1 %_559, i1 true), !dbg !4384
  br i1 %271, label %bb161, label %panic114, !dbg !4384

bb161:                                            ; preds = %bb160
  %272 = getelementptr inbounds [64 x i8], [64 x i8]* %encode_table, i64 0, i64 %_548, !dbg !4384
  %_547 = load i8, i8* %272, align 1, !dbg !4384
  %_561 = load i64, i64* %output_index, align 8, !dbg !4385
  %273 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_561, i64 2), !dbg !4385
  %_562.0 = extractvalue { i64, i1 } %273, 0, !dbg !4385
  %_562.1 = extractvalue { i64, i1 } %273, 1, !dbg !4385
  %274 = call i1 @llvm.expect.i1(i1 %_562.1, i1 false), !dbg !4385
  br i1 %274, label %panic115, label %bb162, !dbg !4385

panic114:                                         ; preds = %bb160
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_548, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc879 to %"std::panic::Location"*)), !dbg !4384
  unreachable, !dbg !4384

bb162:                                            ; preds = %bb161
  %_564 = icmp ult i64 %_562.0, %output.1, !dbg !4386
  %275 = call i1 @llvm.expect.i1(i1 %_564, i1 true), !dbg !4386
  br i1 %275, label %bb163, label %panic116, !dbg !4386

panic115:                                         ; preds = %bb161
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc881 to %"std::panic::Location"*)), !dbg !4385
  unreachable, !dbg !4385

bb163:                                            ; preds = %bb162
  %276 = getelementptr inbounds [0 x i8], [0 x i8]* %output.0, i64 0, i64 %_562.0, !dbg !4386
  store i8 %_547, i8* %276, align 1, !dbg !4386
  %277 = load i64, i64* %output_index, align 8, !dbg !4387
  %278 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %277, i64 3), !dbg !4387
  %_565.0 = extractvalue { i64, i1 } %278, 0, !dbg !4387
  %_565.1 = extractvalue { i64, i1 } %278, 1, !dbg !4387
  %279 = call i1 @llvm.expect.i1(i1 %_565.1, i1 false), !dbg !4387
  br i1 %279, label %panic117, label %bb164, !dbg !4387

panic116:                                         ; preds = %bb162
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_562.0, i64 %output.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc883 to %"std::panic::Location"*)), !dbg !4386
  unreachable, !dbg !4386

bb164:                                            ; preds = %bb163
  store i64 %_565.0, i64* %output_index, align 8, !dbg !4387
  br label %bb176, !dbg !4388

panic117:                                         ; preds = %bb163
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc885 to %"std::panic::Location"*)), !dbg !4387
  unreachable, !dbg !4387
}

; base64::encode::encoded_size
; Function Attrs: nounwind
define { i64, i64 } @_ZN6base646encode12encoded_size17h298c08caba0cfc08E(i64 %bytes_len, i24 %0) unnamed_addr #1 !dbg !4389 {
start:
  %args.dbg.spill = alloca [1 x { i8*, i64* }]*, align 8
  %arg0.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %complete_chunk_output.dbg.spill = alloca { i64, i64 }, align 8
  %complete_input_chunks.dbg.spill = alloca i64, align 8
  %rem.dbg.spill = alloca i64, align 8
  %bytes_len.dbg.spill = alloca i64, align 8
  %_30 = alloca i64*, align 8
  %_17 = alloca i64*, align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_15 = alloca %"std::fmt::Arguments", align 8
  %encoded_rem = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %2 = alloca i24, align 4
  %config = alloca %Config, align 1
  store i24 %0, i24* %2, align 4
  %3 = bitcast %Config* %config to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  store i64 %bytes_len, i64* %bytes_len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_len.dbg.spill, metadata !4393, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.declare(metadata %Config* %config, metadata !4394, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.declare(metadata i64* %encoded_rem, metadata !4401, metadata !DIExpression()), !dbg !4416
  %rem = urem i64 %bytes_len, 3, !dbg !4417
  store i64 %rem, i64* %rem.dbg.spill, align 8, !dbg !4417
  call void @llvm.dbg.declare(metadata i64* %rem.dbg.spill, metadata !4395, metadata !DIExpression()), !dbg !4418
  %complete_input_chunks = udiv i64 %bytes_len, 3, !dbg !4419
  store i64 %complete_input_chunks, i64* %complete_input_chunks.dbg.spill, align 8, !dbg !4419
  call void @llvm.dbg.declare(metadata i64* %complete_input_chunks.dbg.spill, metadata !4397, metadata !DIExpression()), !dbg !4420
; call core::num::<impl usize>::checked_mul
  %5 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hd802f3514088ff87E"(i64 %complete_input_chunks, i64 4), !dbg !4421
  %complete_chunk_output.0 = extractvalue { i64, i64 } %5, 0, !dbg !4421
  %complete_chunk_output.1 = extractvalue { i64, i64 } %5, 1, !dbg !4421
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %complete_chunk_output.dbg.spill, i32 0, i32 0, !dbg !4421
  store i64 %complete_chunk_output.0, i64* %6, align 8, !dbg !4421
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %complete_chunk_output.dbg.spill, i32 0, i32 1, !dbg !4421
  store i64 %complete_chunk_output.1, i64* %7, align 8, !dbg !4421
  call void @llvm.dbg.declare(metadata { i64, i64 }* %complete_chunk_output.dbg.spill, metadata !4399, metadata !DIExpression()), !dbg !4422
  br label %bb1, !dbg !4421

bb1:                                              ; preds = %start
  %_9 = icmp ugt i64 %rem, 0, !dbg !4423
  br i1 %_9, label %bb2, label %bb11, !dbg !4423

bb11:                                             ; preds = %bb1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !4424
  store i64 %complete_chunk_output.0, i64* %8, align 8, !dbg !4424
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !4424
  store i64 %complete_chunk_output.1, i64* %9, align 8, !dbg !4424
  br label %bb12, !dbg !4425

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds %Config, %Config* %config, i32 0, i32 1, !dbg !4426
  %11 = load i8, i8* %10, align 1, !dbg !4426, !range !669
  %_11 = trunc i8 %11 to i1, !dbg !4426
  br i1 %_11, label %bb3, label %bb4, !dbg !4426

bb4:                                              ; preds = %bb2
  switch i64 %rem, label %bb5 [
    i64 1, label %bb6
    i64 2, label %bb7
  ], !dbg !4427

bb3:                                              ; preds = %bb2
; call core::option::Option<T>::and_then
  %12 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h94e65d268d4149fdE"(i64 %complete_chunk_output.0, i64 %complete_chunk_output.1), !dbg !4428
  store { i64, i64 } %12, { i64, i64 }* %1, align 8, !dbg !4428
  br label %bb12, !dbg !4428

bb12:                                             ; preds = %bb11, %bb10, %bb3
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !4429
  %14 = load i64, i64* %13, align 8, !dbg !4429, !range !1202
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !4429
  %16 = load i64, i64* %15, align 8, !dbg !4429
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !4429
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !4429
  ret { i64, i64 } %18, !dbg !4429

bb5:                                              ; preds = %bb4
  %19 = bitcast i64** %_17 to { [0 x i8]*, i64 }**, !dbg !4430
  store { [0 x i8]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @alloc496 to { [0 x i8]*, i64 }*), { [0 x i8]*, i64 }** %19, align 8, !dbg !4430
  %20 = bitcast i64** %_17 to { [0 x i8]*, i64 }**, !dbg !4430
  %arg0 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %20, align 8, !dbg !4430, !nonnull !4
  store { [0 x i8]*, i64 }* %arg0, { [0 x i8]*, i64 }** %arg0.dbg.spill, align 8, !dbg !4430
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %arg0.dbg.spill, metadata !4403, metadata !DIExpression()), !dbg !4431
; call core::fmt::ArgumentV1::new
  %21 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8b0f37a7e5622812E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg0, i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h37d009f9a141a023E"), !dbg !4431
  %_20.0 = extractvalue { i8*, i64* } %21, 0, !dbg !4431
  %_20.1 = extractvalue { i8*, i64* } %21, 1, !dbg !4431
  br label %bb8, !dbg !4431

bb6:                                              ; preds = %bb4
  store i64 2, i64* %encoded_rem, align 8, !dbg !4432
  br label %bb10, !dbg !4432

bb7:                                              ; preds = %bb4
  store i64 3, i64* %encoded_rem, align 8, !dbg !4433
  br label %bb10, !dbg !4433

bb8:                                              ; preds = %bb5
  %22 = bitcast [1 x { i8*, i64* }]* %_16 to { i8*, i64* }*, !dbg !4431
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %22, i32 0, i32 0, !dbg !4431
  store i8* %_20.0, i8** %23, align 8, !dbg !4431
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %22, i32 0, i32 1, !dbg !4431
  store i64* %_20.1, i64** %24, align 8, !dbg !4431
  store [1 x { i8*, i64* }]* %_16, [1 x { i8*, i64* }]** %args.dbg.spill, align 8, !dbg !4430
  call void @llvm.dbg.declare(metadata [1 x { i8*, i64* }]** %args.dbg.spill, metadata !4407, metadata !DIExpression()), !dbg !4434
  %_27.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*, !dbg !4434
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h610361d4e31c85f1E(%"std::fmt::Arguments"* noalias nocapture sret(%"std::fmt::Arguments") dereferenceable(48) %_15, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc501 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_27.0, i64 1), !dbg !4434
  br label %bb9, !dbg !4434

bb9:                                              ; preds = %bb8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hce311da8346422ccE(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_15, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc887 to %"std::panic::Location"*)), !dbg !4430
  unreachable, !dbg !4430

bb10:                                             ; preds = %bb6, %bb7
  store i64* %encoded_rem, i64** %_30, align 8, !dbg !4435
  %25 = load i64*, i64** %_30, align 8, !dbg !4436, !nonnull !4
; call core::option::Option<T>::and_then
  %26 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h342793af43b424cdE"(i64 %complete_chunk_output.0, i64 %complete_chunk_output.1, i64* align 8 dereferenceable(8) %25), !dbg !4436
  store { i64, i64 } %26, { i64, i64 }* %1, align 8, !dbg !4436
  br label %bb12, !dbg !4436
}

; base64::encode::encoded_size::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN6base646encode12encoded_size28_$u7b$$u7b$closure$u7d$$u7d$17h67d94fbfae20557fE"(i64 %c) unnamed_addr #0 !dbg !4437 {
start:
  %c.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs:293:44: 293:64]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs:293:44: 293:64]"* %_1.dbg.spill, metadata !4442, metadata !DIExpression()), !dbg !4443
  store i64 %c, i64* %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %c.dbg.spill, metadata !4441, metadata !DIExpression()), !dbg !4444
; call core::num::<impl usize>::checked_add
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E"(i64 %c, i64 4), !dbg !4445
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !4445
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !4445
  br label %bb1, !dbg !4445

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !4446
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !4446
  ret { i64, i64 } %4, !dbg !4446
}

; base64::encode::encoded_size::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN6base646encode12encoded_size28_$u7b$$u7b$closure$u7d$$u7d$17h6db7cfe2e3285615E"(i64* align 8 dereferenceable(8) %_1, i64 %c) unnamed_addr #0 !dbg !4447 {
start:
  %c.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !4452, metadata !DIExpression(DW_OP_deref)), !dbg !4453
  store i64 %c, i64* %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %c.dbg.spill, metadata !4451, metadata !DIExpression()), !dbg !4454
  %_4 = load i64, i64* %_1, align 8, !dbg !4455
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E"(i64 %c, i64 %_4), !dbg !4456
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !4456
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !4456
  br label %bb1, !dbg !4456

bb1:                                              ; preds = %start
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !4457
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !4457
  ret { i64, i64 } %5, !dbg !4457
}

; base64::encode::add_padding
; Function Attrs: nounwind
define i64 @_ZN6base646encode11add_padding17h9d64c96abebfa52eE(i64 %input_len, [0 x i8]* nonnull align 1 %output.0, i64 %output.1) unnamed_addr #1 !dbg !4458 {
start:
  %__next.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %rem.dbg.spill = alloca i64, align 8
  %output.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %input_len.dbg.spill = alloca i64, align 8
  %_13 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  %bytes_written = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_written, metadata !4466, metadata !DIExpression()), !dbg !4474
  store i64 %input_len, i64* %input_len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %input_len.dbg.spill, metadata !4462, metadata !DIExpression()), !dbg !4475
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output.dbg.spill, i32 0, i32 0
  store [0 x i8]* %output.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %output.dbg.spill, i32 0, i32 1
  store i64 %output.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %output.dbg.spill, metadata !4463, metadata !DIExpression()), !dbg !4476
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !4468, metadata !DIExpression()), !dbg !4477
  %rem = urem i64 %input_len, 3, !dbg !4478
  store i64 %rem, i64* %rem.dbg.spill, align 8, !dbg !4478
  call void @llvm.dbg.declare(metadata i64* %rem.dbg.spill, metadata !4464, metadata !DIExpression()), !dbg !4479
  store i64 0, i64* %bytes_written, align 8, !dbg !4480
  %2 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 3, i64 %rem), !dbg !4481
  %_10.0 = extractvalue { i64, i1 } %2, 0, !dbg !4481
  %_10.1 = extractvalue { i64, i1 } %2, 1, !dbg !4481
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !4481
  br i1 %3, label %panic, label %bb1, !dbg !4481

bb1:                                              ; preds = %start
  %_7 = urem i64 %_10.0, 3, !dbg !4482
  %4 = bitcast { i64, i64 }* %_6 to i64*, !dbg !4483
  store i64 0, i64* %4, align 8, !dbg !4483
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4483
  store i64 %_7, i64* %5, align 8, !dbg !4483
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4483
  %7 = load i64, i64* %6, align 8, !dbg !4483
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4483
  %9 = load i64, i64* %8, align 8, !dbg !4483
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %10 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h62f91d88f08779feE"(i64 %7, i64 %9), !dbg !4483
  %_5.0 = extractvalue { i64, i64 } %10, 0, !dbg !4483
  %_5.1 = extractvalue { i64, i64 } %10, 1, !dbg !4483
  br label %bb2, !dbg !4483

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc889 to %"std::panic::Location"*)), !dbg !4481
  unreachable, !dbg !4481

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !4483
  store i64 %_5.0, i64* %11, align 8, !dbg !4483
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !4483
  store i64 %_5.1, i64* %12, align 8, !dbg !4483
  br label %bb3, !dbg !4484

bb3:                                              ; preds = %bb9, %bb2
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %13 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h6b597f304f210581E"({ i64, i64 }* align 8 dereferenceable(16) %iter), !dbg !4485
  store { i64, i64 } %13, { i64, i64 }* %_13, align 8, !dbg !4485
  br label %bb4, !dbg !4485

bb4:                                              ; preds = %bb3
  %14 = bitcast { i64, i64 }* %_13 to i64*, !dbg !4485
  %_16 = load i64, i64* %14, align 8, !dbg !4485, !range !1202
  switch i64 %_16, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !4485

bb6:                                              ; preds = %bb4
  unreachable, !dbg !4485

bb5:                                              ; preds = %bb4
  %15 = load i64, i64* %bytes_written, align 8, !dbg !4486
  ret i64 %15, !dbg !4486

bb7:                                              ; preds = %bb4
  %16 = bitcast { i64, i64 }* %_13 to %"std::option::Option<usize>::Some"*, !dbg !4487
  %17 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %16, i32 0, i32 1, !dbg !4487
  %val = load i64, i64* %17, align 8, !dbg !4487
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4487
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4472, metadata !DIExpression()), !dbg !4488
  store i64 %val, i64* %__next.dbg.spill, align 8, !dbg !4488
  call void @llvm.dbg.declare(metadata i64* %__next.dbg.spill, metadata !4470, metadata !DIExpression()), !dbg !4485
  %_19 = load i64, i64* %bytes_written, align 8, !dbg !4489
  %_21 = icmp ult i64 %_19, %output.1, !dbg !4490
  %18 = call i1 @llvm.expect.i1(i1 %_21, i1 true), !dbg !4490
  br i1 %18, label %bb8, label %panic1, !dbg !4490

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds [0 x i8], [0 x i8]* %output.0, i64 0, i64 %_19, !dbg !4490
  store i8 61, i8* %19, align 1, !dbg !4490
  %20 = load i64, i64* %bytes_written, align 8, !dbg !4491
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1), !dbg !4491
  %_22.0 = extractvalue { i64, i1 } %21, 0, !dbg !4491
  %_22.1 = extractvalue { i64, i1 } %21, 1, !dbg !4491
  %22 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !4491
  br i1 %22, label %panic2, label %bb9, !dbg !4491

panic1:                                           ; preds = %bb7
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %_19, i64 %output.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc891 to %"std::panic::Location"*)), !dbg !4490
  unreachable, !dbg !4490

bb9:                                              ; preds = %bb8
  store i64 %_22.0, i64* %bytes_written, align 8, !dbg !4491
  br label %bb3, !dbg !4484

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.6 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc893 to %"std::panic::Location"*)), !dbg !4491
  unreachable, !dbg !4491
}

; <base64::decode::DecodeError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN66_$LT$base64..decode..DecodeError$u20$as$u20$core..fmt..Display$GT$3fmt17h5d1678b63c0ca974E"(%"decode::DecodeError"* align 8 dereferenceable(16) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4492 {
start:
  %args.dbg.spill8 = alloca [2 x { i8*, i64* }]*, align 8
  %arg1.dbg.spill7 = alloca i64*, align 8
  %arg0.dbg.spill5 = alloca i8*, align 8
  %args.dbg.spill3 = alloca [0 x { i8*, i64* }]*, align 8
  %args.dbg.spill = alloca [2 x { i8*, i64* }]*, align 8
  %arg1.dbg.spill = alloca i64*, align 8
  %arg0.dbg.spill = alloca i8*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"decode::DecodeError"*, align 8
  %_39 = alloca { i8*, i64* }, align 8
  %_38 = alloca [2 x { i8*, i64* }], align 8
  %_37 = alloca %"std::fmt::Arguments", align 8
  %byte2 = alloca i8, align 1
  %index1 = alloca i64, align 8
  %_27 = alloca %"std::fmt::Arguments", align 8
  %_9 = alloca { i8*, i64* }, align 8
  %_8 = alloca [2 x { i8*, i64* }], align 8
  %_7 = alloca %"std::fmt::Arguments", align 8
  %byte = alloca i8, align 1
  %index = alloca i64, align 8
  %0 = alloca i8, align 1
  store %"decode::DecodeError"* %self, %"decode::DecodeError"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"decode::DecodeError"** %self.dbg.spill, metadata !4517, metadata !DIExpression()), !dbg !4550
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4518, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata i64* %index, metadata !4519, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !4521, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata i64* %index1, metadata !4540, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.declare(metadata i8* %byte2, metadata !4542, metadata !DIExpression()), !dbg !4555
  %1 = bitcast %"decode::DecodeError"* %self to i8*, !dbg !4556
  %2 = load i8, i8* %1, align 8, !dbg !4556, !range !4557
  %_3 = zext i8 %2 to i64, !dbg !4556
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb7
    i64 2, label %bb1
  ], !dbg !4558

bb2:                                              ; preds = %start
  unreachable, !dbg !4556

bb3:                                              ; preds = %start
  %3 = bitcast %"decode::DecodeError"* %self to %"decode::DecodeError::InvalidByte"*, !dbg !4559
  %4 = getelementptr inbounds %"decode::DecodeError::InvalidByte", %"decode::DecodeError::InvalidByte"* %3, i32 0, i32 3, !dbg !4559
  %5 = load i64, i64* %4, align 8, !dbg !4559
  store i64 %5, i64* %index, align 8, !dbg !4559
  %6 = bitcast %"decode::DecodeError"* %self to %"decode::DecodeError::InvalidByte"*, !dbg !4560
  %7 = getelementptr inbounds %"decode::DecodeError::InvalidByte", %"decode::DecodeError::InvalidByte"* %6, i32 0, i32 1, !dbg !4560
  %8 = load i8, i8* %7, align 1, !dbg !4560
  store i8 %8, i8* %byte, align 1, !dbg !4560
  %9 = bitcast { i8*, i64* }* %_9 to i8**, !dbg !4561
  store i8* %byte, i8** %9, align 8, !dbg !4561
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_9, i32 0, i32 1, !dbg !4561
  store i64* %index, i64** %10, align 8, !dbg !4561
  %11 = bitcast { i8*, i64* }* %_9 to i8**, !dbg !4561
  %arg04 = load i8*, i8** %11, align 8, !dbg !4561, !nonnull !4
  store i8* %arg04, i8** %arg0.dbg.spill5, align 8, !dbg !4561
  call void @llvm.dbg.declare(metadata i8** %arg0.dbg.spill5, metadata !4522, metadata !DIExpression()), !dbg !4562
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_9, i32 0, i32 1, !dbg !4561
  %arg16 = load i64*, i64** %12, align 8, !dbg !4561, !nonnull !4
  store i64* %arg16, i64** %arg1.dbg.spill7, align 8, !dbg !4561
  call void @llvm.dbg.declare(metadata i64** %arg1.dbg.spill7, metadata !4525, metadata !DIExpression()), !dbg !4562
; call core::fmt::ArgumentV1::new
  %13 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hca9c87ff4cc79f6eE(i8* align 1 dereferenceable(1) %arg04, i1 (i8*, %"std::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hc42da508ea712cdeE"), !dbg !4562
  %_14.0 = extractvalue { i8*, i64* } %13, 0, !dbg !4562
  %_14.1 = extractvalue { i8*, i64* } %13, 1, !dbg !4562
  br label %bb4, !dbg !4562

bb7:                                              ; preds = %start
  store [0 x { i8*, i64* }]* bitcast (<{ [0 x i8] }>* @alloc516 to [0 x { i8*, i64* }]*), [0 x { i8*, i64* }]** %args.dbg.spill3, align 8, !dbg !4563
  call void @llvm.dbg.declare(metadata [0 x { i8*, i64* }]** %args.dbg.spill3, metadata !4533, metadata !DIExpression()), !dbg !4564
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h610361d4e31c85f1E(%"std::fmt::Arguments"* noalias nocapture sret(%"std::fmt::Arguments") dereferenceable(48) %_27, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc519 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc516 to [0 x { i8*, i64* }]*), i64 0), !dbg !4564
  br label %bb8, !dbg !4564

bb1:                                              ; preds = %start
  %14 = bitcast %"decode::DecodeError"* %self to %"decode::DecodeError::InvalidLastSymbol"*, !dbg !4565
  %15 = getelementptr inbounds %"decode::DecodeError::InvalidLastSymbol", %"decode::DecodeError::InvalidLastSymbol"* %14, i32 0, i32 3, !dbg !4565
  %16 = load i64, i64* %15, align 8, !dbg !4565
  store i64 %16, i64* %index1, align 8, !dbg !4565
  %17 = bitcast %"decode::DecodeError"* %self to %"decode::DecodeError::InvalidLastSymbol"*, !dbg !4566
  %18 = getelementptr inbounds %"decode::DecodeError::InvalidLastSymbol", %"decode::DecodeError::InvalidLastSymbol"* %17, i32 0, i32 1, !dbg !4566
  %19 = load i8, i8* %18, align 1, !dbg !4566
  store i8 %19, i8* %byte2, align 1, !dbg !4566
  %20 = bitcast { i8*, i64* }* %_39 to i8**, !dbg !4567
  store i8* %byte2, i8** %20, align 8, !dbg !4567
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_39, i32 0, i32 1, !dbg !4567
  store i64* %index1, i64** %21, align 8, !dbg !4567
  %22 = bitcast { i8*, i64* }* %_39 to i8**, !dbg !4567
  %arg0 = load i8*, i8** %22, align 8, !dbg !4567, !nonnull !4
  store i8* %arg0, i8** %arg0.dbg.spill, align 8, !dbg !4567
  call void @llvm.dbg.declare(metadata i8** %arg0.dbg.spill, metadata !4543, metadata !DIExpression()), !dbg !4568
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_39, i32 0, i32 1, !dbg !4567
  %arg1 = load i64*, i64** %23, align 8, !dbg !4567, !nonnull !4
  store i64* %arg1, i64** %arg1.dbg.spill, align 8, !dbg !4567
  call void @llvm.dbg.declare(metadata i64** %arg1.dbg.spill, metadata !4546, metadata !DIExpression()), !dbg !4568
; call core::fmt::ArgumentV1::new
  %24 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hca9c87ff4cc79f6eE(i8* align 1 dereferenceable(1) %arg0, i1 (i8*, %"std::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hc42da508ea712cdeE"), !dbg !4568
  %_44.0 = extractvalue { i8*, i64* } %24, 0, !dbg !4568
  %_44.1 = extractvalue { i8*, i64* } %24, 1, !dbg !4568
  br label %bb9, !dbg !4568

bb9:                                              ; preds = %bb1
; call core::fmt::ArgumentV1::new
  %25 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb2beae2a027d7513E(i64* align 8 dereferenceable(8) %arg1, i1 (i64*, %"std::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"), !dbg !4568
  %_47.0 = extractvalue { i8*, i64* } %25, 0, !dbg !4568
  %_47.1 = extractvalue { i8*, i64* } %25, 1, !dbg !4568
  br label %bb10, !dbg !4568

bb10:                                             ; preds = %bb9
  %26 = bitcast [2 x { i8*, i64* }]* %_38 to { i8*, i64* }*, !dbg !4568
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %26, i32 0, i32 0, !dbg !4568
  store i8* %_44.0, i8** %27, align 8, !dbg !4568
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %26, i32 0, i32 1, !dbg !4568
  store i64* %_44.1, i64** %28, align 8, !dbg !4568
  %29 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_38, i32 0, i32 1, !dbg !4568
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 0, !dbg !4568
  store i8* %_47.0, i8** %30, align 8, !dbg !4568
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 1, !dbg !4568
  store i64* %_47.1, i64** %31, align 8, !dbg !4568
  store [2 x { i8*, i64* }]* %_38, [2 x { i8*, i64* }]** %args.dbg.spill, align 8, !dbg !4567
  call void @llvm.dbg.declare(metadata [2 x { i8*, i64* }]** %args.dbg.spill, metadata !4547, metadata !DIExpression()), !dbg !4569
  %_54.0 = bitcast [2 x { i8*, i64* }]* %_38 to [0 x { i8*, i64* }]*, !dbg !4569
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h610361d4e31c85f1E(%"std::fmt::Arguments"* noalias nocapture sret(%"std::fmt::Arguments") dereferenceable(48) %_37, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc522 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_54.0, i64 2), !dbg !4569
  br label %bb11, !dbg !4569

bb11:                                             ; preds = %bb10
; call core::fmt::Formatter::write_fmt
  %32 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h332d1ec80fba6575E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, %"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_37), !dbg !4567
  %33 = zext i1 %32 to i8, !dbg !4567
  store i8 %33, i8* %0, align 1, !dbg !4567
  br label %bb12, !dbg !4567

bb12:                                             ; preds = %bb6, %bb8, %bb11
  %34 = load i8, i8* %0, align 1, !dbg !4570, !range !669
  %35 = trunc i8 %34 to i1, !dbg !4570
  ret i1 %35, !dbg !4570

bb8:                                              ; preds = %bb7
; call core::fmt::Formatter::write_fmt
  %36 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h332d1ec80fba6575E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, %"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_27), !dbg !4563
  %37 = zext i1 %36 to i8, !dbg !4563
  store i8 %37, i8* %0, align 1, !dbg !4563
  br label %bb12, !dbg !4563

bb4:                                              ; preds = %bb3
; call core::fmt::ArgumentV1::new
  %38 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb2beae2a027d7513E(i64* align 8 dereferenceable(8) %arg16, i1 (i64*, %"std::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"), !dbg !4562
  %_17.0 = extractvalue { i8*, i64* } %38, 0, !dbg !4562
  %_17.1 = extractvalue { i8*, i64* } %38, 1, !dbg !4562
  br label %bb5, !dbg !4562

bb5:                                              ; preds = %bb4
  %39 = bitcast [2 x { i8*, i64* }]* %_8 to { i8*, i64* }*, !dbg !4562
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0, !dbg !4562
  store i8* %_14.0, i8** %40, align 8, !dbg !4562
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1, !dbg !4562
  store i64* %_14.1, i64** %41, align 8, !dbg !4562
  %42 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_8, i32 0, i32 1, !dbg !4562
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 0, !dbg !4562
  store i8* %_17.0, i8** %43, align 8, !dbg !4562
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 1, !dbg !4562
  store i64* %_17.1, i64** %44, align 8, !dbg !4562
  store [2 x { i8*, i64* }]* %_8, [2 x { i8*, i64* }]** %args.dbg.spill8, align 8, !dbg !4561
  call void @llvm.dbg.declare(metadata [2 x { i8*, i64* }]** %args.dbg.spill8, metadata !4526, metadata !DIExpression()), !dbg !4571
  %_24.0 = bitcast [2 x { i8*, i64* }]* %_8 to [0 x { i8*, i64* }]*, !dbg !4571
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h610361d4e31c85f1E(%"std::fmt::Arguments"* noalias nocapture sret(%"std::fmt::Arguments") dereferenceable(48) %_7, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc512 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_24.0, i64 2), !dbg !4571
  br label %bb6, !dbg !4571

bb6:                                              ; preds = %bb5
; call core::fmt::Formatter::write_fmt
  %45 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h332d1ec80fba6575E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, %"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_7), !dbg !4561
  %46 = zext i1 %45 to i8, !dbg !4561
  store i8 %46, i8* %0, align 1, !dbg !4561
  br label %bb12, !dbg !4561
}

; <base64::decode::DecodeError as std::error::Error>::description
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN65_$LT$base64..decode..DecodeError$u20$as$u20$std..error..Error$GT$11description17h0132e6b00ae973caE"(%"decode::DecodeError"* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !4572 {
start:
  %self.dbg.spill = alloca %"decode::DecodeError"*, align 8
  %0 = alloca { [0 x i8]*, i64 }, align 8
  store %"decode::DecodeError"* %self, %"decode::DecodeError"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"decode::DecodeError"** %self.dbg.spill, metadata !4577, metadata !DIExpression()), !dbg !4578
  %1 = bitcast %"decode::DecodeError"* %self to i8*, !dbg !4579
  %2 = load i8, i8* %1, align 8, !dbg !4579, !range !4557
  %_2 = zext i8 %2 to i64, !dbg !4579
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb1
  ], !dbg !4580

bb2:                                              ; preds = %start
  unreachable, !dbg !4579

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4581
  store [0 x i8]* bitcast (<{ [12 x i8] }>* @alloc896 to [0 x i8]*), [0 x i8]** %3, align 8, !dbg !4581
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4581
  store i64 12, i64* %4, align 8, !dbg !4581
  br label %bb5, !dbg !4582

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4583
  store [0 x i8]* bitcast (<{ [14 x i8] }>* @alloc895 to [0 x i8]*), [0 x i8]** %5, align 8, !dbg !4583
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4583
  store i64 14, i64* %6, align 8, !dbg !4583
  br label %bb5, !dbg !4584

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4585
  store [0 x i8]* bitcast (<{ [19 x i8] }>* @alloc894 to [0 x i8]*), [0 x i8]** %7, align 8, !dbg !4585
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4585
  store i64 19, i64* %8, align 8, !dbg !4585
  br label %bb5, !dbg !4586

bb5:                                              ; preds = %bb3, %bb4, %bb1
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4587
  %10 = load [0 x i8]*, [0 x i8]** %9, align 8, !dbg !4587, !nonnull !4
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4587
  %12 = load i64, i64* %11, align 8, !dbg !4587
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !4587
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %12, 1, !dbg !4587
  ret { [0 x i8]*, i64 } %14, !dbg !4587
}

; <base64::decode::DecodeError as std::error::Error>::cause
; Function Attrs: nounwind
define { i8*, i8* } @"_ZN65_$LT$base64..decode..DecodeError$u20$as$u20$std..error..Error$GT$5cause17h5fc93a3133d6890bE"(%"decode::DecodeError"* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !4588 {
start:
  %self.dbg.spill = alloca %"decode::DecodeError"*, align 8
  %0 = alloca { i8*, i8* }, align 8
  store %"decode::DecodeError"* %self, %"decode::DecodeError"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"decode::DecodeError"** %self.dbg.spill, metadata !4608, metadata !DIExpression()), !dbg !4609
  %1 = bitcast { i8*, i8* }* %0 to {}**, !dbg !4610
  store {}* null, {}** %1, align 8, !dbg !4610
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !4611
  %3 = load i8*, i8** %2, align 8, !dbg !4611
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !4611
  %5 = load i8*, i8** %4, align 8, !dbg !4611
  %6 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !4611
  %7 = insertvalue { i8*, i8* } %6, i8* %5, 1, !dbg !4611
  ret { i8*, i8* } %7, !dbg !4611
}

; base64::decode::num_chunks
; Function Attrs: nounwind
define i64 @_ZN6base646decode10num_chunks17h393719bfe2dd0621E([0 x i8]* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 !dbg !4612 {
start:
  %input.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input.dbg.spill, i32 0, i32 0
  store [0 x i8]* %input.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %input.dbg.spill, i32 0, i32 1
  store i64 %input.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %input.dbg.spill, metadata !4616, metadata !DIExpression()), !dbg !4617
; call core::num::<impl usize>::checked_add
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E"(i64 %input.1, i64 7), !dbg !4618
  %_3.0 = extractvalue { i64, i64 } %2, 0, !dbg !4618
  %_3.1 = extractvalue { i64, i64 } %2, 1, !dbg !4618
  br label %bb1, !dbg !4618

bb1:                                              ; preds = %start
; call core::option::Option<T>::expect
  %_2 = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h57e4f65c536141c1E"(i64 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 bitcast (<{ [51 x i8] }>* @alloc897 to [0 x i8]*), i64 51, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc899 to %"std::panic::Location"*)), !dbg !4618
  br label %bb2, !dbg !4618

bb2:                                              ; preds = %bb1
  %3 = udiv i64 %_2, 8, !dbg !4618
  ret i64 %3, !dbg !4619
}

; base64::CharacterSet::encode_table
; Function Attrs: nounwind
define align 1 dereferenceable(64) [64 x i8]* @_ZN6base6412CharacterSet12encode_table17h9d36b7121cb3fda5E(i8 %0) unnamed_addr #1 !dbg !4620 {
start:
  %1 = alloca [64 x i8]*, align 8
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !4624, metadata !DIExpression()), !dbg !4625
  %2 = load i8, i8* %self, align 1, !dbg !4626, !range !3827
  %_2 = zext i8 %2 to i64, !dbg !4626
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb1
  ], !dbg !4627

bb2:                                              ; preds = %start
  unreachable, !dbg !4626

bb3:                                              ; preds = %start
  store [64 x i8]* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc27, i32 0, i32 0), [64 x i8]** %1, align 8, !dbg !4628
  br label %bb8, !dbg !4628

bb4:                                              ; preds = %start
  store [64 x i8]* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc33, i32 0, i32 0), [64 x i8]** %1, align 8, !dbg !4629
  br label %bb8, !dbg !4629

bb5:                                              ; preds = %start
  store [64 x i8]* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc39, i32 0, i32 0), [64 x i8]** %1, align 8, !dbg !4630
  br label %bb8, !dbg !4630

bb6:                                              ; preds = %start
  store [64 x i8]* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc45, i32 0, i32 0), [64 x i8]** %1, align 8, !dbg !4631
  br label %bb8, !dbg !4631

bb7:                                              ; preds = %start
  store [64 x i8]* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc51, i32 0, i32 0), [64 x i8]** %1, align 8, !dbg !4632
  br label %bb8, !dbg !4632

bb1:                                              ; preds = %start
  store [64 x i8]* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc57, i32 0, i32 0), [64 x i8]** %1, align 8, !dbg !4633
  br label %bb8, !dbg !4633

bb8:                                              ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb1
  %3 = load [64 x i8]*, [64 x i8]** %1, align 8, !dbg !4634, !nonnull !4
  ret [64 x i8]* %3, !dbg !4634
}

; base64::CharacterSet::decode_table
; Function Attrs: nounwind
define align 1 dereferenceable(256) [256 x i8]* @_ZN6base6412CharacterSet12decode_table17hb247266c39396e3dE(i8 %0) unnamed_addr #1 !dbg !4635 {
start:
  %1 = alloca [256 x i8]*, align 8
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !4643, metadata !DIExpression()), !dbg !4644
  %2 = load i8, i8* %self, align 1, !dbg !4645, !range !3827
  %_2 = zext i8 %2 to i64, !dbg !4645
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb1
  ], !dbg !4646

bb2:                                              ; preds = %start
  unreachable, !dbg !4645

bb3:                                              ; preds = %start
  store [256 x i8]* getelementptr inbounds (<{ [256 x i8] }>, <{ [256 x i8] }>* @alloc30, i32 0, i32 0), [256 x i8]** %1, align 8, !dbg !4647
  br label %bb8, !dbg !4647

bb4:                                              ; preds = %start
  store [256 x i8]* getelementptr inbounds (<{ [256 x i8] }>, <{ [256 x i8] }>* @alloc36, i32 0, i32 0), [256 x i8]** %1, align 8, !dbg !4648
  br label %bb8, !dbg !4648

bb5:                                              ; preds = %start
  store [256 x i8]* getelementptr inbounds (<{ [256 x i8] }>, <{ [256 x i8] }>* @alloc42, i32 0, i32 0), [256 x i8]** %1, align 8, !dbg !4649
  br label %bb8, !dbg !4649

bb6:                                              ; preds = %start
  store [256 x i8]* getelementptr inbounds (<{ [256 x i8] }>, <{ [256 x i8] }>* @alloc48, i32 0, i32 0), [256 x i8]** %1, align 8, !dbg !4650
  br label %bb8, !dbg !4650

bb7:                                              ; preds = %start
  store [256 x i8]* getelementptr inbounds (<{ [256 x i8] }>, <{ [256 x i8] }>* @alloc54, i32 0, i32 0), [256 x i8]** %1, align 8, !dbg !4651
  br label %bb8, !dbg !4651

bb1:                                              ; preds = %start
  store [256 x i8]* getelementptr inbounds (<{ [256 x i8] }>, <{ [256 x i8] }>* @alloc60, i32 0, i32 0), [256 x i8]** %1, align 8, !dbg !4652
  br label %bb8, !dbg !4652

bb8:                                              ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb1
  %3 = load [256 x i8]*, [256 x i8]** %1, align 8, !dbg !4653, !nonnull !4
  ret [256 x i8]* %3, !dbg !4653
}

; base64::Config::new
; Function Attrs: nounwind
define i24 @_ZN6base646Config3new17hef66318e98a8a26eE(i8 %char_set, i1 zeroext %pad) unnamed_addr #1 !dbg !4654 {
start:
  %pad.dbg.spill = alloca i8, align 1
  %char_set.dbg.spill = alloca i8, align 1
  %0 = alloca %Config, align 1
  store i8 %char_set, i8* %char_set.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %char_set.dbg.spill, metadata !4658, metadata !DIExpression()), !dbg !4660
  %1 = zext i1 %pad to i8
  store i8 %1, i8* %pad.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %pad.dbg.spill, metadata !4659, metadata !DIExpression()), !dbg !4661
  %2 = bitcast %Config* %0 to i8*, !dbg !4662
  store i8 %char_set, i8* %2, align 1, !dbg !4662
  %3 = getelementptr inbounds %Config, %Config* %0, i32 0, i32 1, !dbg !4662
  %4 = zext i1 %pad to i8, !dbg !4662
  store i8 %4, i8* %3, align 1, !dbg !4662
  %5 = getelementptr inbounds %Config, %Config* %0, i32 0, i32 2, !dbg !4662
  store i8 0, i8* %5, align 1, !dbg !4662
  %6 = bitcast %Config* %0 to i24*, !dbg !4663
  %7 = load i24, i24* %6, align 1, !dbg !4663
  ret i24 %7, !dbg !4663
}

; base64::Config::pad
; Function Attrs: nounwind
define i24 @_ZN6base646Config3pad17h7eec04f9860184c1E(i24 %0, i1 zeroext %pad) unnamed_addr #1 !dbg !4664 {
start:
  %pad.dbg.spill = alloca i8, align 1
  %1 = alloca %Config, align 1
  %2 = alloca i24, align 4
  %self = alloca %Config, align 1
  store i24 %0, i24* %2, align 4
  %3 = bitcast %Config* %self to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  call void @llvm.dbg.declare(metadata %Config* %self, metadata !4668, metadata !DIExpression()), !dbg !4670
  %5 = zext i1 %pad to i8
  store i8 %5, i8* %pad.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %pad.dbg.spill, metadata !4669, metadata !DIExpression()), !dbg !4671
  %6 = bitcast %Config* %1 to i8*, !dbg !4672
  %7 = bitcast %Config* %self to i8*, !dbg !4672
  %8 = load i8, i8* %7, align 1, !dbg !4672, !range !3827
  store i8 %8, i8* %6, align 1, !dbg !4672
  %9 = getelementptr inbounds %Config, %Config* %1, i32 0, i32 1, !dbg !4672
  %10 = zext i1 %pad to i8, !dbg !4672
  store i8 %10, i8* %9, align 1, !dbg !4672
  %11 = getelementptr inbounds %Config, %Config* %1, i32 0, i32 2, !dbg !4672
  %12 = getelementptr inbounds %Config, %Config* %self, i32 0, i32 2, !dbg !4672
  %13 = load i8, i8* %12, align 1, !dbg !4672, !range !669
  %14 = trunc i8 %13 to i1, !dbg !4672
  %15 = zext i1 %14 to i8, !dbg !4672
  store i8 %15, i8* %11, align 1, !dbg !4672
  %16 = bitcast %Config* %1 to i24*, !dbg !4673
  %17 = load i24, i24* %16, align 1, !dbg !4673
  ret i24 %17, !dbg !4673
}

; base64::Config::decode_allow_trailing_bits
; Function Attrs: nounwind
define i24 @_ZN6base646Config26decode_allow_trailing_bits17h6ba816a23a7bca7aE(i24 %0, i1 zeroext %allow) unnamed_addr #1 !dbg !4674 {
start:
  %allow.dbg.spill = alloca i8, align 1
  %1 = alloca %Config, align 1
  %2 = alloca i24, align 4
  %self = alloca %Config, align 1
  store i24 %0, i24* %2, align 4
  %3 = bitcast %Config* %self to i8*
  %4 = bitcast i24* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false)
  call void @llvm.dbg.declare(metadata %Config* %self, metadata !4676, metadata !DIExpression()), !dbg !4678
  %5 = zext i1 %allow to i8
  store i8 %5, i8* %allow.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %allow.dbg.spill, metadata !4677, metadata !DIExpression()), !dbg !4679
  %6 = bitcast %Config* %1 to i8*, !dbg !4680
  %7 = bitcast %Config* %self to i8*, !dbg !4680
  %8 = load i8, i8* %7, align 1, !dbg !4680, !range !3827
  store i8 %8, i8* %6, align 1, !dbg !4680
  %9 = getelementptr inbounds %Config, %Config* %1, i32 0, i32 1, !dbg !4680
  %10 = getelementptr inbounds %Config, %Config* %self, i32 0, i32 1, !dbg !4680
  %11 = load i8, i8* %10, align 1, !dbg !4680, !range !669
  %12 = trunc i8 %11 to i1, !dbg !4680
  %13 = zext i1 %12 to i8, !dbg !4680
  store i8 %13, i8* %9, align 1, !dbg !4680
  %14 = getelementptr inbounds %Config, %Config* %1, i32 0, i32 2, !dbg !4680
  %15 = zext i1 %allow to i8, !dbg !4680
  store i8 %15, i8* %14, align 1, !dbg !4680
  %16 = bitcast %Config* %1 to i24*, !dbg !4681
  %17 = load i24, i24* %16, align 1, !dbg !4681
  ret i24 %17, !dbg !4681
}

; <base64::decode::DecodeError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN64_$LT$base64..decode..DecodeError$u20$as$u20$core..fmt..Debug$GT$3fmt17he7c645030fb354f4E"(%"decode::DecodeError"* align 8 dereferenceable(16) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4682 {
start:
  %debug_trait_builder.dbg.spill6 = alloca %"std::fmt::DebugTuple"*, align 8
  %__self_1.dbg.spill5 = alloca i8*, align 8
  %__self_0.dbg.spill3 = alloca i64*, align 8
  %debug_trait_builder.dbg.spill1 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %__self_1.dbg.spill = alloca i8*, align 8
  %__self_0.dbg.spill = alloca i64*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"decode::DecodeError"*, align 8
  %_50 = alloca i8*, align 8
  %_44 = alloca i64*, align 8
  %_35 = alloca %"std::fmt::DebugTuple", align 8
  %_27 = alloca %"std::fmt::DebugTuple", align 8
  %_24 = alloca i8*, align 8
  %_18 = alloca i64*, align 8
  %_9 = alloca %"std::fmt::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  store %"decode::DecodeError"* %self, %"decode::DecodeError"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"decode::DecodeError"** %self.dbg.spill, metadata !4685, metadata !DIExpression()), !dbg !4707
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4686, metadata !DIExpression()), !dbg !4707
  %1 = bitcast i64** %_3 to %"decode::DecodeError"**, !dbg !4707
  store %"decode::DecodeError"* %self, %"decode::DecodeError"** %1, align 8, !dbg !4707
  %2 = bitcast i64** %_3 to %"decode::DecodeError"**, !dbg !4707
  %3 = load %"decode::DecodeError"*, %"decode::DecodeError"** %2, align 8, !dbg !4707, !nonnull !4
  %4 = bitcast %"decode::DecodeError"* %3 to i8*, !dbg !4707
  %5 = load i8, i8* %4, align 8, !dbg !4707, !range !4557
  %_5 = zext i8 %5 to i64, !dbg !4707
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb7
    i64 2, label %bb1
  ], !dbg !4707

bb2:                                              ; preds = %start
  unreachable, !dbg !4707

bb3:                                              ; preds = %start
  %6 = bitcast i64** %_3 to %"decode::DecodeError"**, !dbg !4708
  %7 = load %"decode::DecodeError"*, %"decode::DecodeError"** %6, align 8, !dbg !4708, !nonnull !4
  %8 = bitcast %"decode::DecodeError"* %7 to %"decode::DecodeError::InvalidByte"*, !dbg !4708
  %__self_02 = getelementptr inbounds %"decode::DecodeError::InvalidByte", %"decode::DecodeError::InvalidByte"* %8, i32 0, i32 3, !dbg !4708
  store i64* %__self_02, i64** %__self_0.dbg.spill3, align 8, !dbg !4708
  call void @llvm.dbg.declare(metadata i64** %__self_0.dbg.spill3, metadata !4687, metadata !DIExpression()), !dbg !4709
  %9 = bitcast i64** %_3 to %"decode::DecodeError"**, !dbg !4710
  %10 = load %"decode::DecodeError"*, %"decode::DecodeError"** %9, align 8, !dbg !4710, !nonnull !4
  %11 = bitcast %"decode::DecodeError"* %10 to %"decode::DecodeError::InvalidByte"*, !dbg !4710
  %__self_14 = getelementptr inbounds %"decode::DecodeError::InvalidByte", %"decode::DecodeError::InvalidByte"* %11, i32 0, i32 1, !dbg !4710
  store i8* %__self_14, i8** %__self_1.dbg.spill5, align 8, !dbg !4710
  call void @llvm.dbg.declare(metadata i8** %__self_1.dbg.spill5, metadata !4689, metadata !DIExpression()), !dbg !4711
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_9, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc905 to [0 x i8]*), i64 11), !dbg !4712
  br label %bb4, !dbg !4712

bb7:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_27, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc904 to [0 x i8]*), i64 13), !dbg !4707
  br label %bb8, !dbg !4707

bb1:                                              ; preds = %start
  %12 = bitcast i64** %_3 to %"decode::DecodeError"**, !dbg !4713
  %13 = load %"decode::DecodeError"*, %"decode::DecodeError"** %12, align 8, !dbg !4713, !nonnull !4
  %14 = bitcast %"decode::DecodeError"* %13 to %"decode::DecodeError::InvalidLastSymbol"*, !dbg !4713
  %__self_0 = getelementptr inbounds %"decode::DecodeError::InvalidLastSymbol", %"decode::DecodeError::InvalidLastSymbol"* %14, i32 0, i32 3, !dbg !4713
  store i64* %__self_0, i64** %__self_0.dbg.spill, align 8, !dbg !4713
  call void @llvm.dbg.declare(metadata i64** %__self_0.dbg.spill, metadata !4702, metadata !DIExpression()), !dbg !4714
  %15 = bitcast i64** %_3 to %"decode::DecodeError"**, !dbg !4715
  %16 = load %"decode::DecodeError"*, %"decode::DecodeError"** %15, align 8, !dbg !4715, !nonnull !4
  %17 = bitcast %"decode::DecodeError"* %16 to %"decode::DecodeError::InvalidLastSymbol"*, !dbg !4715
  %__self_1 = getelementptr inbounds %"decode::DecodeError::InvalidLastSymbol", %"decode::DecodeError::InvalidLastSymbol"* %17, i32 0, i32 1, !dbg !4715
  store i8* %__self_1, i8** %__self_1.dbg.spill, align 8, !dbg !4715
  call void @llvm.dbg.declare(metadata i8** %__self_1.dbg.spill, metadata !4704, metadata !DIExpression()), !dbg !4716
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_35, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc900 to [0 x i8]*), i64 17), !dbg !4717
  br label %bb9, !dbg !4717

bb9:                                              ; preds = %bb1
  store %"std::fmt::DebugTuple"* %_35, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4717
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4705, metadata !DIExpression()), !dbg !4718
  store i64* %__self_0, i64** %_44, align 8, !dbg !4719
  %_41.0 = bitcast i64** %_44 to {}*, !dbg !4719
; call core::fmt::builders::DebugTuple::field
  %_39 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_35, {}* nonnull align 1 %_41.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !4718
  br label %bb10, !dbg !4718

bb10:                                             ; preds = %bb9
  store i8* %__self_1, i8** %_50, align 8, !dbg !4720
  %_47.0 = bitcast i8** %_50 to {}*, !dbg !4720
; call core::fmt::builders::DebugTuple::field
  %_45 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_35, {}* nonnull align 1 %_47.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*)), !dbg !4718
  br label %bb11, !dbg !4718

bb11:                                             ; preds = %bb10
; call core::fmt::builders::DebugTuple::finish
  %18 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_35), !dbg !4718
  %19 = zext i1 %18 to i8, !dbg !4718
  store i8 %19, i8* %0, align 1, !dbg !4718
  br label %bb12, !dbg !4718

bb12:                                             ; preds = %bb6, %bb8, %bb11
  %20 = load i8, i8* %0, align 1, !dbg !4721, !range !669
  %21 = trunc i8 %20 to i1, !dbg !4721
  ret i1 %21, !dbg !4721

bb8:                                              ; preds = %bb7
  store %"std::fmt::DebugTuple"* %_27, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, align 8, !dbg !4707
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, metadata !4700, metadata !DIExpression()), !dbg !4722
; call core::fmt::builders::DebugTuple::finish
  %22 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_27), !dbg !4722
  %23 = zext i1 %22 to i8, !dbg !4722
  store i8 %23, i8* %0, align 1, !dbg !4722
  br label %bb12, !dbg !4722

bb4:                                              ; preds = %bb3
  store %"std::fmt::DebugTuple"* %_9, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill6, align 8, !dbg !4712
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill6, metadata !4690, metadata !DIExpression()), !dbg !4723
  store i64* %__self_02, i64** %_18, align 8, !dbg !4724
  %_15.0 = bitcast i64** %_18 to {}*, !dbg !4724
; call core::fmt::builders::DebugTuple::field
  %_13 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_9, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !4723
  br label %bb5, !dbg !4723

bb5:                                              ; preds = %bb4
  store i8* %__self_14, i8** %_24, align 8, !dbg !4725
  %_21.0 = bitcast i8** %_24 to {}*, !dbg !4725
; call core::fmt::builders::DebugTuple::field
  %_19 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_9, {}* nonnull align 1 %_21.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*)), !dbg !4723
  br label %bb6, !dbg !4723

bb6:                                              ; preds = %bb5
; call core::fmt::builders::DebugTuple::finish
  %24 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_9), !dbg !4723
  %25 = zext i1 %24 to i8, !dbg !4723
  store i8 %25, i8* %0, align 1, !dbg !4723
  br label %bb12, !dbg !4723
}

; <base64::CharacterSet as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN57_$LT$base64..CharacterSet$u20$as$u20$core..fmt..Debug$GT$3fmt17he02be908e3c415b2E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4726 {
start:
  %debug_trait_builder.dbg.spill5 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill4 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill3 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill2 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill1 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_37 = alloca %"std::fmt::DebugTuple", align 8
  %_31 = alloca %"std::fmt::DebugTuple", align 8
  %_25 = alloca %"std::fmt::DebugTuple", align 8
  %_19 = alloca %"std::fmt::DebugTuple", align 8
  %_13 = alloca %"std::fmt::DebugTuple", align 8
  %_7 = alloca %"std::fmt::DebugTuple", align 8
  %_3 = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4731, metadata !DIExpression()), !dbg !4745
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4732, metadata !DIExpression()), !dbg !4745
  store i8* %self, i8** %_3, align 8, !dbg !4745
  %1 = load i8*, i8** %_3, align 8, !dbg !4745, !nonnull !4
  %2 = load i8, i8* %1, align 1, !dbg !4745, !range !3827
  %_5 = zext i8 %2 to i64, !dbg !4745
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb7
    i64 3, label %bb9
    i64 4, label %bb11
    i64 5, label %bb1
  ], !dbg !4745

bb2:                                              ; preds = %start
  unreachable, !dbg !4745

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_7, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc911 to [0 x i8]*), i64 8), !dbg !4745
  br label %bb4, !dbg !4745

bb5:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_13, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc910 to [0 x i8]*), i64 7), !dbg !4745
  br label %bb6, !dbg !4745

bb7:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_19, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc909 to [0 x i8]*), i64 5), !dbg !4745
  br label %bb8, !dbg !4745

bb9:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_25, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc908 to [0 x i8]*), i64 6), !dbg !4745
  br label %bb10, !dbg !4745

bb11:                                             ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_31, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc907 to [0 x i8]*), i64 9), !dbg !4745
  br label %bb12, !dbg !4745

bb1:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_37, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc906 to [0 x i8]*), i64 6), !dbg !4745
  br label %bb13, !dbg !4745

bb13:                                             ; preds = %bb1
  store %"std::fmt::DebugTuple"* %_37, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4745
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4743, metadata !DIExpression()), !dbg !4746
; call core::fmt::builders::DebugTuple::finish
  %3 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_37), !dbg !4746
  %4 = zext i1 %3 to i8, !dbg !4746
  store i8 %4, i8* %0, align 1, !dbg !4746
  br label %bb14, !dbg !4746

bb14:                                             ; preds = %bb4, %bb6, %bb8, %bb10, %bb12, %bb13
  %5 = load i8, i8* %0, align 1, !dbg !4747, !range !669
  %6 = trunc i8 %5 to i1, !dbg !4747
  ret i1 %6, !dbg !4747

bb12:                                             ; preds = %bb11
  store %"std::fmt::DebugTuple"* %_31, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, align 8, !dbg !4745
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, metadata !4741, metadata !DIExpression()), !dbg !4748
; call core::fmt::builders::DebugTuple::finish
  %7 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_31), !dbg !4748
  %8 = zext i1 %7 to i8, !dbg !4748
  store i8 %8, i8* %0, align 1, !dbg !4748
  br label %bb14, !dbg !4748

bb10:                                             ; preds = %bb9
  store %"std::fmt::DebugTuple"* %_25, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill2, align 8, !dbg !4745
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill2, metadata !4739, metadata !DIExpression()), !dbg !4749
; call core::fmt::builders::DebugTuple::finish
  %9 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_25), !dbg !4749
  %10 = zext i1 %9 to i8, !dbg !4749
  store i8 %10, i8* %0, align 1, !dbg !4749
  br label %bb14, !dbg !4749

bb8:                                              ; preds = %bb7
  store %"std::fmt::DebugTuple"* %_19, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill3, align 8, !dbg !4745
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill3, metadata !4737, metadata !DIExpression()), !dbg !4750
; call core::fmt::builders::DebugTuple::finish
  %11 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_19), !dbg !4750
  %12 = zext i1 %11 to i8, !dbg !4750
  store i8 %12, i8* %0, align 1, !dbg !4750
  br label %bb14, !dbg !4750

bb6:                                              ; preds = %bb5
  store %"std::fmt::DebugTuple"* %_13, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill4, align 8, !dbg !4745
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill4, metadata !4735, metadata !DIExpression()), !dbg !4751
; call core::fmt::builders::DebugTuple::finish
  %13 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_13), !dbg !4751
  %14 = zext i1 %13 to i8, !dbg !4751
  store i8 %14, i8* %0, align 1, !dbg !4751
  br label %bb14, !dbg !4751

bb4:                                              ; preds = %bb3
  store %"std::fmt::DebugTuple"* %_7, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill5, align 8, !dbg !4745
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill5, metadata !4733, metadata !DIExpression()), !dbg !4752
; call core::fmt::builders::DebugTuple::finish
  %15 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_7), !dbg !4752
  %16 = zext i1 %15 to i8, !dbg !4752
  store i8 %16, i8* %0, align 1, !dbg !4752
  br label %bb14, !dbg !4752
}

; <base64::Config as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN51_$LT$base64..Config$u20$as$u20$core..fmt..Debug$GT$3fmt17h258e62ae7b6b7f66E"(%Config* align 1 dereferenceable(3) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4753 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0_2.dbg.spill = alloca i8*, align 8
  %__self_0_1.dbg.spill = alloca i8*, align 8
  %__self_0_0.dbg.spill = alloca i8*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %Config*, align 8
  %_34 = alloca i8*, align 8
  %_26 = alloca i8*, align 8
  %_18 = alloca i8*, align 8
  %_7 = alloca %"std::fmt::DebugStruct", align 8
  store %Config* %self, %Config** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %Config** %self.dbg.spill, metadata !4759, metadata !DIExpression()), !dbg !4773
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4760, metadata !DIExpression()), !dbg !4773
  %__self_0_0 = bitcast %Config* %self to i8*, !dbg !4774
  store i8* %__self_0_0, i8** %__self_0_0.dbg.spill, align 8, !dbg !4774
  call void @llvm.dbg.declare(metadata i8** %__self_0_0.dbg.spill, metadata !4761, metadata !DIExpression()), !dbg !4775
  %__self_0_1 = getelementptr inbounds %Config, %Config* %self, i32 0, i32 1, !dbg !4776
  store i8* %__self_0_1, i8** %__self_0_1.dbg.spill, align 8, !dbg !4776
  call void @llvm.dbg.declare(metadata i8** %__self_0_1.dbg.spill, metadata !4763, metadata !DIExpression()), !dbg !4777
  %__self_0_2 = getelementptr inbounds %Config, %Config* %self, i32 0, i32 2, !dbg !4778
  store i8* %__self_0_2, i8** %__self_0_2.dbg.spill, align 8, !dbg !4778
  call void @llvm.dbg.declare(metadata i8** %__self_0_2.dbg.spill, metadata !4764, metadata !DIExpression()), !dbg !4779
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc912 to [0 x i8]*), i64 6), !dbg !4780
  store i128 %1, i128* %0, align 8, !dbg !4780
  %2 = bitcast %"std::fmt::DebugStruct"* %_7 to i8*, !dbg !4780
  %3 = bitcast i128* %0 to i8*, !dbg !4780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !4780
  br label %bb1, !dbg !4780

bb1:                                              ; preds = %start
  store %"std::fmt::DebugStruct"* %_7, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !4780
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !4765, metadata !DIExpression()), !dbg !4781
  store i8* %__self_0_0, i8** %_18, align 8, !dbg !4782
  %_15.0 = bitcast i8** %_18 to {}*, !dbg !4782
; call core::fmt::builders::DebugStruct::field
  %_11 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc913 to [0 x i8]*), i64 8, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.9 to [3 x i64]*)), !dbg !4783
  br label %bb2, !dbg !4783

bb2:                                              ; preds = %bb1
  store i8* %__self_0_1, i8** %_26, align 8, !dbg !4784
  %_23.0 = bitcast i8** %_26 to {}*, !dbg !4784
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc917 to [0 x i8]*), i64 3, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.a to [3 x i64]*)), !dbg !4783
  br label %bb3, !dbg !4783

bb3:                                              ; preds = %bb2
  store i8* %__self_0_2, i8** %_34, align 8, !dbg !4785
  %_31.0 = bitcast i8** %_34 to {}*, !dbg !4785
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [26 x i8] }>* @alloc921 to [0 x i8]*), i64 26, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.a to [3 x i64]*)), !dbg !4783
  br label %bb4, !dbg !4783

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7), !dbg !4783
  br label %bb5, !dbg !4783

bb5:                                              ; preds = %bb4
  ret i1 %4, !dbg !4786
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h0a02db5c3145b3dbE(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hc9093b080894820aE(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; <bool as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h8cd87f7769d26608E"(i8* align 1 dereferenceable(1), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h22e9b1a86f36eac1E"([0 x i8]* nonnull align 1, i64, %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h52fce89fd538b8d7E"(i8* align 1 dereferenceable(1), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h95190d87891fc6a4E"(i8* align 1 dereferenceable(1), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hc42da508ea712cdeE"(i8* align 1 dereferenceable(1), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h1a12a50969152654E"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h571918675fe47debE"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.usub.sat.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core6option13expect_failed17hc7542e6963b38cc8E([0 x i8]* nonnull align 1, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h30ca2bf48c13fed8E"(%"std::str::Utf8Error"* align 8 dereferenceable(16), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; <core::array::TryFromSliceError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN67_$LT$core..array..TryFromSliceError$u20$as$u20$core..fmt..Debug$GT$3fmt17hf76d34ae020e321eE"(%"std::array::TryFromSliceError"* nonnull align 1, %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdaf89633c8bfad9eE"(%"std::alloc::LayoutError"* nonnull align 1, %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nounwind
declare void @_ZN4core9panicking19assert_failed_inner17hb980cfe34185be0eE(i8, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"std::option::Option<std::fmt::Arguments>"* noalias nocapture dereferenceable(48), %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #11

; Function Attrs: nounwind
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #1

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind
declare void @_ZN5alloc5alloc18handle_alloc_error17hc3aabe6032ee3c5aE(i64, i64) unnamed_addr #2

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nounwind
declare void @_ZN5alloc7raw_vec17capacity_overflow17hd70bf339531c8dfaE() unnamed_addr #11

; core::str::converts::from_utf8
; Function Attrs: nounwind
declare void @_ZN4core3str8converts9from_utf817hbd7abfa9d190c3c9E(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture sret(%"std::result::Result<&str, std::str::Utf8Error>") dereferenceable(24), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h1c97a1e0c2250458E(%"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking9panic_fmt17hce311da8346422ccE(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48), %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::fmt::Formatter::write_fmt
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h332d1ec80fba6575E(%"std::fmt::Formatter"* align 8 dereferenceable(64), %"std::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nounwind
declare void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24), %"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nounwind
declare align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nounwind
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nounwind
declare align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

attributes #0 = { inlinehint nounwind "target-cpu"="generic" }
attributes #1 = { nounwind "target-cpu"="generic" }
attributes #2 = { cold noreturn nounwind "target-cpu"="generic" }
attributes #3 = { noinline nounwind "target-cpu"="generic" }
attributes #4 = { cold nounwind "target-cpu"="generic" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold noinline noreturn nounwind "target-cpu"="generic" }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { nofree nosync nounwind readnone willreturn }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { noreturn nounwind "target-cpu"="generic" }
attributes #12 = { nounwind }

!llvm.module.flags = !{!68, !69}
!llvm.dbg.cu = !{!70}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !5, identifier: "vtable")
!4 = !{}
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !6, file: !2, size: 128, align: 64, elements: !9, templateParams: !4, identifier: "23e62222a878f93eb05b6b1bf847e978")
!6 = !DINamespace(name: "error", scope: !7)
!7 = !DINamespace(name: "str", scope: !8)
!8 = !DINamespace(name: "core", scope: null)
!9 = !{!10, !12}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !5, file: !2, baseType: !11, size: 64, align: 64)
!11 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !5, file: !2, baseType: !13, size: 16, align: 8, offset: 64)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !14, file: !2, size: 16, align: 8, elements: !15, identifier: "b8190189d3b92788fb333a57bdc50a8b")
!14 = !DINamespace(name: "option", scope: !8)
!15 = !{!16}
!16 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 16, align: 8, elements: !17, templateParams: !20, identifier: "b8190189d3b92788fb333a57bdc50a8b_variant_part", discriminator: !27)
!17 = !{!18, !23}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !16, file: !2, baseType: !19, size: 16, align: 8, extraData: i64 0)
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !13, file: !2, size: 16, align: 8, elements: !4, templateParams: !20, identifier: "b8190189d3b92788fb333a57bdc50a8b::None")
!20 = !{!21}
!21 = !DITemplateTypeParameter(name: "T", type: !22)
!22 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !16, file: !2, baseType: !24, size: 16, align: 8, extraData: i64 1)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !13, file: !2, size: 16, align: 8, elements: !25, templateParams: !20, identifier: "b8190189d3b92788fb333a57bdc50a8b::Some")
!25 = !{!26}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !24, file: !2, baseType: !22, size: 8, align: 8, offset: 8)
!27 = !DIDerivedType(tag: DW_TAG_member, scope: !14, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagArtificial)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !30, isLocal: true, isDefinition: true)
!30 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !31, identifier: "vtable")
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryFromSliceError", scope: !32, file: !2, align: 8, elements: !33, templateParams: !4, identifier: "7d433bee47af4cec79597a74e6cd8a5c")
!32 = !DINamespace(name: "array", scope: !8)
!33 = !{!34}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !31, file: !2, baseType: !35, align: 8)
!35 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !38, isLocal: true, isDefinition: true)
!38 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !39, identifier: "vtable")
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !40, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "c8afcc2f0bb79091714124bea5024341")
!40 = !DINamespace(name: "layout", scope: !41)
!41 = !DINamespace(name: "alloc", scope: !8)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !44, isLocal: true, isDefinition: true)
!44 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !45, identifier: "vtable")
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !48, isLocal: true, isDefinition: true)
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !49, identifier: "vtable")
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !52, isLocal: true, isDefinition: true)
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !53, identifier: "vtable")
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&CharacterSet", baseType: !54, size: 64, align: 64, dwarfAddressSpace: 0)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CharacterSet", scope: !55, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagEnumClass, elements: !56)
!55 = !DINamespace(name: "base64", scope: null)
!56 = !{!57, !58, !59, !60, !61, !62}
!57 = !DIEnumerator(name: "Standard", value: 0)
!58 = !DIEnumerator(name: "UrlSafe", value: 1)
!59 = !DIEnumerator(name: "Crypt", value: 2)
!60 = !DIEnumerator(name: "Bcrypt", value: 3)
!61 = !DIEnumerator(name: "ImapMutf7", value: 4)
!62 = !DIEnumerator(name: "BinHex", value: 5)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !65, isLocal: true, isDefinition: true)
!65 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !66, identifier: "vtable")
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !67, size: 64, align: 64, dwarfAddressSpace: 0)
!67 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!68 = !{i32 7, !"PIC Level", i32 2}
!69 = !{i32 2, !"Debug Info Version", i32 3}
!70 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !71, producer: "clang LLVM (rustc version 1.56.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !72, globals: !106)
!71 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0")
!72 = !{!73, !78, !54, !87, !94, !100}
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Result", scope: !74, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagEnumClass, elements: !75)
!74 = !DINamespace(name: "result", scope: !8)
!75 = !{!76, !77}
!76 = !DIEnumerator(name: "Ok", value: 0)
!77 = !DIEnumerator(name: "Err", value: 1)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !79, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagEnumClass, elements: !82)
!79 = !DINamespace(name: "v1", scope: !80)
!80 = !DINamespace(name: "rt", scope: !81)
!81 = !DINamespace(name: "fmt", scope: !8)
!82 = !{!83, !84, !85, !86}
!83 = !DIEnumerator(name: "Left", value: 0)
!84 = !DIEnumerator(name: "Right", value: 1)
!85 = !DIEnumerator(name: "Center", value: 2)
!86 = !DIEnumerator(name: "Unknown", value: 3)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !88, file: !2, baseType: !89, size: 8, align: 8, flags: DIFlagEnumClass, elements: !90)
!88 = !DINamespace(name: "cmp", scope: !8)
!89 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!90 = !{!91, !92, !93}
!91 = !DIEnumerator(name: "Less", value: -1)
!92 = !DIEnumerator(name: "Equal", value: 0)
!93 = !DIEnumerator(name: "Greater", value: 1)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !95, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagEnumClass, elements: !96)
!95 = !DINamespace(name: "panicking", scope: !8)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "Eq", value: 0)
!98 = !DIEnumerator(name: "Ne", value: 1)
!99 = !DIEnumerator(name: "Match", value: 2)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ControlFlow", scope: !101, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagEnumClass, elements: !103)
!101 = !DINamespace(name: "control_flow", scope: !102)
!102 = !DINamespace(name: "ops", scope: !8)
!103 = !{!104, !105}
!104 = !DIEnumerator(name: "Continue", value: 0)
!105 = !DIEnumerator(name: "Break", value: 1)
!106 = !{!0, !28, !36, !42, !46, !50, !63}
!107 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hef2ad988239277b8E", scope: !109, file: !108, line: 219, type: !112, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !126)
!108 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "a82bc19197b1c05f8386d5b2ec2441bd")
!109 = !DINamespace(name: "{impl#3}", scope: !110)
!110 = !DINamespace(name: "index", scope: !111)
!111 = !DINamespace(name: "slice", scope: !8)
!112 = !DISubroutineType(types: !113)
!113 = !{!114, !119, !114}
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !115, templateParams: !4, identifier: "f5bc56280f62752aca6114f169d6965e")
!115 = !{!116, !118}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !114, file: !2, baseType: !117, size: 64, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !114, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!119 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !120, file: !2, size: 128, align: 64, elements: !121, templateParams: !124, identifier: "519e5ef7586dbc9eb7e108f1b1bab509")
!120 = !DINamespace(name: "range", scope: !102)
!121 = !{!122, !123}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !119, file: !2, baseType: !11, size: 64, align: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !119, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!124 = !{!125}
!125 = !DITemplateTypeParameter(name: "Idx", type: !11)
!126 = !{!127, !128}
!127 = !DILocalVariable(name: "self", arg: 1, scope: !107, file: !108, line: 219, type: !119)
!128 = !DILocalVariable(name: "slice", arg: 2, scope: !107, file: !108, line: 219, type: !114)
!129 = !DILocation(line: 219, column: 29, scope: !107)
!130 = !DILocation(line: 219, column: 35, scope: !107)
!131 = !DILocation(line: 224, column: 44, scope: !107)
!132 = !DILocalVariable(name: "self", arg: 1, scope: !133, file: !134, line: 511, type: !117)
!133 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h722a17b456b63606E", scope: !135, file: !134, line: 511, type: !138, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !140)
!134 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3efc72e5c37c5202bb58c77289e8c38")
!135 = !DINamespace(name: "{impl#0}", scope: !136)
!136 = !DINamespace(name: "const_ptr", scope: !137)
!137 = !DINamespace(name: "ptr", scope: !8)
!138 = !DISubroutineType(types: !139)
!139 = !{!117, !117, !11}
!140 = !{!132, !141}
!141 = !DILocalVariable(name: "count", arg: 2, scope: !133, file: !134, line: 511, type: !11)
!142 = !DILocation(line: 511, column: 29, scope: !133, inlinedAt: !143)
!143 = distinct !DILocation(line: 224, column: 44, scope: !107)
!144 = !DILocation(line: 511, column: 35, scope: !133, inlinedAt: !143)
!145 = !DILocalVariable(name: "self", arg: 1, scope: !146, file: !134, line: 230, type: !117)
!146 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h802de43cda8c4e8cE", scope: !135, file: !134, line: 230, type: !147, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !150)
!147 = !DISubroutineType(types: !148)
!148 = !{!117, !117, !149}
!149 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!150 = !{!145, !151}
!151 = !DILocalVariable(name: "count", arg: 2, scope: !146, file: !134, line: 230, type: !149)
!152 = !DILocation(line: 230, column: 32, scope: !146, inlinedAt: !153)
!153 = distinct !DILocation(line: 516, column: 18, scope: !133, inlinedAt: !143)
!154 = !DILocation(line: 230, column: 38, scope: !146, inlinedAt: !153)
!155 = !DILocation(line: 235, column: 18, scope: !146, inlinedAt: !153)
!156 = !DILocation(line: 224, column: 76, scope: !107)
!157 = !DILocation(line: 224, column: 18, scope: !107)
!158 = !DILocation(line: 225, column: 6, scope: !107)
!159 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h345558571a3a14d0E", scope: !109, file: !108, line: 228, type: !160, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !166)
!160 = !DISubroutineType(types: !161)
!161 = !{!162, !119, !162}
!162 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !163, templateParams: !4, identifier: "5196b2ee1fdbf734c7f3a78e14d50170")
!163 = !{!164, !165}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !162, file: !2, baseType: !117, size: 64, align: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !162, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!166 = !{!167, !168}
!167 = !DILocalVariable(name: "self", arg: 1, scope: !159, file: !108, line: 228, type: !119)
!168 = !DILocalVariable(name: "slice", arg: 2, scope: !159, file: !108, line: 228, type: !162)
!169 = !DILocation(line: 228, column: 33, scope: !159)
!170 = !DILocation(line: 228, column: 39, scope: !159)
!171 = !DILocalVariable(name: "self", arg: 1, scope: !172, file: !173, line: 1197, type: !162)
!172 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7b6483e34cc68724E", scope: !174, file: !173, line: 1197, type: !176, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !179)
!173 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "dc9433fa5edb0740532b3ed97e3aaa10")
!174 = !DINamespace(name: "{impl#1}", scope: !175)
!175 = !DINamespace(name: "mut_ptr", scope: !137)
!176 = !DISubroutineType(types: !177)
!177 = !{!178, !162}
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!179 = !{!171}
!180 = !DILocation(line: 1197, column: 29, scope: !172, inlinedAt: !181)
!181 = distinct !DILocation(line: 231, column: 43, scope: !159)
!182 = !DILocation(line: 1198, column: 9, scope: !172, inlinedAt: !181)
!183 = !DILocation(line: 231, column: 43, scope: !159)
!184 = !DILocalVariable(name: "self", arg: 1, scope: !185, file: !173, line: 618, type: !178)
!185 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd3ace618cf5dc832E", scope: !186, file: !173, line: 618, type: !187, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !189)
!186 = !DINamespace(name: "{impl#0}", scope: !175)
!187 = !DISubroutineType(types: !188)
!188 = !{!178, !178, !11}
!189 = !{!184, !190}
!190 = !DILocalVariable(name: "count", arg: 2, scope: !185, file: !173, line: 618, type: !11)
!191 = !DILocation(line: 618, column: 29, scope: !185, inlinedAt: !192)
!192 = distinct !DILocation(line: 231, column: 43, scope: !159)
!193 = !DILocation(line: 618, column: 35, scope: !185, inlinedAt: !192)
!194 = !DILocalVariable(name: "self", arg: 1, scope: !195, file: !173, line: 235, type: !178)
!195 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h033d4f303fe218b1E", scope: !186, file: !173, line: 235, type: !196, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !198)
!196 = !DISubroutineType(types: !197)
!197 = !{!178, !178, !149}
!198 = !{!194, !199}
!199 = !DILocalVariable(name: "count", arg: 2, scope: !195, file: !173, line: 235, type: !149)
!200 = !DILocation(line: 235, column: 32, scope: !195, inlinedAt: !201)
!201 = distinct !DILocation(line: 623, column: 18, scope: !185, inlinedAt: !192)
!202 = !DILocation(line: 235, column: 38, scope: !195, inlinedAt: !201)
!203 = !DILocation(line: 242, column: 18, scope: !195, inlinedAt: !201)
!204 = !DILocation(line: 231, column: 79, scope: !159)
!205 = !DILocation(line: 231, column: 13, scope: !159)
!206 = !DILocation(line: 233, column: 6, scope: !159)
!207 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h972185dcfd91effbE", scope: !109, file: !108, line: 236, type: !208, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !227)
!208 = !DISubroutineType(types: !209)
!209 = !{!210, !119, !210, !214}
!210 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !211, templateParams: !4, identifier: "585202bcfc7dfd1dd72e8befe2491ee4")
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !210, file: !2, baseType: !117, size: 64, align: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !210, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Location", baseType: !215, size: 64, align: 64, dwarfAddressSpace: 0)
!215 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !216, file: !2, size: 192, align: 64, elements: !218, templateParams: !4, identifier: "9f9749776572719cc82f4bbe4f5eb8d")
!216 = !DINamespace(name: "location", scope: !217)
!217 = !DINamespace(name: "panic", scope: !8)
!218 = !{!219, !224, !226}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !215, file: !2, baseType: !220, size: 128, align: 64)
!220 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !221, templateParams: !4, identifier: "7ef2a91eecc7bcf4b4aaea2dbce79437")
!221 = !{!222, !223}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !220, file: !2, baseType: !117, size: 64, align: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !220, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !215, file: !2, baseType: !225, size: 32, align: 32, offset: 128)
!225 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !215, file: !2, baseType: !225, size: 32, align: 32, offset: 160)
!227 = !{!228, !229}
!228 = !DILocalVariable(name: "self", arg: 1, scope: !207, file: !108, line: 236, type: !119)
!229 = !DILocalVariable(name: "slice", arg: 2, scope: !207, file: !108, line: 236, type: !210)
!230 = !DILocation(line: 236, column: 14, scope: !207)
!231 = !DILocation(line: 236, column: 20, scope: !207)
!232 = !DILocation(line: 237, column: 12, scope: !207)
!233 = !DILocation(line: 239, column: 19, scope: !207)
!234 = !DILocation(line: 238, column: 13, scope: !207)
!235 = !DILocation(line: 243, column: 20, scope: !207)
!236 = !DILocation(line: 240, column: 13, scope: !207)
!237 = !DILocation(line: 244, column: 6, scope: !207)
!238 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17heef28bf0af95df53E", scope: !109, file: !108, line: 247, type: !239, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !245)
!239 = !DISubroutineType(types: !240)
!240 = !{!241, !119, !241, !214}
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !242, templateParams: !4, identifier: "7596319ecf86f60af9b48d8c05ebf9f7")
!242 = !{!243, !244}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !241, file: !2, baseType: !117, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !241, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!245 = !{!246, !247}
!246 = !DILocalVariable(name: "self", arg: 1, scope: !238, file: !108, line: 247, type: !119)
!247 = !DILocalVariable(name: "slice", arg: 2, scope: !238, file: !108, line: 247, type: !241)
!248 = !DILocation(line: 247, column: 18, scope: !238)
!249 = !DILocation(line: 247, column: 24, scope: !238)
!250 = !DILocation(line: 248, column: 12, scope: !238)
!251 = !DILocation(line: 250, column: 19, scope: !238)
!252 = !DILocation(line: 249, column: 13, scope: !238)
!253 = !DILocation(line: 254, column: 24, scope: !238)
!254 = !DILocation(line: 251, column: 13, scope: !238)
!255 = !DILocation(line: 255, column: 6, scope: !238)
!256 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h890a93239c421e89E", scope: !257, file: !108, line: 285, type: !258, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !263)
!257 = !DINamespace(name: "{impl#4}", scope: !110)
!258 = !DISubroutineType(types: !259)
!259 = !{!210, !260, !210, !214}
!260 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !120, file: !2, size: 64, align: 64, elements: !261, templateParams: !124, identifier: "3e48b56f3047a6495d250669d7a4f287")
!261 = !{!262}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !260, file: !2, baseType: !11, size: 64, align: 64)
!263 = !{!264, !265}
!264 = !DILocalVariable(name: "self", arg: 1, scope: !256, file: !108, line: 285, type: !260)
!265 = !DILocalVariable(name: "slice", arg: 2, scope: !256, file: !108, line: 285, type: !210)
!266 = !DILocation(line: 285, column: 14, scope: !256)
!267 = !DILocation(line: 285, column: 20, scope: !256)
!268 = !DILocation(line: 286, column: 9, scope: !256)
!269 = !DILocation(line: 287, column: 6, scope: !256)
!270 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha0aaf566236448aeE", scope: !271, file: !108, line: 310, type: !272, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !277)
!271 = !DINamespace(name: "{impl#5}", scope: !110)
!272 = !DISubroutineType(types: !273)
!273 = !{!114, !274, !114}
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !120, file: !2, size: 64, align: 64, elements: !275, templateParams: !124, identifier: "e075dc6e7a89d0be4297c8fc5af78aa")
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !274, file: !2, baseType: !11, size: 64, align: 64)
!277 = !{!278, !279}
!278 = !DILocalVariable(name: "self", arg: 1, scope: !270, file: !108, line: 310, type: !274)
!279 = !DILocalVariable(name: "slice", arg: 2, scope: !270, file: !108, line: 310, type: !114)
!280 = !DILocation(line: 310, column: 29, scope: !270)
!281 = !DILocation(line: 310, column: 35, scope: !270)
!282 = !DILocation(line: 312, column: 31, scope: !270)
!283 = !DILocation(line: 312, column: 18, scope: !270)
!284 = !DILocation(line: 313, column: 6, scope: !270)
!285 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1adc4106be506d33E", scope: !271, file: !108, line: 316, type: !286, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !288)
!286 = !DISubroutineType(types: !287)
!287 = !{!162, !274, !162}
!288 = !{!289, !290}
!289 = !DILocalVariable(name: "self", arg: 1, scope: !285, file: !108, line: 316, type: !274)
!290 = !DILocalVariable(name: "slice", arg: 2, scope: !285, file: !108, line: 316, type: !162)
!291 = !DILocation(line: 316, column: 33, scope: !285)
!292 = !DILocation(line: 316, column: 39, scope: !285)
!293 = !DILocalVariable(name: "self", arg: 1, scope: !294, file: !173, line: 1177, type: !162)
!294 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h34939220c4f17bbcE", scope: !174, file: !173, line: 1177, type: !295, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !297)
!295 = !DISubroutineType(types: !296)
!296 = !{!11, !162}
!297 = !{!293}
!298 = !DILocation(line: 1177, column: 22, scope: !294, inlinedAt: !299)
!299 = distinct !DILocation(line: 318, column: 31, scope: !285)
!300 = !DILocation(line: 1178, column: 9, scope: !294, inlinedAt: !299)
!301 = !DILocation(line: 318, column: 31, scope: !285)
!302 = !DILocation(line: 318, column: 18, scope: !285)
!303 = !DILocation(line: 319, column: 6, scope: !285)
!304 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hdb0c9cae618d6eadE", scope: !271, file: !108, line: 322, type: !305, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !307)
!305 = !DISubroutineType(types: !306)
!306 = !{!210, !274, !210, !214}
!307 = !{!308, !309}
!308 = !DILocalVariable(name: "self", arg: 1, scope: !304, file: !108, line: 322, type: !274)
!309 = !DILocalVariable(name: "slice", arg: 2, scope: !304, file: !108, line: 322, type: !210)
!310 = !DILocation(line: 322, column: 14, scope: !304)
!311 = !DILocation(line: 322, column: 20, scope: !304)
!312 = !DILocation(line: 323, column: 12, scope: !304)
!313 = !DILocation(line: 327, column: 20, scope: !304)
!314 = !DILocation(line: 324, column: 13, scope: !304)
!315 = !DILocation(line: 328, column: 6, scope: !304)
!316 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h73b65c63e86e8014E", scope: !271, file: !108, line: 331, type: !317, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !319)
!317 = !DISubroutineType(types: !318)
!318 = !{!241, !274, !241, !214}
!319 = !{!320, !321}
!320 = !DILocalVariable(name: "self", arg: 1, scope: !316, file: !108, line: 331, type: !274)
!321 = !DILocalVariable(name: "slice", arg: 2, scope: !316, file: !108, line: 331, type: !241)
!322 = !DILocation(line: 331, column: 18, scope: !316)
!323 = !DILocation(line: 331, column: 24, scope: !316)
!324 = !DILocation(line: 332, column: 12, scope: !316)
!325 = !DILocation(line: 336, column: 24, scope: !316)
!326 = !DILocation(line: 333, column: 13, scope: !316)
!327 = !DILocation(line: 337, column: 6, scope: !316)
!328 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h99883b75b91a7081E", scope: !330, file: !329, line: 690, type: !332, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !344)
!329 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "c5d45e507157c14ac9b8f7e5ac0abc2b")
!330 = !DINamespace(name: "{impl#16}", scope: !331)
!331 = !DINamespace(name: "non_null", scope: !137)
!332 = !DISubroutineType(types: !333)
!333 = !{!334, !337}
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !331, file: !2, size: 64, align: 64, elements: !335, templateParams: !20, identifier: "406fec2678b8bb45d8db3433ccc0ff79")
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !334, file: !2, baseType: !117, size: 64, align: 64)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !338, file: !2, size: 64, align: 64, elements: !339, templateParams: !20, identifier: "76ad11c5918345b022d81965d637386")
!338 = !DINamespace(name: "unique", scope: !137)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !337, file: !2, baseType: !117, size: 64, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !337, file: !2, baseType: !342, align: 8)
!342 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !343, file: !2, align: 8, elements: !4, templateParams: !20, identifier: "d9180f7e28d2761ea11f32bda27bf4b6")
!343 = !DINamespace(name: "marker", scope: !8)
!344 = !{!345}
!345 = !DILocalVariable(name: "unique", arg: 1, scope: !328, file: !329, line: 690, type: !337)
!346 = !DILocation(line: 690, column: 13, scope: !328)
!347 = !DILocation(line: 693, column: 41, scope: !328)
!348 = !DILocation(line: 693, column: 18, scope: !328)
!349 = !DILocation(line: 694, column: 6, scope: !328)
!350 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h7c35ac9202f87533E", scope: !352, file: !351, line: 115, type: !355, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !382)
!351 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "f520a3b301bedb9c22ac84264ef5f708")
!352 = !DINamespace(name: "{impl#1}", scope: !353)
!353 = !DINamespace(name: "collections", scope: !354)
!354 = !DINamespace(name: "alloc", scope: null)
!355 = !DISubroutineType(types: !356)
!356 = !{!357, !360}
!357 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !353, file: !2, size: 128, align: 64, elements: !358, templateParams: !4, identifier: "fff28d7e14cf4bf06ade0fa062373aa3")
!358 = !{!359}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !357, file: !2, baseType: !360, size: 128, align: 64)
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !353, file: !2, size: 128, align: 64, elements: !361, identifier: "858354db2cd943328b0f424df687c6a6")
!361 = !{!362}
!362 = !DICompositeType(tag: DW_TAG_variant_part, scope: !353, file: !2, size: 128, align: 64, elements: !363, templateParams: !4, identifier: "858354db2cd943328b0f424df687c6a6_variant_part", discriminator: !380)
!363 = !{!364, !366}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !362, file: !2, baseType: !365, size: 128, align: 64, extraData: i64 0)
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !360, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "858354db2cd943328b0f424df687c6a6::CapacityOverflow")
!366 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !362, file: !2, baseType: !367, size: 128, align: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !360, file: !2, size: 128, align: 64, elements: !368, templateParams: !4, identifier: "858354db2cd943328b0f424df687c6a6::AllocError")
!368 = !{!369, !379}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !367, file: !2, baseType: !370, size: 128, align: 64)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !40, file: !2, size: 128, align: 64, elements: !371, templateParams: !4, identifier: "f69d3395c48d400fe21824ae0e4df080")
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "size_", scope: !370, file: !2, baseType: !11, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "align_", scope: !370, file: !2, baseType: !374, size: 64, align: 64, offset: 64)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !375, file: !2, size: 64, align: 64, elements: !377, templateParams: !4, identifier: "21623c21723d1648102501c4f9f9b08d")
!375 = !DINamespace(name: "nonzero", scope: !376)
!376 = !DINamespace(name: "num", scope: !8)
!377 = !{!378}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !374, file: !2, baseType: !11, size: 64, align: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !367, file: !2, baseType: !35, align: 8)
!380 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !2, baseType: !381, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!381 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!382 = !{!383}
!383 = !DILocalVariable(name: "kind", arg: 1, scope: !350, file: !351, line: 115, type: !360)
!384 = !DILocation(line: 115, column: 13, scope: !350)
!385 = !DILocation(line: 116, column: 9, scope: !350)
!386 = !DILocation(line: 117, column: 6, scope: !350)
!387 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17heb625a0bacfbfb97E", scope: !389, file: !388, line: 83, type: !392, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !418)
!388 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "84dcaee8455004b919775423d785cbec")
!389 = !DINamespace(name: "{impl#4}", scope: !390)
!390 = !DINamespace(name: "spec_extend", scope: !391)
!391 = !DINamespace(name: "vec", scope: !354)
!392 = !DISubroutineType(types: !393)
!393 = !{null, !394, !409}
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Vec<u8, alloc::alloc::Global>", baseType: !395, size: 64, align: 64, dwarfAddressSpace: 0)
!395 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !391, file: !2, size: 192, align: 64, elements: !396, templateParams: !406, identifier: "56aa0380f8224c92be7dc99cfce9180f")
!396 = !{!397, !408}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !395, file: !2, baseType: !398, size: 128, align: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !399, file: !2, size: 128, align: 64, elements: !400, templateParams: !406, identifier: "47ed2282bf82d40f2b2c1ebc77e9f331")
!399 = !DINamespace(name: "raw_vec", scope: !354)
!400 = !{!401, !402, !403}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !398, file: !2, baseType: !337, size: 64, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !398, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !398, file: !2, baseType: !404, align: 8)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !405, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "9d0734f8822fbd33e4e561ab380af08d")
!405 = !DINamespace(name: "alloc", scope: !354)
!406 = !{!21, !407}
!407 = !DITemplateTypeParameter(name: "A", type: !404)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !395, file: !2, baseType: !11, size: 64, align: 64, offset: 128)
!409 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !410, file: !2, size: 128, align: 64, elements: !411, templateParams: !20, identifier: "d497f50a2820f37aaf72dc233672c27f")
!410 = !DINamespace(name: "iter", scope: !111)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !409, file: !2, baseType: !334, size: 64, align: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !409, file: !2, baseType: !117, size: 64, align: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !409, file: !2, baseType: !415, align: 8)
!415 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !343, file: !2, align: 8, elements: !4, templateParams: !416, identifier: "5ce1d76292b615ef89d76584ca834d06")
!416 = !{!417}
!417 = !DITemplateTypeParameter(name: "T", type: !49)
!418 = !{!419, !420, !421}
!419 = !DILocalVariable(name: "self", arg: 1, scope: !387, file: !388, line: 83, type: !394)
!420 = !DILocalVariable(name: "iterator", arg: 2, scope: !387, file: !388, line: 83, type: !409)
!421 = !DILocalVariable(name: "slice", scope: !422, file: !388, line: 84, type: !210, align: 8)
!422 = distinct !DILexicalBlock(scope: !387, file: !388, line: 84, column: 9)
!423 = !DILocation(line: 83, column: 20, scope: !387)
!424 = !DILocation(line: 83, column: 31, scope: !387)
!425 = !DILocation(line: 84, column: 21, scope: !387)
!426 = !DILocation(line: 84, column: 13, scope: !422)
!427 = !DILocation(line: 85, column: 18, scope: !422)
!428 = !DILocation(line: 86, column: 6, scope: !387)
!429 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h051f26f94fd4eb93E", scope: !431, file: !430, line: 1913, type: !432, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !477, retainedNodes: !473)
!430 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "f73030f150a3926f0f5a346ed13cef73")
!431 = !DINamespace(name: "{impl#37}", scope: !74)
!432 = !DISubroutineType(types: !433)
!433 = !{!434, !459}
!434 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !74, file: !2, size: 128, align: 64, elements: !435, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a")
!435 = !{!436}
!436 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 128, align: 64, elements: !437, templateParams: !450, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a_variant_part", discriminator: !458)
!437 = !{!438, !454}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !436, file: !2, baseType: !439, size: 128, align: 64)
!439 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !434, file: !2, size: 128, align: 64, elements: !440, templateParams: !450, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a::Ok")
!440 = !{!441}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !439, file: !2, baseType: !442, size: 128, align: 64)
!442 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !331, file: !2, size: 128, align: 64, elements: !443, templateParams: !445, identifier: "7a9278b7166ad75b206b800760749ea")
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !442, file: !2, baseType: !114, size: 128, align: 64)
!445 = !{!446}
!446 = !DITemplateTypeParameter(name: "T", type: !447)
!447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, align: 8, elements: !448)
!448 = !{!449}
!449 = !DISubrange(count: -1, lowerBound: 0)
!450 = !{!451, !452}
!451 = !DITemplateTypeParameter(name: "T", type: !442)
!452 = !DITemplateTypeParameter(name: "E", type: !453)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !41, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "76621f17fc0738bb8f0dd793239190c0")
!454 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !436, file: !2, baseType: !455, size: 128, align: 64, extraData: i64 0)
!455 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !434, file: !2, size: 128, align: 64, elements: !456, templateParams: !450, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a::Err")
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !455, file: !2, baseType: !453, align: 8)
!458 = !DIDerivedType(tag: DW_TAG_member, scope: !74, file: !2, baseType: !381, size: 64, align: 64, flags: DIFlagArtificial)
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !74, file: !2, align: 8, elements: !460, identifier: "51cf100009ff4ba85432fdae9dd67163")
!460 = !{!461}
!461 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, align: 8, elements: !462, templateParams: !467, identifier: "51cf100009ff4ba85432fdae9dd67163_variant_part")
!462 = !{!463}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !461, file: !2, baseType: !464, align: 8)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !459, file: !2, align: 8, elements: !465, templateParams: !467, identifier: "51cf100009ff4ba85432fdae9dd67163::Err")
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !464, file: !2, baseType: !453, align: 8)
!467 = !{!468, !452}
!468 = !DITemplateTypeParameter(name: "T", type: !469)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !470, file: !2, align: 8, elements: !471, identifier: "866eee8446b1bfa4f6d9cf9584e40412")
!470 = !DINamespace(name: "convert", scope: !8)
!471 = !{!472}
!472 = !DICompositeType(tag: DW_TAG_variant_part, scope: !470, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "866eee8446b1bfa4f6d9cf9584e40412_variant_part")
!473 = !{!474, !475}
!474 = !DILocalVariable(name: "residual", arg: 1, scope: !429, file: !430, line: 1913, type: !459)
!475 = !DILocalVariable(name: "e", scope: !476, file: !430, line: 1915, type: !453, align: 1)
!476 = distinct !DILexicalBlock(scope: !429, file: !430, line: 1915, column: 13)
!477 = !{!451, !452, !478}
!478 = !DITemplateTypeParameter(name: "F", type: !453)
!479 = !DILocation(line: 1913, column: 22, scope: !429)
!480 = !DILocation(line: 1915, column: 17, scope: !476)
!481 = !DILocation(line: 1915, column: 27, scope: !476)
!482 = !DILocation(line: 1915, column: 23, scope: !476)
!483 = !DILocation(line: 1917, column: 6, scope: !429)
!484 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0638a3fa5c9d1c70E", scope: !431, file: !430, line: 1913, type: !485, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !516, retainedNodes: !512)
!485 = !DISubroutineType(types: !486)
!486 = !{!487, !502}
!487 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !74, file: !2, size: 192, align: 64, elements: !488, identifier: "92d66547c3ce619914559dc39cba3e1d")
!488 = !{!489}
!489 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !490, templateParams: !495, identifier: "92d66547c3ce619914559dc39cba3e1d_variant_part", discriminator: !458)
!490 = !{!491, !498}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !489, file: !2, baseType: !492, size: 192, align: 64, extraData: i64 0)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !487, file: !2, size: 192, align: 64, elements: !493, templateParams: !495, identifier: "92d66547c3ce619914559dc39cba3e1d::Ok")
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !492, file: !2, baseType: !35, align: 8, offset: 64)
!495 = !{!496, !497}
!496 = !DITemplateTypeParameter(name: "T", type: !35)
!497 = !DITemplateTypeParameter(name: "E", type: !357)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !489, file: !2, baseType: !499, size: 192, align: 64, extraData: i64 1)
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !487, file: !2, size: 192, align: 64, elements: !500, templateParams: !495, identifier: "92d66547c3ce619914559dc39cba3e1d::Err")
!500 = !{!501}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !499, file: !2, baseType: !357, size: 128, align: 64, offset: 64)
!502 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !74, file: !2, size: 128, align: 64, elements: !503, identifier: "5586c31d357d0a8a8f41d564473a9cbf")
!503 = !{!504}
!504 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 128, align: 64, elements: !505, templateParams: !510, identifier: "5586c31d357d0a8a8f41d564473a9cbf_variant_part")
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !504, file: !2, baseType: !507, size: 128, align: 64)
!507 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !502, file: !2, size: 128, align: 64, elements: !508, templateParams: !510, identifier: "5586c31d357d0a8a8f41d564473a9cbf::Err")
!508 = !{!509}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !507, file: !2, baseType: !360, size: 128, align: 64)
!510 = !{!468, !511}
!511 = !DITemplateTypeParameter(name: "E", type: !360)
!512 = !{!513, !514}
!513 = !DILocalVariable(name: "residual", arg: 1, scope: !484, file: !430, line: 1913, type: !502)
!514 = !DILocalVariable(name: "e", scope: !515, file: !430, line: 1915, type: !360, align: 8)
!515 = distinct !DILexicalBlock(scope: !484, file: !430, line: 1915, column: 13)
!516 = !{!496, !511, !517}
!517 = !DITemplateTypeParameter(name: "F", type: !357)
!518 = !DILocation(line: 1913, column: 22, scope: !484)
!519 = !DILocation(line: 1915, column: 17, scope: !484)
!520 = !DILocation(line: 1915, column: 17, scope: !515)
!521 = !DILocation(line: 1915, column: 27, scope: !515)
!522 = !DILocation(line: 1915, column: 23, scope: !515)
!523 = !DILocation(line: 1917, column: 6, scope: !484)
!524 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0e621aa07e75d8edE", scope: !431, file: !430, line: 1913, type: !525, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !544, retainedNodes: !540)
!525 = !DISubroutineType(types: !526)
!526 = !{!527, !502}
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !74, file: !2, size: 192, align: 64, elements: !528, identifier: "3049717e39425364a41f3b8d31cb2182")
!528 = !{!529}
!529 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !530, templateParams: !535, identifier: "3049717e39425364a41f3b8d31cb2182_variant_part", discriminator: !458)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !529, file: !2, baseType: !532, size: 192, align: 64, extraData: i64 0)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !527, file: !2, size: 192, align: 64, elements: !533, templateParams: !535, identifier: "3049717e39425364a41f3b8d31cb2182::Ok")
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !532, file: !2, baseType: !442, size: 128, align: 64, offset: 64)
!535 = !{!451, !497}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !529, file: !2, baseType: !537, size: 192, align: 64, extraData: i64 1)
!537 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !527, file: !2, size: 192, align: 64, elements: !538, templateParams: !535, identifier: "3049717e39425364a41f3b8d31cb2182::Err")
!538 = !{!539}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !537, file: !2, baseType: !357, size: 128, align: 64, offset: 64)
!540 = !{!541, !542}
!541 = !DILocalVariable(name: "residual", arg: 1, scope: !524, file: !430, line: 1913, type: !502)
!542 = !DILocalVariable(name: "e", scope: !543, file: !430, line: 1915, type: !360, align: 8)
!543 = distinct !DILexicalBlock(scope: !524, file: !430, line: 1915, column: 13)
!544 = !{!451, !511, !517}
!545 = !DILocation(line: 1913, column: 22, scope: !524)
!546 = !DILocation(line: 1915, column: 17, scope: !524)
!547 = !DILocation(line: 1915, column: 17, scope: !543)
!548 = !DILocation(line: 1915, column: 27, scope: !543)
!549 = !DILocation(line: 1915, column: 23, scope: !543)
!550 = !DILocation(line: 1917, column: 6, scope: !524)
!551 = distinct !DISubprogram(name: "from_residual<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h36480700bbcbd701E", scope: !431, file: !430, line: 1913, type: !552, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !587, retainedNodes: !583)
!552 = !DISubroutineType(types: !553)
!553 = !{!554, !574}
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", scope: !74, file: !2, size: 192, align: 64, elements: !555, identifier: "f1386a55091ece7d92996439741f9fac")
!555 = !{!556}
!556 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !557, templateParams: !566, identifier: "f1386a55091ece7d92996439741f9fac_variant_part", discriminator: !573)
!557 = !{!558, !569}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !556, file: !2, baseType: !559, size: 192, align: 64)
!559 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !554, file: !2, size: 192, align: 64, elements: !560, templateParams: !566, identifier: "f1386a55091ece7d92996439741f9fac::Ok")
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !559, file: !2, baseType: !562, size: 192, align: 64)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::alloc::layout::Layout, usize)", file: !2, size: 192, align: 64, elements: !563, templateParams: !4, identifier: "67f85d36b181012f3a00f61c3a83b547")
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !562, file: !2, baseType: !370, size: 128, align: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !562, file: !2, baseType: !11, size: 64, align: 64, offset: 128)
!566 = !{!567, !568}
!567 = !DITemplateTypeParameter(name: "T", type: !562)
!568 = !DITemplateTypeParameter(name: "E", type: !39)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !556, file: !2, baseType: !570, size: 192, align: 64, extraData: i64 0)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !554, file: !2, size: 192, align: 64, elements: !571, templateParams: !566, identifier: "f1386a55091ece7d92996439741f9fac::Err")
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !570, file: !2, baseType: !39, align: 8)
!573 = !DIDerivedType(tag: DW_TAG_member, scope: !74, file: !2, baseType: !381, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!574 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !74, file: !2, align: 8, elements: !575, identifier: "70f8e6db75b3986e768f049f32b98569")
!575 = !{!576}
!576 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, align: 8, elements: !577, templateParams: !582, identifier: "70f8e6db75b3986e768f049f32b98569_variant_part")
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !576, file: !2, baseType: !579, align: 8)
!579 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !574, file: !2, align: 8, elements: !580, templateParams: !582, identifier: "70f8e6db75b3986e768f049f32b98569::Err")
!580 = !{!581}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !579, file: !2, baseType: !39, align: 8)
!582 = !{!468, !568}
!583 = !{!584, !585}
!584 = !DILocalVariable(name: "residual", arg: 1, scope: !551, file: !430, line: 1913, type: !574)
!585 = !DILocalVariable(name: "e", scope: !586, file: !430, line: 1915, type: !39, align: 1)
!586 = distinct !DILexicalBlock(scope: !551, file: !430, line: 1915, column: 13)
!587 = !{!567, !568, !588}
!588 = !DITemplateTypeParameter(name: "F", type: !39)
!589 = !DILocation(line: 1913, column: 22, scope: !551)
!590 = !DILocation(line: 1915, column: 17, scope: !586)
!591 = !DILocation(line: 1915, column: 27, scope: !586)
!592 = !DILocation(line: 1915, column: 23, scope: !586)
!593 = !DILocation(line: 1917, column: 6, scope: !551)
!594 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5f65b0aa4fa525baE", scope: !431, file: !430, line: 1913, type: !595, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !610, retainedNodes: !606)
!595 = !DISubroutineType(types: !596)
!596 = !{!527, !597}
!597 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !74, file: !2, size: 128, align: 64, elements: !598, identifier: "9b65f6c8cba79f65480ffc68695af4b1")
!598 = !{!599}
!599 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 128, align: 64, elements: !600, templateParams: !605, identifier: "9b65f6c8cba79f65480ffc68695af4b1_variant_part")
!600 = !{!601}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !599, file: !2, baseType: !602, size: 128, align: 64)
!602 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !597, file: !2, size: 128, align: 64, elements: !603, templateParams: !605, identifier: "9b65f6c8cba79f65480ffc68695af4b1::Err")
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !602, file: !2, baseType: !357, size: 128, align: 64)
!605 = !{!468, !497}
!606 = !{!607, !608}
!607 = !DILocalVariable(name: "residual", arg: 1, scope: !594, file: !430, line: 1913, type: !597)
!608 = !DILocalVariable(name: "e", scope: !609, file: !430, line: 1915, type: !357, align: 8)
!609 = distinct !DILexicalBlock(scope: !594, file: !430, line: 1915, column: 13)
!610 = !{!451, !497, !517}
!611 = !DILocation(line: 1913, column: 22, scope: !594)
!612 = !DILocation(line: 1915, column: 17, scope: !594)
!613 = !DILocation(line: 1915, column: 17, scope: !609)
!614 = !DILocation(line: 1915, column: 27, scope: !609)
!615 = !DILocation(line: 1915, column: 23, scope: !609)
!616 = !DILocation(line: 1917, column: 6, scope: !594)
!617 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8673e32ce17afa86E", scope: !431, file: !430, line: 1913, type: !618, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !638, retainedNodes: !634)
!618 = !DISubroutineType(types: !619)
!619 = !{!620, !574}
!620 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !74, file: !2, size: 128, align: 64, elements: !621, identifier: "fe29df956a262954e135d4a574f5da26")
!621 = !{!622}
!622 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 128, align: 64, elements: !623, templateParams: !628, identifier: "fe29df956a262954e135d4a574f5da26_variant_part", discriminator: !573)
!623 = !{!624, !630}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !622, file: !2, baseType: !625, size: 128, align: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !620, file: !2, size: 128, align: 64, elements: !626, templateParams: !628, identifier: "fe29df956a262954e135d4a574f5da26::Ok")
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !625, file: !2, baseType: !370, size: 128, align: 64)
!628 = !{!629, !568}
!629 = !DITemplateTypeParameter(name: "T", type: !370)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !622, file: !2, baseType: !631, size: 128, align: 64, extraData: i64 0)
!631 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !620, file: !2, size: 128, align: 64, elements: !632, templateParams: !628, identifier: "fe29df956a262954e135d4a574f5da26::Err")
!632 = !{!633}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !631, file: !2, baseType: !39, align: 8)
!634 = !{!635, !636}
!635 = !DILocalVariable(name: "residual", arg: 1, scope: !617, file: !430, line: 1913, type: !574)
!636 = !DILocalVariable(name: "e", scope: !637, file: !430, line: 1915, type: !39, align: 1)
!637 = distinct !DILexicalBlock(scope: !617, file: !430, line: 1915, column: 13)
!638 = !{!629, !568, !588}
!639 = !DILocation(line: 1913, column: 22, scope: !617)
!640 = !DILocation(line: 1915, column: 17, scope: !637)
!641 = !DILocation(line: 1915, column: 27, scope: !637)
!642 = !DILocation(line: 1915, column: 23, scope: !637)
!643 = !DILocation(line: 1917, column: 6, scope: !617)
!644 = distinct !DISubprogram(name: "from_residual<(), core::fmt::Error, core::fmt::Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf77e9885a26c284E", scope: !431, file: !430, line: 1913, type: !645, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !662, retainedNodes: !658)
!645 = !DISubroutineType(types: !646)
!646 = !{!73, !647}
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::fmt::Error>", scope: !74, file: !2, align: 8, elements: !648, identifier: "4a6d95ddd0b71492c0e31062b558fb3")
!648 = !{!649}
!649 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, align: 8, elements: !650, templateParams: !656, identifier: "4a6d95ddd0b71492c0e31062b558fb3_variant_part")
!650 = !{!651}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !649, file: !2, baseType: !652, align: 8)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !647, file: !2, align: 8, elements: !653, templateParams: !656, identifier: "4a6d95ddd0b71492c0e31062b558fb3::Err")
!653 = !{!654}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !652, file: !2, baseType: !655, align: 8)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !81, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "9a7129446e11b1cf84701cbd3ee10588")
!656 = !{!468, !657}
!657 = !DITemplateTypeParameter(name: "E", type: !655)
!658 = !{!659, !660}
!659 = !DILocalVariable(name: "residual", arg: 1, scope: !644, file: !430, line: 1913, type: !647)
!660 = !DILocalVariable(name: "e", scope: !661, file: !430, line: 1915, type: !655, align: 1)
!661 = distinct !DILexicalBlock(scope: !644, file: !430, line: 1915, column: 13)
!662 = !{!496, !657, !663}
!663 = !DITemplateTypeParameter(name: "F", type: !655)
!664 = !DILocation(line: 1913, column: 22, scope: !644)
!665 = !DILocation(line: 1915, column: 17, scope: !661)
!666 = !DILocation(line: 1915, column: 27, scope: !661)
!667 = !DILocation(line: 1915, column: 23, scope: !661)
!668 = !DILocation(line: 1917, column: 6, scope: !644)
!669 = !{i8 0, i8 2}
!670 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd7edc681497ec821E", scope: !431, file: !430, line: 1913, type: !671, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !677, retainedNodes: !673)
!671 = !DISubroutineType(types: !672)
!672 = !{!487, !597}
!673 = !{!674, !675}
!674 = !DILocalVariable(name: "residual", arg: 1, scope: !670, file: !430, line: 1913, type: !597)
!675 = !DILocalVariable(name: "e", scope: !676, file: !430, line: 1915, type: !357, align: 8)
!676 = distinct !DILexicalBlock(scope: !670, file: !430, line: 1915, column: 13)
!677 = !{!496, !497, !517}
!678 = !DILocation(line: 1913, column: 22, scope: !670)
!679 = !DILocation(line: 1915, column: 17, scope: !670)
!680 = !DILocation(line: 1915, column: 17, scope: !676)
!681 = !DILocation(line: 1915, column: 27, scope: !676)
!682 = !DILocation(line: 1915, column: 23, scope: !676)
!683 = !DILocation(line: 1917, column: 6, scope: !670)
!684 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e6ced1fefbce2d7E", scope: !686, file: !685, line: 2117, type: !687, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !720)
!685 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "fc8dfb4543b7986b6225b25d4f76a5ce")
!686 = !DINamespace(name: "{impl#13}", scope: !81)
!687 = !DISubroutineType(types: !688)
!688 = !{!73, !66, !689}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Formatter", baseType: !690, size: 64, align: 64, dwarfAddressSpace: 0)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !81, file: !2, size: 512, align: 64, elements: !691, templateParams: !4, identifier: "37f4daa474efe0abec93026f6af11d04")
!691 = !{!692, !693, !695, !696, !710, !711}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !690, file: !2, baseType: !225, size: 32, align: 32, offset: 384)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !690, file: !2, baseType: !694, size: 32, align: 32, offset: 416)
!694 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_unsigned_char)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !690, file: !2, baseType: !78, size: 8, align: 8, offset: 448)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !690, file: !2, baseType: !697, size: 128, align: 64)
!697 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !14, file: !2, size: 128, align: 64, elements: !698, identifier: "4849786e80860f5416c4c6b259f5a683")
!698 = !{!699}
!699 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 128, align: 64, elements: !700, templateParams: !703, identifier: "4849786e80860f5416c4c6b259f5a683_variant_part", discriminator: !709)
!700 = !{!701, !705}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !699, file: !2, baseType: !702, size: 128, align: 64, extraData: i64 0)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !697, file: !2, size: 128, align: 64, elements: !4, templateParams: !703, identifier: "4849786e80860f5416c4c6b259f5a683::None")
!703 = !{!704}
!704 = !DITemplateTypeParameter(name: "T", type: !11)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !699, file: !2, baseType: !706, size: 128, align: 64, extraData: i64 1)
!706 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !697, file: !2, size: 128, align: 64, elements: !707, templateParams: !703, identifier: "4849786e80860f5416c4c6b259f5a683::Some")
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !706, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, scope: !14, file: !2, baseType: !381, size: 64, align: 64, flags: DIFlagArtificial)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !690, file: !2, baseType: !697, size: 128, align: 64, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !690, file: !2, baseType: !712, size: 128, align: 64, offset: 256)
!712 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !713, templateParams: !4, identifier: "ab0a0458a7bfc4114bcaaa179b3e8910")
!713 = !{!714, !715}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !712, file: !2, baseType: !178, size: 64, align: 64, flags: DIFlagArtificial)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !712, file: !2, baseType: !716, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !717, size: 64, align: 64, dwarfAddressSpace: 0)
!717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 192, align: 64, elements: !718)
!718 = !{!719}
!719 = !DISubrange(count: 3, lowerBound: 0)
!720 = !{!721, !722}
!721 = !DILocalVariable(name: "self", arg: 1, scope: !684, file: !685, line: 2117, type: !66)
!722 = !DILocalVariable(name: "f", arg: 2, scope: !684, file: !685, line: 2117, type: !689)
!723 = !DILocation(line: 2117, column: 12, scope: !684)
!724 = !DILocation(line: 2117, column: 19, scope: !684)
!725 = !DILocation(line: 2118, column: 9, scope: !684)
!726 = !DILocation(line: 2119, column: 6, scope: !684)
!727 = distinct !DISubprogram(name: "fmt<usize>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h15c1c9f7e8626237E", scope: !728, file: !685, line: 2088, type: !729, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !732)
!728 = !DINamespace(name: "{impl#51}", scope: !81)
!729 = !DISubroutineType(types: !730)
!730 = !{!73, !731, !689}
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&usize", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!732 = !{!733, !734}
!733 = !DILocalVariable(name: "self", arg: 1, scope: !727, file: !685, line: 2088, type: !731)
!734 = !DILocalVariable(name: "f", arg: 2, scope: !727, file: !685, line: 2088, type: !689)
!735 = !DILocation(line: 2088, column: 20, scope: !727)
!736 = !DILocation(line: 2088, column: 27, scope: !727)
!737 = !DILocation(line: 2088, column: 71, scope: !727)
!738 = !DILocation(line: 2088, column: 62, scope: !727)
!739 = !DILocation(line: 2088, column: 84, scope: !727)
!740 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h20a18daf423b9470E", scope: !728, file: !685, line: 2088, type: !741, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !744)
!741 = !DISubroutineType(types: !742)
!742 = !{!73, !743, !689}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u8", baseType: !49, size: 64, align: 64, dwarfAddressSpace: 0)
!744 = !{!745, !746}
!745 = !DILocalVariable(name: "self", arg: 1, scope: !740, file: !685, line: 2088, type: !743)
!746 = !DILocalVariable(name: "f", arg: 2, scope: !740, file: !685, line: 2088, type: !689)
!747 = !DILocation(line: 2088, column: 20, scope: !740)
!748 = !DILocation(line: 2088, column: 27, scope: !740)
!749 = !DILocation(line: 2088, column: 71, scope: !740)
!750 = !DILocation(line: 2088, column: 62, scope: !740)
!751 = !DILocation(line: 2088, column: 84, scope: !740)
!752 = distinct !DISubprogram(name: "fmt<base64::CharacterSet>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2113a1daaec7addaE", scope: !728, file: !685, line: 2088, type: !753, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !759, retainedNodes: !756)
!753 = !DISubroutineType(types: !754)
!754 = !{!73, !755, !689}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&CharacterSet", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!756 = !{!757, !758}
!757 = !DILocalVariable(name: "self", arg: 1, scope: !752, file: !685, line: 2088, type: !755)
!758 = !DILocalVariable(name: "f", arg: 2, scope: !752, file: !685, line: 2088, type: !689)
!759 = !{!760}
!760 = !DITemplateTypeParameter(name: "T", type: !54)
!761 = !DILocation(line: 2088, column: 20, scope: !752)
!762 = !DILocation(line: 2088, column: 27, scope: !752)
!763 = !DILocation(line: 2088, column: 71, scope: !752)
!764 = !DILocation(line: 2088, column: 62, scope: !752)
!765 = !DILocation(line: 2088, column: 84, scope: !752)
!766 = distinct !DISubprogram(name: "fmt<bool>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61857a7b61451390E", scope: !728, file: !685, line: 2088, type: !767, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !773, retainedNodes: !770)
!767 = !DISubroutineType(types: !768)
!768 = !{!73, !769, !689}
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bool", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!770 = !{!771, !772}
!771 = !DILocalVariable(name: "self", arg: 1, scope: !766, file: !685, line: 2088, type: !769)
!772 = !DILocalVariable(name: "f", arg: 2, scope: !766, file: !685, line: 2088, type: !689)
!773 = !{!774}
!774 = !DITemplateTypeParameter(name: "T", type: !67)
!775 = !DILocation(line: 2088, column: 20, scope: !766)
!776 = !DILocation(line: 2088, column: 27, scope: !766)
!777 = !DILocation(line: 2088, column: 71, scope: !766)
!778 = !DILocation(line: 2088, column: 62, scope: !766)
!779 = !DILocation(line: 2088, column: 84, scope: !766)
!780 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h37d009f9a141a023E", scope: !781, file: !685, line: 2088, type: !782, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !788, retainedNodes: !785)
!781 = !DINamespace(name: "{impl#53}", scope: !81)
!782 = !DISubroutineType(types: !783)
!783 = !{!73, !784, !689}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !220, size: 64, align: 64, dwarfAddressSpace: 0)
!785 = !{!786, !787}
!786 = !DILocalVariable(name: "self", arg: 1, scope: !780, file: !685, line: 2088, type: !784)
!787 = !DILocalVariable(name: "f", arg: 2, scope: !780, file: !685, line: 2088, type: !689)
!788 = !{!789}
!789 = !DITemplateTypeParameter(name: "T", type: !790)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, align: 8, elements: !448)
!791 = !DILocation(line: 2088, column: 20, scope: !780)
!792 = !DILocation(line: 2088, column: 27, scope: !780)
!793 = !DILocation(line: 2088, column: 71, scope: !780)
!794 = !DILocation(line: 2088, column: 62, scope: !780)
!795 = !DILocation(line: 2088, column: 84, scope: !780)
!796 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17ha589c00b0b84353dE", scope: !798, file: !797, line: 189, type: !801, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !803)
!797 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd2120efb48f64c11ba5a73ce3f093f0")
!798 = !DINamespace(name: "{impl#37}", scope: !799)
!799 = !DINamespace(name: "range", scope: !800)
!800 = !DINamespace(name: "iter", scope: !8)
!801 = !DISubroutineType(types: !802)
!802 = !{!11, !11, !11}
!803 = !{!804, !805}
!804 = !DILocalVariable(name: "start", arg: 1, scope: !796, file: !797, line: 189, type: !11)
!805 = !DILocalVariable(name: "n", arg: 2, scope: !796, file: !797, line: 189, type: !11)
!806 = !DILocation(line: 189, column: 37, scope: !796)
!807 = !DILocation(line: 189, column: 50, scope: !796)
!808 = !DILocalVariable(name: "self", arg: 1, scope: !809, file: !810, line: 439, type: !11)
!809 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h43dd9e37f0475724E", scope: !811, file: !810, line: 439, type: !801, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !812)
!810 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "8bd5648afa999a95525abfd2832ef4ce")
!811 = !DINamespace(name: "{impl#11}", scope: !376)
!812 = !{!808, !813}
!813 = !DILocalVariable(name: "rhs", arg: 2, scope: !809, file: !810, line: 439, type: !11)
!814 = !DILocation(line: 439, column: 43, scope: !809, inlinedAt: !815)
!815 = distinct !DILocation(line: 191, column: 22, scope: !796)
!816 = !DILocation(line: 439, column: 49, scope: !809, inlinedAt: !815)
!817 = !DILocation(line: 442, column: 22, scope: !809, inlinedAt: !815)
!818 = !DILocation(line: 191, column: 22, scope: !796)
!819 = !DILocation(line: 192, column: 10, scope: !796)
!820 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17h24882474a550ec7eE", scope: !822, file: !821, line: 2215, type: !823, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !825)
!821 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "1be464bbefb5340012936033e0ffb61a")
!822 = !DINamespace(name: "intrinsics", scope: !8)
!823 = !DISubroutineType(types: !824)
!824 = !{null, !178, !22, !11}
!825 = !{!826, !827, !828}
!826 = !DILocalVariable(name: "dst", arg: 1, scope: !820, file: !821, line: 2215, type: !178)
!827 = !DILocalVariable(name: "val", arg: 2, scope: !820, file: !821, line: 2215, type: !22)
!828 = !DILocalVariable(name: "count", arg: 3, scope: !820, file: !821, line: 2215, type: !11)
!829 = !DILocation(line: 2215, column: 30, scope: !820)
!830 = !DILocation(line: 2215, column: 43, scope: !820)
!831 = !DILocation(line: 2215, column: 52, scope: !820)
!832 = !DILocation(line: 2223, column: 14, scope: !820)
!833 = !DILocation(line: 2224, column: 2, scope: !820)
!834 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h1b004e6041875ef7E", scope: !822, file: !821, line: 2040, type: !835, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !837)
!835 = !DISubroutineType(types: !836)
!836 = !{null, !117, !178, !11}
!837 = !{!838, !839, !840}
!838 = !DILocalVariable(name: "src", arg: 1, scope: !834, file: !821, line: 2040, type: !117)
!839 = !DILocalVariable(name: "dst", arg: 2, scope: !834, file: !821, line: 2040, type: !178)
!840 = !DILocalVariable(name: "count", arg: 3, scope: !834, file: !821, line: 2040, type: !11)
!841 = !DILocation(line: 2040, column: 44, scope: !834)
!842 = !DILocation(line: 2040, column: 59, scope: !834)
!843 = !DILocation(line: 2040, column: 72, scope: !834)
!844 = !DILocation(line: 2058, column: 14, scope: !834)
!845 = !DILocation(line: 2059, column: 2, scope: !834)
!846 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17hcd028c09ea6e96c4E", scope: !848, file: !847, line: 763, type: !801, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !852, retainedNodes: !849)
!847 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fdac3f6fbed09f2cfeccffe125b9a60")
!848 = !DINamespace(name: "Ord", scope: !88)
!849 = !{!850, !851}
!850 = !DILocalVariable(name: "self", arg: 1, scope: !846, file: !847, line: 763, type: !11)
!851 = !DILocalVariable(name: "other", arg: 2, scope: !846, file: !847, line: 763, type: !11)
!852 = !{!853}
!853 = !DITemplateTypeParameter(name: "Self", type: !11)
!854 = !DILocation(line: 763, column: 12, scope: !846)
!855 = !DILocation(line: 763, column: 18, scope: !846)
!856 = !DILocation(line: 767, column: 9, scope: !846)
!857 = !DILocation(line: 768, column: 6, scope: !846)
!858 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3Ord3min17h17d4a739f1616196E", scope: !848, file: !847, line: 783, type: !801, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !852, retainedNodes: !859)
!859 = !{!860, !861}
!860 = !DILocalVariable(name: "self", arg: 1, scope: !858, file: !847, line: 783, type: !11)
!861 = !DILocalVariable(name: "other", arg: 2, scope: !858, file: !847, line: 783, type: !11)
!862 = !DILocation(line: 783, column: 12, scope: !858)
!863 = !DILocation(line: 783, column: 18, scope: !858)
!864 = !DILocation(line: 787, column: 9, scope: !858)
!865 = !DILocation(line: 788, column: 6, scope: !858)
!866 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h7dec65f8c7a01985E", scope: !88, file: !847, line: 1183, type: !801, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !867)
!867 = !{!868, !869}
!868 = !DILocalVariable(name: "v1", arg: 1, scope: !866, file: !847, line: 1183, type: !11)
!869 = !DILocalVariable(name: "v2", arg: 2, scope: !866, file: !847, line: 1183, type: !11)
!870 = !DILocation(line: 1183, column: 20, scope: !866)
!871 = !DILocation(line: 1183, column: 27, scope: !866)
!872 = !DILocation(line: 1184, column: 5, scope: !866)
!873 = !DILocation(line: 1185, column: 2, scope: !866)
!874 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3min17h5809023887dbf599E", scope: !88, file: !847, line: 1120, type: !801, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !875)
!875 = !{!876, !877}
!876 = !DILocalVariable(name: "v1", arg: 1, scope: !874, file: !847, line: 1120, type: !11)
!877 = !DILocalVariable(name: "v2", arg: 2, scope: !874, file: !847, line: 1120, type: !11)
!878 = !DILocation(line: 1120, column: 20, scope: !874)
!879 = !DILocation(line: 1120, column: 27, scope: !874)
!880 = !DILocation(line: 1121, column: 5, scope: !874)
!881 = !DILocation(line: 1122, column: 2, scope: !874)
!882 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17he9d47f91f55bfd10E", scope: !883, file: !847, line: 1334, type: !885, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !887)
!883 = !DINamespace(name: "{impl#55}", scope: !884)
!884 = !DINamespace(name: "impls", scope: !88)
!885 = !DISubroutineType(types: !886)
!886 = !{!87, !45, !45}
!887 = !{!888, !889}
!888 = !DILocalVariable(name: "self", arg: 1, scope: !882, file: !847, line: 1334, type: !45)
!889 = !DILocalVariable(name: "other", arg: 2, scope: !882, file: !847, line: 1334, type: !45)
!890 = !DILocation(line: 1334, column: 24, scope: !882)
!891 = !DILocation(line: 1334, column: 31, scope: !882)
!892 = !DILocation(line: 1337, column: 24, scope: !882)
!893 = !DILocation(line: 1337, column: 32, scope: !882)
!894 = !DILocation(line: 1338, column: 29, scope: !882)
!895 = !DILocation(line: 1338, column: 38, scope: !882)
!896 = !DILocation(line: 1337, column: 41, scope: !882)
!897 = !DILocation(line: 1337, column: 21, scope: !882)
!898 = !DILocation(line: 1340, column: 18, scope: !882)
!899 = !{i8 -1, i8 2}
!900 = !DILocation(line: 1339, column: 28, scope: !882)
!901 = !DILocation(line: 1338, column: 26, scope: !882)
!902 = !DILocation(line: 1338, column: 47, scope: !882)
!903 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h802cd51cfb80ef88E", scope: !904, file: !847, line: 1322, type: !905, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !907)
!904 = !DINamespace(name: "{impl#54}", scope: !884)
!905 = !DISubroutineType(types: !906)
!906 = !{!67, !45, !45}
!907 = !{!908, !909}
!908 = !DILocalVariable(name: "self", arg: 1, scope: !903, file: !847, line: 1322, type: !45)
!909 = !DILocalVariable(name: "other", arg: 2, scope: !903, file: !847, line: 1322, type: !45)
!910 = !DILocation(line: 1322, column: 23, scope: !903)
!911 = !DILocation(line: 1322, column: 30, scope: !903)
!912 = !DILocation(line: 1322, column: 52, scope: !903)
!913 = !DILocation(line: 1322, column: 62, scope: !903)
!914 = !DILocation(line: 1322, column: 72, scope: !903)
!915 = distinct !DISubprogram(name: "max_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6max_by17h05be1819ddb2d709E", scope: !88, file: !847, line: 1202, type: !916, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !923, retainedNodes: !919)
!916 = !DISubroutineType(types: !917)
!917 = !{!11, !11, !11, !918}
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &usize) -> core::cmp::Ordering", baseType: !885, align: 8, dwarfAddressSpace: 0)
!919 = !{!920, !921, !922}
!920 = !DILocalVariable(name: "v1", arg: 1, scope: !915, file: !847, line: 1202, type: !11)
!921 = !DILocalVariable(name: "v2", arg: 2, scope: !915, file: !847, line: 1202, type: !11)
!922 = !DILocalVariable(name: "compare", arg: 3, scope: !915, file: !847, line: 1202, type: !918)
!923 = !{!704, !924}
!924 = !DITemplateTypeParameter(name: "F", type: !918)
!925 = !DILocation(line: 1202, column: 49, scope: !915)
!926 = !DILocation(line: 1202, column: 56, scope: !915)
!927 = !DILocation(line: 1202, column: 63, scope: !915)
!928 = !DILocation(line: 1203, column: 11, scope: !915)
!929 = !DILocation(line: 1203, column: 5, scope: !915)
!930 = !DILocation(line: 1204, column: 45, scope: !915)
!931 = !DILocation(line: 1205, column: 30, scope: !915)
!932 = !DILocation(line: 1207, column: 1, scope: !915)
!933 = !DILocation(line: 1207, column: 2, scope: !915)
!934 = distinct !DISubprogram(name: "min_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6min_by17h3e2c791d1ec1a841E", scope: !88, file: !847, line: 1139, type: !916, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !923, retainedNodes: !935)
!935 = !{!936, !937, !938}
!936 = !DILocalVariable(name: "v1", arg: 1, scope: !934, file: !847, line: 1139, type: !11)
!937 = !DILocalVariable(name: "v2", arg: 2, scope: !934, file: !847, line: 1139, type: !11)
!938 = !DILocalVariable(name: "compare", arg: 3, scope: !934, file: !847, line: 1139, type: !918)
!939 = !DILocation(line: 1139, column: 49, scope: !934)
!940 = !DILocation(line: 1139, column: 56, scope: !934)
!941 = !DILocation(line: 1139, column: 63, scope: !934)
!942 = !DILocation(line: 1140, column: 11, scope: !934)
!943 = !DILocation(line: 1140, column: 5, scope: !934)
!944 = !DILocation(line: 1141, column: 45, scope: !934)
!945 = !DILocation(line: 1142, column: 30, scope: !934)
!946 = !DILocation(line: 1144, column: 1, scope: !934)
!947 = !DILocation(line: 1144, column: 2, scope: !934)
!948 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core3fmt10ArgumentV13new17h8b0f37a7e5622812E", scope: !949, file: !685, line: 302, type: !958, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !964, retainedNodes: !961)
!949 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !81, file: !2, size: 128, align: 64, elements: !950, templateParams: !4, identifier: "899142106ae236a2208250e894c2e1f5")
!950 = !{!951, !954}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !949, file: !2, baseType: !952, size: 64, align: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Opaque", baseType: !953, size: 64, align: 64, dwarfAddressSpace: 0)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", file: !2, align: 8, elements: !4, identifier: "877e2849686608d7fea70d5469669ca4")
!954 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !949, file: !2, baseType: !955, size: 64, align: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !956, size: 64, align: 64, dwarfAddressSpace: 0)
!956 = !DISubroutineType(types: !957)
!957 = !{!73, !952, !689}
!958 = !DISubroutineType(types: !959)
!959 = !{!949, !784, !960}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !782, size: 64, align: 64, dwarfAddressSpace: 0)
!961 = !{!962, !963}
!962 = !DILocalVariable(name: "x", arg: 1, scope: !948, file: !685, line: 302, type: !784)
!963 = !DILocalVariable(name: "f", arg: 2, scope: !948, file: !685, line: 302, type: !960)
!964 = !{!965}
!965 = !DITemplateTypeParameter(name: "T", type: !220)
!966 = !DILocation(line: 302, column: 23, scope: !948)
!967 = !DILocation(line: 302, column: 33, scope: !948)
!968 = !DILocation(line: 311, column: 42, scope: !948)
!969 = !DILocation(line: 311, column: 68, scope: !948)
!970 = !DILocation(line: 311, column: 18, scope: !948)
!971 = !DILocation(line: 312, column: 6, scope: !948)
!972 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17hb2beae2a027d7513E", scope: !949, file: !685, line: 302, type: !973, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !978)
!973 = !DISubroutineType(types: !974)
!974 = !{!949, !45, !975}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !976, size: 64, align: 64, dwarfAddressSpace: 0)
!976 = !DISubroutineType(types: !977)
!977 = !{!73, !45, !689}
!978 = !{!979, !980}
!979 = !DILocalVariable(name: "x", arg: 1, scope: !972, file: !685, line: 302, type: !45)
!980 = !DILocalVariable(name: "f", arg: 2, scope: !972, file: !685, line: 302, type: !975)
!981 = !DILocation(line: 302, column: 23, scope: !972)
!982 = !DILocation(line: 302, column: 33, scope: !972)
!983 = !DILocation(line: 311, column: 42, scope: !972)
!984 = !DILocation(line: 311, column: 68, scope: !972)
!985 = !DILocation(line: 311, column: 18, scope: !972)
!986 = !DILocation(line: 312, column: 6, scope: !972)
!987 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3fmt10ArgumentV13new17hca9c87ff4cc79f6eE", scope: !949, file: !685, line: 302, type: !988, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !993)
!988 = !DISubroutineType(types: !989)
!989 = !{!949, !49, !990}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u8, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !991, size: 64, align: 64, dwarfAddressSpace: 0)
!991 = !DISubroutineType(types: !992)
!992 = !{!73, !49, !689}
!993 = !{!994, !995}
!994 = !DILocalVariable(name: "x", arg: 1, scope: !987, file: !685, line: 302, type: !49)
!995 = !DILocalVariable(name: "f", arg: 2, scope: !987, file: !685, line: 302, type: !990)
!996 = !DILocation(line: 302, column: 23, scope: !987)
!997 = !DILocation(line: 302, column: 33, scope: !987)
!998 = !DILocation(line: 311, column: 42, scope: !987)
!999 = !DILocation(line: 311, column: 68, scope: !987)
!1000 = !DILocation(line: 311, column: 18, scope: !987)
!1001 = !DILocation(line: 312, column: 6, scope: !987)
!1002 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h6b4be609af0d5e66E", scope: !1004, file: !1003, line: 185, type: !991, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1006)
!1003 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6524fcfb870cfd6b104419b40f655d55")
!1004 = !DINamespace(name: "{impl#84}", scope: !1005)
!1005 = !DINamespace(name: "num", scope: !81)
!1006 = !{!1007, !1008}
!1007 = !DILocalVariable(name: "self", arg: 1, scope: !1002, file: !1003, line: 185, type: !49)
!1008 = !DILocalVariable(name: "f", arg: 2, scope: !1002, file: !1003, line: 185, type: !689)
!1009 = !DILocation(line: 185, column: 20, scope: !1002)
!1010 = !DILocation(line: 185, column: 27, scope: !1002)
!1011 = !DILocation(line: 186, column: 20, scope: !1002)
!1012 = !DILocation(line: 188, column: 27, scope: !1002)
!1013 = !DILocation(line: 187, column: 21, scope: !1002)
!1014 = !DILocation(line: 186, column: 17, scope: !1002)
!1015 = !DILocation(line: 193, column: 14, scope: !1002)
!1016 = !DILocation(line: 191, column: 21, scope: !1002)
!1017 = !DILocation(line: 189, column: 21, scope: !1002)
!1018 = !DILocation(line: 188, column: 24, scope: !1002)
!1019 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17he41e7c5843afa2a8E", scope: !1020, file: !1003, line: 185, type: !976, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1021)
!1020 = !DINamespace(name: "{impl#89}", scope: !1005)
!1021 = !{!1022, !1023}
!1022 = !DILocalVariable(name: "self", arg: 1, scope: !1019, file: !1003, line: 185, type: !45)
!1023 = !DILocalVariable(name: "f", arg: 2, scope: !1019, file: !1003, line: 185, type: !689)
!1024 = !DILocation(line: 185, column: 20, scope: !1019)
!1025 = !DILocation(line: 185, column: 27, scope: !1019)
!1026 = !DILocation(line: 186, column: 20, scope: !1019)
!1027 = !DILocation(line: 188, column: 27, scope: !1019)
!1028 = !DILocation(line: 187, column: 21, scope: !1019)
!1029 = !DILocation(line: 186, column: 17, scope: !1019)
!1030 = !DILocation(line: 193, column: 14, scope: !1019)
!1031 = !DILocation(line: 191, column: 21, scope: !1019)
!1032 = !DILocation(line: 189, column: 21, scope: !1019)
!1033 = !DILocation(line: 188, column: 24, scope: !1019)
!1034 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h610361d4e31c85f1E", scope: !1035, file: !685, line: 350, type: !1093, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1095)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !81, file: !2, size: 384, align: 64, elements: !1036, templateParams: !4, identifier: "503d474dbdb4b9bdcb6335aff8fef947")
!1036 = !{!1037, !1043, !1087}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !1035, file: !2, baseType: !1038, size: 128, align: 64)
!1038 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !1039, templateParams: !4, identifier: "e5181a2ba73cefd2b9372dc5646453a9")
!1039 = !{!1040, !1042}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1038, file: !2, baseType: !1041, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !220, size: 64, align: 64, dwarfAddressSpace: 0)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1038, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !1035, file: !2, baseType: !1044, size: 128, align: 64, offset: 128)
!1044 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !14, file: !2, size: 128, align: 64, elements: !1045, identifier: "397a0ac37bf3530f2da349092773bdb1")
!1045 = !{!1046}
!1046 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 128, align: 64, elements: !1047, templateParams: !1050, identifier: "397a0ac37bf3530f2da349092773bdb1_variant_part", discriminator: !709)
!1047 = !{!1048, !1083}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1046, file: !2, baseType: !1049, size: 128, align: 64, extraData: i64 0)
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1044, file: !2, size: 128, align: 64, elements: !4, templateParams: !1050, identifier: "397a0ac37bf3530f2da349092773bdb1::None")
!1050 = !{!1051}
!1051 = !DITemplateTypeParameter(name: "T", type: !1052)
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !1053, templateParams: !4, identifier: "c45b2a5be65217bea740b1a64f131289")
!1053 = !{!1054, !1082}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1052, file: !2, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const Argument", baseType: !1056, size: 64, align: 64, dwarfAddressSpace: 0)
!1056 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !79, file: !2, size: 448, align: 64, elements: !1057, templateParams: !4, identifier: "be1a2a63eebf5bd46c1acffa2dd6e315")
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !1056, file: !2, baseType: !11, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1056, file: !2, baseType: !1060, size: 384, align: 64, offset: 64)
!1060 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !79, file: !2, size: 384, align: 64, elements: !1061, templateParams: !4, identifier: "69ce227e4aab17788d1c0f03469b02a7")
!1061 = !{!1062, !1063, !1064, !1065, !1081}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1060, file: !2, baseType: !694, size: 32, align: 32, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1060, file: !2, baseType: !78, size: 8, align: 8, offset: 320)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1060, file: !2, baseType: !225, size: 32, align: 32, offset: 288)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1060, file: !2, baseType: !1066, size: 128, align: 64)
!1066 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !79, file: !2, size: 128, align: 64, elements: !1067, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e")
!1067 = !{!1068}
!1068 = !DICompositeType(tag: DW_TAG_variant_part, scope: !79, file: !2, size: 128, align: 64, elements: !1069, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e_variant_part", discriminator: !1080)
!1069 = !{!1070, !1074, !1078}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !1068, file: !2, baseType: !1071, size: 128, align: 64, extraData: i64 0)
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !1066, file: !2, size: 128, align: 64, elements: !1072, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e::Is")
!1072 = !{!1073}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1071, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !1068, file: !2, baseType: !1075, size: 128, align: 64, extraData: i64 1)
!1075 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !1066, file: !2, size: 128, align: 64, elements: !1076, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e::Param")
!1076 = !{!1077}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1075, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !1068, file: !2, baseType: !1079, size: 128, align: 64, extraData: i64 2)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !1066, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e::Implied")
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !79, file: !2, baseType: !381, size: 64, align: 64, flags: DIFlagArtificial)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1060, file: !2, baseType: !1066, size: 128, align: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1052, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1046, file: !2, baseType: !1084, size: 128, align: 64)
!1084 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1044, file: !2, size: 128, align: 64, elements: !1085, templateParams: !1050, identifier: "397a0ac37bf3530f2da349092773bdb1::Some")
!1085 = !{!1086}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1084, file: !2, baseType: !1052, size: 128, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1035, file: !2, baseType: !1088, size: 128, align: 64, offset: 256)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !1089, templateParams: !4, identifier: "afd1d87e15705e622b365ca1c27d8ada")
!1089 = !{!1090, !1092}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1088, file: !2, baseType: !1091, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ArgumentV1", baseType: !949, size: 64, align: 64, dwarfAddressSpace: 0)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1088, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1035, !1038, !1088}
!1095 = !{!1096, !1097}
!1096 = !DILocalVariable(name: "pieces", arg: 1, scope: !1034, file: !685, line: 351, type: !1038)
!1097 = !DILocalVariable(name: "args", arg: 2, scope: !1034, file: !685, line: 352, type: !1088)
!1098 = !DILocation(line: 351, column: 9, scope: !1034)
!1099 = !DILocation(line: 352, column: 9, scope: !1034)
!1100 = !DILocation(line: 354, column: 12, scope: !1034)
!1101 = !DILocation(line: 354, column: 56, scope: !1034)
!1102 = !DILocation(line: 354, column: 41, scope: !1034)
!1103 = !DILocation(line: 357, column: 34, scope: !1034)
!1104 = !DILocation(line: 357, column: 9, scope: !1034)
!1105 = !DILocation(line: 358, column: 6, scope: !1034)
!1106 = !DILocation(line: 355, column: 13, scope: !1034)
!1107 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17h59dfc2df994720ceE", scope: !1109, file: !1108, line: 823, type: !1110, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !1113)
!1108 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "00a9ca3300eee460d5c61559b280a726")
!1109 = !DINamespace(name: "mem", scope: !8)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!11, !1112, !11}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!1113 = !{!1114, !1115, !1116}
!1114 = !DILocalVariable(name: "dest", arg: 1, scope: !1107, file: !1108, line: 823, type: !1112)
!1115 = !DILocalVariable(name: "src", arg: 2, scope: !1107, file: !1108, line: 823, type: !11)
!1116 = !DILocalVariable(name: "result", scope: !1117, file: !1108, line: 828, type: !11, align: 8)
!1117 = distinct !DILexicalBlock(scope: !1107, file: !1108, line: 828, column: 9)
!1118 = !DILocation(line: 823, column: 25, scope: !1107)
!1119 = !DILocation(line: 823, column: 39, scope: !1107)
!1120 = !DILocation(line: 828, column: 22, scope: !1107)
!1121 = !DILocation(line: 828, column: 13, scope: !1117)
!1122 = !DILocation(line: 829, column: 9, scope: !1117)
!1123 = !DILocation(line: 832, column: 2, scope: !1107)
!1124 = distinct !DISubprogram(name: "from_be_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13from_be_bytes17hf082046d9e109eaeE", scope: !1125, file: !810, line: 2158, type: !1126, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1131)
!1125 = !DINamespace(name: "{impl#9}", scope: !376)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!381, !1128}
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, align: 8, elements: !1129)
!1129 = !{!1130}
!1130 = !DISubrange(count: 8, lowerBound: 0)
!1131 = !{!1132}
!1132 = !DILocalVariable(name: "bytes", arg: 1, scope: !1124, file: !810, line: 2158, type: !1128)
!1133 = !DILocation(line: 2158, column: 36, scope: !1124)
!1134 = !DILocation(line: 2159, column: 47, scope: !1124)
!1135 = !DILocation(line: 2159, column: 27, scope: !1124)
!1136 = !DILocalVariable(name: "x", arg: 1, scope: !1137, file: !810, line: 289, type: !381)
!1137 = distinct !DISubprogram(name: "from_be", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$7from_be17h67346839a4094227E", scope: !1125, file: !810, line: 289, type: !1138, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1140)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!381, !381}
!1140 = !{!1136}
!1141 = !DILocation(line: 289, column: 30, scope: !1137, inlinedAt: !1142)
!1142 = distinct !DILocation(line: 2159, column: 13, scope: !1124)
!1143 = !DILocalVariable(name: "self", arg: 1, scope: !1144, file: !810, line: 242, type: !381)
!1144 = distinct !DISubprogram(name: "swap_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$10swap_bytes17hfab69ede0e275672E", scope: !1125, file: !810, line: 242, type: !1138, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1145)
!1145 = !{!1143}
!1146 = !DILocation(line: 242, column: 33, scope: !1144, inlinedAt: !1147)
!1147 = distinct !DILocation(line: 296, column: 17, scope: !1137, inlinedAt: !1142)
!1148 = !DILocation(line: 243, column: 13, scope: !1144, inlinedAt: !1147)
!1149 = !DILocation(line: 2159, column: 13, scope: !1124)
!1150 = !DILocation(line: 2160, column: 10, scope: !1124)
!1151 = distinct !DISubprogram(name: "from_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13from_ne_bytes17hdef0dfdb4bc9c615E", scope: !1125, file: !810, line: 2232, type: !1126, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1152)
!1152 = !{!1153}
!1153 = !DILocalVariable(name: "bytes", arg: 1, scope: !1151, file: !810, line: 2232, type: !1128)
!1154 = !DILocation(line: 2232, column: 36, scope: !1151)
!1155 = !DILocation(line: 2234, column: 37, scope: !1151)
!1156 = !DILocation(line: 2234, column: 22, scope: !1151)
!1157 = !DILocation(line: 2235, column: 10, scope: !1151)
!1158 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3bb747dde23de7d8E", scope: !811, file: !810, line: 415, type: !1159, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1161)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!697, !11, !11}
!1161 = !{!1162, !1163, !1164, !1166}
!1162 = !DILocalVariable(name: "self", arg: 1, scope: !1158, file: !810, line: 415, type: !11)
!1163 = !DILocalVariable(name: "rhs", arg: 2, scope: !1158, file: !810, line: 415, type: !11)
!1164 = !DILocalVariable(name: "a", scope: !1165, file: !810, line: 416, type: !11, align: 8)
!1165 = distinct !DILexicalBlock(scope: !1158, file: !810, line: 416, column: 13)
!1166 = !DILocalVariable(name: "b", scope: !1165, file: !810, line: 416, type: !67, align: 1)
!1167 = !DILocation(line: 415, column: 34, scope: !1158)
!1168 = !DILocation(line: 415, column: 40, scope: !1158)
!1169 = !DILocalVariable(name: "self", arg: 1, scope: !1170, file: !810, line: 1406, type: !11)
!1170 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h203f0c510338852cE", scope: !811, file: !810, line: 1406, type: !1171, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1177)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1173, !11, !11}
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1174, templateParams: !4, identifier: "532fa6618cdb3964411c84139beb9950")
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1173, file: !2, baseType: !11, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1173, file: !2, baseType: !67, size: 8, align: 8, offset: 64)
!1177 = !{!1169, !1178, !1179, !1181}
!1178 = !DILocalVariable(name: "rhs", arg: 2, scope: !1170, file: !810, line: 1406, type: !11)
!1179 = !DILocalVariable(name: "a", scope: !1180, file: !810, line: 1407, type: !381, align: 8)
!1180 = distinct !DILexicalBlock(scope: !1170, file: !810, line: 1407, column: 13)
!1181 = !DILocalVariable(name: "b", scope: !1180, file: !810, line: 1407, type: !67, align: 1)
!1182 = !DILocation(line: 1406, column: 38, scope: !1170, inlinedAt: !1183)
!1183 = distinct !DILocation(line: 416, column: 26, scope: !1158)
!1184 = !DILocation(line: 1406, column: 44, scope: !1170, inlinedAt: !1183)
!1185 = !DILocation(line: 1407, column: 26, scope: !1170, inlinedAt: !1183)
!1186 = !DILocation(line: 1407, column: 18, scope: !1170, inlinedAt: !1183)
!1187 = !DILocation(line: 1407, column: 18, scope: !1180, inlinedAt: !1183)
!1188 = !DILocation(line: 1407, column: 21, scope: !1170, inlinedAt: !1183)
!1189 = !DILocation(line: 1407, column: 21, scope: !1180, inlinedAt: !1183)
!1190 = !DILocation(line: 1408, column: 13, scope: !1180, inlinedAt: !1183)
!1191 = !DILocation(line: 1409, column: 10, scope: !1170, inlinedAt: !1183)
!1192 = !DILocation(line: 416, column: 26, scope: !1158)
!1193 = !DILocation(line: 416, column: 18, scope: !1158)
!1194 = !DILocation(line: 416, column: 18, scope: !1165)
!1195 = !DILocation(line: 416, column: 21, scope: !1158)
!1196 = !DILocation(line: 416, column: 21, scope: !1165)
!1197 = !DILocation(line: 417, column: 16, scope: !1165)
!1198 = !DILocation(line: 417, column: 42, scope: !1165)
!1199 = !DILocation(line: 417, column: 13, scope: !1165)
!1200 = !DILocation(line: 417, column: 30, scope: !1165)
!1201 = !DILocation(line: 418, column: 10, scope: !1158)
!1202 = !{i64 0, i64 2}
!1203 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hd802f3514088ff87E", scope: !811, file: !810, line: 507, type: !1159, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1204)
!1204 = !{!1205, !1206, !1207, !1209}
!1205 = !DILocalVariable(name: "self", arg: 1, scope: !1203, file: !810, line: 507, type: !11)
!1206 = !DILocalVariable(name: "rhs", arg: 2, scope: !1203, file: !810, line: 507, type: !11)
!1207 = !DILocalVariable(name: "a", scope: !1208, file: !810, line: 508, type: !11, align: 8)
!1208 = distinct !DILexicalBlock(scope: !1203, file: !810, line: 508, column: 13)
!1209 = !DILocalVariable(name: "b", scope: !1208, file: !810, line: 508, type: !67, align: 1)
!1210 = !DILocation(line: 507, column: 34, scope: !1203)
!1211 = !DILocation(line: 507, column: 40, scope: !1203)
!1212 = !DILocalVariable(name: "self", arg: 1, scope: !1213, file: !810, line: 1518, type: !11)
!1213 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h597ee499af793895E", scope: !811, file: !810, line: 1518, type: !1171, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1214)
!1214 = !{!1212, !1215, !1216, !1218}
!1215 = !DILocalVariable(name: "rhs", arg: 2, scope: !1213, file: !810, line: 1518, type: !11)
!1216 = !DILocalVariable(name: "a", scope: !1217, file: !810, line: 1519, type: !381, align: 8)
!1217 = distinct !DILexicalBlock(scope: !1213, file: !810, line: 1519, column: 13)
!1218 = !DILocalVariable(name: "b", scope: !1217, file: !810, line: 1519, type: !67, align: 1)
!1219 = !DILocation(line: 1518, column: 38, scope: !1213, inlinedAt: !1220)
!1220 = distinct !DILocation(line: 508, column: 26, scope: !1203)
!1221 = !DILocation(line: 1518, column: 44, scope: !1213, inlinedAt: !1220)
!1222 = !DILocation(line: 1519, column: 26, scope: !1213, inlinedAt: !1220)
!1223 = !DILocation(line: 1519, column: 18, scope: !1213, inlinedAt: !1220)
!1224 = !DILocation(line: 1519, column: 18, scope: !1217, inlinedAt: !1220)
!1225 = !DILocation(line: 1519, column: 21, scope: !1213, inlinedAt: !1220)
!1226 = !DILocation(line: 1519, column: 21, scope: !1217, inlinedAt: !1220)
!1227 = !DILocation(line: 1520, column: 13, scope: !1217, inlinedAt: !1220)
!1228 = !DILocation(line: 1521, column: 10, scope: !1213, inlinedAt: !1220)
!1229 = !DILocation(line: 508, column: 26, scope: !1203)
!1230 = !DILocation(line: 508, column: 18, scope: !1203)
!1231 = !DILocation(line: 508, column: 18, scope: !1208)
!1232 = !DILocation(line: 508, column: 21, scope: !1203)
!1233 = !DILocation(line: 508, column: 21, scope: !1208)
!1234 = !DILocation(line: 509, column: 16, scope: !1208)
!1235 = !DILocation(line: 509, column: 42, scope: !1208)
!1236 = !DILocation(line: 509, column: 13, scope: !1208)
!1237 = !DILocation(line: 509, column: 30, scope: !1208)
!1238 = !DILocation(line: 510, column: 10, scope: !1203)
!1239 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h86f2db25a39a5439E", scope: !811, file: !810, line: 461, type: !1159, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1240)
!1240 = !{!1241, !1242, !1243, !1245}
!1241 = !DILocalVariable(name: "self", arg: 1, scope: !1239, file: !810, line: 461, type: !11)
!1242 = !DILocalVariable(name: "rhs", arg: 2, scope: !1239, file: !810, line: 461, type: !11)
!1243 = !DILocalVariable(name: "a", scope: !1244, file: !810, line: 462, type: !11, align: 8)
!1244 = distinct !DILexicalBlock(scope: !1239, file: !810, line: 462, column: 13)
!1245 = !DILocalVariable(name: "b", scope: !1244, file: !810, line: 462, type: !67, align: 1)
!1246 = !DILocation(line: 461, column: 34, scope: !1239)
!1247 = !DILocation(line: 461, column: 40, scope: !1239)
!1248 = !DILocalVariable(name: "self", arg: 1, scope: !1249, file: !810, line: 1461, type: !11)
!1249 = distinct !DISubprogram(name: "overflowing_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h85584f55cf0f9959E", scope: !811, file: !810, line: 1461, type: !1171, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1250)
!1250 = !{!1248, !1251, !1252, !1254}
!1251 = !DILocalVariable(name: "rhs", arg: 2, scope: !1249, file: !810, line: 1461, type: !11)
!1252 = !DILocalVariable(name: "a", scope: !1253, file: !810, line: 1462, type: !381, align: 8)
!1253 = distinct !DILexicalBlock(scope: !1249, file: !810, line: 1462, column: 13)
!1254 = !DILocalVariable(name: "b", scope: !1253, file: !810, line: 1462, type: !67, align: 1)
!1255 = !DILocation(line: 1461, column: 38, scope: !1249, inlinedAt: !1256)
!1256 = distinct !DILocation(line: 462, column: 26, scope: !1239)
!1257 = !DILocation(line: 1461, column: 44, scope: !1249, inlinedAt: !1256)
!1258 = !DILocation(line: 1462, column: 26, scope: !1249, inlinedAt: !1256)
!1259 = !DILocation(line: 1462, column: 18, scope: !1249, inlinedAt: !1256)
!1260 = !DILocation(line: 1462, column: 18, scope: !1253, inlinedAt: !1256)
!1261 = !DILocation(line: 1462, column: 21, scope: !1249, inlinedAt: !1256)
!1262 = !DILocation(line: 1462, column: 21, scope: !1253, inlinedAt: !1256)
!1263 = !DILocation(line: 1463, column: 13, scope: !1253, inlinedAt: !1256)
!1264 = !DILocation(line: 1464, column: 10, scope: !1249, inlinedAt: !1256)
!1265 = !DILocation(line: 462, column: 26, scope: !1239)
!1266 = !DILocation(line: 462, column: 18, scope: !1239)
!1267 = !DILocation(line: 462, column: 18, scope: !1244)
!1268 = !DILocation(line: 462, column: 21, scope: !1239)
!1269 = !DILocation(line: 462, column: 21, scope: !1244)
!1270 = !DILocation(line: 463, column: 16, scope: !1244)
!1271 = !DILocation(line: 463, column: 42, scope: !1244)
!1272 = !DILocation(line: 463, column: 13, scope: !1244)
!1273 = !DILocation(line: 463, column: 30, scope: !1244)
!1274 = !DILocation(line: 464, column: 10, scope: !1239)
!1275 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd28c89d6839f40a2E", scope: !374, file: !1276, line: 54, type: !1277, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1279)
!1276 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "07b0126d41e0d52cc6d98b96652bf4bd")
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!374, !11}
!1279 = !{!1280}
!1280 = !DILocalVariable(name: "n", arg: 1, scope: !1275, file: !1276, line: 54, type: !11)
!1281 = !DILocation(line: 54, column: 51, scope: !1275)
!1282 = !DILocation(line: 56, column: 30, scope: !1275)
!1283 = !DILocation(line: 57, column: 18, scope: !1275)
!1284 = !{i64 1, i64 0}
!1285 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h458dba242e4aeebbE", scope: !374, file: !1276, line: 76, type: !1286, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1288)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!11, !374}
!1288 = !{!1289}
!1289 = !DILocalVariable(name: "self", arg: 1, scope: !1285, file: !1276, line: 76, type: !374)
!1290 = !DILocation(line: 76, column: 34, scope: !1285)
!1291 = !DILocation(line: 78, column: 18, scope: !1285)
!1292 = distinct !DISubprogram(name: "call_once<fn(&usize, &usize) -> core::cmp::Ordering, (&usize, &usize)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h64bb9e7959e17e58E", scope: !1294, file: !1293, line: 227, type: !1296, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1305, retainedNodes: !1298)
!1293 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "1a40c014f8a7b8b7cd612b461a47e902")
!1294 = !DINamespace(name: "FnOnce", scope: !1295)
!1295 = !DINamespace(name: "function", scope: !102)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!87, !918, !45, !45}
!1298 = !{!1299, !1300}
!1299 = !DILocalVariable(arg: 1, scope: !1292, file: !1293, line: 227, type: !918)
!1300 = !DILocalVariable(arg: 2, scope: !1292, file: !1293, line: 227, type: !1301)
!1301 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 128, align: 64, elements: !1302, templateParams: !4, identifier: "4bc227a7fa9c3d458d76f51eddc3e0bc")
!1302 = !{!1303, !1304}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1301, file: !2, baseType: !45, size: 64, align: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1301, file: !2, baseType: !45, size: 64, align: 64, offset: 64)
!1305 = !{!1306, !1307}
!1306 = !DITemplateTypeParameter(name: "Self", type: !918)
!1307 = !DITemplateTypeParameter(name: "Args", type: !1301)
!1308 = !DILocation(line: 227, column: 5, scope: !1292)
!1309 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hff1b586a1ad451d5E", scope: !137, file: !1310, line: 257, type: !1311, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1313)
!1310 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "207736266ff0d04d675044b37a0a2de6")
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!114, !117, !11}
!1313 = !{!1314, !1315}
!1314 = !DILocalVariable(name: "data", arg: 1, scope: !1309, file: !1310, line: 257, type: !117)
!1315 = !DILocalVariable(name: "len", arg: 2, scope: !1309, file: !1310, line: 257, type: !11)
!1316 = !DILocation(line: 257, column: 38, scope: !1309)
!1317 = !DILocation(line: 257, column: 54, scope: !1309)
!1318 = !DILocation(line: 258, column: 20, scope: !1309)
!1319 = !DILocation(line: 258, column: 5, scope: !1309)
!1320 = !DILocation(line: 259, column: 2, scope: !1309)
!1321 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h808069bf2fa712efE", scope: !137, file: !1310, line: 289, type: !1322, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1324)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!162, !178, !11}
!1324 = !{!1325, !1326}
!1325 = !DILocalVariable(name: "data", arg: 1, scope: !1321, file: !1310, line: 289, type: !178)
!1326 = !DILocalVariable(name: "len", arg: 2, scope: !1321, file: !1310, line: 289, type: !11)
!1327 = !DILocation(line: 289, column: 42, scope: !1321)
!1328 = !DILocation(line: 289, column: 56, scope: !1321)
!1329 = !DILocalVariable(name: "self", arg: 1, scope: !1330, file: !173, line: 46, type: !178)
!1330 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h831f087431c76fb6E", scope: !186, file: !173, line: 46, type: !1331, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1335, retainedNodes: !1334)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!1333, !178}
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!1334 = !{!1329}
!1335 = !{!21, !1336}
!1336 = !DITemplateTypeParameter(name: "U", type: !35)
!1337 = !DILocation(line: 46, column: 26, scope: !1330, inlinedAt: !1338)
!1338 = distinct !DILocation(line: 290, column: 24, scope: !1321)
!1339 = !DILocation(line: 47, column: 9, scope: !1330, inlinedAt: !1338)
!1340 = !DILocation(line: 290, column: 24, scope: !1321)
!1341 = !DILocation(line: 290, column: 5, scope: !1321)
!1342 = !DILocation(line: 291, column: 2, scope: !1321)
!1343 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2747f93badf96cc3E", scope: !137, file: !1310, line: 188, type: !1344, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !416, retainedNodes: !1347)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{null, !1346}
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !49, size: 64, align: 64, dwarfAddressSpace: 0)
!1347 = !{!1348}
!1348 = !DILocalVariable(arg: 1, scope: !1343, file: !1310, line: 188, type: !1346)
!1349 = !DILocation(line: 188, column: 1, scope: !1343)
!1350 = distinct !DISubprogram(name: "drop_in_place<&bool>", linkageName: "_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17he29f517b582b2d4aE", scope: !137, file: !1310, line: 188, type: !1351, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1356, retainedNodes: !1354)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{null, !1353}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bool", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!1354 = !{!1355}
!1355 = !DILocalVariable(arg: 1, scope: !1350, file: !1310, line: 188, type: !1353)
!1356 = !{!1357}
!1357 = !DITemplateTypeParameter(name: "T", type: !66)
!1358 = !DILocation(line: 188, column: 1, scope: !1350)
!1359 = distinct !DISubprogram(name: "drop_in_place<&usize>", linkageName: "_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h644d93ab1f04cae5E", scope: !137, file: !1310, line: 188, type: !1360, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1365, retainedNodes: !1363)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{null, !1362}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &usize", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!1363 = !{!1364}
!1364 = !DILocalVariable(arg: 1, scope: !1359, file: !1310, line: 188, type: !1362)
!1365 = !{!1366}
!1366 = !DITemplateTypeParameter(name: "T", type: !45)
!1367 = !DILocation(line: 188, column: 1, scope: !1359)
!1368 = distinct !DISubprogram(name: "drop_in_place<&base64::CharacterSet>", linkageName: "_ZN4core3ptr45drop_in_place$LT$$RF$base64..CharacterSet$GT$17h07288ddd5b2375fbE", scope: !137, file: !1310, line: 188, type: !1369, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1374, retainedNodes: !1372)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{null, !1371}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &CharacterSet", baseType: !53, size: 64, align: 64, dwarfAddressSpace: 0)
!1372 = !{!1373}
!1373 = !DILocalVariable(arg: 1, scope: !1368, file: !1310, line: 188, type: !1371)
!1374 = !{!1375}
!1375 = !DITemplateTypeParameter(name: "T", type: !53)
!1376 = !DILocation(line: 188, column: 1, scope: !1368)
!1377 = distinct !DISubprogram(name: "drop_in_place<core::str::error::Utf8Error>", linkageName: "_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17he3302857021bd81cE", scope: !137, file: !1310, line: 188, type: !1378, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1383, retainedNodes: !1381)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1380}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut Utf8Error", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!1381 = !{!1382}
!1382 = !DILocalVariable(arg: 1, scope: !1377, file: !1310, line: 188, type: !1380)
!1383 = !{!1384}
!1384 = !DITemplateTypeParameter(name: "T", type: !5)
!1385 = !DILocation(line: 188, column: 1, scope: !1377)
!1386 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17hcc2213ce829579b8E", scope: !137, file: !1310, line: 683, type: !1387, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !1390)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!11, !1389}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!1390 = !{!1391, !1392}
!1391 = !DILocalVariable(name: "src", arg: 1, scope: !1386, file: !1310, line: 683, type: !1389)
!1392 = !DILocalVariable(name: "tmp", scope: !1393, file: !1310, line: 691, type: !1394, align: 8)
!1393 = distinct !DILexicalBlock(scope: !1386, file: !1310, line: 691, column: 5)
!1394 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !1395, file: !2, size: 64, align: 64, elements: !1396, templateParams: !703, identifier: "53219206c498ff1ad550afa82181887e")
!1395 = !DINamespace(name: "maybe_uninit", scope: !1109)
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1394, file: !2, baseType: !35, align: 8)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1394, file: !2, baseType: !1399, size: 64, align: 64)
!1399 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !1400, file: !2, size: 64, align: 64, elements: !1401, templateParams: !703, identifier: "7866e6546e0053923cc5f9692f9b936")
!1400 = !DINamespace(name: "manually_drop", scope: !1109)
!1401 = !{!1402}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1399, file: !2, baseType: !11, size: 64, align: 64)
!1403 = !DILocation(line: 683, column: 29, scope: !1386)
!1404 = !DILocation(line: 691, column: 9, scope: !1393)
!1405 = !DILocation(line: 318, column: 9, scope: !1406, inlinedAt: !1410)
!1406 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h66ce11cd585bacaeE", scope: !1394, file: !1407, line: 317, type: !1408, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !4)
!1407 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3671e1e568ab64028d26b6a3f5dc301")
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!1394}
!1410 = distinct !DILocation(line: 691, column: 19, scope: !1386)
!1411 = !DILocation(line: 319, column: 6, scope: !1406, inlinedAt: !1410)
!1412 = !DILocation(line: 691, column: 19, scope: !1386)
!1413 = !DILocalVariable(name: "self", arg: 1, scope: !1414, file: !1407, line: 568, type: !1418)
!1414 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hd4823d3187328b4eE", scope: !1394, file: !1407, line: 568, type: !1415, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !1419)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut MaybeUninit<usize>", baseType: !1394, size: 64, align: 64, dwarfAddressSpace: 0)
!1419 = !{!1413}
!1420 = !DILocation(line: 568, column: 29, scope: !1414, inlinedAt: !1421)
!1421 = distinct !DILocation(line: 699, column: 34, scope: !1393)
!1422 = !DILocation(line: 699, column: 34, scope: !1393)
!1423 = !DILocation(line: 699, column: 9, scope: !1393)
!1424 = !DILocation(line: 700, column: 9, scope: !1393)
!1425 = !DILocalVariable(name: "self", arg: 1, scope: !1426, file: !1407, line: 623, type: !1394)
!1426 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4171c7cd9a9b4453E", scope: !1394, file: !1407, line: 623, type: !1427, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !1429)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!11, !1394, !214}
!1429 = !{!1425}
!1430 = !DILocation(line: 623, column: 37, scope: !1426, inlinedAt: !1431)
!1431 = distinct !DILocation(line: 700, column: 9, scope: !1393)
!1432 = !DILocalVariable(name: "slot", arg: 1, scope: !1433, file: !1434, line: 87, type: !1399)
!1433 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h9950e252a619e5b7E", scope: !1399, file: !1434, line: 87, type: !1435, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !1437)
!1434 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "1ebb77b55900bbb941b074f7b36dbdc1")
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!11, !1399}
!1437 = !{!1432}
!1438 = !DILocation(line: 87, column: 29, scope: !1433, inlinedAt: !1439)
!1439 = distinct !DILocation(line: 628, column: 13, scope: !1426, inlinedAt: !1431)
!1440 = !DILocation(line: 702, column: 2, scope: !1386)
!1441 = distinct !DISubprogram(name: "drop_in_place<core::array::TryFromSliceError>", linkageName: "_ZN4core3ptr51drop_in_place$LT$core..array..TryFromSliceError$GT$17h29be9cef0680fd88E", scope: !137, file: !1310, line: 188, type: !1442, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1447, retainedNodes: !1445)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1444}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut TryFromSliceError", baseType: !31, size: 64, align: 64, dwarfAddressSpace: 0)
!1445 = !{!1446}
!1446 = !DILocalVariable(arg: 1, scope: !1441, file: !1310, line: 188, type: !1444)
!1447 = !{!1448}
!1448 = !DITemplateTypeParameter(name: "T", type: !31)
!1449 = !DILocation(line: 188, column: 1, scope: !1441)
!1450 = distinct !DISubprogram(name: "drop_in_place<core::alloc::layout::LayoutError>", linkageName: "_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h601ff0986ef5e0e7E", scope: !137, file: !1310, line: 188, type: !1451, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1456, retainedNodes: !1454)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{null, !1453}
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut LayoutError", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!1454 = !{!1455}
!1455 = !DILocalVariable(arg: 1, scope: !1450, file: !1310, line: 188, type: !1453)
!1456 = !{!1457}
!1457 = !DITemplateTypeParameter(name: "T", type: !39)
!1458 = !DILocation(line: 188, column: 1, scope: !1450)
!1459 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17hede3e19507b36777E", scope: !137, file: !1310, line: 878, type: !1460, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !1462)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{null, !1417, !11}
!1462 = !{!1463, !1464}
!1463 = !DILocalVariable(name: "dst", arg: 1, scope: !1459, file: !1310, line: 878, type: !1417)
!1464 = !DILocalVariable(name: "src", arg: 2, scope: !1459, file: !1310, line: 878, type: !11)
!1465 = !DILocation(line: 878, column: 30, scope: !1459)
!1466 = !DILocation(line: 878, column: 43, scope: !1459)
!1467 = !DILocation(line: 890, column: 9, scope: !1459)
!1468 = !DILocation(line: 893, column: 2, scope: !1459)
!1469 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hde5b232dfedbca2fE", scope: !337, file: !1470, line: 87, type: !1471, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1473)
!1470 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "a83acd9c3d0e6cc1331d6a0f78f4f2e9")
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!337, !178}
!1473 = !{!1474}
!1474 = !DILocalVariable(name: "ptr", arg: 1, scope: !1469, file: !1470, line: 87, type: !178)
!1475 = !DILocation(line: 87, column: 39, scope: !1469)
!1476 = !DILocation(line: 89, column: 18, scope: !1469)
!1477 = !DILocation(line: 90, column: 6, scope: !1469)
!1478 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf231c292f916b7e4E", scope: !337, file: !1470, line: 135, type: !1479, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1483, retainedNodes: !1481)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!337, !337}
!1481 = !{!1482}
!1482 = !DILocalVariable(name: "self", arg: 1, scope: !1478, file: !1470, line: 135, type: !337)
!1483 = !{!21, !1484}
!1484 = !DITemplateTypeParameter(name: "U", type: !22)
!1485 = !DILocation(line: 135, column: 26, scope: !1478)
!1486 = !DILocation(line: 139, column: 40, scope: !1478)
!1487 = !DILocation(line: 139, column: 18, scope: !1478)
!1488 = !DILocation(line: 140, column: 6, scope: !1478)
!1489 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he5d69e45e78cd043E", scope: !337, file: !1470, line: 105, type: !1490, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1492)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!178, !337}
!1492 = !{!1493}
!1493 = !DILocalVariable(name: "self", arg: 1, scope: !1489, file: !1470, line: 105, type: !337)
!1494 = !DILocation(line: 105, column: 25, scope: !1489)
!1495 = !DILocation(line: 107, column: 6, scope: !1489)
!1496 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h1be5abe869fd48d5E", scope: !186, file: !173, line: 433, type: !1497, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1499)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!67, !178, !178}
!1499 = !{!1500, !1501}
!1500 = !DILocalVariable(name: "self", arg: 1, scope: !1496, file: !173, line: 433, type: !178)
!1501 = !DILocalVariable(name: "other", arg: 2, scope: !1496, file: !173, line: 433, type: !178)
!1502 = !DILocation(line: 433, column: 32, scope: !1496)
!1503 = !DILocation(line: 433, column: 38, scope: !1496)
!1504 = !DILocation(line: 437, column: 9, scope: !1496)
!1505 = !DILocation(line: 438, column: 6, scope: !1496)
!1506 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1f9b252d562c3132E", scope: !186, file: !173, line: 36, type: !1507, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1509)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!67, !178}
!1509 = !{!1510}
!1510 = !DILocalVariable(name: "self", arg: 1, scope: !1506, file: !173, line: 36, type: !178)
!1511 = !DILocation(line: 36, column: 26, scope: !1506)
!1512 = !DILocation(line: 39, column: 41, scope: !1506)
!1513 = !DILocation(line: 39, column: 9, scope: !1506)
!1514 = !DILocation(line: 40, column: 6, scope: !1506)
!1515 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h2cacccae7c77a293E", scope: !1517, file: !1516, line: 110, type: !1518, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !445, retainedNodes: !1521)
!1516 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1c0696840ef99c8132b364245b959d8b")
!1517 = !DINamespace(name: "metadata", scope: !137)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!114, !1520, !11}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!1521 = !{!1522, !1523}
!1522 = !DILocalVariable(name: "data_address", arg: 1, scope: !1515, file: !1516, line: 111, type: !1520)
!1523 = !DILocalVariable(name: "metadata", arg: 2, scope: !1515, file: !1516, line: 112, type: !11)
!1524 = !DILocation(line: 111, column: 5, scope: !1515)
!1525 = !DILocation(line: 112, column: 5, scope: !1515)
!1526 = !DILocation(line: 117, column: 36, scope: !1515)
!1527 = !DILocation(line: 117, column: 14, scope: !1515)
!1528 = !DILocation(line: 118, column: 2, scope: !1515)
!1529 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h61252ae899d7367cE", scope: !1517, file: !1516, line: 127, type: !1530, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !445, retainedNodes: !1532)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!162, !1333, !11}
!1532 = !{!1533, !1534}
!1533 = !DILocalVariable(name: "data_address", arg: 1, scope: !1529, file: !1516, line: 128, type: !1333)
!1534 = !DILocalVariable(name: "metadata", arg: 2, scope: !1529, file: !1516, line: 129, type: !11)
!1535 = !DILocation(line: 128, column: 5, scope: !1529)
!1536 = !DILocation(line: 129, column: 5, scope: !1529)
!1537 = !DILocation(line: 134, column: 36, scope: !1529)
!1538 = !DILocation(line: 134, column: 14, scope: !1529)
!1539 = !DILocation(line: 135, column: 2, scope: !1529)
!1540 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17h725a86abc3d48e13E", scope: !1517, file: !1516, line: 93, type: !1541, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !445, retainedNodes: !1543)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!11, !114}
!1543 = !{!1544}
!1544 = !DILocalVariable(name: "ptr", arg: 1, scope: !1540, file: !1516, line: 93, type: !114)
!1545 = !DILocation(line: 93, column: 34, scope: !1540)
!1546 = !DILocation(line: 97, column: 14, scope: !1540)
!1547 = !DILocation(line: 98, column: 2, scope: !1540)
!1548 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h798f450c829937aaE", scope: !334, file: !329, line: 189, type: !1549, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1551)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!334, !178}
!1551 = !{!1552}
!1552 = !DILocalVariable(name: "ptr", arg: 1, scope: !1548, file: !329, line: 189, type: !178)
!1553 = !DILocation(line: 189, column: 39, scope: !1548)
!1554 = !DILocation(line: 191, column: 18, scope: !1548)
!1555 = !DILocation(line: 192, column: 6, scope: !1548)
!1556 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hcb2192e54c474bd9E", scope: !442, file: !329, line: 189, type: !1557, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !445, retainedNodes: !1559)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!442, !162}
!1559 = !{!1560}
!1560 = !DILocalVariable(name: "ptr", arg: 1, scope: !1556, file: !329, line: 189, type: !162)
!1561 = !DILocation(line: 189, column: 39, scope: !1556)
!1562 = !DILocation(line: 191, column: 18, scope: !1556)
!1563 = !DILocation(line: 192, column: 6, scope: !1556)
!1564 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h349bd3bee514206bE", scope: !334, file: !329, line: 210, type: !1565, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1579)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1567, !178}
!1567 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !14, file: !2, size: 64, align: 64, elements: !1568, identifier: "1b292be2cef1955b53655c8f22aaab74")
!1568 = !{!1569}
!1569 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 64, align: 64, elements: !1570, templateParams: !1573, identifier: "1b292be2cef1955b53655c8f22aaab74_variant_part", discriminator: !709)
!1570 = !{!1571, !1575}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1569, file: !2, baseType: !1572, size: 64, align: 64, extraData: i64 0)
!1572 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1567, file: !2, size: 64, align: 64, elements: !4, templateParams: !1573, identifier: "1b292be2cef1955b53655c8f22aaab74::None")
!1573 = !{!1574}
!1574 = !DITemplateTypeParameter(name: "T", type: !334)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1569, file: !2, baseType: !1576, size: 64, align: 64)
!1576 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1567, file: !2, size: 64, align: 64, elements: !1577, templateParams: !1573, identifier: "1b292be2cef1955b53655c8f22aaab74::Some")
!1577 = !{!1578}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1576, file: !2, baseType: !334, size: 64, align: 64)
!1579 = !{!1580}
!1580 = !DILocalVariable(name: "ptr", arg: 1, scope: !1564, file: !329, line: 210, type: !178)
!1581 = !DILocation(line: 210, column: 16, scope: !1564)
!1582 = !DILocation(line: 211, column: 13, scope: !1564)
!1583 = !DILocation(line: 211, column: 12, scope: !1564)
!1584 = !DILocation(line: 215, column: 13, scope: !1564)
!1585 = !DILocation(line: 211, column: 9, scope: !1564)
!1586 = !DILocation(line: 213, column: 27, scope: !1564)
!1587 = !DILocation(line: 213, column: 13, scope: !1564)
!1588 = !DILocation(line: 217, column: 6, scope: !1564)
!1589 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h32573d73af02b004E", scope: !442, file: !329, line: 385, type: !1590, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1594, retainedNodes: !1592)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!334, !442}
!1592 = !{!1593}
!1593 = !DILocalVariable(name: "self", arg: 1, scope: !1589, file: !329, line: 385, type: !442)
!1594 = !{!446, !1484}
!1595 = !DILocation(line: 385, column: 26, scope: !1589)
!1596 = !DILocation(line: 387, column: 41, scope: !1589)
!1597 = !DILocation(line: 387, column: 18, scope: !1589)
!1598 = !DILocation(line: 388, column: 6, scope: !1589)
!1599 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbf166fe06cdfed2fE", scope: !442, file: !329, line: 268, type: !1600, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !445, retainedNodes: !1602)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!162, !442}
!1602 = !{!1603}
!1603 = !DILocalVariable(name: "self", arg: 1, scope: !1599, file: !329, line: 268, type: !442)
!1604 = !DILocation(line: 268, column: 25, scope: !1599)
!1605 = !DILocation(line: 269, column: 9, scope: !1599)
!1606 = !DILocation(line: 270, column: 6, scope: !1599)
!1607 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he28ddd79ad65c9f9E", scope: !334, file: !329, line: 268, type: !1608, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1610)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!178, !334}
!1610 = !{!1611}
!1611 = !DILocalVariable(name: "self", arg: 1, scope: !1607, file: !329, line: 268, type: !334)
!1612 = !DILocation(line: 268, column: 25, scope: !1607)
!1613 = !DILocation(line: 270, column: 6, scope: !1607)
!1614 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h4188c478b7037b90E", scope: !442, file: !329, line: 479, type: !1615, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1617)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!178, !442}
!1617 = !{!1618}
!1618 = !DILocalVariable(name: "self", arg: 1, scope: !1614, file: !329, line: 479, type: !442)
!1619 = !DILocation(line: 479, column: 29, scope: !1614)
!1620 = !DILocation(line: 480, column: 9, scope: !1614)
!1621 = !DILocation(line: 481, column: 6, scope: !1614)
!1622 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h4586dfe21f8b9c5dE", scope: !442, file: !329, line: 460, type: !1590, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1623)
!1623 = !{!1624}
!1624 = !DILocalVariable(name: "self", arg: 1, scope: !1622, file: !329, line: 460, type: !442)
!1625 = !DILocation(line: 460, column: 34, scope: !1622)
!1626 = !DILocation(line: 462, column: 41, scope: !1622)
!1627 = !DILocation(line: 1197, column: 29, scope: !172, inlinedAt: !1628)
!1628 = distinct !DILocation(line: 462, column: 41, scope: !1622)
!1629 = !DILocation(line: 1198, column: 9, scope: !172, inlinedAt: !1628)
!1630 = !DILocation(line: 462, column: 18, scope: !1622)
!1631 = !DILocation(line: 463, column: 6, scope: !1622)
!1632 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hd438f0971ae73bbfE", scope: !442, file: !329, line: 418, type: !1633, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1635)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!442, !334, !11}
!1635 = !{!1636, !1637}
!1636 = !DILocalVariable(name: "data", arg: 1, scope: !1632, file: !329, line: 418, type: !334)
!1637 = !DILocalVariable(name: "len", arg: 2, scope: !1632, file: !329, line: 418, type: !11)
!1638 = !DILocation(line: 418, column: 39, scope: !1632)
!1639 = !DILocation(line: 418, column: 57, scope: !1632)
!1640 = !DILocation(line: 420, column: 70, scope: !1632)
!1641 = !DILocation(line: 420, column: 38, scope: !1632)
!1642 = !DILocation(line: 420, column: 18, scope: !1632)
!1643 = !DILocation(line: 421, column: 6, scope: !1632)
!1644 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h5b5316406c8edcc3E", scope: !442, file: !329, line: 442, type: !1645, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1647)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!11, !442}
!1647 = !{!1648}
!1648 = !DILocalVariable(name: "self", arg: 1, scope: !1644, file: !329, line: 442, type: !442)
!1649 = !DILocation(line: 442, column: 22, scope: !1644)
!1650 = !DILocation(line: 443, column: 9, scope: !1644)
!1651 = !DILocation(line: 1177, column: 22, scope: !294, inlinedAt: !1652)
!1652 = distinct !DILocation(line: 443, column: 9, scope: !1644)
!1653 = !DILocation(line: 1178, column: 9, scope: !294, inlinedAt: !1652)
!1654 = !DILocation(line: 444, column: 6, scope: !1644)
!1655 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h3589b1ddfd70936dE", scope: !135, file: !134, line: 418, type: !1656, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1658)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!67, !117, !117}
!1658 = !{!1659, !1660}
!1659 = !DILocalVariable(name: "self", arg: 1, scope: !1655, file: !134, line: 418, type: !117)
!1660 = !DILocalVariable(name: "other", arg: 2, scope: !1655, file: !134, line: 418, type: !117)
!1661 = !DILocation(line: 418, column: 32, scope: !1655)
!1662 = !DILocation(line: 418, column: 38, scope: !1655)
!1663 = !DILocation(line: 422, column: 9, scope: !1655)
!1664 = !DILocation(line: 423, column: 6, scope: !1655)
!1665 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd10c413d61c24af9E", scope: !135, file: !134, line: 47, type: !1666, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1335, retainedNodes: !1668)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!1520, !117}
!1668 = !{!1669}
!1669 = !DILocalVariable(name: "self", arg: 1, scope: !1665, file: !134, line: 47, type: !117)
!1670 = !DILocation(line: 47, column: 26, scope: !1665)
!1671 = !DILocation(line: 48, column: 9, scope: !1665)
!1672 = !DILocation(line: 49, column: 6, scope: !1665)
!1673 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdd278f7c65bef5d2E", scope: !135, file: !134, line: 37, type: !1674, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1676)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!67, !117}
!1676 = !{!1677}
!1677 = !DILocalVariable(name: "self", arg: 1, scope: !1673, file: !134, line: 37, type: !117)
!1678 = !DILocation(line: 37, column: 26, scope: !1673)
!1679 = !DILocation(line: 40, column: 43, scope: !1673)
!1680 = !DILocation(line: 40, column: 9, scope: !1673)
!1681 = !DILocation(line: 41, column: 6, scope: !1673)
!1682 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h072db4e2e33b785dE", scope: !1683, file: !134, line: 916, type: !1541, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1684)
!1683 = !DINamespace(name: "{impl#1}", scope: !136)
!1684 = !{!1685}
!1685 = !DILocalVariable(name: "self", arg: 1, scope: !1682, file: !134, line: 916, type: !114)
!1686 = !DILocation(line: 916, column: 22, scope: !1682)
!1687 = !DILocation(line: 917, column: 9, scope: !1682)
!1688 = !DILocation(line: 918, column: 6, scope: !1682)
!1689 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb891ac95b6994738E", scope: !1683, file: !134, line: 936, type: !1690, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1692)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!117, !114}
!1692 = !{!1693}
!1693 = !DILocalVariable(name: "self", arg: 1, scope: !1689, file: !134, line: 936, type: !114)
!1694 = !DILocation(line: 936, column: 25, scope: !1689)
!1695 = !DILocation(line: 937, column: 9, scope: !1689)
!1696 = !DILocation(line: 938, column: 6, scope: !1689)
!1697 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h6b597f304f210581E", scope: !1698, file: !797, line: 641, type: !1699, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1704, retainedNodes: !1702)
!1698 = !DINamespace(name: "{impl#3}", scope: !799)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!697, !1701}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Range<usize>", baseType: !119, size: 64, align: 64, dwarfAddressSpace: 0)
!1702 = !{!1703}
!1703 = !DILocalVariable(name: "self", arg: 1, scope: !1697, file: !797, line: 641, type: !1701)
!1704 = !{!1705}
!1705 = !DITemplateTypeParameter(name: "A", type: !11)
!1706 = !DILocation(line: 641, column: 13, scope: !1697)
!1707 = !DILocation(line: 642, column: 9, scope: !1697)
!1708 = !DILocation(line: 643, column: 6, scope: !1697)
!1709 = distinct !DISubprogram(name: "size_align<u8>", linkageName: "_ZN4core5alloc6layout10size_align17h8973d6f27cea8369E", scope: !40, file: !1710, line: 13, type: !1711, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !4)
!1710 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "b4b6ecfc5f3b5a48d9382f58835da573")
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!1713}
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !1714, templateParams: !4, identifier: "692671488c701c539e0f5d11a0760e0")
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1713, file: !2, baseType: !11, size: 64, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1713, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!1717 = !DILocation(line: 14, column: 6, scope: !1709)
!1718 = !DILocation(line: 448, column: 5, scope: !1719, inlinedAt: !1722)
!1719 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17hb78aa9618f74f4a9E", scope: !1109, file: !1108, line: 447, type: !1720, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !4)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!11}
!1722 = distinct !DILocation(line: 14, column: 27, scope: !1709)
!1723 = !DILocation(line: 14, column: 27, scope: !1709)
!1724 = !DILocation(line: 14, column: 5, scope: !1709)
!1725 = !DILocation(line: 15, column: 2, scope: !1709)
!1726 = distinct !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17h356c043d8961d2f8E", scope: !370, file: !1710, line: 264, type: !1727, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1730)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!370, !1729}
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Layout", baseType: !370, size: 64, align: 64, dwarfAddressSpace: 0)
!1730 = !{!1731, !1732, !1734}
!1731 = !DILocalVariable(name: "self", arg: 1, scope: !1726, file: !1710, line: 264, type: !1729)
!1732 = !DILocalVariable(name: "pad", scope: !1733, file: !1710, line: 265, type: !11, align: 8)
!1733 = distinct !DILexicalBlock(scope: !1726, file: !1710, line: 265, column: 9)
!1734 = !DILocalVariable(name: "new_size", scope: !1735, file: !1710, line: 270, type: !11, align: 8)
!1735 = distinct !DILexicalBlock(scope: !1733, file: !1710, line: 270, column: 9)
!1736 = !DILocation(line: 264, column: 25, scope: !1726)
!1737 = !DILocation(line: 265, column: 43, scope: !1726)
!1738 = !DILocation(line: 265, column: 19, scope: !1726)
!1739 = !DILocation(line: 265, column: 13, scope: !1733)
!1740 = !DILocation(line: 270, column: 24, scope: !1733)
!1741 = !DILocation(line: 270, column: 13, scope: !1735)
!1742 = !DILocation(line: 272, column: 43, scope: !1735)
!1743 = !DILocation(line: 272, column: 9, scope: !1735)
!1744 = !DILocation(line: 273, column: 6, scope: !1726)
!1745 = distinct !DISubprogram(name: "from_size_align", linkageName: "_ZN4core5alloc6layout6Layout15from_size_align17h31000980634a8d62E", scope: !370, file: !1710, line: 61, type: !1746, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1748)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!620, !11, !11}
!1748 = !{!1749, !1750}
!1749 = !DILocalVariable(name: "size", arg: 1, scope: !1745, file: !1710, line: 61, type: !11)
!1750 = !DILocalVariable(name: "align", arg: 2, scope: !1745, file: !1710, line: 61, type: !11)
!1751 = !DILocation(line: 61, column: 34, scope: !1745)
!1752 = !DILocation(line: 61, column: 47, scope: !1745)
!1753 = !DILocalVariable(name: "self", arg: 1, scope: !1754, file: !810, line: 1968, type: !11)
!1754 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h704b3d5a98e2274dE", scope: !811, file: !810, line: 1968, type: !1755, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1757)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!67, !11}
!1757 = !{!1753}
!1758 = !DILocation(line: 1968, column: 38, scope: !1754, inlinedAt: !1759)
!1759 = distinct !DILocation(line: 62, column: 13, scope: !1745)
!1760 = !DILocalVariable(name: "self", arg: 1, scope: !1761, file: !810, line: 84, type: !11)
!1761 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h91457f41ee5ed2deE", scope: !811, file: !810, line: 84, type: !1762, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1764)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{!225, !11}
!1764 = !{!1760}
!1765 = !DILocation(line: 84, column: 33, scope: !1761, inlinedAt: !1766)
!1766 = distinct !DILocation(line: 1969, column: 13, scope: !1754, inlinedAt: !1759)
!1767 = !DILocation(line: 85, column: 13, scope: !1761, inlinedAt: !1766)
!1768 = !DILocation(line: 1969, column: 13, scope: !1754, inlinedAt: !1759)
!1769 = !DILocation(line: 62, column: 13, scope: !1745)
!1770 = !DILocation(line: 62, column: 12, scope: !1745)
!1771 = !DILocation(line: 80, column: 32, scope: !1745)
!1772 = !DILocation(line: 80, column: 19, scope: !1745)
!1773 = !DILocation(line: 80, column: 12, scope: !1745)
!1774 = !DILocation(line: 63, column: 20, scope: !1745)
!1775 = !DILocation(line: 1, column: 1, scope: !1776)
!1776 = !DILexicalBlockFile(scope: !1745, file: !1777, discriminator: 0)
!1777 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/lib.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "f492bd9d65e34b8222e15c2a9d54bca8")
!1778 = !DILocation(line: 87, column: 6, scope: !1745)
!1779 = !DILocation(line: 86, column: 21, scope: !1745)
!1780 = !DILocation(line: 81, column: 20, scope: !1745)
!1781 = !DILocation(line: 86, column: 18, scope: !1745)
!1782 = distinct !DISubprogram(name: "padding_needed_for", linkageName: "_ZN4core5alloc6layout6Layout18padding_needed_for17hf1fc490a8f5f2505E", scope: !370, file: !1710, line: 231, type: !1783, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1785)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!11, !1729, !11}
!1785 = !{!1786, !1787, !1788, !1790}
!1786 = !DILocalVariable(name: "self", arg: 1, scope: !1782, file: !1710, line: 231, type: !1729)
!1787 = !DILocalVariable(name: "align", arg: 2, scope: !1782, file: !1710, line: 231, type: !11)
!1788 = !DILocalVariable(name: "len", scope: !1789, file: !1710, line: 232, type: !11, align: 8)
!1789 = distinct !DILexicalBlock(scope: !1782, file: !1710, line: 232, column: 9)
!1790 = !DILocalVariable(name: "len_rounded_up", scope: !1791, file: !1710, line: 253, type: !11, align: 8)
!1791 = distinct !DILexicalBlock(scope: !1789, file: !1710, line: 253, column: 9)
!1792 = !DILocation(line: 231, column: 37, scope: !1782)
!1793 = !DILocation(line: 231, column: 44, scope: !1782)
!1794 = !DILocation(line: 232, column: 19, scope: !1782)
!1795 = !DILocation(line: 232, column: 13, scope: !1789)
!1796 = !DILocalVariable(name: "self", arg: 1, scope: !1797, file: !810, line: 1113, type: !11)
!1797 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hcae9b8584ee33c9bE", scope: !811, file: !810, line: 1113, type: !801, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1798)
!1798 = !{!1796, !1799}
!1799 = !DILocalVariable(name: "rhs", arg: 2, scope: !1797, file: !810, line: 1113, type: !11)
!1800 = !DILocation(line: 1113, column: 35, scope: !1797, inlinedAt: !1801)
!1801 = distinct !DILocation(line: 253, column: 30, scope: !1789)
!1802 = !DILocation(line: 1113, column: 41, scope: !1797, inlinedAt: !1801)
!1803 = !DILocation(line: 1114, column: 13, scope: !1797, inlinedAt: !1801)
!1804 = !DILocation(line: 253, column: 30, scope: !1789)
!1805 = !DILocalVariable(name: "self", arg: 1, scope: !1806, file: !810, line: 1133, type: !11)
!1806 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hcd6164a347ff4cacE", scope: !811, file: !810, line: 1133, type: !801, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1807)
!1807 = !{!1805, !1808}
!1808 = !DILocalVariable(name: "rhs", arg: 2, scope: !1806, file: !810, line: 1133, type: !11)
!1809 = !DILocation(line: 1133, column: 35, scope: !1806, inlinedAt: !1810)
!1810 = distinct !DILocation(line: 253, column: 30, scope: !1789)
!1811 = !DILocation(line: 1133, column: 41, scope: !1806, inlinedAt: !1810)
!1812 = !DILocation(line: 1134, column: 13, scope: !1806, inlinedAt: !1810)
!1813 = !DILocation(line: 1133, column: 35, scope: !1806, inlinedAt: !1814)
!1814 = distinct !DILocation(line: 253, column: 73, scope: !1789)
!1815 = !DILocation(line: 1133, column: 41, scope: !1806, inlinedAt: !1814)
!1816 = !DILocation(line: 1134, column: 13, scope: !1806, inlinedAt: !1814)
!1817 = !DILocation(line: 253, column: 73, scope: !1789)
!1818 = !DILocation(line: 253, column: 72, scope: !1789)
!1819 = !DILocation(line: 253, column: 13, scope: !1791)
!1820 = !DILocation(line: 1133, column: 35, scope: !1806, inlinedAt: !1821)
!1821 = distinct !DILocation(line: 254, column: 9, scope: !1791)
!1822 = !DILocation(line: 1133, column: 41, scope: !1806, inlinedAt: !1821)
!1823 = !DILocation(line: 1134, column: 13, scope: !1806, inlinedAt: !1821)
!1824 = !DILocation(line: 254, column: 9, scope: !1791)
!1825 = !DILocation(line: 255, column: 6, scope: !1782)
!1826 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h7d3db9df0e7e4b98E", scope: !370, file: !1710, line: 98, type: !1827, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1829)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!370, !11, !11}
!1829 = !{!1830, !1831}
!1830 = !DILocalVariable(name: "size", arg: 1, scope: !1826, file: !1710, line: 98, type: !11)
!1831 = !DILocalVariable(name: "align", arg: 2, scope: !1826, file: !1710, line: 98, type: !11)
!1832 = !DILocation(line: 98, column: 51, scope: !1826)
!1833 = !DILocation(line: 98, column: 64, scope: !1826)
!1834 = !DILocation(line: 100, column: 48, scope: !1826)
!1835 = !DILocation(line: 100, column: 9, scope: !1826)
!1836 = !DILocation(line: 101, column: 6, scope: !1826)
!1837 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5alloc6layout6Layout3new17h6ff726810dd00e39E", scope: !370, file: !1710, line: 123, type: !1838, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1840)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!370}
!1840 = !{!1841, !1843}
!1841 = !DILocalVariable(name: "size", scope: !1842, file: !1710, line: 124, type: !11, align: 8)
!1842 = distinct !DILexicalBlock(scope: !1837, file: !1710, line: 124, column: 9)
!1843 = !DILocalVariable(name: "align", scope: !1842, file: !1710, line: 124, type: !11, align: 8)
!1844 = !DILocation(line: 124, column: 29, scope: !1837)
!1845 = !DILocation(line: 124, column: 14, scope: !1837)
!1846 = !DILocation(line: 124, column: 14, scope: !1842)
!1847 = !DILocation(line: 124, column: 20, scope: !1837)
!1848 = !DILocation(line: 124, column: 20, scope: !1842)
!1849 = !DILocation(line: 129, column: 18, scope: !1842)
!1850 = !DILocation(line: 130, column: 6, scope: !1837)
!1851 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h7a284e541e70fd8bE", scope: !370, file: !1710, line: 107, type: !1852, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1854)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!11, !1729}
!1854 = !{!1855}
!1855 = !DILocalVariable(name: "self", arg: 1, scope: !1851, file: !1710, line: 107, type: !1729)
!1856 = !DILocation(line: 107, column: 23, scope: !1851)
!1857 = !DILocation(line: 108, column: 9, scope: !1851)
!1858 = !DILocation(line: 109, column: 6, scope: !1851)
!1859 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h71b09892f817aae5E", scope: !370, file: !1710, line: 115, type: !1852, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1860)
!1860 = !{!1861}
!1861 = !DILocalVariable(name: "self", arg: 1, scope: !1859, file: !1710, line: 115, type: !1729)
!1862 = !DILocation(line: 115, column: 24, scope: !1859)
!1863 = !DILocation(line: 116, column: 9, scope: !1859)
!1864 = !DILocation(line: 117, column: 6, scope: !1859)
!1865 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17h1035d8e9ef9f5dd1E", scope: !370, file: !1710, line: 393, type: !1866, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1868)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!620, !11}
!1868 = !{!1869, !1870, !1872, !1873, !1875, !1877, !1881, !1882}
!1869 = !DILocalVariable(name: "n", arg: 1, scope: !1865, file: !1710, line: 393, type: !11)
!1870 = !DILocalVariable(name: "layout", scope: !1871, file: !1710, line: 394, type: !370, align: 8)
!1871 = distinct !DILexicalBlock(scope: !1865, file: !1710, line: 394, column: 9)
!1872 = !DILocalVariable(name: "offset", scope: !1871, file: !1710, line: 394, type: !11, align: 8)
!1873 = !DILocalVariable(name: "residual", scope: !1874, file: !1710, line: 394, type: !574, align: 1)
!1874 = distinct !DILexicalBlock(scope: !1865, file: !1710, line: 394, column: 60)
!1875 = !DILocalVariable(name: "val", scope: !1876, file: !1710, line: 394, type: !562, align: 8)
!1876 = distinct !DILexicalBlock(scope: !1865, file: !1710, line: 394, column: 32)
!1877 = !DILocalVariable(name: "left_val", scope: !1878, file: !1710, line: 395, type: !45, align: 8)
!1878 = !DILexicalBlockFile(scope: !1879, file: !1710, discriminator: 0)
!1879 = distinct !DILexicalBlock(scope: !1871, file: !1880, line: 38, column: 13)
!1880 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e357455d1c19e9b2642585126fa64908")
!1881 = !DILocalVariable(name: "right_val", scope: !1878, file: !1710, line: 395, type: !45, align: 8)
!1882 = !DILocalVariable(name: "kind", scope: !1883, file: !1710, line: 395, type: !94, align: 1)
!1883 = !DILexicalBlockFile(scope: !1884, file: !1710, discriminator: 0)
!1884 = distinct !DILexicalBlock(scope: !1879, file: !1880, line: 40, column: 21)
!1885 = !DILocation(line: 393, column: 21, scope: !1865)
!1886 = !DILocation(line: 394, column: 14, scope: !1871)
!1887 = !DILocation(line: 394, column: 60, scope: !1874)
!1888 = !DILocation(line: 394, column: 32, scope: !1876)
!1889 = !DILocation(line: 394, column: 32, scope: !1865)
!1890 = !DILocation(line: 394, column: 14, scope: !1865)
!1891 = !DILocation(line: 394, column: 22, scope: !1865)
!1892 = !DILocation(line: 394, column: 22, scope: !1871)
!1893 = !DILocation(line: 396, column: 12, scope: !1871)
!1894 = !DILocation(line: 394, column: 32, scope: !1874)
!1895 = !DILocation(line: 397, column: 6, scope: !1865)
!1896 = !DILocation(line: 396, column: 9, scope: !1871)
!1897 = distinct !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17h429e1d1584eb7728E", scope: !370, file: !1710, line: 285, type: !1898, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1900)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{!554, !1729, !11}
!1900 = !{!1901, !1902, !1903, !1905, !1907, !1909}
!1901 = !DILocalVariable(name: "self", arg: 1, scope: !1897, file: !1710, line: 285, type: !1729)
!1902 = !DILocalVariable(name: "n", arg: 2, scope: !1897, file: !1710, line: 285, type: !11)
!1903 = !DILocalVariable(name: "padded_size", scope: !1904, file: !1710, line: 290, type: !11, align: 8)
!1904 = distinct !DILexicalBlock(scope: !1897, file: !1710, line: 290, column: 9)
!1905 = !DILocalVariable(name: "alloc_size", scope: !1906, file: !1710, line: 291, type: !11, align: 8)
!1906 = distinct !DILexicalBlock(scope: !1904, file: !1710, line: 291, column: 9)
!1907 = !DILocalVariable(name: "residual", scope: !1908, file: !1710, line: 291, type: !574, align: 1)
!1908 = distinct !DILexicalBlock(scope: !1904, file: !1710, line: 291, column: 71)
!1909 = !DILocalVariable(name: "val", scope: !1910, file: !1710, line: 291, type: !11, align: 8)
!1910 = distinct !DILexicalBlock(scope: !1904, file: !1710, line: 291, column: 26)
!1911 = !DILocation(line: 285, column: 19, scope: !1897)
!1912 = !DILocation(line: 285, column: 26, scope: !1897)
!1913 = !DILocation(line: 291, column: 71, scope: !1908)
!1914 = !DILocation(line: 290, column: 27, scope: !1897)
!1915 = !DILocation(line: 290, column: 65, scope: !1897)
!1916 = !DILocation(line: 290, column: 41, scope: !1897)
!1917 = !DILocation(line: 290, column: 13, scope: !1904)
!1918 = !DILocation(line: 291, column: 26, scope: !1904)
!1919 = !DILocation(line: 291, column: 26, scope: !1910)
!1920 = !DILocation(line: 291, column: 13, scope: !1906)
!1921 = !DILocation(line: 295, column: 68, scope: !1906)
!1922 = !DILocation(line: 291, column: 26, scope: !1908)
!1923 = !DILocation(line: 296, column: 6, scope: !1897)
!1924 = !DILocation(line: 295, column: 22, scope: !1906)
!1925 = !DILocation(line: 295, column: 21, scope: !1906)
!1926 = !DILocation(line: 295, column: 18, scope: !1906)
!1927 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17hd9dc7e269411dacaE", scope: !370, file: !1710, line: 187, type: !1928, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !1930)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!334, !1729}
!1930 = !{!1931}
!1931 = !DILocalVariable(name: "self", arg: 1, scope: !1927, file: !1710, line: 187, type: !1729)
!1932 = !DILocation(line: 187, column: 27, scope: !1927)
!1933 = !DILocation(line: 189, column: 41, scope: !1927)
!1934 = !DILocation(line: 189, column: 18, scope: !1927)
!1935 = !DILocation(line: 190, column: 6, scope: !1927)
!1936 = distinct !DISubprogram(name: "try_from<u8, 8>", linkageName: "_ZN4core5array102_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$RF$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17hd234cc5c4292c193E", scope: !1938, file: !1937, line: 117, type: !1939, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !1957)
!1937 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a38e4927b486f14bae5b4bd4e786654e")
!1938 = !DINamespace(name: "{impl#8}", scope: !32)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!1941, !210}
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&[u8; 8], core::array::TryFromSliceError>", scope: !74, file: !2, size: 64, align: 64, elements: !1942, identifier: "f63d367131258bae2d88493babff7e10")
!1942 = !{!1943}
!1943 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 64, align: 64, elements: !1944, templateParams: !1950, identifier: "f63d367131258bae2d88493babff7e10_variant_part", discriminator: !458)
!1944 = !{!1945, !1953}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1943, file: !2, baseType: !1946, size: 64, align: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1941, file: !2, size: 64, align: 64, elements: !1947, templateParams: !1950, identifier: "f63d367131258bae2d88493babff7e10::Ok")
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1946, file: !2, baseType: !1949, size: 64, align: 64)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 8]", baseType: !1128, size: 64, align: 64, dwarfAddressSpace: 0)
!1950 = !{!1951, !1952}
!1951 = !DITemplateTypeParameter(name: "T", type: !1949)
!1952 = !DITemplateTypeParameter(name: "E", type: !31)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1943, file: !2, baseType: !1954, size: 64, align: 64, extraData: i64 0)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1941, file: !2, size: 64, align: 64, elements: !1955, templateParams: !1950, identifier: "f63d367131258bae2d88493babff7e10::Err")
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1954, file: !2, baseType: !31, align: 8)
!1957 = !{!1958, !1959}
!1958 = !DILocalVariable(name: "slice", arg: 1, scope: !1936, file: !1937, line: 117, type: !210)
!1959 = !DILocalVariable(name: "ptr", scope: !1960, file: !1937, line: 119, type: !1961, align: 8)
!1960 = distinct !DILexicalBlock(scope: !1936, file: !1937, line: 119, column: 13)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 8]", baseType: !1128, size: 64, align: 64, dwarfAddressSpace: 0)
!1962 = !DILocation(line: 117, column: 17, scope: !1936)
!1963 = !DILocation(line: 118, column: 12, scope: !1936)
!1964 = !DILocation(line: 123, column: 13, scope: !1936)
!1965 = !DILocation(line: 118, column: 9, scope: !1936)
!1966 = !DILocation(line: 119, column: 23, scope: !1936)
!1967 = !DILocation(line: 119, column: 17, scope: !1960)
!1968 = !DILocation(line: 121, column: 22, scope: !1960)
!1969 = !DILocation(line: 125, column: 6, scope: !1936)
!1970 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>, 1024>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf860101d79e0a39dE", scope: !1971, file: !1937, line: 218, type: !1972, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1981, retainedNodes: !1978)
!1971 = !DINamespace(name: "{impl#15}", scope: !32)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!210, !1974, !119, !214}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 1024]", baseType: !1975, size: 64, align: 64, dwarfAddressSpace: 0)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 8192, align: 8, elements: !1976)
!1976 = !{!1977}
!1977 = !DISubrange(count: 1024, lowerBound: 0)
!1978 = !{!1979, !1980}
!1979 = !DILocalVariable(name: "self", arg: 1, scope: !1970, file: !1937, line: 218, type: !1974)
!1980 = !DILocalVariable(name: "index", arg: 2, scope: !1970, file: !1937, line: 218, type: !119)
!1981 = !{!21, !1982}
!1982 = !DITemplateTypeParameter(name: "I", type: !119)
!1983 = !DILocation(line: 218, column: 14, scope: !1970)
!1984 = !DILocation(line: 218, column: 21, scope: !1970)
!1985 = !DILocation(line: 219, column: 22, scope: !1970)
!1986 = !DILocation(line: 219, column: 9, scope: !1970)
!1987 = !DILocation(line: 220, column: 6, scope: !1970)
!1988 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFrom<usize>, 1024>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hbb781dce4f95e74cE", scope: !1989, file: !1937, line: 229, type: !1990, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1996, retainedNodes: !1993)
!1989 = !DINamespace(name: "{impl#16}", scope: !32)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!241, !1992, !274, !214}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 1024]", baseType: !1975, size: 64, align: 64, dwarfAddressSpace: 0)
!1993 = !{!1994, !1995}
!1994 = !DILocalVariable(name: "self", arg: 1, scope: !1988, file: !1937, line: 229, type: !1992)
!1995 = !DILocalVariable(name: "index", arg: 2, scope: !1988, file: !1937, line: 229, type: !274)
!1996 = !{!21, !1997}
!1997 = !DITemplateTypeParameter(name: "I", type: !274)
!1998 = !DILocation(line: 229, column: 18, scope: !1988)
!1999 = !DILocation(line: 229, column: 29, scope: !1988)
!2000 = !DILocation(line: 230, column: 29, scope: !1988)
!2001 = !DILocation(line: 230, column: 9, scope: !1988)
!2002 = !DILocation(line: 231, column: 6, scope: !1988)
!2003 = distinct !DISubprogram(name: "try_from<u8, 8>", linkageName: "_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17h775279382fad47f5E", scope: !2004, file: !1937, line: 108, type: !2005, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2022)
!2004 = !DINamespace(name: "{impl#7}", scope: !32)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!2007, !210}
!2007 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<[u8; 8], core::array::TryFromSliceError>", scope: !74, file: !2, size: 72, align: 8, elements: !2008, identifier: "965cd5451794fcb793e26f1018caba43")
!2008 = !{!2009}
!2009 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 72, align: 8, elements: !2010, templateParams: !2015, identifier: "965cd5451794fcb793e26f1018caba43_variant_part", discriminator: !2021)
!2010 = !{!2011, !2017}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2009, file: !2, baseType: !2012, size: 72, align: 8, extraData: i64 0)
!2012 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2007, file: !2, size: 72, align: 8, elements: !2013, templateParams: !2015, identifier: "965cd5451794fcb793e26f1018caba43::Ok")
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2012, file: !2, baseType: !1128, size: 64, align: 8, offset: 8)
!2015 = !{!2016, !1952}
!2016 = !DITemplateTypeParameter(name: "T", type: !1128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2009, file: !2, baseType: !2018, size: 72, align: 8, extraData: i64 1)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2007, file: !2, size: 72, align: 8, elements: !2019, templateParams: !2015, identifier: "965cd5451794fcb793e26f1018caba43::Err")
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2018, file: !2, baseType: !31, align: 8, offset: 8)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !74, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagArtificial)
!2022 = !{!2023}
!2023 = !DILocalVariable(name: "slice", arg: 1, scope: !2003, file: !1937, line: 108, type: !210)
!2024 = !DILocation(line: 108, column: 17, scope: !2003)
!2025 = !DILocation(line: 109, column: 9, scope: !2003)
!2026 = !DILocation(line: 110, column: 6, scope: !2003)
!2027 = distinct !DISubprogram(name: "{closure#0}<u8, 8>", linkageName: "_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from28_$u7b$$u7b$closure$u7d$$u7d$17h83050287f4cb8fbdE", scope: !2028, file: !1937, line: 109, type: !2029, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2032)
!2028 = !DINamespace(name: "try_from", scope: !2004)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!1128, !2031, !1949}
!2031 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2028, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "c4b4b68006e6917dad556c439d91303")
!2032 = !{!2033, !2034}
!2033 = !DILocalVariable(name: "r", arg: 2, scope: !2027, file: !1937, line: 109, type: !1949)
!2034 = !DILocalVariable(arg: 1, scope: !2027, file: !1937, line: 109, type: !2031)
!2035 = !DILocation(line: 109, column: 38, scope: !2027)
!2036 = !DILocation(line: 109, column: 39, scope: !2027)
!2037 = !DILocation(line: 109, column: 42, scope: !2027)
!2038 = !DILocation(line: 109, column: 44, scope: !2027)
!2039 = distinct !DISubprogram(name: "clone<()>", linkageName: "_ZN4core5clone5Clone5clone17h9ddcdd57b0b34dcdE", scope: !2041, file: !2040, line: 121, type: !2043, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2048, retainedNodes: !2046)
!2040 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "234b7513444e11fc1c70a64cfc2357fe")
!2041 = !DINamespace(name: "Clone", scope: !2042)
!2042 = !DINamespace(name: "clone", scope: !8)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !2045}
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!2046 = !{!2047}
!2047 = !DILocalVariable(arg: 1, scope: !2039, file: !2040, line: 121, type: !2045)
!2048 = !{!2049}
!2049 = !DITemplateTypeParameter(name: "Self", type: !35)
!2050 = !DILocation(line: 121, column: 5, scope: !2039)
!2051 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0ab4e7fd709d2e2aE", scope: !2052, file: !2040, line: 183, type: !2054, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2056)
!2052 = !DINamespace(name: "{impl#5}", scope: !2053)
!2053 = !DINamespace(name: "impls", scope: !2042)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!11, !45}
!2056 = !{!2057}
!2057 = !DILocalVariable(name: "self", arg: 1, scope: !2051, file: !2040, line: 183, type: !45)
!2058 = !DILocation(line: 183, column: 30, scope: !2051)
!2059 = !DILocation(line: 184, column: 25, scope: !2051)
!2060 = !DILocation(line: 185, column: 22, scope: !2051)
!2061 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hac4a531d961be437E", scope: !2063, file: !2062, line: 704, type: !2064, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2066)
!2062 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "243cc0697a78f4c8bd2ff0d415c0bd00")
!2063 = !DINamespace(name: "{impl#0}", scope: !111)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!409, !210}
!2066 = !{!2067}
!2067 = !DILocalVariable(name: "self", arg: 1, scope: !2061, file: !2062, line: 704, type: !210)
!2068 = !DILocation(line: 704, column: 17, scope: !2061)
!2069 = !DILocation(line: 705, column: 9, scope: !2061)
!2070 = !DILocation(line: 706, column: 6, scope: !2061)
!2071 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4a1dfe72a7ae1c25E", scope: !2063, file: !2062, line: 431, type: !2072, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2074)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!117, !210}
!2074 = !{!2075}
!2075 = !DILocalVariable(name: "self", arg: 1, scope: !2071, file: !2062, line: 431, type: !210)
!2076 = !DILocation(line: 431, column: 25, scope: !2071)
!2077 = !DILocation(line: 432, column: 9, scope: !2071)
!2078 = !DILocation(line: 433, column: 6, scope: !2071)
!2079 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hcebcc6b396e9a846E", scope: !2081, file: !2080, line: 88, type: !2082, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2084)
!2080 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "5d3d89763d536c3489cc9de04b56e43e")
!2081 = !DINamespace(name: "raw", scope: !111)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!210, !117, !11}
!2084 = !{!2085, !2086}
!2085 = !DILocalVariable(name: "data", arg: 1, scope: !2079, file: !2080, line: 88, type: !117)
!2086 = !DILocalVariable(name: "len", arg: 2, scope: !2079, file: !2080, line: 88, type: !11)
!2087 = !DILocation(line: 88, column: 37, scope: !2079)
!2088 = !DILocation(line: 88, column: 53, scope: !2079)
!2089 = !DILocation(line: 95, column: 16, scope: !2079)
!2090 = !DILocation(line: 96, column: 2, scope: !2079)
!2091 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h0eeb7e14bbbf3bdcE", scope: !409, file: !2092, line: 87, type: !2064, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2093)
!2092 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "5aaa66a4d49b9ecc9bcb7869337da7d8")
!2093 = !{!2094, !2095, !2097}
!2094 = !DILocalVariable(name: "slice", arg: 1, scope: !2091, file: !2092, line: 87, type: !210)
!2095 = !DILocalVariable(name: "ptr", scope: !2096, file: !2092, line: 88, type: !117, align: 8)
!2096 = distinct !DILexicalBlock(scope: !2091, file: !2092, line: 88, column: 9)
!2097 = !DILocalVariable(name: "end", scope: !2098, file: !2092, line: 93, type: !117, align: 8)
!2098 = distinct !DILexicalBlock(scope: !2096, file: !2092, line: 93, column: 13)
!2099 = !DILocation(line: 87, column: 23, scope: !2091)
!2100 = !DILocation(line: 93, column: 17, scope: !2098)
!2101 = !DILocation(line: 88, column: 19, scope: !2091)
!2102 = !DILocation(line: 88, column: 13, scope: !2096)
!2103 = !DILocation(line: 91, column: 21, scope: !2096)
!2104 = !DILocation(line: 91, column: 20, scope: !2096)
!2105 = !DILocation(line: 91, column: 13, scope: !2096)
!2106 = !DILocation(line: 93, column: 26, scope: !2096)
!2107 = !DILocalVariable(name: "self", arg: 1, scope: !2108, file: !134, line: 638, type: !117)
!2108 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h52c6677b6b582200E", scope: !135, file: !134, line: 638, type: !138, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2109)
!2109 = !{!2107, !2110}
!2110 = !DILocalVariable(name: "count", arg: 2, scope: !2108, file: !134, line: 638, type: !11)
!2111 = !DILocation(line: 638, column: 31, scope: !2108, inlinedAt: !2112)
!2112 = distinct !DILocation(line: 94, column: 17, scope: !2096)
!2113 = !DILocation(line: 638, column: 37, scope: !2108, inlinedAt: !2112)
!2114 = !DILocalVariable(name: "self", arg: 1, scope: !2115, file: !134, line: 292, type: !117)
!2115 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h0ce718abc388078eE", scope: !135, file: !134, line: 292, type: !147, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2116)
!2116 = !{!2114, !2117}
!2117 = !DILocalVariable(name: "count", arg: 2, scope: !2115, file: !134, line: 292, type: !149)
!2118 = !DILocation(line: 292, column: 34, scope: !2115, inlinedAt: !2119)
!2119 = distinct !DILocation(line: 642, column: 9, scope: !2108, inlinedAt: !2112)
!2120 = !DILocation(line: 292, column: 40, scope: !2115, inlinedAt: !2119)
!2121 = !DILocation(line: 297, column: 18, scope: !2115, inlinedAt: !2119)
!2122 = !DILocation(line: 94, column: 17, scope: !2096)
!2123 = !DILocation(line: 511, column: 29, scope: !133, inlinedAt: !2124)
!2124 = distinct !DILocation(line: 96, column: 17, scope: !2096)
!2125 = !DILocation(line: 511, column: 35, scope: !133, inlinedAt: !2124)
!2126 = !DILocation(line: 230, column: 32, scope: !146, inlinedAt: !2127)
!2127 = distinct !DILocation(line: 516, column: 18, scope: !133, inlinedAt: !2124)
!2128 = !DILocation(line: 230, column: 38, scope: !146, inlinedAt: !2127)
!2129 = !DILocation(line: 235, column: 18, scope: !146, inlinedAt: !2127)
!2130 = !DILocation(line: 96, column: 17, scope: !2096)
!2131 = !DILocation(line: 93, column: 23, scope: !2096)
!2132 = !DILocation(line: 99, column: 25, scope: !2098)
!2133 = !DILocation(line: 99, column: 64, scope: !2098)
!2134 = !DILocation(line: 99, column: 13, scope: !2098)
!2135 = !DILocation(line: 101, column: 6, scope: !2091)
!2136 = distinct !DISubprogram(name: "as_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h46531a544f030047E", scope: !409, file: !2092, line: 128, type: !2137, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2140)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!210, !2139}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Iter<u8>", baseType: !409, size: 64, align: 64, dwarfAddressSpace: 0)
!2140 = !{!2141}
!2141 = !DILocalVariable(name: "self", arg: 1, scope: !2136, file: !2092, line: 128, type: !2139)
!2142 = !DILocation(line: 128, column: 21, scope: !2136)
!2143 = !DILocalVariable(name: "self", arg: 1, scope: !2144, file: !2145, line: 74, type: !2139)
!2144 = distinct !DISubprogram(name: "make_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17he28a71fcd9f93619E", scope: !409, file: !2145, line: 74, type: !2137, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2146)
!2145 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "eaa73f4306714798d2867dabeabed334")
!2146 = !{!2143, !2147, !2149, !2151}
!2147 = !DILocalVariable(name: "start", scope: !2148, file: !2145, line: 78, type: !334, align: 8)
!2148 = distinct !DILexicalBlock(scope: !2144, file: !2145, line: 18, column: 9)
!2149 = !DILocalVariable(name: "size", scope: !2150, file: !2145, line: 78, type: !11, align: 8)
!2150 = distinct !DILexicalBlock(scope: !2148, file: !2145, line: 19, column: 9)
!2151 = !DILocalVariable(name: "diff", scope: !2152, file: !2145, line: 78, type: !11, align: 8)
!2152 = distinct !DILexicalBlock(scope: !2150, file: !2145, line: 29, column: 13)
!2153 = !DILocation(line: 74, column: 27, scope: !2144, inlinedAt: !2154)
!2154 = distinct !DILocation(line: 129, column: 9, scope: !2136)
!2155 = !DILocation(line: 78, column: 41, scope: !2144, inlinedAt: !2154)
!2156 = !DILocation(line: 78, column: 60, scope: !2144, inlinedAt: !2154)
!2157 = !DILocation(line: 78, column: 60, scope: !2148, inlinedAt: !2154)
!2158 = !DILocalVariable(arg: 1, scope: !2159, file: !2092, line: 40, type: !117)
!2159 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17he287446c1c61e3ceE", scope: !410, file: !2092, line: 40, type: !2160, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2162)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!11, !117}
!2162 = !{!2158}
!2163 = !DILocation(line: 40, column: 21, scope: !2159, inlinedAt: !2164)
!2164 = distinct !DILocation(line: 78, column: 60, scope: !2148, inlinedAt: !2154)
!2165 = !DILocation(line: 78, column: 60, scope: !2150, inlinedAt: !2154)
!2166 = !DILocation(line: 78, column: 60, scope: !2152, inlinedAt: !2154)
!2167 = !DILocation(line: 78, column: 26, scope: !2144, inlinedAt: !2154)
!2168 = !DILocation(line: 129, column: 9, scope: !2136)
!2169 = !DILocation(line: 130, column: 6, scope: !2136)
!2170 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18ebf1aaf5f6628fE", scope: !2171, file: !108, line: 14, type: !2172, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1981, retainedNodes: !2174)
!2171 = !DINamespace(name: "{impl#0}", scope: !110)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!210, !210, !119, !214}
!2174 = !{!2175, !2176}
!2175 = !DILocalVariable(name: "self", arg: 1, scope: !2170, file: !108, line: 14, type: !210)
!2176 = !DILocalVariable(name: "index", arg: 2, scope: !2170, file: !108, line: 14, type: !119)
!2177 = !DILocation(line: 14, column: 14, scope: !2170)
!2178 = !DILocation(line: 14, column: 21, scope: !2170)
!2179 = !DILocation(line: 15, column: 9, scope: !2170)
!2180 = !DILocation(line: 16, column: 6, scope: !2170)
!2181 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h237b54ed02ea05a2E", scope: !2171, file: !108, line: 14, type: !2182, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1996, retainedNodes: !2184)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!210, !210, !274, !214}
!2184 = !{!2185, !2186}
!2185 = !DILocalVariable(name: "self", arg: 1, scope: !2181, file: !108, line: 14, type: !210)
!2186 = !DILocalVariable(name: "index", arg: 2, scope: !2181, file: !108, line: 14, type: !274)
!2187 = !DILocation(line: 14, column: 14, scope: !2181)
!2188 = !DILocation(line: 14, column: 21, scope: !2181)
!2189 = !DILocation(line: 15, column: 9, scope: !2181)
!2190 = !DILocation(line: 16, column: 6, scope: !2181)
!2191 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17he7b9d962652cc13aE", scope: !2171, file: !108, line: 14, type: !2192, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2197, retainedNodes: !2194)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!210, !210, !260, !214}
!2194 = !{!2195, !2196}
!2195 = !DILocalVariable(name: "self", arg: 1, scope: !2191, file: !108, line: 14, type: !210)
!2196 = !DILocalVariable(name: "index", arg: 2, scope: !2191, file: !108, line: 14, type: !260)
!2197 = !{!21, !2198}
!2198 = !DITemplateTypeParameter(name: "I", type: !260)
!2199 = !DILocation(line: 14, column: 14, scope: !2191)
!2200 = !DILocation(line: 14, column: 21, scope: !2191)
!2201 = !DILocation(line: 15, column: 9, scope: !2191)
!2202 = !DILocation(line: 16, column: 6, scope: !2191)
!2203 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h22af83885446f654E", scope: !2204, file: !108, line: 25, type: !2205, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1981, retainedNodes: !2207)
!2204 = !DINamespace(name: "{impl#1}", scope: !110)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!241, !241, !119, !214}
!2207 = !{!2208, !2209}
!2208 = !DILocalVariable(name: "self", arg: 1, scope: !2203, file: !108, line: 25, type: !241)
!2209 = !DILocalVariable(name: "index", arg: 2, scope: !2203, file: !108, line: 25, type: !119)
!2210 = !DILocation(line: 25, column: 18, scope: !2203)
!2211 = !DILocation(line: 25, column: 29, scope: !2203)
!2212 = !DILocation(line: 26, column: 9, scope: !2203)
!2213 = !DILocation(line: 27, column: 6, scope: !2203)
!2214 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h56f891b2dcb4eeb3E", scope: !2204, file: !108, line: 25, type: !2215, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1996, retainedNodes: !2217)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!241, !241, !274, !214}
!2217 = !{!2218, !2219}
!2218 = !DILocalVariable(name: "self", arg: 1, scope: !2214, file: !108, line: 25, type: !241)
!2219 = !DILocalVariable(name: "index", arg: 2, scope: !2214, file: !108, line: 25, type: !274)
!2220 = !DILocation(line: 25, column: 18, scope: !2214)
!2221 = !DILocation(line: 25, column: 29, scope: !2214)
!2222 = !DILocation(line: 26, column: 9, scope: !2214)
!2223 = !DILocation(line: 27, column: 6, scope: !2214)
!2224 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h41060ee3aa6261a6E", scope: !1567, file: !2225, line: 914, type: !2226, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2236, retainedNodes: !2241)
!2225 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "ae2d10012265ee4a26e1fe00b9dc31b2")
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!2228, !1567, !453}
!2228 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !74, file: !2, size: 64, align: 64, elements: !2229, identifier: "ae14187b6b914de222cba478783c9cfb")
!2229 = !{!2230}
!2230 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 64, align: 64, elements: !2231, templateParams: !2236, identifier: "ae14187b6b914de222cba478783c9cfb_variant_part", discriminator: !458)
!2231 = !{!2232, !2237}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2230, file: !2, baseType: !2233, size: 64, align: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2228, file: !2, size: 64, align: 64, elements: !2234, templateParams: !2236, identifier: "ae14187b6b914de222cba478783c9cfb::Ok")
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2233, file: !2, baseType: !334, size: 64, align: 64)
!2236 = !{!1574, !452}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2230, file: !2, baseType: !2238, size: 64, align: 64, extraData: i64 0)
!2238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2228, file: !2, size: 64, align: 64, elements: !2239, templateParams: !2236, identifier: "ae14187b6b914de222cba478783c9cfb::Err")
!2239 = !{!2240}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2238, file: !2, baseType: !453, align: 8)
!2241 = !{!2242, !2243, !2244}
!2242 = !DILocalVariable(name: "self", arg: 1, scope: !2224, file: !2225, line: 914, type: !1567)
!2243 = !DILocalVariable(name: "err", arg: 2, scope: !2224, file: !2225, line: 914, type: !453)
!2244 = !DILocalVariable(name: "v", scope: !2245, file: !2225, line: 916, type: !334, align: 8)
!2245 = distinct !DILexicalBlock(scope: !2224, file: !2225, line: 916, column: 13)
!2246 = !DILocation(line: 914, column: 21, scope: !2224)
!2247 = !DILocation(line: 914, column: 27, scope: !2224)
!2248 = !DILocation(line: 915, column: 15, scope: !2224)
!2249 = !DILocation(line: 915, column: 9, scope: !2224)
!2250 = !DILocation(line: 917, column: 25, scope: !2224)
!2251 = !DILocation(line: 917, column: 21, scope: !2224)
!2252 = !DILocation(line: 917, column: 28, scope: !2224)
!2253 = !DILocation(line: 916, column: 18, scope: !2224)
!2254 = !DILocation(line: 916, column: 18, scope: !2245)
!2255 = !DILocation(line: 916, column: 24, scope: !2245)
!2256 = !DILocation(line: 916, column: 28, scope: !2224)
!2257 = !DILocation(line: 919, column: 5, scope: !2224)
!2258 = !DILocation(line: 919, column: 6, scope: !2224)
!2259 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h75cec8057cc6e5f6E", scope: !697, file: !2225, line: 914, type: !2260, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2270, retainedNodes: !2275)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!2262, !697, !360}
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !74, file: !2, size: 192, align: 64, elements: !2263, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68")
!2263 = !{!2264}
!2264 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !2265, templateParams: !2270, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68_variant_part", discriminator: !458)
!2265 = !{!2266, !2271}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2264, file: !2, baseType: !2267, size: 192, align: 64, extraData: i64 0)
!2267 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2262, file: !2, size: 192, align: 64, elements: !2268, templateParams: !2270, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68::Ok")
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2267, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!2270 = !{!704, !511}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2264, file: !2, baseType: !2272, size: 192, align: 64, extraData: i64 1)
!2272 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2262, file: !2, size: 192, align: 64, elements: !2273, templateParams: !2270, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68::Err")
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2272, file: !2, baseType: !360, size: 128, align: 64, offset: 64)
!2275 = !{!2276, !2277, !2278}
!2276 = !DILocalVariable(name: "self", arg: 1, scope: !2259, file: !2225, line: 914, type: !697)
!2277 = !DILocalVariable(name: "err", arg: 2, scope: !2259, file: !2225, line: 914, type: !360)
!2278 = !DILocalVariable(name: "v", scope: !2279, file: !2225, line: 916, type: !11, align: 8)
!2279 = distinct !DILexicalBlock(scope: !2259, file: !2225, line: 916, column: 13)
!2280 = !DILocation(line: 914, column: 21, scope: !2259)
!2281 = !DILocation(line: 914, column: 27, scope: !2259)
!2282 = !DILocation(line: 915, column: 15, scope: !2259)
!2283 = !DILocation(line: 915, column: 9, scope: !2259)
!2284 = !DILocation(line: 917, column: 25, scope: !2259)
!2285 = !DILocation(line: 917, column: 21, scope: !2259)
!2286 = !DILocation(line: 917, column: 28, scope: !2259)
!2287 = !DILocation(line: 916, column: 18, scope: !2259)
!2288 = !DILocation(line: 916, column: 18, scope: !2279)
!2289 = !DILocation(line: 916, column: 24, scope: !2279)
!2290 = !DILocation(line: 916, column: 28, scope: !2259)
!2291 = !DILocation(line: 919, column: 5, scope: !2259)
!2292 = !DILocation(line: 919, column: 6, scope: !2259)
!2293 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h9e999bc306c8c66aE", scope: !697, file: !2225, line: 914, type: !2294, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2304, retainedNodes: !2309)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!2296, !697, !39}
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !74, file: !2, size: 128, align: 64, elements: !2297, identifier: "bcfcb322480b2d26d4da0769e4ceae7b")
!2297 = !{!2298}
!2298 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 128, align: 64, elements: !2299, templateParams: !2304, identifier: "bcfcb322480b2d26d4da0769e4ceae7b_variant_part", discriminator: !458)
!2299 = !{!2300, !2305}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2298, file: !2, baseType: !2301, size: 128, align: 64, extraData: i64 0)
!2301 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2296, file: !2, size: 128, align: 64, elements: !2302, templateParams: !2304, identifier: "bcfcb322480b2d26d4da0769e4ceae7b::Ok")
!2302 = !{!2303}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2301, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!2304 = !{!704, !568}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2298, file: !2, baseType: !2306, size: 128, align: 64, extraData: i64 1)
!2306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2296, file: !2, size: 128, align: 64, elements: !2307, templateParams: !2304, identifier: "bcfcb322480b2d26d4da0769e4ceae7b::Err")
!2307 = !{!2308}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2306, file: !2, baseType: !39, align: 8, offset: 64)
!2309 = !{!2310, !2311, !2312}
!2310 = !DILocalVariable(name: "self", arg: 1, scope: !2293, file: !2225, line: 914, type: !697)
!2311 = !DILocalVariable(name: "err", arg: 2, scope: !2293, file: !2225, line: 914, type: !39)
!2312 = !DILocalVariable(name: "v", scope: !2313, file: !2225, line: 916, type: !11, align: 8)
!2313 = distinct !DILexicalBlock(scope: !2293, file: !2225, line: 916, column: 13)
!2314 = !DILocation(line: 914, column: 21, scope: !2293)
!2315 = !DILocation(line: 914, column: 27, scope: !2293)
!2316 = !DILocation(line: 915, column: 15, scope: !2293)
!2317 = !DILocation(line: 915, column: 9, scope: !2293)
!2318 = !DILocation(line: 917, column: 25, scope: !2293)
!2319 = !DILocation(line: 917, column: 21, scope: !2293)
!2320 = !DILocation(line: 917, column: 28, scope: !2293)
!2321 = !DILocation(line: 916, column: 18, scope: !2293)
!2322 = !DILocation(line: 916, column: 18, scope: !2313)
!2323 = !DILocation(line: 916, column: 24, scope: !2313)
!2324 = !DILocation(line: 916, column: 28, scope: !2293)
!2325 = !DILocation(line: 919, column: 5, scope: !2293)
!2326 = !DILocation(line: 919, column: 6, scope: !2293)
!2327 = distinct !DISubprogram(name: "expect<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h57e4f65c536141c1E", scope: !697, file: !2225, line: 695, type: !2328, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !2330)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!11, !697, !220, !214}
!2330 = !{!2331, !2332, !2333}
!2331 = !DILocalVariable(name: "self", arg: 1, scope: !2327, file: !2225, line: 695, type: !697)
!2332 = !DILocalVariable(name: "msg", arg: 2, scope: !2327, file: !2225, line: 695, type: !220)
!2333 = !DILocalVariable(name: "val", scope: !2334, file: !2225, line: 697, type: !11, align: 8)
!2334 = distinct !DILexicalBlock(scope: !2327, file: !2225, line: 697, column: 13)
!2335 = !DILocation(line: 695, column: 19, scope: !2327)
!2336 = !DILocation(line: 695, column: 25, scope: !2327)
!2337 = !DILocation(line: 696, column: 15, scope: !2327)
!2338 = !DILocation(line: 696, column: 9, scope: !2327)
!2339 = !DILocation(line: 698, column: 21, scope: !2327)
!2340 = !DILocation(line: 697, column: 18, scope: !2327)
!2341 = !DILocation(line: 697, column: 18, scope: !2334)
!2342 = !DILocation(line: 700, column: 6, scope: !2327)
!2343 = distinct !DISubprogram(name: "and_then<usize, usize, base64::encode::encoded_size::{closure#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h342793af43b424cdE", scope: !697, file: !2225, line: 1041, type: !2344, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2356, retainedNodes: !2351)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!697, !697, !2346}
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#1}", scope: !2347, file: !2, size: 64, align: 64, elements: !2349, templateParams: !4, identifier: "932b9ebda5594ed01477bb91b7d8501a")
!2347 = !DINamespace(name: "encoded_size", scope: !2348)
!2348 = !DINamespace(name: "encode", scope: !55)
!2349 = !{!2350}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__encoded_rem", scope: !2346, file: !2, baseType: !45, size: 64, align: 64)
!2351 = !{!2352, !2353, !2354}
!2352 = !DILocalVariable(name: "self", arg: 1, scope: !2343, file: !2225, line: 1041, type: !697)
!2353 = !DILocalVariable(name: "f", arg: 2, scope: !2343, file: !2225, line: 1041, type: !2346)
!2354 = !DILocalVariable(name: "x", scope: !2355, file: !2225, line: 1043, type: !11, align: 8)
!2355 = distinct !DILexicalBlock(scope: !2343, file: !2225, line: 1043, column: 13)
!2356 = !{!704, !2357, !2358}
!2357 = !DITemplateTypeParameter(name: "U", type: !11)
!2358 = !DITemplateTypeParameter(name: "F", type: !2346)
!2359 = !DILocation(line: 1041, column: 51, scope: !2343)
!2360 = !DILocation(line: 1041, column: 57, scope: !2343)
!2361 = !DILocation(line: 1042, column: 15, scope: !2343)
!2362 = !DILocation(line: 1042, column: 9, scope: !2343)
!2363 = !DILocation(line: 1044, column: 21, scope: !2343)
!2364 = !DILocation(line: 1043, column: 18, scope: !2343)
!2365 = !DILocation(line: 1043, column: 18, scope: !2355)
!2366 = !DILocation(line: 1043, column: 24, scope: !2355)
!2367 = !DILocation(line: 1046, column: 5, scope: !2343)
!2368 = !DILocation(line: 1046, column: 6, scope: !2343)
!2369 = distinct !DISubprogram(name: "and_then<usize, usize, base64::encode::encoded_size::{closure#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h94e65d268d4149fdE", scope: !697, file: !2225, line: 1041, type: !2370, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2378, retainedNodes: !2373)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!697, !697, !2372}
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2347, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "7e1a86ef4138578a17f8ca56c3208a48")
!2373 = !{!2374, !2375, !2376}
!2374 = !DILocalVariable(name: "self", arg: 1, scope: !2369, file: !2225, line: 1041, type: !697)
!2375 = !DILocalVariable(name: "f", arg: 2, scope: !2369, file: !2225, line: 1041, type: !2372)
!2376 = !DILocalVariable(name: "x", scope: !2377, file: !2225, line: 1043, type: !11, align: 8)
!2377 = distinct !DILexicalBlock(scope: !2369, file: !2225, line: 1043, column: 13)
!2378 = !{!704, !2357, !2379}
!2379 = !DITemplateTypeParameter(name: "F", type: !2372)
!2380 = !DILocation(line: 1041, column: 51, scope: !2369)
!2381 = !DILocation(line: 1041, column: 57, scope: !2369)
!2382 = !DILocation(line: 1042, column: 15, scope: !2369)
!2383 = !DILocation(line: 1042, column: 9, scope: !2369)
!2384 = !DILocation(line: 1044, column: 21, scope: !2369)
!2385 = !DILocation(line: 1043, column: 18, scope: !2369)
!2386 = !DILocation(line: 1043, column: 18, scope: !2377)
!2387 = !DILocation(line: 1043, column: 24, scope: !2377)
!2388 = !DILocation(line: 1046, column: 5, scope: !2369)
!2389 = !DILocation(line: 1046, column: 6, scope: !2369)
!2390 = distinct !DISubprogram(name: "map<&[u8; 8], core::array::TryFromSliceError, [u8; 8], core::array::{impl#7}::try_from::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17ha0c0183fc4cc3207E", scope: !1941, file: !430, line: 764, type: !2391, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2400, retainedNodes: !2393)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!2007, !1941, !2031}
!2393 = !{!2394, !2395, !2396, !2398}
!2394 = !DILocalVariable(name: "self", arg: 1, scope: !2390, file: !430, line: 764, type: !1941)
!2395 = !DILocalVariable(name: "op", arg: 2, scope: !2390, file: !430, line: 764, type: !2031)
!2396 = !DILocalVariable(name: "t", scope: !2397, file: !430, line: 766, type: !1949, align: 8)
!2397 = distinct !DILexicalBlock(scope: !2390, file: !430, line: 766, column: 13)
!2398 = !DILocalVariable(name: "e", scope: !2399, file: !430, line: 767, type: !31, align: 1)
!2399 = distinct !DILexicalBlock(scope: !2390, file: !430, line: 767, column: 13)
!2400 = !{!1951, !1952, !2401, !2402}
!2401 = !DITemplateTypeParameter(name: "U", type: !1128)
!2402 = !DITemplateTypeParameter(name: "F", type: !2031)
!2403 = !DILocation(line: 764, column: 38, scope: !2390)
!2404 = !DILocation(line: 764, column: 44, scope: !2390)
!2405 = !DILocation(line: 767, column: 17, scope: !2399)
!2406 = !DILocation(line: 765, column: 15, scope: !2390)
!2407 = !DILocation(line: 765, column: 9, scope: !2390)
!2408 = !DILocation(line: 766, column: 16, scope: !2390)
!2409 = !DILocation(line: 766, column: 16, scope: !2397)
!2410 = !DILocation(line: 766, column: 25, scope: !2397)
!2411 = !DILocation(line: 767, column: 23, scope: !2399)
!2412 = !DILocation(line: 767, column: 28, scope: !2390)
!2413 = !DILocation(line: 769, column: 5, scope: !2390)
!2414 = !DILocation(line: 766, column: 22, scope: !2397)
!2415 = !DILocation(line: 766, column: 30, scope: !2390)
!2416 = !DILocation(line: 769, column: 6, scope: !2390)
!2417 = distinct !DISubprogram(name: "expect<&str, core::str::error::Utf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h620d377fa2cc28a2E", scope: !2418, file: !430, line: 1256, type: !2432, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2426, retainedNodes: !2434)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, core::str::error::Utf8Error>", scope: !74, file: !2, size: 192, align: 64, elements: !2419, identifier: "837fff40ae6db3f429925ebfca6d3c5d")
!2419 = !{!2420}
!2420 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !2421, templateParams: !2426, identifier: "837fff40ae6db3f429925ebfca6d3c5d_variant_part", discriminator: !458)
!2421 = !{!2422, !2428}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2420, file: !2, baseType: !2423, size: 192, align: 64, extraData: i64 0)
!2423 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2418, file: !2, size: 192, align: 64, elements: !2424, templateParams: !2426, identifier: "837fff40ae6db3f429925ebfca6d3c5d::Ok")
!2424 = !{!2425}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2423, file: !2, baseType: !220, size: 128, align: 64, offset: 64)
!2426 = !{!965, !2427}
!2427 = !DITemplateTypeParameter(name: "E", type: !5)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2420, file: !2, baseType: !2429, size: 192, align: 64, extraData: i64 1)
!2429 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2418, file: !2, size: 192, align: 64, elements: !2430, templateParams: !2426, identifier: "837fff40ae6db3f429925ebfca6d3c5d::Err")
!2430 = !{!2431}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2429, file: !2, baseType: !5, size: 128, align: 64, offset: 64)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!220, !2418, !220, !214}
!2434 = !{!2435, !2436, !2437, !2439}
!2435 = !DILocalVariable(name: "self", arg: 1, scope: !2417, file: !430, line: 1256, type: !2418)
!2436 = !DILocalVariable(name: "msg", arg: 2, scope: !2417, file: !430, line: 1256, type: !220)
!2437 = !DILocalVariable(name: "t", scope: !2438, file: !430, line: 1258, type: !220, align: 8)
!2438 = distinct !DILexicalBlock(scope: !2417, file: !430, line: 1258, column: 13)
!2439 = !DILocalVariable(name: "e", scope: !2440, file: !430, line: 1259, type: !5, align: 8)
!2440 = distinct !DILexicalBlock(scope: !2417, file: !430, line: 1259, column: 13)
!2441 = !DILocation(line: 1256, column: 19, scope: !2417)
!2442 = !DILocation(line: 1256, column: 25, scope: !2417)
!2443 = !DILocation(line: 1259, column: 17, scope: !2440)
!2444 = !DILocation(line: 1257, column: 15, scope: !2417)
!2445 = !DILocation(line: 1257, column: 9, scope: !2417)
!2446 = !DILocation(line: 1258, column: 16, scope: !2417)
!2447 = !DILocation(line: 1258, column: 16, scope: !2438)
!2448 = !DILocation(line: 1261, column: 6, scope: !2417)
!2449 = !DILocation(line: 1259, column: 17, scope: !2417)
!2450 = !DILocation(line: 1259, column: 42, scope: !2440)
!2451 = !DILocation(line: 1259, column: 23, scope: !2440)
!2452 = distinct !DISubprogram(name: "unwrap<[u8; 8], core::array::TryFromSliceError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h24feb326e3ba8f0cE", scope: !2007, file: !430, line: 1296, type: !2453, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2015, retainedNodes: !2455)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!1128, !2007, !214}
!2455 = !{!2456, !2457, !2459}
!2456 = !DILocalVariable(name: "self", arg: 1, scope: !2452, file: !430, line: 1296, type: !2007)
!2457 = !DILocalVariable(name: "t", scope: !2458, file: !430, line: 1298, type: !1128, align: 1)
!2458 = distinct !DILexicalBlock(scope: !2452, file: !430, line: 1298, column: 13)
!2459 = !DILocalVariable(name: "e", scope: !2460, file: !430, line: 1299, type: !31, align: 1)
!2460 = distinct !DILexicalBlock(scope: !2452, file: !430, line: 1299, column: 13)
!2461 = !DILocation(line: 1298, column: 16, scope: !2458)
!2462 = !DILocation(line: 1296, column: 19, scope: !2452)
!2463 = !DILocation(line: 1299, column: 17, scope: !2460)
!2464 = !DILocation(line: 1297, column: 15, scope: !2452)
!2465 = !DILocation(line: 1297, column: 9, scope: !2452)
!2466 = !DILocation(line: 1298, column: 16, scope: !2452)
!2467 = !DILocation(line: 1301, column: 6, scope: !2452)
!2468 = !DILocation(line: 1299, column: 84, scope: !2460)
!2469 = !DILocation(line: 1299, column: 23, scope: !2460)
!2470 = distinct !DISubprogram(name: "unwrap<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h30a0b31dcf695d90E", scope: !620, file: !430, line: 1296, type: !2471, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !628, retainedNodes: !2473)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!370, !620, !214}
!2473 = !{!2474, !2475, !2477}
!2474 = !DILocalVariable(name: "self", arg: 1, scope: !2470, file: !430, line: 1296, type: !620)
!2475 = !DILocalVariable(name: "t", scope: !2476, file: !430, line: 1298, type: !370, align: 8)
!2476 = distinct !DILexicalBlock(scope: !2470, file: !430, line: 1298, column: 13)
!2477 = !DILocalVariable(name: "e", scope: !2478, file: !430, line: 1299, type: !39, align: 1)
!2478 = distinct !DILexicalBlock(scope: !2470, file: !430, line: 1299, column: 13)
!2479 = !DILocation(line: 1296, column: 19, scope: !2470)
!2480 = !DILocation(line: 1299, column: 17, scope: !2478)
!2481 = !DILocation(line: 1297, column: 15, scope: !2470)
!2482 = !DILocation(line: 1297, column: 9, scope: !2470)
!2483 = !DILocation(line: 1298, column: 16, scope: !2470)
!2484 = !DILocation(line: 1298, column: 16, scope: !2476)
!2485 = !DILocation(line: 1301, column: 6, scope: !2470)
!2486 = !DILocation(line: 1299, column: 84, scope: !2478)
!2487 = !DILocation(line: 1299, column: 23, scope: !2478)
!2488 = distinct !DISubprogram(name: "unwrap<&str, core::str::error::Utf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hb84fb383a45a1a1fE", scope: !2418, file: !430, line: 1296, type: !2489, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2426, retainedNodes: !2491)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!220, !2418, !214}
!2491 = !{!2492, !2493, !2495}
!2492 = !DILocalVariable(name: "self", arg: 1, scope: !2488, file: !430, line: 1296, type: !2418)
!2493 = !DILocalVariable(name: "t", scope: !2494, file: !430, line: 1298, type: !220, align: 8)
!2494 = distinct !DILexicalBlock(scope: !2488, file: !430, line: 1298, column: 13)
!2495 = !DILocalVariable(name: "e", scope: !2496, file: !430, line: 1299, type: !5, align: 8)
!2496 = distinct !DILexicalBlock(scope: !2488, file: !430, line: 1299, column: 13)
!2497 = !DILocation(line: 1296, column: 19, scope: !2488)
!2498 = !DILocation(line: 1299, column: 17, scope: !2496)
!2499 = !DILocation(line: 1297, column: 15, scope: !2488)
!2500 = !DILocation(line: 1297, column: 9, scope: !2488)
!2501 = !DILocation(line: 1298, column: 16, scope: !2488)
!2502 = !DILocation(line: 1298, column: 16, scope: !2494)
!2503 = !DILocation(line: 1301, column: 6, scope: !2488)
!2504 = !DILocation(line: 1299, column: 17, scope: !2488)
!2505 = !DILocation(line: 1299, column: 84, scope: !2496)
!2506 = !DILocation(line: 1299, column: 23, scope: !2496)
!2507 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h56cc90635870d0f6E", scope: !487, file: !430, line: 850, type: !2508, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2532, retainedNodes: !2525)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!2510, !487, !2523}
!2510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !74, file: !2, size: 192, align: 64, elements: !2511, identifier: "24e52cac73c8c5a047f4c34b088eea69")
!2511 = !{!2512}
!2512 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !2513, templateParams: !2518, identifier: "24e52cac73c8c5a047f4c34b088eea69_variant_part", discriminator: !458)
!2513 = !{!2514, !2519}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2512, file: !2, baseType: !2515, size: 192, align: 64, extraData: i64 0)
!2515 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2510, file: !2, size: 192, align: 64, elements: !2516, templateParams: !2518, identifier: "24e52cac73c8c5a047f4c34b088eea69::Ok")
!2516 = !{!2517}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2515, file: !2, baseType: !35, align: 8, offset: 64)
!2518 = !{!496, !511}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2512, file: !2, baseType: !2520, size: 192, align: 64, extraData: i64 1)
!2520 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2510, file: !2, size: 192, align: 64, elements: !2521, templateParams: !2518, identifier: "24e52cac73c8c5a047f4c34b088eea69::Err")
!2521 = !{!2522}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2520, file: !2, baseType: !360, size: 128, align: 64, offset: 64)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2524, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "97d0bb9292eae46f438c2e10f9daf6ff")
!2524 = !DINamespace(name: "handle_reserve", scope: !399)
!2525 = !{!2526, !2527, !2528, !2530}
!2526 = !DILocalVariable(name: "self", arg: 1, scope: !2507, file: !430, line: 850, type: !487)
!2527 = !DILocalVariable(name: "op", arg: 2, scope: !2507, file: !430, line: 850, type: !2523)
!2528 = !DILocalVariable(name: "t", scope: !2529, file: !430, line: 852, type: !35, align: 1)
!2529 = distinct !DILexicalBlock(scope: !2507, file: !430, line: 852, column: 13)
!2530 = !DILocalVariable(name: "e", scope: !2531, file: !430, line: 853, type: !357, align: 8)
!2531 = distinct !DILexicalBlock(scope: !2507, file: !430, line: 853, column: 13)
!2532 = !{!496, !497, !2533, !2534}
!2533 = !DITemplateTypeParameter(name: "F", type: !360)
!2534 = !DITemplateTypeParameter(name: "O", type: !2523)
!2535 = !DILocation(line: 850, column: 42, scope: !2507)
!2536 = !DILocation(line: 850, column: 48, scope: !2507)
!2537 = !DILocation(line: 852, column: 16, scope: !2529)
!2538 = !DILocation(line: 851, column: 15, scope: !2507)
!2539 = !DILocation(line: 851, column: 9, scope: !2507)
!2540 = !DILocation(line: 852, column: 22, scope: !2529)
!2541 = !DILocation(line: 852, column: 26, scope: !2507)
!2542 = !DILocation(line: 853, column: 17, scope: !2507)
!2543 = !DILocation(line: 853, column: 17, scope: !2531)
!2544 = !DILocation(line: 853, column: 27, scope: !2531)
!2545 = !DILocation(line: 853, column: 23, scope: !2531)
!2546 = !DILocation(line: 853, column: 32, scope: !2507)
!2547 = !DILocation(line: 855, column: 5, scope: !2507)
!2548 = !DILocation(line: 855, column: 6, scope: !2507)
!2549 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17heaafb5592dcec240E", scope: !434, file: !430, line: 850, type: !2550, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2563, retainedNodes: !2556)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!527, !434, !2552}
!2552 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#1}", scope: !2553, file: !2, size: 64, align: 64, elements: !2554, templateParams: !4, identifier: "30a4b3cb8a2a2cdadf86d72dff034734")
!2553 = !DINamespace(name: "finish_grow", scope: !399)
!2554 = !{!2555}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !2552, file: !2, baseType: !1729, size: 64, align: 64)
!2556 = !{!2557, !2558, !2559, !2561}
!2557 = !DILocalVariable(name: "self", arg: 1, scope: !2549, file: !430, line: 850, type: !434)
!2558 = !DILocalVariable(name: "op", arg: 2, scope: !2549, file: !430, line: 850, type: !2552)
!2559 = !DILocalVariable(name: "t", scope: !2560, file: !430, line: 852, type: !442, align: 8)
!2560 = distinct !DILexicalBlock(scope: !2549, file: !430, line: 852, column: 13)
!2561 = !DILocalVariable(name: "e", scope: !2562, file: !430, line: 853, type: !453, align: 1)
!2562 = distinct !DILexicalBlock(scope: !2549, file: !430, line: 853, column: 13)
!2563 = !{!451, !452, !517, !2564}
!2564 = !DITemplateTypeParameter(name: "O", type: !2552)
!2565 = !DILocation(line: 850, column: 42, scope: !2549)
!2566 = !DILocation(line: 850, column: 48, scope: !2549)
!2567 = !DILocation(line: 853, column: 17, scope: !2562)
!2568 = !DILocation(line: 851, column: 15, scope: !2549)
!2569 = !DILocation(line: 851, column: 9, scope: !2549)
!2570 = !DILocation(line: 852, column: 16, scope: !2549)
!2571 = !DILocation(line: 852, column: 16, scope: !2560)
!2572 = !DILocation(line: 852, column: 22, scope: !2560)
!2573 = !DILocation(line: 852, column: 26, scope: !2549)
!2574 = !DILocation(line: 853, column: 27, scope: !2562)
!2575 = !DILocation(line: 853, column: 23, scope: !2562)
!2576 = !DILocation(line: 853, column: 32, scope: !2549)
!2577 = !DILocation(line: 855, column: 5, scope: !2549)
!2578 = !DILocation(line: 855, column: 6, scope: !2549)
!2579 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf824c341c5ca14f7E", scope: !620, file: !430, line: 850, type: !2580, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2603, retainedNodes: !2596)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!2582, !620, !2595}
!2582 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !74, file: !2, size: 192, align: 64, elements: !2583, identifier: "74c4016fe1eef928f05816e275d1c493")
!2583 = !{!2584}
!2584 = !DICompositeType(tag: DW_TAG_variant_part, scope: !74, file: !2, size: 192, align: 64, elements: !2585, templateParams: !2590, identifier: "74c4016fe1eef928f05816e275d1c493_variant_part", discriminator: !458)
!2585 = !{!2586, !2591}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2584, file: !2, baseType: !2587, size: 192, align: 64, extraData: i64 0)
!2587 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2582, file: !2, size: 192, align: 64, elements: !2588, templateParams: !2590, identifier: "74c4016fe1eef928f05816e275d1c493::Ok")
!2588 = !{!2589}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2587, file: !2, baseType: !370, size: 128, align: 64, offset: 64)
!2590 = !{!629, !511}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2584, file: !2, baseType: !2592, size: 192, align: 64, extraData: i64 1)
!2592 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2582, file: !2, size: 192, align: 64, elements: !2593, templateParams: !2590, identifier: "74c4016fe1eef928f05816e275d1c493::Err")
!2593 = !{!2594}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2592, file: !2, baseType: !360, size: 128, align: 64, offset: 64)
!2595 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2553, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "6432d07da548882db6e3de9dedabeb95")
!2596 = !{!2597, !2598, !2599, !2601}
!2597 = !DILocalVariable(name: "self", arg: 1, scope: !2579, file: !430, line: 850, type: !620)
!2598 = !DILocalVariable(name: "op", arg: 2, scope: !2579, file: !430, line: 850, type: !2595)
!2599 = !DILocalVariable(name: "t", scope: !2600, file: !430, line: 852, type: !370, align: 8)
!2600 = distinct !DILexicalBlock(scope: !2579, file: !430, line: 852, column: 13)
!2601 = !DILocalVariable(name: "e", scope: !2602, file: !430, line: 853, type: !39, align: 1)
!2602 = distinct !DILexicalBlock(scope: !2579, file: !430, line: 853, column: 13)
!2603 = !{!629, !568, !2533, !2604}
!2604 = !DITemplateTypeParameter(name: "O", type: !2595)
!2605 = !DILocation(line: 850, column: 42, scope: !2579)
!2606 = !DILocation(line: 850, column: 48, scope: !2579)
!2607 = !DILocation(line: 853, column: 17, scope: !2602)
!2608 = !DILocation(line: 851, column: 15, scope: !2579)
!2609 = !DILocation(line: 851, column: 9, scope: !2579)
!2610 = !DILocation(line: 852, column: 16, scope: !2579)
!2611 = !DILocation(line: 852, column: 16, scope: !2600)
!2612 = !DILocation(line: 852, column: 22, scope: !2600)
!2613 = !DILocation(line: 852, column: 26, scope: !2579)
!2614 = !DILocation(line: 853, column: 27, scope: !2602)
!2615 = !DILocation(line: 853, column: 23, scope: !2602)
!2616 = !DILocation(line: 853, column: 32, scope: !2579)
!2617 = !DILocation(line: 855, column: 5, scope: !2579)
!2618 = !DILocation(line: 855, column: 6, scope: !2579)
!2619 = distinct !DISubprogram(name: "assert_failed<usize, usize>", linkageName: "_ZN4core9panicking13assert_failed17h40df432cd6565ea0E", scope: !95, file: !2620, line: 130, type: !2621, scopeLine: 130, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2640, retainedNodes: !2635)
!2620 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "69693814f97087e7624e79a8025306aa")
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null, !94, !45, !45, !2623, !214}
!2623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !14, file: !2, size: 384, align: 64, elements: !2624, identifier: "1ab0f53939da178671115bc79fa6a6c9")
!2624 = !{!2625}
!2625 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 384, align: 64, elements: !2626, templateParams: !2629, identifier: "1ab0f53939da178671115bc79fa6a6c9_variant_part", discriminator: !709)
!2626 = !{!2627, !2631}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2625, file: !2, baseType: !2628, size: 384, align: 64, extraData: i64 0)
!2628 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2623, file: !2, size: 384, align: 64, elements: !4, templateParams: !2629, identifier: "1ab0f53939da178671115bc79fa6a6c9::None")
!2629 = !{!2630}
!2630 = !DITemplateTypeParameter(name: "T", type: !1035)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2625, file: !2, baseType: !2632, size: 384, align: 64)
!2632 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2623, file: !2, size: 384, align: 64, elements: !2633, templateParams: !2629, identifier: "1ab0f53939da178671115bc79fa6a6c9::Some")
!2633 = !{!2634}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2632, file: !2, baseType: !1035, size: 384, align: 64)
!2635 = !{!2636, !2637, !2638, !2639}
!2636 = !DILocalVariable(name: "kind", arg: 1, scope: !2619, file: !2620, line: 131, type: !94)
!2637 = !DILocalVariable(name: "left", arg: 2, scope: !2619, file: !2620, line: 132, type: !45)
!2638 = !DILocalVariable(name: "right", arg: 3, scope: !2619, file: !2620, line: 133, type: !45)
!2639 = !DILocalVariable(name: "args", arg: 4, scope: !2619, file: !2620, line: 134, type: !2623)
!2640 = !{!704, !2357}
!2641 = !DILocation(line: 131, column: 5, scope: !2619)
!2642 = !DILocation(line: 132, column: 5, scope: !2619)
!2643 = !DILocation(line: 133, column: 5, scope: !2619)
!2644 = !DILocation(line: 134, column: 5, scope: !2619)
!2645 = !DILocation(line: 140, column: 31, scope: !2619)
!2646 = !DILocation(line: 140, column: 38, scope: !2619)
!2647 = !DILocation(line: 140, column: 46, scope: !2619)
!2648 = !DILocation(line: 140, column: 5, scope: !2619)
!2649 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h19eff3d6610a01acE", scope: !2651, file: !2650, line: 547, type: !2652, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !1456, retainedNodes: !2654)
!2650 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "013dcb324a64d449769af1e8bbdf7aa9")
!2651 = !DINamespace(name: "{impl#4}", scope: !470)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{null, !39}
!2654 = !{!2655}
!2655 = !DILocalVariable(name: "t", arg: 1, scope: !2649, file: !2650, line: 547, type: !39)
!2656 = !DILocation(line: 547, column: 13, scope: !2649)
!2657 = !DILocation(line: 549, column: 6, scope: !2649)
!2658 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4a57be64dba231c9E", scope: !2651, file: !2650, line: 547, type: !2659, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2663, retainedNodes: !2661)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !453}
!2661 = !{!2662}
!2662 = !DILocalVariable(name: "t", arg: 1, scope: !2658, file: !2650, line: 547, type: !453)
!2663 = !{!2664}
!2664 = !DITemplateTypeParameter(name: "T", type: !453)
!2665 = !DILocation(line: 547, column: 13, scope: !2658)
!2666 = !DILocation(line: 549, column: 6, scope: !2658)
!2667 = distinct !DISubprogram(name: "from<core::fmt::Error>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h563240e1381f8ccaE", scope: !2651, file: !2650, line: 547, type: !2668, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2672, retainedNodes: !2670)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{null, !655}
!2670 = !{!2671}
!2671 = !DILocalVariable(name: "t", arg: 1, scope: !2667, file: !2650, line: 547, type: !655)
!2672 = !{!2673}
!2673 = !DITemplateTypeParameter(name: "T", type: !655)
!2674 = !DILocation(line: 547, column: 13, scope: !2667)
!2675 = !DILocation(line: 549, column: 6, scope: !2667)
!2676 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hff23e38d31e42dfeE", scope: !2651, file: !2650, line: 547, type: !2677, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2681, retainedNodes: !2679)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!357, !357}
!2679 = !{!2680}
!2680 = !DILocalVariable(name: "t", arg: 1, scope: !2676, file: !2650, line: 547, type: !357)
!2681 = !{!2682}
!2682 = !DITemplateTypeParameter(name: "T", type: !357)
!2683 = !DILocation(line: 547, column: 13, scope: !2676)
!2684 = !DILocation(line: 549, column: 6, scope: !2676)
!2685 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h1e25107d500986d6E", scope: !2686, file: !2650, line: 539, type: !355, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2689, retainedNodes: !2687)
!2686 = !DINamespace(name: "{impl#3}", scope: !470)
!2687 = !{!2688}
!2688 = !DILocalVariable(name: "self", arg: 1, scope: !2685, file: !2650, line: 539, type: !360)
!2689 = !{!2690, !2691}
!2690 = !DITemplateTypeParameter(name: "T", type: !360)
!2691 = !DITemplateTypeParameter(name: "U", type: !357)
!2692 = !DILocation(line: 539, column: 13, scope: !2685)
!2693 = !DILocation(line: 540, column: 9, scope: !2685)
!2694 = !DILocation(line: 541, column: 6, scope: !2685)
!2695 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3d7093146eb41820E", scope: !2686, file: !2650, line: 539, type: !332, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2698, retainedNodes: !2696)
!2696 = !{!2697}
!2697 = !DILocalVariable(name: "self", arg: 1, scope: !2695, file: !2650, line: 539, type: !337)
!2698 = !{!2699, !2700}
!2699 = !DITemplateTypeParameter(name: "T", type: !337)
!2700 = !DITemplateTypeParameter(name: "U", type: !334)
!2701 = !DILocation(line: 539, column: 13, scope: !2695)
!2702 = !DILocation(line: 540, column: 9, scope: !2695)
!2703 = !DILocation(line: 541, column: 6, scope: !2695)
!2704 = distinct !DISubprogram(name: "try_into<&[u8], [u8; 8]>", linkageName: "_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h8a1e94ac34abf8afE", scope: !2705, file: !2650, line: 575, type: !2005, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2708, retainedNodes: !2706)
!2705 = !DINamespace(name: "{impl#6}", scope: !470)
!2706 = !{!2707}
!2707 = !DILocalVariable(name: "self", arg: 1, scope: !2704, file: !2650, line: 575, type: !210)
!2708 = !{!2709, !2401}
!2709 = !DITemplateTypeParameter(name: "T", type: !210)
!2710 = !DILocation(line: 575, column: 17, scope: !2704)
!2711 = !DILocation(line: 576, column: 9, scope: !2704)
!2712 = !DILocation(line: 577, column: 6, scope: !2704)
!2713 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h4eaf909971c165c7E", scope: !357, file: !351, line: 73, type: !2714, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2717)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!360, !2716}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&TryReserveError", baseType: !357, size: 64, align: 64, dwarfAddressSpace: 0)
!2717 = !{!2718}
!2718 = !DILocalVariable(name: "self", arg: 1, scope: !2713, file: !351, line: 73, type: !2716)
!2719 = !DILocation(line: 73, column: 17, scope: !2713)
!2720 = !DILocation(line: 74, column: 9, scope: !2713)
!2721 = !DILocation(line: 75, column: 6, scope: !2713)
!2722 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17hbdfdbad8ee616e3dE", scope: !395, file: !2723, line: 421, type: !2724, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !4)
!2723 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0dcf6d541d2b937b08991a440659841e")
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!395}
!2726 = !DILocation(line: 422, column: 9, scope: !2722)
!2727 = !DILocation(line: 423, column: 6, scope: !2722)
!2728 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h915d4f9ff0fbaca9E", scope: !395, file: !2723, line: 1165, type: !2729, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !2731)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!178, !394}
!2731 = !{!2732, !2733}
!2732 = !DILocalVariable(name: "self", arg: 1, scope: !2728, file: !2723, line: 1165, type: !394)
!2733 = !DILocalVariable(name: "ptr", scope: !2734, file: !2723, line: 1168, type: !178, align: 8)
!2734 = distinct !DILexicalBlock(scope: !2728, file: !2723, line: 1168, column: 9)
!2735 = !DILocation(line: 1165, column: 23, scope: !2728)
!2736 = !DILocation(line: 1168, column: 19, scope: !2728)
!2737 = !DILocation(line: 1168, column: 13, scope: !2734)
!2738 = !DILocation(line: 1170, column: 21, scope: !2734)
!2739 = !DILocation(line: 1170, column: 20, scope: !2734)
!2740 = !DILocation(line: 1170, column: 13, scope: !2734)
!2741 = !DILocation(line: 1173, column: 6, scope: !2728)
!2742 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hec3f55b8c142a6c0E", scope: !395, file: !2723, line: 1734, type: !2743, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !2745)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{null, !394, !114}
!2745 = !{!2746, !2747, !2748, !2750}
!2746 = !DILocalVariable(name: "self", arg: 1, scope: !2742, file: !2723, line: 1734, type: !394)
!2747 = !DILocalVariable(name: "other", arg: 2, scope: !2742, file: !2723, line: 1734, type: !114)
!2748 = !DILocalVariable(name: "count", scope: !2749, file: !2723, line: 1735, type: !11, align: 8)
!2749 = distinct !DILexicalBlock(scope: !2742, file: !2723, line: 1735, column: 9)
!2750 = !DILocalVariable(name: "len", scope: !2751, file: !2723, line: 1737, type: !11, align: 8)
!2751 = distinct !DILexicalBlock(scope: !2749, file: !2723, line: 1737, column: 9)
!2752 = !DILocation(line: 1734, column: 31, scope: !2742)
!2753 = !DILocation(line: 1734, column: 42, scope: !2742)
!2754 = !DILocation(line: 1735, column: 30, scope: !2742)
!2755 = !DILocation(line: 1735, column: 13, scope: !2749)
!2756 = !DILocation(line: 1736, column: 9, scope: !2749)
!2757 = !DILocation(line: 1737, column: 19, scope: !2749)
!2758 = !DILocation(line: 1737, column: 13, scope: !2751)
!2759 = !DILocation(line: 1738, column: 43, scope: !2751)
!2760 = !DILocation(line: 1738, column: 62, scope: !2751)
!2761 = !DILocation(line: 618, column: 29, scope: !185, inlinedAt: !2762)
!2762 = distinct !DILocation(line: 1738, column: 62, scope: !2751)
!2763 = !DILocation(line: 618, column: 35, scope: !185, inlinedAt: !2762)
!2764 = !DILocation(line: 235, column: 32, scope: !195, inlinedAt: !2765)
!2765 = distinct !DILocation(line: 623, column: 18, scope: !185, inlinedAt: !2762)
!2766 = !DILocation(line: 235, column: 38, scope: !195, inlinedAt: !2765)
!2767 = !DILocation(line: 242, column: 18, scope: !195, inlinedAt: !2765)
!2768 = !DILocation(line: 1738, column: 18, scope: !2751)
!2769 = !DILocation(line: 1739, column: 9, scope: !2751)
!2770 = !DILocation(line: 1740, column: 6, scope: !2742)
!2771 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17heb35d8c4afc6b2fdE", scope: !395, file: !2723, line: 2162, type: !2772, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !2774)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !394, !210}
!2774 = !{!2775, !2776}
!2775 = !DILocalVariable(name: "self", arg: 1, scope: !2771, file: !2723, line: 2162, type: !394)
!2776 = !DILocalVariable(name: "other", arg: 2, scope: !2771, file: !2723, line: 2162, type: !210)
!2777 = !DILocation(line: 2162, column: 30, scope: !2771)
!2778 = !DILocation(line: 2162, column: 41, scope: !2771)
!2779 = !DILocation(line: 2163, column: 26, scope: !2771)
!2780 = !DILocation(line: 2163, column: 9, scope: !2771)
!2781 = !DILocation(line: 2164, column: 6, scope: !2771)
!2782 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hdf1c07633a954033E", scope: !395, file: !2723, line: 1831, type: !2783, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !2786)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!11, !2785}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Vec<u8, alloc::alloc::Global>", baseType: !395, size: 64, align: 64, dwarfAddressSpace: 0)
!2786 = !{!2787}
!2787 = !DILocalVariable(name: "self", arg: 1, scope: !2782, file: !2723, line: 1831, type: !2785)
!2788 = !DILocation(line: 1831, column: 16, scope: !2782)
!2789 = !DILocation(line: 1832, column: 9, scope: !2782)
!2790 = !DILocation(line: 1833, column: 6, scope: !2782)
!2791 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h032d8606687b5a6dE", scope: !395, file: !2723, line: 804, type: !2792, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !2794)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !394, !11}
!2794 = !{!2795, !2796}
!2795 = !DILocalVariable(name: "self", arg: 1, scope: !2791, file: !2723, line: 804, type: !394)
!2796 = !DILocalVariable(name: "additional", arg: 2, scope: !2791, file: !2723, line: 804, type: !11)
!2797 = !DILocation(line: 804, column: 20, scope: !2791)
!2798 = !DILocation(line: 804, column: 31, scope: !2791)
!2799 = !DILocation(line: 805, column: 9, scope: !2791)
!2800 = !DILocation(line: 805, column: 26, scope: !2791)
!2801 = !DILocation(line: 806, column: 6, scope: !2791)
!2802 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17hb397420605ad409eE", scope: !405, file: !2803, line: 154, type: !2804, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2806)
!2803 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "0a7e892cc60caf2edd41bc1c0d3c42e0")
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!178, !370}
!2806 = !{!2807}
!2807 = !DILocalVariable(name: "layout", arg: 1, scope: !2802, file: !2803, line: 154, type: !370)
!2808 = !DILocation(line: 154, column: 28, scope: !2802)
!2809 = !DILocation(line: 155, column: 34, scope: !2802)
!2810 = !DILocation(line: 155, column: 49, scope: !2802)
!2811 = !DILocation(line: 155, column: 14, scope: !2802)
!2812 = !DILocation(line: 156, column: 2, scope: !2802)
!2813 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h2a2edc77c15269e2E", scope: !405, file: !2803, line: 85, type: !2804, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2814)
!2814 = !{!2815}
!2815 = !DILocalVariable(name: "layout", arg: 1, scope: !2813, file: !2803, line: 85, type: !370)
!2816 = !DILocation(line: 85, column: 21, scope: !2813)
!2817 = !DILocation(line: 86, column: 27, scope: !2813)
!2818 = !DILocation(line: 86, column: 42, scope: !2813)
!2819 = !DILocation(line: 86, column: 14, scope: !2813)
!2820 = !DILocation(line: 87, column: 2, scope: !2813)
!2821 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17hc99a6dc20dd53f8eE", scope: !404, file: !2803, line: 161, type: !2822, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2825)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{!434, !2824, !370, !67}
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Global", baseType: !404, size: 64, align: 64, dwarfAddressSpace: 0)
!2825 = !{!2826, !2827, !2828, !2829, !2831, !2833, !2835, !2837}
!2826 = !DILocalVariable(name: "self", arg: 1, scope: !2821, file: !2803, line: 161, type: !2824)
!2827 = !DILocalVariable(name: "layout", arg: 2, scope: !2821, file: !2803, line: 161, type: !370)
!2828 = !DILocalVariable(name: "zeroed", arg: 3, scope: !2821, file: !2803, line: 161, type: !67)
!2829 = !DILocalVariable(name: "size", scope: !2830, file: !2803, line: 165, type: !11, align: 8)
!2830 = distinct !DILexicalBlock(scope: !2821, file: !2803, line: 165, column: 13)
!2831 = !DILocalVariable(name: "raw_ptr", scope: !2832, file: !2803, line: 166, type: !178, align: 8)
!2832 = distinct !DILexicalBlock(scope: !2830, file: !2803, line: 166, column: 17)
!2833 = !DILocalVariable(name: "ptr", scope: !2834, file: !2803, line: 167, type: !334, align: 8)
!2834 = distinct !DILexicalBlock(scope: !2832, file: !2803, line: 167, column: 17)
!2835 = !DILocalVariable(name: "residual", scope: !2836, file: !2803, line: 167, type: !459, align: 1)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !2803, line: 167, column: 66)
!2837 = !DILocalVariable(name: "val", scope: !2838, file: !2803, line: 167, type: !334, align: 8)
!2838 = distinct !DILexicalBlock(scope: !2832, file: !2803, line: 167, column: 27)
!2839 = !DILocation(line: 161, column: 19, scope: !2821)
!2840 = !DILocation(line: 161, column: 26, scope: !2821)
!2841 = !DILocation(line: 161, column: 42, scope: !2821)
!2842 = !DILocation(line: 166, column: 21, scope: !2832)
!2843 = !DILocation(line: 167, column: 66, scope: !2836)
!2844 = !DILocation(line: 162, column: 15, scope: !2821)
!2845 = !DILocation(line: 162, column: 9, scope: !2821)
!2846 = !DILocation(line: 163, column: 51, scope: !2821)
!2847 = !DILocation(line: 165, column: 13, scope: !2821)
!2848 = !DILocation(line: 165, column: 13, scope: !2830)
!2849 = !DILocation(line: 166, column: 34, scope: !2830)
!2850 = !DILocation(line: 166, column: 79, scope: !2830)
!2851 = !DILocation(line: 166, column: 73, scope: !2830)
!2852 = !DILocation(line: 166, column: 56, scope: !2830)
!2853 = !DILocation(line: 166, column: 43, scope: !2830)
!2854 = !DILocation(line: 166, column: 31, scope: !2830)
!2855 = !DILocation(line: 167, column: 40, scope: !2832)
!2856 = !DILocation(line: 167, column: 27, scope: !2832)
!2857 = !DILocation(line: 167, column: 27, scope: !2838)
!2858 = !DILocation(line: 167, column: 21, scope: !2834)
!2859 = !DILocation(line: 168, column: 20, scope: !2834)
!2860 = !DILocation(line: 167, column: 27, scope: !2836)
!2861 = !DILocation(line: 171, column: 6, scope: !2821)
!2862 = !DILocation(line: 168, column: 17, scope: !2834)
!2863 = !DILocation(line: 169, column: 13, scope: !2821)
!2864 = !DILocation(line: 163, column: 21, scope: !2821)
!2865 = !DILocation(line: 163, column: 18, scope: !2821)
!2866 = !DILocation(line: 163, column: 72, scope: !2821)
!2867 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h4fd0747ea7453b42E", scope: !404, file: !2803, line: 175, type: !2868, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2870)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!434, !2824, !334, !370, !370, !67}
!2870 = !{!2871, !2872, !2873, !2874, !2875, !2876, !2878, !2879, !2881, !2883, !2885, !2887, !2889, !2891, !2893, !2895}
!2871 = !DILocalVariable(name: "self", arg: 1, scope: !2867, file: !2803, line: 176, type: !2824)
!2872 = !DILocalVariable(name: "ptr", arg: 2, scope: !2867, file: !2803, line: 177, type: !334)
!2873 = !DILocalVariable(name: "old_layout", arg: 3, scope: !2867, file: !2803, line: 178, type: !370)
!2874 = !DILocalVariable(name: "new_layout", arg: 4, scope: !2867, file: !2803, line: 179, type: !370)
!2875 = !DILocalVariable(name: "zeroed", arg: 5, scope: !2867, file: !2803, line: 180, type: !67)
!2876 = !DILocalVariable(name: "old_size", scope: !2877, file: !2803, line: 192, type: !11, align: 8)
!2877 = distinct !DILexicalBlock(scope: !2867, file: !2803, line: 192, column: 13)
!2878 = !DILocalVariable(name: "old_size", scope: !2877, file: !2803, line: 192, type: !45, align: 8)
!2879 = !DILocalVariable(name: "new_size", scope: !2880, file: !2803, line: 193, type: !11, align: 8)
!2880 = distinct !DILexicalBlock(scope: !2877, file: !2803, line: 193, column: 17)
!2881 = !DILocalVariable(name: "raw_ptr", scope: !2882, file: !2803, line: 198, type: !178, align: 8)
!2882 = distinct !DILexicalBlock(scope: !2880, file: !2803, line: 198, column: 17)
!2883 = !DILocalVariable(name: "ptr", scope: !2884, file: !2803, line: 199, type: !334, align: 8)
!2884 = distinct !DILexicalBlock(scope: !2882, file: !2803, line: 199, column: 17)
!2885 = !DILocalVariable(name: "residual", scope: !2886, file: !2803, line: 199, type: !459, align: 1)
!2886 = distinct !DILexicalBlock(scope: !2882, file: !2803, line: 199, column: 66)
!2887 = !DILocalVariable(name: "val", scope: !2888, file: !2803, line: 199, type: !334, align: 8)
!2888 = distinct !DILexicalBlock(scope: !2882, file: !2803, line: 199, column: 27)
!2889 = !DILocalVariable(name: "old_size", scope: !2890, file: !2803, line: 211, type: !11, align: 8)
!2890 = distinct !DILexicalBlock(scope: !2867, file: !2803, line: 211, column: 13)
!2891 = !DILocalVariable(name: "new_ptr", scope: !2892, file: !2803, line: 212, type: !442, align: 8)
!2892 = distinct !DILexicalBlock(scope: !2890, file: !2803, line: 212, column: 17)
!2893 = !DILocalVariable(name: "residual", scope: !2894, file: !2803, line: 212, type: !459, align: 1)
!2894 = distinct !DILexicalBlock(scope: !2890, file: !2803, line: 212, column: 66)
!2895 = !DILocalVariable(name: "val", scope: !2896, file: !2803, line: 212, type: !442, align: 8)
!2896 = distinct !DILexicalBlock(scope: !2890, file: !2803, line: 212, column: 31)
!2897 = !DILocation(line: 176, column: 9, scope: !2867)
!2898 = !DILocation(line: 177, column: 9, scope: !2867)
!2899 = !DILocation(line: 178, column: 9, scope: !2867)
!2900 = !DILocation(line: 179, column: 9, scope: !2867)
!2901 = !DILocation(line: 180, column: 9, scope: !2867)
!2902 = !DILocation(line: 199, column: 66, scope: !2886)
!2903 = !DILocation(line: 212, column: 66, scope: !2894)
!2904 = !DILocation(line: 187, column: 15, scope: !2867)
!2905 = !DILocation(line: 187, column: 9, scope: !2867)
!2906 = !DILocation(line: 188, column: 34, scope: !2867)
!2907 = !DILocation(line: 188, column: 18, scope: !2867)
!2908 = !DILocation(line: 192, column: 13, scope: !2867)
!2909 = !DILocation(line: 192, column: 13, scope: !2877)
!2910 = !DILocation(line: 192, column: 25, scope: !2867)
!2911 = !DILocation(line: 192, column: 47, scope: !2867)
!2912 = !DILocation(line: 211, column: 13, scope: !2867)
!2913 = !DILocation(line: 211, column: 13, scope: !2890)
!2914 = !DILocation(line: 212, column: 47, scope: !2890)
!2915 = !DILocation(line: 212, column: 31, scope: !2890)
!2916 = !DILocation(line: 193, column: 32, scope: !2877)
!2917 = !DILocation(line: 193, column: 21, scope: !2880)
!2918 = !DILocation(line: 196, column: 48, scope: !2880)
!2919 = !DILocation(line: 196, column: 36, scope: !2880)
!2920 = !DILocation(line: 196, column: 17, scope: !2880)
!2921 = !DILocation(line: 198, column: 39, scope: !2880)
!2922 = !DILocation(line: 198, column: 53, scope: !2880)
!2923 = !DILocation(line: 198, column: 31, scope: !2880)
!2924 = !DILocation(line: 198, column: 21, scope: !2882)
!2925 = !DILocation(line: 199, column: 27, scope: !2882)
!2926 = !DILocation(line: 199, column: 27, scope: !2888)
!2927 = !DILocation(line: 199, column: 21, scope: !2884)
!2928 = !DILocation(line: 200, column: 20, scope: !2884)
!2929 = !DILocation(line: 199, column: 27, scope: !2886)
!2930 = !DILocation(line: 1, column: 1, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !2867, file: !1777, discriminator: 0)
!2932 = !DILocation(line: 218, column: 6, scope: !2867)
!2933 = !DILocation(line: 203, column: 20, scope: !2884)
!2934 = !DILocation(line: 618, column: 29, scope: !185, inlinedAt: !2935)
!2935 = distinct !DILocation(line: 201, column: 21, scope: !2884)
!2936 = !DILocation(line: 618, column: 35, scope: !185, inlinedAt: !2935)
!2937 = !DILocation(line: 235, column: 32, scope: !195, inlinedAt: !2938)
!2938 = distinct !DILocation(line: 623, column: 18, scope: !185, inlinedAt: !2935)
!2939 = !DILocation(line: 235, column: 38, scope: !195, inlinedAt: !2938)
!2940 = !DILocation(line: 242, column: 18, scope: !195, inlinedAt: !2938)
!2941 = !DILocation(line: 201, column: 21, scope: !2884)
!2942 = !DILocation(line: 201, column: 58, scope: !2884)
!2943 = !DILocalVariable(name: "self", arg: 1, scope: !2944, file: !173, line: 1024, type: !178)
!2944 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17heb15cbd8d2a6c1a0E", scope: !186, file: !173, line: 1024, type: !823, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !20, retainedNodes: !2945)
!2945 = !{!2943, !2946, !2947}
!2946 = !DILocalVariable(name: "val", arg: 2, scope: !2944, file: !173, line: 1024, type: !22)
!2947 = !DILocalVariable(name: "count", arg: 3, scope: !2944, file: !173, line: 1024, type: !11)
!2948 = !DILocation(line: 1024, column: 31, scope: !2944, inlinedAt: !2949)
!2949 = distinct !DILocation(line: 201, column: 21, scope: !2884)
!2950 = !DILocation(line: 1024, column: 37, scope: !2944, inlinedAt: !2949)
!2951 = !DILocation(line: 1024, column: 46, scope: !2944, inlinedAt: !2949)
!2952 = !DILocation(line: 1029, column: 18, scope: !2944, inlinedAt: !2949)
!2953 = !DILocation(line: 200, column: 17, scope: !2884)
!2954 = !DILocation(line: 203, column: 17, scope: !2884)
!2955 = !DILocation(line: 204, column: 13, scope: !2867)
!2956 = !DILocation(line: 212, column: 31, scope: !2896)
!2957 = !DILocation(line: 212, column: 21, scope: !2892)
!2958 = !DILocation(line: 213, column: 42, scope: !2892)
!2959 = !DILocation(line: 212, column: 31, scope: !2894)
!2960 = !DILocation(line: 213, column: 56, scope: !2892)
!2961 = !DILocation(line: 213, column: 17, scope: !2892)
!2962 = !DILocation(line: 214, column: 38, scope: !2892)
!2963 = !DILocation(line: 214, column: 17, scope: !2892)
!2964 = !DILocation(line: 215, column: 17, scope: !2892)
!2965 = !DILocation(line: 216, column: 13, scope: !2867)
!2966 = !DILocation(line: 188, column: 52, scope: !2867)
!2967 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h50b535b87d8fa895E", scope: !405, file: !2803, line: 103, type: !2968, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2970)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{null, !178, !370}
!2970 = !{!2971, !2972}
!2971 = !DILocalVariable(name: "ptr", arg: 1, scope: !2967, file: !2803, line: 103, type: !178)
!2972 = !DILocalVariable(name: "layout", arg: 2, scope: !2967, file: !2803, line: 103, type: !370)
!2973 = !DILocation(line: 103, column: 23, scope: !2967)
!2974 = !DILocation(line: 103, column: 37, scope: !2967)
!2975 = !DILocation(line: 104, column: 34, scope: !2967)
!2976 = !DILocation(line: 104, column: 49, scope: !2967)
!2977 = !DILocation(line: 104, column: 14, scope: !2967)
!2978 = !DILocation(line: 105, column: 2, scope: !2967)
!2979 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h52d43d327aca9338E", scope: !405, file: !2803, line: 121, type: !2980, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !2982)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!178, !178, !370, !11}
!2982 = !{!2983, !2984, !2985}
!2983 = !DILocalVariable(name: "ptr", arg: 1, scope: !2979, file: !2803, line: 121, type: !178)
!2984 = !DILocalVariable(name: "layout", arg: 2, scope: !2979, file: !2803, line: 121, type: !370)
!2985 = !DILocalVariable(name: "new_size", arg: 3, scope: !2979, file: !2803, line: 121, type: !11)
!2986 = !DILocation(line: 121, column: 23, scope: !2979)
!2987 = !DILocation(line: 121, column: 37, scope: !2979)
!2988 = !DILocation(line: 121, column: 53, scope: !2979)
!2989 = !DILocation(line: 122, column: 34, scope: !2979)
!2990 = !DILocation(line: 122, column: 49, scope: !2979)
!2991 = !DILocation(line: 122, column: 14, scope: !2979)
!2992 = !DILocation(line: 123, column: 2, scope: !2979)
!2993 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17h86acb02421f1b154E", scope: !2995, file: !2994, line: 379, type: !2999, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4)
!2994 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/string.rs", directory: "", checksumkind: CSK_MD5, checksum: "6e72f4c70a64aa2b17dc14952632c4d9")
!2995 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !2996, file: !2, size: 192, align: 64, elements: !2997, templateParams: !4, identifier: "96eaa147e4cb6ee42e5dcd78906547cd")
!2996 = !DINamespace(name: "string", scope: !354)
!2997 = !{!2998}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2995, file: !2, baseType: !395, size: 192, align: 64)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!2995}
!3001 = !DILocation(line: 380, column: 23, scope: !2993)
!3002 = !DILocation(line: 380, column: 9, scope: !2993)
!3003 = !DILocation(line: 381, column: 6, scope: !2993)
!3004 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17hb4f4780068992a9bE", scope: !2995, file: !2994, line: 840, type: !3005, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3008)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{null, !3007, !220}
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut String", baseType: !2995, size: 64, align: 64, dwarfAddressSpace: 0)
!3008 = !{!3009, !3010}
!3009 = !DILocalVariable(name: "self", arg: 1, scope: !3004, file: !2994, line: 840, type: !3007)
!3010 = !DILocalVariable(name: "string", arg: 2, scope: !3004, file: !2994, line: 840, type: !220)
!3011 = !DILocation(line: 840, column: 21, scope: !3004)
!3012 = !DILocation(line: 840, column: 32, scope: !3004)
!3013 = !DILocation(line: 841, column: 9, scope: !3004)
!3014 = !DILocalVariable(name: "self", arg: 1, scope: !3015, file: !3016, line: 235, type: !220)
!3015 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h965286b1f8aa9597E", scope: !3017, file: !3016, line: 235, type: !3018, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3020)
!3016 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b7b520611187314acaad1212020f8f10")
!3017 = !DINamespace(name: "{impl#0}", scope: !7)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!210, !220}
!3020 = !{!3014}
!3021 = !DILocation(line: 235, column: 27, scope: !3015, inlinedAt: !3022)
!3022 = distinct !DILocation(line: 841, column: 36, scope: !3004)
!3023 = !DILocation(line: 237, column: 18, scope: !3015, inlinedAt: !3022)
!3024 = !DILocation(line: 238, column: 6, scope: !3015, inlinedAt: !3022)
!3025 = !DILocation(line: 841, column: 36, scope: !3004)
!3026 = !DILocation(line: 842, column: 6, scope: !3004)
!3027 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h76e86e4ca8d90673E", scope: !399, file: !3028, line: 546, type: !3029, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3031)
!3028 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "af779b5d8a9b5b87b5f2ee679bd752ec")
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!487, !11}
!3031 = !{!3032}
!3032 = !DILocalVariable(name: "alloc_size", arg: 1, scope: !3027, file: !3028, line: 546, type: !11)
!3033 = !DILocation(line: 546, column: 16, scope: !3027)
!3034 = !DILocation(line: 547, column: 8, scope: !3027)
!3035 = !DILocation(line: 550, column: 9, scope: !3027)
!3036 = !DILocation(line: 547, column: 5, scope: !3027)
!3037 = !DILocation(line: 548, column: 13, scope: !3027)
!3038 = !DILocation(line: 548, column: 9, scope: !3027)
!3039 = !DILocation(line: 552, column: 2, scope: !3027)
!3040 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h7e3762d17e93e098E", scope: !399, file: !3028, line: 489, type: !3041, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3086, retainedNodes: !3060)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!527, !620, !3043, !3059}
!3043 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !14, file: !2, size: 192, align: 64, elements: !3044, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9")
!3044 = !{!3045}
!3045 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 192, align: 64, elements: !3046, templateParams: !3049, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9_variant_part", discriminator: !709)
!3046 = !{!3047, !3055}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3045, file: !2, baseType: !3048, size: 192, align: 64, extraData: i64 0)
!3048 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3043, file: !2, size: 192, align: 64, elements: !4, templateParams: !3049, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9::None")
!3049 = !{!3050}
!3050 = !DITemplateTypeParameter(name: "T", type: !3051)
!3051 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !3052, templateParams: !4, identifier: "3fe1073d7ca6ffbfe47dfea13e45e84e")
!3052 = !{!3053, !3054}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3051, file: !2, baseType: !334, size: 64, align: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3051, file: !2, baseType: !370, size: 128, align: 64, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3045, file: !2, baseType: !3056, size: 192, align: 64)
!3056 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3043, file: !2, size: 192, align: 64, elements: !3057, templateParams: !3049, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9::Some")
!3057 = !{!3058}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3056, file: !2, baseType: !3051, size: 192, align: 64)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Global", baseType: !404, size: 64, align: 64, dwarfAddressSpace: 0)
!3060 = !{!3061, !3062, !3063, !3064, !3066, !3068, !3070, !3072, !3074, !3076, !3078, !3079, !3082, !3083}
!3061 = !DILocalVariable(name: "new_layout", arg: 1, scope: !3040, file: !3028, line: 490, type: !620)
!3062 = !DILocalVariable(name: "current_memory", arg: 2, scope: !3040, file: !3028, line: 491, type: !3043)
!3063 = !DILocalVariable(name: "alloc", arg: 3, scope: !3040, file: !3028, line: 492, type: !3059)
!3064 = !DILocalVariable(name: "new_layout", scope: !3065, file: !3028, line: 498, type: !370, align: 8)
!3065 = distinct !DILexicalBlock(scope: !3040, file: !3028, line: 498, column: 5)
!3066 = !DILocalVariable(name: "residual", scope: !3067, file: !3028, line: 498, type: !502, align: 8)
!3067 = distinct !DILexicalBlock(scope: !3040, file: !3028, line: 498, column: 62)
!3068 = !DILocalVariable(name: "val", scope: !3069, file: !3028, line: 498, type: !370, align: 8)
!3069 = distinct !DILexicalBlock(scope: !3040, file: !3028, line: 498, column: 22)
!3070 = !DILocalVariable(name: "residual", scope: !3071, file: !3028, line: 500, type: !597, align: 8)
!3071 = distinct !DILexicalBlock(scope: !3065, file: !3028, line: 500, column: 35)
!3072 = !DILocalVariable(name: "val", scope: !3073, file: !3028, line: 500, type: !35, align: 1)
!3073 = distinct !DILexicalBlock(scope: !3065, file: !3028, line: 500, column: 5)
!3074 = !DILocalVariable(name: "memory", scope: !3075, file: !3028, line: 502, type: !434, align: 8)
!3075 = distinct !DILexicalBlock(scope: !3065, file: !3028, line: 502, column: 5)
!3076 = !DILocalVariable(name: "ptr", scope: !3077, file: !3028, line: 502, type: !334, align: 8)
!3077 = distinct !DILexicalBlock(scope: !3065, file: !3028, line: 502, column: 25)
!3078 = !DILocalVariable(name: "old_layout", scope: !3077, file: !3028, line: 502, type: !370, align: 8)
!3079 = !DILocalVariable(name: "left_val", scope: !3080, file: !3028, line: 503, type: !45, align: 8)
!3080 = !DILexicalBlockFile(scope: !3081, file: !3028, discriminator: 0)
!3081 = distinct !DILexicalBlock(scope: !3065, file: !1880, line: 38, column: 13)
!3082 = !DILocalVariable(name: "right_val", scope: !3080, file: !3028, line: 503, type: !45, align: 8)
!3083 = !DILocalVariable(name: "kind", scope: !3084, file: !3028, line: 503, type: !94, align: 1)
!3084 = !DILexicalBlockFile(scope: !3085, file: !3028, discriminator: 0)
!3085 = distinct !DILexicalBlock(scope: !3081, file: !1880, line: 40, column: 21)
!3086 = !{!407}
!3087 = !DILocation(line: 490, column: 5, scope: !3040)
!3088 = !DILocation(line: 491, column: 5, scope: !3040)
!3089 = !DILocation(line: 492, column: 5, scope: !3040)
!3090 = !DILocation(line: 498, column: 9, scope: !3065)
!3091 = !DILocation(line: 500, column: 5, scope: !3073)
!3092 = !DILocation(line: 502, column: 9, scope: !3075)
!3093 = !DILocation(line: 502, column: 36, scope: !3077)
!3094 = !DILocation(line: 498, column: 22, scope: !3040)
!3095 = !DILocation(line: 498, column: 22, scope: !3069)
!3096 = !DILocation(line: 500, column: 17, scope: !3065)
!3097 = !DILocation(line: 498, column: 62, scope: !3040)
!3098 = !DILocation(line: 498, column: 62, scope: !3067)
!3099 = !DILocation(line: 498, column: 22, scope: !3067)
!3100 = !DILocation(line: 1, column: 1, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !3040, file: !1777, discriminator: 0)
!3102 = !DILocation(line: 514, column: 2, scope: !3040)
!3103 = !DILocation(line: 500, column: 5, scope: !3065)
!3104 = !DILocation(line: 502, column: 25, scope: !3065)
!3105 = !DILocation(line: 500, column: 35, scope: !3065)
!3106 = !DILocation(line: 500, column: 35, scope: !3071)
!3107 = !DILocation(line: 500, column: 5, scope: !3071)
!3108 = !DILocation(line: 1, column: 1, scope: !3109)
!3109 = !DILexicalBlockFile(scope: !3065, file: !1777, discriminator: 0)
!3110 = !DILocation(line: 502, column: 31, scope: !3065)
!3111 = !DILocation(line: 502, column: 31, scope: !3077)
!3112 = !DILocation(line: 502, column: 36, scope: !3065)
!3113 = !DILocation(line: 506, column: 32, scope: !3065)
!3114 = !DILocation(line: 510, column: 24, scope: !3065)
!3115 = !DILocation(line: 510, column: 9, scope: !3065)
!3116 = !DILocation(line: 502, column: 18, scope: !3065)
!3117 = !DILocation(line: 513, column: 5, scope: !3075)
!3118 = !DILocation(line: 513, column: 20, scope: !3075)
!3119 = !DILocation(line: 506, column: 54, scope: !3065)
!3120 = !DILocation(line: 506, column: 13, scope: !3065)
!3121 = !DILocation(line: 507, column: 29, scope: !3065)
!3122 = !DILocation(line: 507, column: 41, scope: !3065)
!3123 = !DILocation(line: 507, column: 13, scope: !3065)
!3124 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h29083cc2a5f7d6fdE", scope: !2553, file: !3028, line: 513, type: !3125, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3086, retainedNodes: !3127)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!357, !2552, !453}
!3127 = !{!3128, !3129}
!3128 = !DILocalVariable(name: "new_layout", scope: !3124, file: !3028, line: 498, type: !370, align: 8)
!3129 = !DILocalVariable(arg: 2, scope: !3124, file: !3028, line: 513, type: !453)
!3130 = !DILocation(line: 498, column: 9, scope: !3124)
!3131 = !DILocation(line: 513, column: 21, scope: !3124)
!3132 = !DILocation(line: 513, column: 45, scope: !3124)
!3133 = !DILocation(line: 513, column: 24, scope: !3124)
!3134 = !DILocation(line: 513, column: 84, scope: !3124)
!3135 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hd783327bfb176413E", scope: !2553, file: !3028, line: 498, type: !3136, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3086, retainedNodes: !3138)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!360, !2595, !39}
!3138 = !{!3139, !3140}
!3139 = !DILocalVariable(arg: 1, scope: !3135, file: !3028, line: 498, type: !2595)
!3140 = !DILocalVariable(arg: 2, scope: !3135, file: !3028, line: 498, type: !39)
!3141 = !DILocation(line: 498, column: 41, scope: !3135)
!3142 = !DILocation(line: 498, column: 42, scope: !3135)
!3143 = !DILocation(line: 498, column: 45, scope: !3135)
!3144 = !DILocation(line: 498, column: 61, scope: !3135)
!3145 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17haac1436dcf7a5c86E", scope: !399, file: !3028, line: 528, type: !3146, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3148)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{null, !487}
!3148 = !{!3149, !3150}
!3149 = !DILocalVariable(name: "result", arg: 1, scope: !3145, file: !3028, line: 528, type: !487)
!3150 = !DILocalVariable(name: "layout", scope: !3151, file: !3028, line: 531, type: !370, align: 8)
!3151 = distinct !DILexicalBlock(scope: !3145, file: !3028, line: 531, column: 9)
!3152 = !DILocation(line: 528, column: 19, scope: !3145)
!3153 = !DILocation(line: 529, column: 11, scope: !3145)
!3154 = !DILocation(line: 529, column: 5, scope: !3145)
!3155 = !DILocation(line: 534, column: 2, scope: !3145)
!3156 = !DILocation(line: 530, column: 34, scope: !3145)
!3157 = !DILocation(line: 531, column: 26, scope: !3145)
!3158 = !DILocation(line: 531, column: 26, scope: !3151)
!3159 = !DILocation(line: 531, column: 43, scope: !3151)
!3160 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hd123aeda357833bdE", scope: !2524, file: !3028, line: 529, type: !3161, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3163)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!360, !2523, !357}
!3163 = !{!3164, !3165}
!3164 = !DILocalVariable(name: "e", arg: 2, scope: !3160, file: !3028, line: 529, type: !357)
!3165 = !DILocalVariable(arg: 1, scope: !3160, file: !3028, line: 529, type: !2523)
!3166 = !DILocation(line: 529, column: 26, scope: !3160)
!3167 = !DILocation(line: 529, column: 27, scope: !3160)
!3168 = !DILocation(line: 529, column: 30, scope: !3160)
!3169 = !DILocation(line: 529, column: 38, scope: !3160)
!3170 = distinct !DISubprogram(name: "needs_to_grow<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h6ea77e83982143b4E", scope: !398, file: !3028, line: 401, type: !3171, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3174)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{!67, !3173, !11, !11}
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&RawVec<u8, alloc::alloc::Global>", baseType: !398, size: 64, align: 64, dwarfAddressSpace: 0)
!3174 = !{!3175, !3176, !3177}
!3175 = !DILocalVariable(name: "self", arg: 1, scope: !3170, file: !3028, line: 401, type: !3173)
!3176 = !DILocalVariable(name: "len", arg: 2, scope: !3170, file: !3028, line: 401, type: !11)
!3177 = !DILocalVariable(name: "additional", arg: 3, scope: !3170, file: !3028, line: 401, type: !11)
!3178 = !DILocation(line: 401, column: 22, scope: !3170)
!3179 = !DILocation(line: 401, column: 29, scope: !3170)
!3180 = !DILocation(line: 401, column: 41, scope: !3170)
!3181 = !DILocalVariable(name: "self", arg: 1, scope: !3182, file: !3028, line: 247, type: !3173)
!3182 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hf7cec9bb51b61c19E", scope: !398, file: !3028, line: 247, type: !3183, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3185)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!11, !3173}
!3185 = !{!3181}
!3186 = !DILocation(line: 247, column: 21, scope: !3182, inlinedAt: !3187)
!3187 = distinct !DILocation(line: 402, column: 22, scope: !3170)
!3188 = !DILocation(line: 248, column: 59, scope: !3182, inlinedAt: !3187)
!3189 = !DILocation(line: 249, column: 6, scope: !3182, inlinedAt: !3187)
!3190 = !DILocation(line: 402, column: 22, scope: !3170)
!3191 = !DILocation(line: 1133, column: 35, scope: !1806, inlinedAt: !3192)
!3192 = distinct !DILocation(line: 402, column: 22, scope: !3170)
!3193 = !DILocation(line: 1133, column: 41, scope: !1806, inlinedAt: !3192)
!3194 = !DILocation(line: 1134, column: 13, scope: !1806, inlinedAt: !3192)
!3195 = !DILocation(line: 402, column: 9, scope: !3170)
!3196 = !DILocation(line: 403, column: 6, scope: !3170)
!3197 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hc35b9c18fdd642c2E", scope: !398, file: !3028, line: 256, type: !3198, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3200)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!3043, !3173}
!3200 = !{!3201, !3202, !3204, !3206}
!3201 = !DILocalVariable(name: "self", arg: 1, scope: !3197, file: !3028, line: 256, type: !3173)
!3202 = !DILocalVariable(name: "align", scope: !3203, file: !3028, line: 263, type: !11, align: 8)
!3203 = distinct !DILexicalBlock(scope: !3197, file: !3028, line: 263, column: 17)
!3204 = !DILocalVariable(name: "size", scope: !3205, file: !3028, line: 264, type: !11, align: 8)
!3205 = distinct !DILexicalBlock(scope: !3203, file: !3028, line: 264, column: 17)
!3206 = !DILocalVariable(name: "layout", scope: !3207, file: !3028, line: 265, type: !370, align: 8)
!3207 = distinct !DILexicalBlock(scope: !3205, file: !3028, line: 265, column: 17)
!3208 = !DILocation(line: 256, column: 23, scope: !3197)
!3209 = !DILocation(line: 257, column: 12, scope: !3197)
!3210 = !DILocation(line: 257, column: 40, scope: !3197)
!3211 = !DILocation(line: 448, column: 5, scope: !1719, inlinedAt: !3212)
!3212 = distinct !DILocation(line: 263, column: 29, scope: !3197)
!3213 = !DILocation(line: 263, column: 29, scope: !3197)
!3214 = !DILocation(line: 263, column: 21, scope: !3203)
!3215 = !DILocation(line: 258, column: 13, scope: !3197)
!3216 = !DILocation(line: 257, column: 9, scope: !3197)
!3217 = !DILocation(line: 269, column: 6, scope: !3197)
!3218 = !DILocation(line: 264, column: 28, scope: !3203)
!3219 = !DILocation(line: 264, column: 50, scope: !3203)
!3220 = !DILocation(line: 264, column: 21, scope: !3205)
!3221 = !DILocation(line: 265, column: 30, scope: !3205)
!3222 = !DILocation(line: 265, column: 21, scope: !3207)
!3223 = !DILocation(line: 266, column: 23, scope: !3207)
!3224 = !DILocation(line: 266, column: 22, scope: !3207)
!3225 = !DILocation(line: 266, column: 17, scope: !3207)
!3226 = distinct !DISubprogram(name: "grow_amortized<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h5e6971fe7a7770e5E", scope: !398, file: !3028, line: 422, type: !3227, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3230)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!487, !3229, !11, !11}
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut RawVec<u8, alloc::alloc::Global>", baseType: !398, size: 64, align: 64, dwarfAddressSpace: 0)
!3230 = !{!3231, !3232, !3233, !3234, !3236, !3238, !3240, !3242, !3244, !3246, !3248, !3250}
!3231 = !DILocalVariable(name: "self", arg: 1, scope: !3226, file: !3028, line: 422, type: !3229)
!3232 = !DILocalVariable(name: "len", arg: 2, scope: !3226, file: !3028, line: 422, type: !11)
!3233 = !DILocalVariable(name: "additional", arg: 3, scope: !3226, file: !3028, line: 422, type: !11)
!3234 = !DILocalVariable(name: "required_cap", scope: !3235, file: !3028, line: 433, type: !11, align: 8)
!3235 = distinct !DILexicalBlock(scope: !3226, file: !3028, line: 433, column: 9)
!3236 = !DILocalVariable(name: "residual", scope: !3237, file: !3028, line: 433, type: !502, align: 8)
!3237 = distinct !DILexicalBlock(scope: !3226, file: !3028, line: 433, column: 79)
!3238 = !DILocalVariable(name: "val", scope: !3239, file: !3028, line: 433, type: !11, align: 8)
!3239 = distinct !DILexicalBlock(scope: !3226, file: !3028, line: 433, column: 28)
!3240 = !DILocalVariable(name: "cap", scope: !3241, file: !3028, line: 437, type: !11, align: 8)
!3241 = distinct !DILexicalBlock(scope: !3235, file: !3028, line: 437, column: 9)
!3242 = !DILocalVariable(name: "cap", scope: !3243, file: !3028, line: 438, type: !11, align: 8)
!3243 = distinct !DILexicalBlock(scope: !3241, file: !3028, line: 438, column: 9)
!3244 = !DILocalVariable(name: "new_layout", scope: !3245, file: !3028, line: 440, type: !620, align: 8)
!3245 = distinct !DILexicalBlock(scope: !3243, file: !3028, line: 440, column: 9)
!3246 = !DILocalVariable(name: "ptr", scope: !3247, file: !3028, line: 443, type: !442, align: 8)
!3247 = distinct !DILexicalBlock(scope: !3245, file: !3028, line: 443, column: 9)
!3248 = !DILocalVariable(name: "residual", scope: !3249, file: !3028, line: 443, type: !597, align: 8)
!3249 = distinct !DILexicalBlock(scope: !3245, file: !3028, line: 443, column: 82)
!3250 = !DILocalVariable(name: "val", scope: !3251, file: !3028, line: 443, type: !442, align: 8)
!3251 = distinct !DILexicalBlock(scope: !3245, file: !3028, line: 443, column: 19)
!3252 = !DILocation(line: 422, column: 23, scope: !3226)
!3253 = !DILocation(line: 422, column: 34, scope: !3226)
!3254 = !DILocation(line: 422, column: 46, scope: !3226)
!3255 = !DILocation(line: 426, column: 12, scope: !3226)
!3256 = !DILocation(line: 429, column: 24, scope: !3226)
!3257 = !DILocation(line: 433, column: 28, scope: !3226)
!3258 = !DILocation(line: 433, column: 62, scope: !3226)
!3259 = !DILocation(line: 433, column: 28, scope: !3239)
!3260 = !DILocation(line: 433, column: 13, scope: !3235)
!3261 = !DILocation(line: 437, column: 28, scope: !3235)
!3262 = !DILocation(line: 437, column: 19, scope: !3235)
!3263 = !DILocation(line: 437, column: 13, scope: !3241)
!3264 = !DILocation(line: 433, column: 79, scope: !3226)
!3265 = !DILocation(line: 433, column: 79, scope: !3237)
!3266 = !DILocation(line: 433, column: 28, scope: !3237)
!3267 = !DILocation(line: 1, column: 1, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3226, file: !1777, discriminator: 0)
!3269 = !DILocation(line: 438, column: 19, scope: !3241)
!3270 = !DILocation(line: 438, column: 13, scope: !3243)
!3271 = !DILocation(line: 440, column: 26, scope: !3243)
!3272 = !DILocation(line: 440, column: 13, scope: !3245)
!3273 = !DILocation(line: 443, column: 43, scope: !3245)
!3274 = !DILocation(line: 443, column: 66, scope: !3245)
!3275 = !DILocation(line: 443, column: 19, scope: !3245)
!3276 = !DILocation(line: 443, column: 19, scope: !3251)
!3277 = !DILocation(line: 443, column: 13, scope: !3247)
!3278 = !DILocation(line: 444, column: 9, scope: !3247)
!3279 = !DILocation(line: 443, column: 82, scope: !3245)
!3280 = !DILocation(line: 443, column: 82, scope: !3249)
!3281 = !DILocation(line: 443, column: 19, scope: !3249)
!3282 = !DILocation(line: 1, column: 1, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3235, file: !1777, discriminator: 0)
!3284 = !DILocation(line: 446, column: 6, scope: !3226)
!3285 = !DILocation(line: 445, column: 9, scope: !3247)
!3286 = !DILocation(line: 429, column: 20, scope: !3226)
!3287 = distinct !DISubprogram(name: "capacity_from_bytes<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hf4e51fe44a6d771bE", scope: !398, file: !3028, line: 405, type: !3288, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!11, !11}
!3290 = !{!3291, !3292, !3295, !3296}
!3291 = !DILocalVariable(name: "excess", arg: 1, scope: !3287, file: !3028, line: 405, type: !11)
!3292 = !DILocalVariable(name: "left_val", scope: !3293, file: !3028, line: 406, type: !45, align: 8)
!3293 = !DILexicalBlockFile(scope: !3294, file: !3028, discriminator: 0)
!3294 = distinct !DILexicalBlock(scope: !3287, file: !1880, line: 87, column: 13)
!3295 = !DILocalVariable(name: "right_val", scope: !3293, file: !3028, line: 406, type: !45, align: 8)
!3296 = !DILocalVariable(name: "kind", scope: !3297, file: !3028, line: 406, type: !94, align: 1)
!3297 = !DILexicalBlockFile(scope: !3298, file: !3028, discriminator: 0)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !1880, line: 89, column: 21)
!3299 = !DILocation(line: 405, column: 28, scope: !3287)
!3300 = !DILocation(line: 407, column: 18, scope: !3287)
!3301 = !DILocation(line: 407, column: 9, scope: !3287)
!3302 = !DILocation(line: 408, column: 6, scope: !3287)
!3303 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf1183ce48bc9b222E", scope: !398, file: !3028, line: 239, type: !3304, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3306)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!178, !3173}
!3306 = !{!3307}
!3307 = !DILocalVariable(name: "self", arg: 1, scope: !3303, file: !3028, line: 239, type: !3173)
!3308 = !DILocation(line: 239, column: 16, scope: !3303)
!3309 = !DILocation(line: 240, column: 9, scope: !3303)
!3310 = !DILocation(line: 241, column: 6, scope: !3303)
!3311 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h73529b1a11a28a37E", scope: !398, file: !3028, line: 323, type: !3312, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3314)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{null, !3229, !11, !11}
!3314 = !{!3315, !3316, !3317}
!3315 = !DILocalVariable(name: "self", arg: 1, scope: !3311, file: !3028, line: 323, type: !3229)
!3316 = !DILocalVariable(name: "len", arg: 2, scope: !3311, file: !3028, line: 323, type: !11)
!3317 = !DILocalVariable(name: "additional", arg: 3, scope: !3311, file: !3028, line: 323, type: !11)
!3318 = !DILocation(line: 323, column: 20, scope: !3311)
!3319 = !DILocation(line: 323, column: 31, scope: !3311)
!3320 = !DILocation(line: 323, column: 43, scope: !3311)
!3321 = !DILocation(line: 337, column: 12, scope: !3311)
!3322 = !DILocation(line: 340, column: 6, scope: !3311)
!3323 = !DILocation(line: 338, column: 13, scope: !3311)
!3324 = !DILocation(line: 337, column: 9, scope: !3311)
!3325 = distinct !DISubprogram(name: "do_reserve_and_handle<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h7cfa440340ad8c7aE", scope: !3326, file: !3028, line: 329, type: !3312, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3328)
!3326 = !DINamespace(name: "reserve", scope: !3327)
!3327 = !DINamespace(name: "{impl#1}", scope: !399)
!3328 = !{!3329, !3330, !3331}
!3329 = !DILocalVariable(name: "slf", arg: 1, scope: !3325, file: !3028, line: 330, type: !3229)
!3330 = !DILocalVariable(name: "len", arg: 2, scope: !3325, file: !3028, line: 331, type: !11)
!3331 = !DILocalVariable(name: "additional", arg: 3, scope: !3325, file: !3028, line: 332, type: !11)
!3332 = !DILocation(line: 330, column: 13, scope: !3325)
!3333 = !DILocation(line: 331, column: 13, scope: !3325)
!3334 = !DILocation(line: 332, column: 13, scope: !3325)
!3335 = !DILocation(line: 334, column: 28, scope: !3325)
!3336 = !DILocation(line: 334, column: 13, scope: !3325)
!3337 = !DILocation(line: 335, column: 10, scope: !3325)
!3338 = distinct !DISubprogram(name: "set_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17he29706b1362af101E", scope: !398, file: !3028, line: 410, type: !3339, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !406, retainedNodes: !3341)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{null, !3229, !442}
!3341 = !{!3342, !3343}
!3342 = !DILocalVariable(name: "self", arg: 1, scope: !3338, file: !3028, line: 410, type: !3229)
!3343 = !DILocalVariable(name: "ptr", arg: 2, scope: !3338, file: !3028, line: 410, type: !442)
!3344 = !DILocation(line: 410, column: 16, scope: !3338)
!3345 = !DILocation(line: 410, column: 27, scope: !3338)
!3346 = !DILocation(line: 411, column: 51, scope: !3338)
!3347 = !DILocation(line: 411, column: 29, scope: !3338)
!3348 = !DILocation(line: 411, column: 9, scope: !3338)
!3349 = !DILocation(line: 412, column: 46, scope: !3338)
!3350 = !DILocation(line: 412, column: 20, scope: !3338)
!3351 = !DILocation(line: 412, column: 9, scope: !3338)
!3352 = !DILocation(line: 413, column: 6, scope: !3338)
!3353 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h62f91d88f08779feE", scope: !3355, file: !3354, line: 243, type: !3358, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3362, retainedNodes: !3360)
!3354 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "46be48ef08ae744b2af0ec194db882b2")
!3355 = !DINamespace(name: "{impl#0}", scope: !3356)
!3356 = !DINamespace(name: "collect", scope: !3357)
!3357 = !DINamespace(name: "traits", scope: !800)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!119, !119}
!3360 = !{!3361}
!3361 = !DILocalVariable(name: "self", arg: 1, scope: !3353, file: !3354, line: 243, type: !119)
!3362 = !{!1982}
!3363 = !DILocation(line: 243, column: 18, scope: !3353)
!3364 = !DILocation(line: 245, column: 6, scope: !3353)
!3365 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h958b856d17a62832E", scope: !3366, file: !2803, line: 235, type: !3367, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3369)
!3366 = !DINamespace(name: "{impl#1}", scope: !405)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{null, !2824, !334, !370}
!3369 = !{!3370, !3371, !3372}
!3370 = !DILocalVariable(name: "self", arg: 1, scope: !3365, file: !2803, line: 235, type: !2824)
!3371 = !DILocalVariable(name: "ptr", arg: 2, scope: !3365, file: !2803, line: 235, type: !334)
!3372 = !DILocalVariable(name: "layout", arg: 3, scope: !3365, file: !2803, line: 235, type: !370)
!3373 = !DILocation(line: 235, column: 26, scope: !3365)
!3374 = !DILocation(line: 235, column: 33, scope: !3365)
!3375 = !DILocation(line: 235, column: 51, scope: !3365)
!3376 = !DILocation(line: 236, column: 12, scope: !3365)
!3377 = !DILocation(line: 236, column: 9, scope: !3365)
!3378 = !DILocation(line: 239, column: 30, scope: !3365)
!3379 = !DILocation(line: 239, column: 44, scope: !3365)
!3380 = !DILocation(line: 239, column: 22, scope: !3365)
!3381 = !DILocation(line: 241, column: 6, scope: !3365)
!3382 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h143895933a07d858E", scope: !3366, file: !2803, line: 244, type: !3383, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3385)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!434, !2824, !334, !370, !370}
!3385 = !{!3386, !3387, !3388, !3389}
!3386 = !DILocalVariable(name: "self", arg: 1, scope: !3382, file: !2803, line: 245, type: !2824)
!3387 = !DILocalVariable(name: "ptr", arg: 2, scope: !3382, file: !2803, line: 246, type: !334)
!3388 = !DILocalVariable(name: "old_layout", arg: 3, scope: !3382, file: !2803, line: 247, type: !370)
!3389 = !DILocalVariable(name: "new_layout", arg: 4, scope: !3382, file: !2803, line: 248, type: !370)
!3390 = !DILocation(line: 245, column: 9, scope: !3382)
!3391 = !DILocation(line: 246, column: 9, scope: !3382)
!3392 = !DILocation(line: 247, column: 9, scope: !3382)
!3393 = !DILocation(line: 248, column: 9, scope: !3382)
!3394 = !DILocation(line: 251, column: 18, scope: !3382)
!3395 = !DILocation(line: 252, column: 6, scope: !3382)
!3396 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h94e492fd0d60c6c6E", scope: !3366, file: !2803, line: 225, type: !3397, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3399)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!434, !2824, !370}
!3399 = !{!3400, !3401}
!3400 = !DILocalVariable(name: "self", arg: 1, scope: !3396, file: !2803, line: 225, type: !2824)
!3401 = !DILocalVariable(name: "layout", arg: 2, scope: !3396, file: !2803, line: 225, type: !370)
!3402 = !DILocation(line: 225, column: 17, scope: !3396)
!3403 = !DILocation(line: 225, column: 24, scope: !3396)
!3404 = !DILocation(line: 226, column: 9, scope: !3396)
!3405 = !DILocation(line: 227, column: 6, scope: !3396)
!3406 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h3b4371900ece6238E", scope: !3407, file: !1710, line: 30, type: !1727, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3408)
!3407 = !DINamespace(name: "{impl#3}", scope: !40)
!3408 = !{!3409}
!3409 = !DILocalVariable(name: "self", arg: 1, scope: !3406, file: !1710, line: 30, type: !1729)
!3410 = !DILocation(line: 30, column: 16, scope: !3406)
!3411 = !DILocation(line: 30, column: 21, scope: !3406)
!3412 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h2366f127084da3c7E", scope: !3413, file: !351, line: 79, type: !3414, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3417)
!3413 = !DINamespace(name: "{impl#10}", scope: !353)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!360, !3416}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&TryReserveErrorKind", baseType: !360, size: 64, align: 64, dwarfAddressSpace: 0)
!3417 = !{!3418, !3419, !3421}
!3418 = !DILocalVariable(name: "self", arg: 1, scope: !3412, file: !351, line: 79, type: !3416)
!3419 = !DILocalVariable(name: "__self_0", scope: !3420, file: !351, line: 93, type: !1729, align: 8)
!3420 = distinct !DILexicalBlock(scope: !3412, file: !351, line: 79, column: 10)
!3421 = !DILocalVariable(name: "__self_1", scope: !3420, file: !351, line: 104, type: !2045, align: 8)
!3422 = !DILocation(line: 79, column: 10, scope: !3412)
!3423 = !DILocation(line: 93, column: 9, scope: !3412)
!3424 = !DILocation(line: 93, column: 9, scope: !3420)
!3425 = !DILocation(line: 104, column: 9, scope: !3412)
!3426 = !DILocation(line: 104, column: 9, scope: !3420)
!3427 = !DILocation(line: 79, column: 10, scope: !3420)
!3428 = !DILocation(line: 79, column: 14, scope: !3412)
!3429 = !DILocation(line: 79, column: 15, scope: !3412)
!3430 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1cd7a44d34d49feeE", scope: !3431, file: !430, line: 1902, type: !3432, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !535, retainedNodes: !3450)
!3431 = !DINamespace(name: "{impl#36}", scope: !74)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!3434, !527}
!3434 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !101, file: !2, size: 192, align: 64, elements: !3435, identifier: "4f55b3b4872357f9cfcb8e183921969b")
!3435 = !{!3436}
!3436 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 192, align: 64, elements: !3437, templateParams: !3442, identifier: "4f55b3b4872357f9cfcb8e183921969b_variant_part", discriminator: !3449)
!3437 = !{!3438, !3445}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3436, file: !2, baseType: !3439, size: 192, align: 64, extraData: i64 0)
!3439 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3434, file: !2, size: 192, align: 64, elements: !3440, templateParams: !3442, identifier: "4f55b3b4872357f9cfcb8e183921969b::Continue")
!3440 = !{!3441}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3439, file: !2, baseType: !442, size: 128, align: 64, offset: 64)
!3442 = !{!3443, !3444}
!3443 = !DITemplateTypeParameter(name: "B", type: !597)
!3444 = !DITemplateTypeParameter(name: "C", type: !442)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3436, file: !2, baseType: !3446, size: 192, align: 64, extraData: i64 1)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3434, file: !2, size: 192, align: 64, elements: !3447, templateParams: !3442, identifier: "4f55b3b4872357f9cfcb8e183921969b::Break")
!3447 = !{!3448}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3446, file: !2, baseType: !597, size: 128, align: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, scope: !101, file: !2, baseType: !381, size: 64, align: 64, flags: DIFlagArtificial)
!3450 = !{!3451, !3452, !3454}
!3451 = !DILocalVariable(name: "self", arg: 1, scope: !3430, file: !430, line: 1902, type: !527)
!3452 = !DILocalVariable(name: "v", scope: !3453, file: !430, line: 1904, type: !442, align: 8)
!3453 = distinct !DILexicalBlock(scope: !3430, file: !430, line: 1904, column: 13)
!3454 = !DILocalVariable(name: "e", scope: !3455, file: !430, line: 1905, type: !357, align: 8)
!3455 = distinct !DILexicalBlock(scope: !3430, file: !430, line: 1905, column: 13)
!3456 = !DILocation(line: 1902, column: 15, scope: !3430)
!3457 = !DILocation(line: 1903, column: 15, scope: !3430)
!3458 = !DILocation(line: 1903, column: 9, scope: !3430)
!3459 = !DILocation(line: 1904, column: 16, scope: !3430)
!3460 = !DILocation(line: 1904, column: 16, scope: !3453)
!3461 = !DILocation(line: 1904, column: 22, scope: !3453)
!3462 = !DILocation(line: 1904, column: 45, scope: !3430)
!3463 = !DILocation(line: 1905, column: 17, scope: !3430)
!3464 = !DILocation(line: 1905, column: 17, scope: !3455)
!3465 = !DILocation(line: 1905, column: 42, scope: !3455)
!3466 = !DILocation(line: 1905, column: 23, scope: !3455)
!3467 = !DILocation(line: 1905, column: 48, scope: !3430)
!3468 = !DILocation(line: 1907, column: 6, scope: !3430)
!3469 = distinct !DISubprogram(name: "branch<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3787c517dd758825E", scope: !3431, file: !430, line: 1902, type: !3470, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !566, retainedNodes: !3488)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!3472, !554}
!3472 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", scope: !101, file: !2, size: 192, align: 64, elements: !3473, identifier: "c4d497dd31886320b9bdf21802754aec")
!3473 = !{!3474}
!3474 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 192, align: 64, elements: !3475, templateParams: !3480, identifier: "c4d497dd31886320b9bdf21802754aec_variant_part", discriminator: !3487)
!3475 = !{!3476, !3483}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3474, file: !2, baseType: !3477, size: 192, align: 64)
!3477 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3472, file: !2, size: 192, align: 64, elements: !3478, templateParams: !3480, identifier: "c4d497dd31886320b9bdf21802754aec::Continue")
!3478 = !{!3479}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3477, file: !2, baseType: !562, size: 192, align: 64)
!3480 = !{!3481, !3482}
!3481 = !DITemplateTypeParameter(name: "B", type: !574)
!3482 = !DITemplateTypeParameter(name: "C", type: !562)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3474, file: !2, baseType: !3484, size: 192, align: 64, extraData: i64 0)
!3484 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3472, file: !2, size: 192, align: 64, elements: !3485, templateParams: !3480, identifier: "c4d497dd31886320b9bdf21802754aec::Break")
!3485 = !{!3486}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3484, file: !2, baseType: !574, align: 8)
!3487 = !DIDerivedType(tag: DW_TAG_member, scope: !101, file: !2, baseType: !381, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!3488 = !{!3489, !3490, !3492}
!3489 = !DILocalVariable(name: "self", arg: 1, scope: !3469, file: !430, line: 1902, type: !554)
!3490 = !DILocalVariable(name: "v", scope: !3491, file: !430, line: 1904, type: !562, align: 8)
!3491 = distinct !DILexicalBlock(scope: !3469, file: !430, line: 1904, column: 13)
!3492 = !DILocalVariable(name: "e", scope: !3493, file: !430, line: 1905, type: !39, align: 1)
!3493 = distinct !DILexicalBlock(scope: !3469, file: !430, line: 1905, column: 13)
!3494 = !DILocation(line: 1902, column: 15, scope: !3469)
!3495 = !DILocation(line: 1904, column: 16, scope: !3491)
!3496 = !DILocation(line: 1905, column: 17, scope: !3493)
!3497 = !DILocation(line: 1903, column: 15, scope: !3469)
!3498 = !DILocation(line: 1903, column: 9, scope: !3469)
!3499 = !DILocation(line: 1904, column: 16, scope: !3469)
!3500 = !DILocation(line: 1904, column: 44, scope: !3491)
!3501 = !DILocation(line: 1904, column: 22, scope: !3491)
!3502 = !DILocation(line: 1904, column: 45, scope: !3469)
!3503 = !DILocation(line: 1905, column: 42, scope: !3493)
!3504 = !DILocation(line: 1905, column: 23, scope: !3493)
!3505 = !DILocation(line: 1905, column: 48, scope: !3469)
!3506 = !DILocation(line: 1907, column: 6, scope: !3469)
!3507 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h59a97845db608ecaE", scope: !3431, file: !430, line: 1902, type: !3508, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2270, retainedNodes: !3525)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{!3510, !2262}
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !101, file: !2, size: 192, align: 64, elements: !3511, identifier: "648424dd8317cc9ec53a377a5dcf09bf")
!3511 = !{!3512}
!3512 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 192, align: 64, elements: !3513, templateParams: !3518, identifier: "648424dd8317cc9ec53a377a5dcf09bf_variant_part", discriminator: !3449)
!3513 = !{!3514, !3521}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3512, file: !2, baseType: !3515, size: 192, align: 64, extraData: i64 0)
!3515 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3510, file: !2, size: 192, align: 64, elements: !3516, templateParams: !3518, identifier: "648424dd8317cc9ec53a377a5dcf09bf::Continue")
!3516 = !{!3517}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3515, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!3518 = !{!3519, !3520}
!3519 = !DITemplateTypeParameter(name: "B", type: !502)
!3520 = !DITemplateTypeParameter(name: "C", type: !11)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3512, file: !2, baseType: !3522, size: 192, align: 64, extraData: i64 1)
!3522 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3510, file: !2, size: 192, align: 64, elements: !3523, templateParams: !3518, identifier: "648424dd8317cc9ec53a377a5dcf09bf::Break")
!3523 = !{!3524}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3522, file: !2, baseType: !502, size: 128, align: 64, offset: 64)
!3525 = !{!3526, !3527, !3529}
!3526 = !DILocalVariable(name: "self", arg: 1, scope: !3507, file: !430, line: 1902, type: !2262)
!3527 = !DILocalVariable(name: "v", scope: !3528, file: !430, line: 1904, type: !11, align: 8)
!3528 = distinct !DILexicalBlock(scope: !3507, file: !430, line: 1904, column: 13)
!3529 = !DILocalVariable(name: "e", scope: !3530, file: !430, line: 1905, type: !360, align: 8)
!3530 = distinct !DILexicalBlock(scope: !3507, file: !430, line: 1905, column: 13)
!3531 = !DILocation(line: 1902, column: 15, scope: !3507)
!3532 = !DILocation(line: 1903, column: 15, scope: !3507)
!3533 = !DILocation(line: 1903, column: 9, scope: !3507)
!3534 = !DILocation(line: 1904, column: 16, scope: !3507)
!3535 = !DILocation(line: 1904, column: 16, scope: !3528)
!3536 = !DILocation(line: 1904, column: 22, scope: !3528)
!3537 = !DILocation(line: 1904, column: 45, scope: !3507)
!3538 = !DILocation(line: 1905, column: 17, scope: !3507)
!3539 = !DILocation(line: 1905, column: 17, scope: !3530)
!3540 = !DILocation(line: 1905, column: 42, scope: !3530)
!3541 = !DILocation(line: 1905, column: 23, scope: !3530)
!3542 = !DILocation(line: 1905, column: 48, scope: !3507)
!3543 = !DILocation(line: 1907, column: 6, scope: !3507)
!3544 = distinct !DISubprogram(name: "branch<(), core::fmt::Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6c99521caefd605eE", scope: !3431, file: !430, line: 1902, type: !3545, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3553, retainedNodes: !3547)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!100, !73}
!3547 = !{!3548, !3549, !3551}
!3548 = !DILocalVariable(name: "self", arg: 1, scope: !3544, file: !430, line: 1902, type: !73)
!3549 = !DILocalVariable(name: "v", scope: !3550, file: !430, line: 1904, type: !35, align: 1)
!3550 = distinct !DILexicalBlock(scope: !3544, file: !430, line: 1904, column: 13)
!3551 = !DILocalVariable(name: "e", scope: !3552, file: !430, line: 1905, type: !655, align: 1)
!3552 = distinct !DILexicalBlock(scope: !3544, file: !430, line: 1905, column: 13)
!3553 = !{!496, !657}
!3554 = !DILocation(line: 1902, column: 15, scope: !3544)
!3555 = !DILocation(line: 1904, column: 16, scope: !3550)
!3556 = !DILocation(line: 1905, column: 17, scope: !3552)
!3557 = !DILocation(line: 1903, column: 15, scope: !3544)
!3558 = !DILocation(line: 1903, column: 9, scope: !3544)
!3559 = !DILocation(line: 1904, column: 22, scope: !3550)
!3560 = !DILocation(line: 1904, column: 45, scope: !3544)
!3561 = !DILocation(line: 1905, column: 42, scope: !3552)
!3562 = !DILocation(line: 1905, column: 23, scope: !3552)
!3563 = !DILocation(line: 1905, column: 48, scope: !3544)
!3564 = !DILocation(line: 1907, column: 6, scope: !3544)
!3565 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eb1432c9029ceffE", scope: !3431, file: !430, line: 1902, type: !3566, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2236, retainedNodes: !3583)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!3568, !2228}
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !101, file: !2, size: 64, align: 64, elements: !3569, identifier: "aba8f8de5c30a5a713a7e2dd6a715755")
!3569 = !{!3570}
!3570 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 64, align: 64, elements: !3571, templateParams: !3576, identifier: "aba8f8de5c30a5a713a7e2dd6a715755_variant_part", discriminator: !3449)
!3571 = !{!3572, !3579}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3570, file: !2, baseType: !3573, size: 64, align: 64)
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3568, file: !2, size: 64, align: 64, elements: !3574, templateParams: !3576, identifier: "aba8f8de5c30a5a713a7e2dd6a715755::Continue")
!3574 = !{!3575}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3573, file: !2, baseType: !334, size: 64, align: 64)
!3576 = !{!3577, !3578}
!3577 = !DITemplateTypeParameter(name: "B", type: !459)
!3578 = !DITemplateTypeParameter(name: "C", type: !334)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3570, file: !2, baseType: !3580, size: 64, align: 64, extraData: i64 0)
!3580 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3568, file: !2, size: 64, align: 64, elements: !3581, templateParams: !3576, identifier: "aba8f8de5c30a5a713a7e2dd6a715755::Break")
!3581 = !{!3582}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3580, file: !2, baseType: !459, align: 8)
!3583 = !{!3584, !3585, !3587}
!3584 = !DILocalVariable(name: "self", arg: 1, scope: !3565, file: !430, line: 1902, type: !2228)
!3585 = !DILocalVariable(name: "v", scope: !3586, file: !430, line: 1904, type: !334, align: 8)
!3586 = distinct !DILexicalBlock(scope: !3565, file: !430, line: 1904, column: 13)
!3587 = !DILocalVariable(name: "e", scope: !3588, file: !430, line: 1905, type: !453, align: 1)
!3588 = distinct !DILexicalBlock(scope: !3565, file: !430, line: 1905, column: 13)
!3589 = !DILocation(line: 1902, column: 15, scope: !3565)
!3590 = !DILocation(line: 1905, column: 17, scope: !3588)
!3591 = !DILocation(line: 1903, column: 15, scope: !3565)
!3592 = !DILocation(line: 1903, column: 9, scope: !3565)
!3593 = !DILocation(line: 1904, column: 16, scope: !3565)
!3594 = !DILocation(line: 1904, column: 16, scope: !3586)
!3595 = !DILocation(line: 1904, column: 22, scope: !3586)
!3596 = !DILocation(line: 1904, column: 45, scope: !3565)
!3597 = !DILocation(line: 1905, column: 42, scope: !3588)
!3598 = !DILocation(line: 1905, column: 23, scope: !3588)
!3599 = !DILocation(line: 1905, column: 48, scope: !3565)
!3600 = !DILocation(line: 1907, column: 6, scope: !3565)
!3601 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc80254b40107cb29E", scope: !3431, file: !430, line: 1902, type: !3602, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2304, retainedNodes: !3617)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!3604, !2296}
!3604 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !101, file: !2, size: 128, align: 64, elements: !3605, identifier: "9684fe477d2dc57caff34cda2f8fb57b")
!3605 = !{!3606}
!3606 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 128, align: 64, elements: !3607, templateParams: !3612, identifier: "9684fe477d2dc57caff34cda2f8fb57b_variant_part", discriminator: !3449)
!3607 = !{!3608, !3613}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3606, file: !2, baseType: !3609, size: 128, align: 64, extraData: i64 0)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3604, file: !2, size: 128, align: 64, elements: !3610, templateParams: !3612, identifier: "9684fe477d2dc57caff34cda2f8fb57b::Continue")
!3610 = !{!3611}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3609, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!3612 = !{!3481, !3520}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3606, file: !2, baseType: !3614, size: 128, align: 64, extraData: i64 1)
!3614 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3604, file: !2, size: 128, align: 64, elements: !3615, templateParams: !3612, identifier: "9684fe477d2dc57caff34cda2f8fb57b::Break")
!3615 = !{!3616}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3614, file: !2, baseType: !574, align: 8, offset: 64)
!3617 = !{!3618, !3619, !3621}
!3618 = !DILocalVariable(name: "self", arg: 1, scope: !3601, file: !430, line: 1902, type: !2296)
!3619 = !DILocalVariable(name: "v", scope: !3620, file: !430, line: 1904, type: !11, align: 8)
!3620 = distinct !DILexicalBlock(scope: !3601, file: !430, line: 1904, column: 13)
!3621 = !DILocalVariable(name: "e", scope: !3622, file: !430, line: 1905, type: !39, align: 1)
!3622 = distinct !DILexicalBlock(scope: !3601, file: !430, line: 1905, column: 13)
!3623 = !DILocation(line: 1902, column: 15, scope: !3601)
!3624 = !DILocation(line: 1905, column: 17, scope: !3622)
!3625 = !DILocation(line: 1903, column: 15, scope: !3601)
!3626 = !DILocation(line: 1903, column: 9, scope: !3601)
!3627 = !DILocation(line: 1904, column: 16, scope: !3601)
!3628 = !DILocation(line: 1904, column: 16, scope: !3620)
!3629 = !DILocation(line: 1904, column: 22, scope: !3620)
!3630 = !DILocation(line: 1904, column: 45, scope: !3601)
!3631 = !DILocation(line: 1905, column: 42, scope: !3622)
!3632 = !DILocation(line: 1905, column: 23, scope: !3622)
!3633 = !DILocation(line: 1905, column: 48, scope: !3601)
!3634 = !DILocation(line: 1907, column: 6, scope: !3601)
!3635 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc8a595b640c8fdfdE", scope: !3431, file: !430, line: 1902, type: !3636, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !450, retainedNodes: !3651)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!3638, !434}
!3638 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !101, file: !2, size: 128, align: 64, elements: !3639, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7")
!3639 = !{!3640}
!3640 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 128, align: 64, elements: !3641, templateParams: !3646, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7_variant_part", discriminator: !3449)
!3641 = !{!3642, !3647}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3640, file: !2, baseType: !3643, size: 128, align: 64)
!3643 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3638, file: !2, size: 128, align: 64, elements: !3644, templateParams: !3646, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7::Continue")
!3644 = !{!3645}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3643, file: !2, baseType: !442, size: 128, align: 64)
!3646 = !{!3577, !3444}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3640, file: !2, baseType: !3648, size: 128, align: 64, extraData: i64 0)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3638, file: !2, size: 128, align: 64, elements: !3649, templateParams: !3646, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7::Break")
!3649 = !{!3650}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3648, file: !2, baseType: !459, align: 8)
!3651 = !{!3652, !3653, !3655}
!3652 = !DILocalVariable(name: "self", arg: 1, scope: !3635, file: !430, line: 1902, type: !434)
!3653 = !DILocalVariable(name: "v", scope: !3654, file: !430, line: 1904, type: !442, align: 8)
!3654 = distinct !DILexicalBlock(scope: !3635, file: !430, line: 1904, column: 13)
!3655 = !DILocalVariable(name: "e", scope: !3656, file: !430, line: 1905, type: !453, align: 1)
!3656 = distinct !DILexicalBlock(scope: !3635, file: !430, line: 1905, column: 13)
!3657 = !DILocation(line: 1902, column: 15, scope: !3635)
!3658 = !DILocation(line: 1905, column: 17, scope: !3656)
!3659 = !DILocation(line: 1903, column: 15, scope: !3635)
!3660 = !DILocation(line: 1903, column: 9, scope: !3635)
!3661 = !DILocation(line: 1904, column: 16, scope: !3635)
!3662 = !DILocation(line: 1904, column: 16, scope: !3654)
!3663 = !DILocation(line: 1904, column: 22, scope: !3654)
!3664 = !DILocation(line: 1904, column: 45, scope: !3635)
!3665 = !DILocation(line: 1905, column: 42, scope: !3656)
!3666 = !DILocation(line: 1905, column: 23, scope: !3656)
!3667 = !DILocation(line: 1905, column: 48, scope: !3635)
!3668 = !DILocation(line: 1907, column: 6, scope: !3635)
!3669 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcc47ee8dc75b2c75E", scope: !3431, file: !430, line: 1902, type: !3670, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !495, retainedNodes: !3686)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{!3672, !487}
!3672 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !101, file: !2, size: 192, align: 64, elements: !3673, identifier: "406dbae85fbf8e15a7db4e6a16836cc9")
!3673 = !{!3674}
!3674 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 192, align: 64, elements: !3675, templateParams: !3680, identifier: "406dbae85fbf8e15a7db4e6a16836cc9_variant_part", discriminator: !3449)
!3675 = !{!3676, !3682}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3674, file: !2, baseType: !3677, size: 192, align: 64, extraData: i64 0)
!3677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3672, file: !2, size: 192, align: 64, elements: !3678, templateParams: !3680, identifier: "406dbae85fbf8e15a7db4e6a16836cc9::Continue")
!3678 = !{!3679}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3677, file: !2, baseType: !35, align: 8, offset: 64)
!3680 = !{!3443, !3681}
!3681 = !DITemplateTypeParameter(name: "C", type: !35)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3674, file: !2, baseType: !3683, size: 192, align: 64, extraData: i64 1)
!3683 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3672, file: !2, size: 192, align: 64, elements: !3684, templateParams: !3680, identifier: "406dbae85fbf8e15a7db4e6a16836cc9::Break")
!3684 = !{!3685}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3683, file: !2, baseType: !597, size: 128, align: 64, offset: 64)
!3686 = !{!3687, !3688, !3690}
!3687 = !DILocalVariable(name: "self", arg: 1, scope: !3669, file: !430, line: 1902, type: !487)
!3688 = !DILocalVariable(name: "v", scope: !3689, file: !430, line: 1904, type: !35, align: 1)
!3689 = distinct !DILexicalBlock(scope: !3669, file: !430, line: 1904, column: 13)
!3690 = !DILocalVariable(name: "e", scope: !3691, file: !430, line: 1905, type: !357, align: 8)
!3691 = distinct !DILexicalBlock(scope: !3669, file: !430, line: 1905, column: 13)
!3692 = !DILocation(line: 1902, column: 15, scope: !3669)
!3693 = !DILocation(line: 1904, column: 16, scope: !3689)
!3694 = !DILocation(line: 1903, column: 15, scope: !3669)
!3695 = !DILocation(line: 1903, column: 9, scope: !3669)
!3696 = !DILocation(line: 1904, column: 22, scope: !3689)
!3697 = !DILocation(line: 1904, column: 45, scope: !3669)
!3698 = !DILocation(line: 1905, column: 17, scope: !3669)
!3699 = !DILocation(line: 1905, column: 17, scope: !3691)
!3700 = !DILocation(line: 1905, column: 42, scope: !3691)
!3701 = !DILocation(line: 1905, column: 23, scope: !3691)
!3702 = !DILocation(line: 1905, column: 48, scope: !3669)
!3703 = !DILocation(line: 1907, column: 6, scope: !3669)
!3704 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he6c115823028548aE", scope: !3431, file: !430, line: 1902, type: !3705, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !2590, retainedNodes: !3721)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!3707, !2582}
!3707 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !101, file: !2, size: 192, align: 64, elements: !3708, identifier: "5dd15888cc37c44e70c60a403546fcc")
!3708 = !{!3709}
!3709 = !DICompositeType(tag: DW_TAG_variant_part, scope: !101, file: !2, size: 192, align: 64, elements: !3710, templateParams: !3715, identifier: "5dd15888cc37c44e70c60a403546fcc_variant_part", discriminator: !3449)
!3710 = !{!3711, !3717}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3709, file: !2, baseType: !3712, size: 192, align: 64, extraData: i64 0)
!3712 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3707, file: !2, size: 192, align: 64, elements: !3713, templateParams: !3715, identifier: "5dd15888cc37c44e70c60a403546fcc::Continue")
!3713 = !{!3714}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3712, file: !2, baseType: !370, size: 128, align: 64, offset: 64)
!3715 = !{!3519, !3716}
!3716 = !DITemplateTypeParameter(name: "C", type: !370)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3709, file: !2, baseType: !3718, size: 192, align: 64, extraData: i64 1)
!3718 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3707, file: !2, size: 192, align: 64, elements: !3719, templateParams: !3715, identifier: "5dd15888cc37c44e70c60a403546fcc::Break")
!3719 = !{!3720}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3718, file: !2, baseType: !502, size: 128, align: 64, offset: 64)
!3721 = !{!3722, !3723, !3725}
!3722 = !DILocalVariable(name: "self", arg: 1, scope: !3704, file: !430, line: 1902, type: !2582)
!3723 = !DILocalVariable(name: "v", scope: !3724, file: !430, line: 1904, type: !370, align: 8)
!3724 = distinct !DILexicalBlock(scope: !3704, file: !430, line: 1904, column: 13)
!3725 = !DILocalVariable(name: "e", scope: !3726, file: !430, line: 1905, type: !360, align: 8)
!3726 = distinct !DILexicalBlock(scope: !3704, file: !430, line: 1905, column: 13)
!3727 = !DILocation(line: 1902, column: 15, scope: !3704)
!3728 = !DILocation(line: 1903, column: 15, scope: !3704)
!3729 = !DILocation(line: 1903, column: 9, scope: !3704)
!3730 = !DILocation(line: 1904, column: 16, scope: !3704)
!3731 = !DILocation(line: 1904, column: 16, scope: !3724)
!3732 = !DILocation(line: 1904, column: 22, scope: !3724)
!3733 = !DILocation(line: 1904, column: 45, scope: !3704)
!3734 = !DILocation(line: 1905, column: 17, scope: !3704)
!3735 = !DILocation(line: 1905, column: 17, scope: !3726)
!3736 = !DILocation(line: 1905, column: 42, scope: !3726)
!3737 = !DILocation(line: 1905, column: 23, scope: !3726)
!3738 = !DILocation(line: 1905, column: 48, scope: !3704)
!3739 = !DILocation(line: 1907, column: 6, scope: !3704)
!3740 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h3f59e5d448d51f31E", scope: !3741, file: !797, line: 586, type: !1699, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !703, retainedNodes: !3742)
!3741 = !DINamespace(name: "{impl#2}", scope: !799)
!3742 = !{!3743, !3744}
!3743 = !DILocalVariable(name: "self", arg: 1, scope: !3740, file: !797, line: 586, type: !1701)
!3744 = !DILocalVariable(name: "n", scope: !3745, file: !797, line: 589, type: !11, align: 8)
!3745 = distinct !DILexicalBlock(scope: !3740, file: !797, line: 589, column: 13)
!3746 = !DILocation(line: 586, column: 18, scope: !3740)
!3747 = !DILocation(line: 587, column: 12, scope: !3740)
!3748 = !DILocation(line: 587, column: 25, scope: !3740)
!3749 = !DILocation(line: 592, column: 13, scope: !3740)
!3750 = !DILocation(line: 587, column: 9, scope: !3740)
!3751 = !DILocation(line: 589, column: 54, scope: !3740)
!3752 = !DILocation(line: 589, column: 30, scope: !3740)
!3753 = !DILocation(line: 589, column: 17, scope: !3745)
!3754 = !DILocation(line: 590, column: 31, scope: !3745)
!3755 = !DILocation(line: 590, column: 18, scope: !3745)
!3756 = !DILocation(line: 590, column: 13, scope: !3745)
!3757 = !DILocation(line: 594, column: 6, scope: !3740)
!3758 = distinct !DISubprogram(name: "new", linkageName: "_ZN6base6415chunked_encoder14ChunkedEncoder3new17h23c62a5165c1e72dE", scope: !3760, file: !3759, line: 28, type: !3770, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3772)
!3759 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/chunked_encoder.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "344007841eec52701aa2ab9d9c3c1d28")
!3760 = !DICompositeType(tag: DW_TAG_structure_type, name: "ChunkedEncoder", scope: !3761, file: !2, size: 128, align: 64, elements: !3762, templateParams: !4, identifier: "8f9943296e6d37d945a1666419e7398d")
!3761 = !DINamespace(name: "chunked_encoder", scope: !55)
!3762 = !{!3763, !3769}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3760, file: !2, baseType: !3764, size: 24, align: 8, offset: 64)
!3764 = !DICompositeType(tag: DW_TAG_structure_type, name: "Config", scope: !55, file: !2, size: 24, align: 8, elements: !3765, templateParams: !4, identifier: "6472f495f9f7a8546cdf1f603699c56a")
!3765 = !{!3766, !3767, !3768}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "char_set", scope: !3764, file: !2, baseType: !54, size: 8, align: 8)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3764, file: !2, baseType: !67, size: 8, align: 8, offset: 8)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "decode_allow_trailing_bits", scope: !3764, file: !2, baseType: !67, size: 8, align: 8, offset: 16)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "max_input_chunk_len", scope: !3760, file: !2, baseType: !11, size: 64, align: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!3760, !3764}
!3772 = !{!3773}
!3773 = !DILocalVariable(name: "config", arg: 1, scope: !3758, file: !3759, line: 28, type: !3764)
!3774 = !DILocation(line: 28, column: 16, scope: !3758)
!3775 = !DILocation(line: 30, column: 13, scope: !3758)
!3776 = !DILocation(line: 31, column: 61, scope: !3758)
!3777 = !DILocation(line: 31, column: 34, scope: !3758)
!3778 = !DILocation(line: 29, column: 9, scope: !3758)
!3779 = !DILocation(line: 33, column: 6, scope: !3758)
!3780 = distinct !DISubprogram(name: "encode<base64::display::FormatterSink>", linkageName: "_ZN6base6415chunked_encoder14ChunkedEncoder6encode17hc729c4c2477484a9E", scope: !3760, file: !3759, line: 35, type: !3781, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3815, retainedNodes: !3789)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!73, !3783, !210, !3784}
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&ChunkedEncoder", baseType: !3760, size: 64, align: 64, dwarfAddressSpace: 0)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut FormatterSink", baseType: !3785, size: 64, align: 64, dwarfAddressSpace: 0)
!3785 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatterSink", scope: !3786, file: !2, size: 64, align: 64, elements: !3787, templateParams: !4, identifier: "fff23168753cf86c3609928cf402b53d")
!3786 = !DINamespace(name: "display", scope: !55)
!3787 = !{!3788}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3785, file: !2, baseType: !689, size: 64, align: 64)
!3789 = !{!3790, !3791, !3792, !3793, !3795, !3801, !3803, !3805, !3807, !3809, !3811, !3813}
!3790 = !DILocalVariable(name: "self", arg: 1, scope: !3780, file: !3759, line: 35, type: !3783)
!3791 = !DILocalVariable(name: "bytes", arg: 2, scope: !3780, file: !3759, line: 35, type: !210)
!3792 = !DILocalVariable(name: "sink", arg: 3, scope: !3780, file: !3759, line: 35, type: !3784)
!3793 = !DILocalVariable(name: "encode_buf", scope: !3794, file: !3759, line: 36, type: !1975, align: 1)
!3794 = distinct !DILexicalBlock(scope: !3780, file: !3759, line: 36, column: 9)
!3795 = !DILocalVariable(name: "encode_table", scope: !3796, file: !3759, line: 37, type: !3797, align: 8)
!3796 = distinct !DILexicalBlock(scope: !3794, file: !3759, line: 37, column: 9)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 64]", baseType: !3798, size: 64, align: 64, dwarfAddressSpace: 0)
!3798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 512, align: 8, elements: !3799)
!3799 = !{!3800}
!3800 = !DISubrange(count: 64, lowerBound: 0)
!3801 = !DILocalVariable(name: "input_index", scope: !3802, file: !3759, line: 39, type: !11, align: 8)
!3802 = distinct !DILexicalBlock(scope: !3796, file: !3759, line: 39, column: 9)
!3803 = !DILocalVariable(name: "input_chunk_len", scope: !3804, file: !3759, line: 43, type: !11, align: 8)
!3804 = distinct !DILexicalBlock(scope: !3802, file: !3759, line: 43, column: 13)
!3805 = !DILocalVariable(name: "chunk", scope: !3806, file: !3759, line: 45, type: !210, align: 8)
!3806 = distinct !DILexicalBlock(scope: !3804, file: !3759, line: 45, column: 13)
!3807 = !DILocalVariable(name: "b64_bytes_written", scope: !3808, file: !3759, line: 47, type: !11, align: 8)
!3808 = distinct !DILexicalBlock(scope: !3806, file: !3759, line: 47, column: 13)
!3809 = !DILocalVariable(name: "more_input_left", scope: !3810, file: !3759, line: 50, type: !67, align: 1)
!3810 = distinct !DILexicalBlock(scope: !3808, file: !3759, line: 50, column: 13)
!3811 = !DILocalVariable(name: "residual", scope: !3812, file: !3759, line: 58, type: !647, align: 1)
!3812 = distinct !DILexicalBlock(scope: !3810, file: !3759, line: 58, column: 72)
!3813 = !DILocalVariable(name: "val", scope: !3814, file: !3759, line: 58, type: !35, align: 1)
!3814 = distinct !DILexicalBlock(scope: !3810, file: !3759, line: 58, column: 13)
!3815 = !{!3816}
!3816 = !DITemplateTypeParameter(name: "S", type: !3785)
!3817 = !DILocation(line: 35, column: 28, scope: !3780)
!3818 = !DILocation(line: 35, column: 35, scope: !3780)
!3819 = !DILocation(line: 35, column: 49, scope: !3780)
!3820 = !DILocation(line: 36, column: 13, scope: !3794)
!3821 = !DILocation(line: 39, column: 13, scope: !3802)
!3822 = !DILocation(line: 47, column: 17, scope: !3808)
!3823 = !DILocation(line: 58, column: 72, scope: !3812)
!3824 = !DILocation(line: 58, column: 13, scope: !3814)
!3825 = !DILocation(line: 36, column: 46, scope: !3780)
!3826 = !DILocation(line: 37, column: 28, scope: !3794)
!3827 = !{i8 0, i8 6}
!3828 = !DILocation(line: 37, column: 13, scope: !3796)
!3829 = !DILocation(line: 39, column: 31, scope: !3796)
!3830 = !DILocation(line: 41, column: 9, scope: !3802)
!3831 = !DILocation(line: 41, column: 15, scope: !3802)
!3832 = !DILocation(line: 61, column: 9, scope: !3802)
!3833 = !DILocation(line: 62, column: 6, scope: !3780)
!3834 = !DILocation(line: 43, column: 44, scope: !3802)
!3835 = !DILocation(line: 43, column: 84, scope: !3802)
!3836 = !DILocation(line: 43, column: 70, scope: !3802)
!3837 = !DILocation(line: 43, column: 35, scope: !3802)
!3838 = !DILocation(line: 43, column: 17, scope: !3804)
!3839 = !DILocation(line: 45, column: 32, scope: !3804)
!3840 = !DILocation(line: 45, column: 46, scope: !3804)
!3841 = !DILocation(line: 45, column: 45, scope: !3804)
!3842 = !DILocation(line: 45, column: 26, scope: !3804)
!3843 = !DILocation(line: 45, column: 25, scope: !3804)
!3844 = !DILocation(line: 45, column: 17, scope: !3806)
!3845 = !DILocation(line: 47, column: 64, scope: !3806)
!3846 = !DILocation(line: 47, column: 41, scope: !3806)
!3847 = !DILocation(line: 49, column: 13, scope: !3808)
!3848 = !DILocation(line: 50, column: 35, scope: !3808)
!3849 = !DILocation(line: 50, column: 17, scope: !3810)
!3850 = !DILocation(line: 52, column: 16, scope: !3810)
!3851 = !DILocation(line: 52, column: 35, scope: !3810)
!3852 = !DILocation(line: 58, column: 53, scope: !3810)
!3853 = !DILocation(line: 58, column: 50, scope: !3810)
!3854 = !DILocation(line: 58, column: 39, scope: !3810)
!3855 = !DILocation(line: 55, column: 79, scope: !3810)
!3856 = !DILocation(line: 55, column: 68, scope: !3810)
!3857 = !DILocation(line: 55, column: 38, scope: !3810)
!3858 = !DILocation(line: 55, column: 17, scope: !3810)
!3859 = !DILocation(line: 52, column: 13, scope: !3810)
!3860 = !DILocation(line: 58, column: 13, scope: !3810)
!3861 = !DILocation(line: 58, column: 13, scope: !3812)
!3862 = distinct !DISubprogram(name: "max_input_length", linkageName: "_ZN6base6415chunked_encoder16max_input_length17h194a0dedd164dbb2E", scope: !3761, file: !3759, line: 72, type: !3863, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3865)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!11, !11, !3764}
!3865 = !{!3866, !3867, !3868}
!3866 = !DILocalVariable(name: "encoded_buf_len", arg: 1, scope: !3862, file: !3759, line: 72, type: !11)
!3867 = !DILocalVariable(name: "config", arg: 2, scope: !3862, file: !3759, line: 72, type: !3764)
!3868 = !DILocalVariable(name: "effective_buf_len", scope: !3869, file: !3759, line: 73, type: !11, align: 8)
!3869 = distinct !DILexicalBlock(scope: !3862, file: !3759, line: 73, column: 5)
!3870 = !DILocation(line: 72, column: 21, scope: !3862)
!3871 = !DILocation(line: 72, column: 45, scope: !3862)
!3872 = !DILocation(line: 73, column: 9, scope: !3869)
!3873 = !DILocation(line: 73, column: 32, scope: !3862)
!3874 = !DILocation(line: 79, column: 9, scope: !3862)
!3875 = !DILocation(line: 73, column: 29, scope: !3862)
!3876 = !DILocation(line: 75, column: 9, scope: !3862)
!3877 = !DILocation(line: 83, column: 6, scope: !3869)
!3878 = !DILocation(line: 83, column: 5, scope: !3869)
!3879 = !DILocation(line: 84, column: 2, scope: !3862)
!3880 = distinct !DISubprogram(name: "new", linkageName: "_ZN6base6415chunked_encoder10StringSink3new17h1c640b7892727830E", scope: !3881, file: !3759, line: 94, type: !3884, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3886)
!3881 = !DICompositeType(tag: DW_TAG_structure_type, name: "StringSink", scope: !3761, file: !2, size: 64, align: 64, elements: !3882, templateParams: !4, identifier: "2ba6fbb8833a0e8b9319ba75b5a53367")
!3882 = !{!3883}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3881, file: !2, baseType: !3007, size: 64, align: 64)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!3881, !3007}
!3886 = !{!3887}
!3887 = !DILocalVariable(name: "s", arg: 1, scope: !3880, file: !3759, line: 94, type: !3007)
!3888 = !DILocation(line: 94, column: 23, scope: !3880)
!3889 = !DILocation(line: 95, column: 9, scope: !3880)
!3890 = !DILocation(line: 96, column: 6, scope: !3880)
!3891 = distinct !DISubprogram(name: "write_encoded_bytes", linkageName: "_ZN85_$LT$base64..chunked_encoder..StringSink$u20$as$u20$base64..chunked_encoder..Sink$GT$19write_encoded_bytes17ha7d70f54bf66fc7bE", scope: !3892, file: !3759, line: 103, type: !3893, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3896)
!3892 = !DINamespace(name: "{impl#2}", scope: !3761)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!73, !3895, !210}
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut StringSink", baseType: !3881, size: 64, align: 64, dwarfAddressSpace: 0)
!3896 = !{!3897, !3898}
!3897 = !DILocalVariable(name: "self", arg: 1, scope: !3891, file: !3759, line: 103, type: !3895)
!3898 = !DILocalVariable(name: "s", arg: 2, scope: !3891, file: !3759, line: 103, type: !210)
!3899 = !DILocation(line: 103, column: 28, scope: !3891)
!3900 = !DILocation(line: 103, column: 39, scope: !3891)
!3901 = !DILocation(line: 104, column: 9, scope: !3891)
!3902 = !DILocation(line: 104, column: 30, scope: !3891)
!3903 = !DILocation(line: 106, column: 9, scope: !3891)
!3904 = !DILocation(line: 107, column: 6, scope: !3891)
!3905 = distinct !DISubprogram(name: "with_config", linkageName: "_ZN6base647display13Base64Display11with_config17hb0c493ca9e3f6c59E", scope: !3907, file: !3906, line: 25, type: !3911, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3913)
!3906 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/display.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "ae3f9e859cc63c8fab524efe256c0ccc")
!3907 = !DICompositeType(tag: DW_TAG_structure_type, name: "Base64Display", scope: !3786, file: !2, size: 256, align: 64, elements: !3908, templateParams: !4, identifier: "a38c684df6745f9a4991109c4d8534c2")
!3908 = !{!3909, !3910}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3907, file: !2, baseType: !210, size: 128, align: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "chunked_encoder", scope: !3907, file: !2, baseType: !3760, size: 128, align: 64, offset: 128)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!3907, !210, !3764}
!3913 = !{!3914, !3915}
!3914 = !DILocalVariable(name: "bytes", arg: 1, scope: !3905, file: !3906, line: 25, type: !210)
!3915 = !DILocalVariable(name: "config", arg: 2, scope: !3905, file: !3906, line: 25, type: !3764)
!3916 = !DILocation(line: 25, column: 24, scope: !3905)
!3917 = !DILocation(line: 25, column: 38, scope: !3905)
!3918 = !DILocation(line: 28, column: 50, scope: !3905)
!3919 = !DILocation(line: 28, column: 30, scope: !3905)
!3920 = !DILocation(line: 26, column: 9, scope: !3905)
!3921 = !DILocation(line: 30, column: 6, scope: !3905)
!3922 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN69_$LT$base64..display..Base64Display$u20$as$u20$core..fmt..Display$GT$3fmt17h73b6e52abf80a8f1E", scope: !3923, file: !3906, line: 34, type: !3924, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3927)
!3923 = !DINamespace(name: "{impl#1}", scope: !3786)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{!73, !3926, !689}
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Base64Display", baseType: !3907, size: 64, align: 64, dwarfAddressSpace: 0)
!3927 = !{!3928, !3929, !3930}
!3928 = !DILocalVariable(name: "self", arg: 1, scope: !3922, file: !3906, line: 34, type: !3926)
!3929 = !DILocalVariable(name: "formatter", arg: 2, scope: !3922, file: !3906, line: 34, type: !689)
!3930 = !DILocalVariable(name: "sink", scope: !3931, file: !3906, line: 35, type: !3785, align: 8)
!3931 = distinct !DILexicalBlock(scope: !3922, file: !3906, line: 35, column: 9)
!3932 = !DILocation(line: 34, column: 12, scope: !3922)
!3933 = !DILocation(line: 34, column: 19, scope: !3922)
!3934 = !DILocation(line: 35, column: 13, scope: !3931)
!3935 = !DILocation(line: 35, column: 24, scope: !3922)
!3936 = !DILocation(line: 36, column: 9, scope: !3931)
!3937 = !DILocation(line: 36, column: 37, scope: !3931)
!3938 = !DILocation(line: 37, column: 6, scope: !3922)
!3939 = distinct !DISubprogram(name: "write_encoded_bytes", linkageName: "_ZN80_$LT$base64..display..FormatterSink$u20$as$u20$base64..chunked_encoder..Sink$GT$19write_encoded_bytes17h4ccfcedf507c6196E", scope: !3940, file: !3906, line: 47, type: !3941, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !3943)
!3940 = !DINamespace(name: "{impl#2}", scope: !3786)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!73, !3784, !210}
!3943 = !{!3944, !3945}
!3944 = !DILocalVariable(name: "self", arg: 1, scope: !3939, file: !3906, line: 47, type: !3784)
!3945 = !DILocalVariable(name: "encoded", arg: 2, scope: !3939, file: !3906, line: 47, type: !210)
!3946 = !DILocation(line: 47, column: 28, scope: !3939)
!3947 = !DILocation(line: 47, column: 39, scope: !3939)
!3948 = !DILocation(line: 50, column: 9, scope: !3939)
!3949 = !DILocation(line: 51, column: 24, scope: !3939)
!3950 = !DILocation(line: 52, column: 6, scope: !3939)
!3951 = distinct !DISubprogram(name: "new<base64::write::encoder_string_writer::Utf8SingleCodeUnitWriter<alloc::string::String>>", linkageName: "_ZN6base645write7encoder22EncoderWriter$LT$W$GT$3new17hdc67f4c08f466593E", scope: !3953, file: !3952, line: 91, type: !3985, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3983, retainedNodes: !3987)
!3952 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/write/encoder.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "e5d71a01b2f206709fb6e73e9b53f7b2")
!3953 = !DICompositeType(tag: DW_TAG_structure_type, name: "EncoderWriter<base64::write::encoder_string_writer::Utf8SingleCodeUnitWriter<alloc::string::String>>", scope: !3954, file: !2, size: 8576, align: 64, elements: !3956, templateParams: !3983, identifier: "4327aa42f2b8613d48756906fa51114f")
!3954 = !DINamespace(name: "encoder", scope: !3955)
!3955 = !DINamespace(name: "write", scope: !55)
!3956 = !{!3957, !3958, !3977, !3979, !3980, !3981, !3982}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3953, file: !2, baseType: !3764, size: 24, align: 8, offset: 320)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "delegate", scope: !3953, file: !2, baseType: !3959, size: 192, align: 64)
!3959 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<base64::write::encoder_string_writer::Utf8SingleCodeUnitWriter<alloc::string::String>>", scope: !14, file: !2, size: 192, align: 64, elements: !3960, identifier: "bce24f2014f03e4fe8291523371a2bbb")
!3960 = !{!3961}
!3961 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 192, align: 64, elements: !3962, templateParams: !3965, identifier: "bce24f2014f03e4fe8291523371a2bbb_variant_part", discriminator: !709)
!3962 = !{!3963, !3973}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3961, file: !2, baseType: !3964, size: 192, align: 64, extraData: i64 0)
!3964 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3959, file: !2, size: 192, align: 64, elements: !4, templateParams: !3965, identifier: "bce24f2014f03e4fe8291523371a2bbb::None")
!3965 = !{!3966}
!3966 = !DITemplateTypeParameter(name: "T", type: !3967)
!3967 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8SingleCodeUnitWriter<alloc::string::String>", scope: !3968, file: !2, size: 192, align: 64, elements: !3969, templateParams: !3971, identifier: "f0b91b8f76749658f53bedfa5546fa6b")
!3968 = !DINamespace(name: "encoder_string_writer", scope: !3955)
!3969 = !{!3970}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "str_consumer", scope: !3967, file: !2, baseType: !2995, size: 192, align: 64)
!3971 = !{!3972}
!3972 = !DITemplateTypeParameter(name: "S", type: !2995)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3961, file: !2, baseType: !3974, size: 192, align: 64)
!3974 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3959, file: !2, size: 192, align: 64, elements: !3975, templateParams: !3965, identifier: "bce24f2014f03e4fe8291523371a2bbb::Some")
!3975 = !{!3976}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3974, file: !2, baseType: !3967, size: 192, align: 64)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "extra_input", scope: !3953, file: !2, baseType: !3978, size: 24, align: 8, offset: 344)
!3978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 24, align: 8, elements: !718)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "extra_input_occupied_len", scope: !3953, file: !2, baseType: !11, size: 64, align: 64, offset: 192)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3953, file: !2, baseType: !1975, size: 8192, align: 8, offset: 368)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "output_occupied_len", scope: !3953, file: !2, baseType: !11, size: 64, align: 64, offset: 256)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "panicked", scope: !3953, file: !2, baseType: !67, size: 8, align: 8, offset: 8560)
!3983 = !{!3984}
!3984 = !DITemplateTypeParameter(name: "W", type: !3967)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!3953, !3967, !3764}
!3987 = !{!3988, !3989}
!3988 = !DILocalVariable(name: "w", arg: 1, scope: !3951, file: !3952, line: 91, type: !3967)
!3989 = !DILocalVariable(name: "config", arg: 2, scope: !3951, file: !3952, line: 91, type: !3764)
!3990 = !DILocation(line: 91, column: 16, scope: !3951)
!3991 = !DILocation(line: 91, column: 22, scope: !3951)
!3992 = !DILocation(line: 93, column: 13, scope: !3951)
!3993 = !DILocation(line: 94, column: 28, scope: !3951)
!3994 = !DILocation(line: 94, column: 23, scope: !3951)
!3995 = !DILocation(line: 95, column: 26, scope: !3951)
!3996 = !DILocation(line: 97, column: 21, scope: !3951)
!3997 = !DILocation(line: 92, column: 9, scope: !3951)
!3998 = !DILocation(line: 101, column: 6, scope: !3951)
!3999 = distinct !DISubprogram(name: "from<alloc::string::String>", linkageName: "_ZN6base645write21encoder_string_writer28EncoderStringWriter$LT$S$GT$4from17hea0732520b2d62aeE", scope: !4001, file: !4000, line: 58, type: !4004, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !3971, retainedNodes: !4006)
!4000 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/write/encoder_string_writer.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "2612553d8e9beaabaeb893ff019da1e3")
!4001 = !DICompositeType(tag: DW_TAG_structure_type, name: "EncoderStringWriter<alloc::string::String>", scope: !3968, file: !2, size: 8576, align: 64, elements: !4002, templateParams: !3971, identifier: "ba96b712cef017decbca4d7b15a75f8d")
!4002 = !{!4003}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !4001, file: !2, baseType: !3953, size: 8576, align: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!4001, !2995, !3764}
!4006 = !{!4007, !4008}
!4007 = !DILocalVariable(name: "str_consumer", arg: 1, scope: !3999, file: !4000, line: 58, type: !2995)
!4008 = !DILocalVariable(name: "config", arg: 2, scope: !3999, file: !4000, line: 58, type: !3764)
!4009 = !DILocation(line: 58, column: 17, scope: !3999)
!4010 = !DILocation(line: 58, column: 34, scope: !3999)
!4011 = !DILocation(line: 60, column: 68, scope: !3999)
!4012 = !DILocation(line: 60, column: 41, scope: !3999)
!4013 = !DILocation(line: 60, column: 84, scope: !3999)
!4014 = !DILocation(line: 60, column: 22, scope: !3999)
!4015 = !DILocation(line: 59, column: 9, scope: !3999)
!4016 = !DILocation(line: 62, column: 6, scope: !3999)
!4017 = distinct !DISubprogram(name: "new", linkageName: "_ZN6base645write21encoder_string_writer48EncoderStringWriter$LT$alloc..string..String$GT$3new17h15920b6e573c987eE", scope: !4001, file: !4000, line: 80, type: !4018, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4020)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!4001, !3764}
!4020 = !{!4021}
!4021 = !DILocalVariable(name: "config", arg: 1, scope: !4017, file: !4000, line: 80, type: !3764)
!4022 = !DILocation(line: 80, column: 16, scope: !4017)
!4023 = !DILocation(line: 81, column: 35, scope: !4017)
!4024 = !DILocation(line: 81, column: 50, scope: !4017)
!4025 = !DILocation(line: 81, column: 9, scope: !4017)
!4026 = !DILocation(line: 82, column: 6, scope: !4017)
!4027 = distinct !DISubprogram(name: "consume", linkageName: "_ZN91_$LT$alloc..string..String$u20$as$u20$base64..write..encoder_string_writer..StrConsumer$GT$7consume17he758247ec10bfce0E", scope: !4028, file: !4000, line: 110, type: !3005, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4029)
!4028 = !DINamespace(name: "{impl#4}", scope: !3968)
!4029 = !{!4030, !4031}
!4030 = !DILocalVariable(name: "self", arg: 1, scope: !4027, file: !4000, line: 110, type: !3007)
!4031 = !DILocalVariable(name: "buf", arg: 2, scope: !4027, file: !4000, line: 110, type: !220)
!4032 = !DILocation(line: 110, column: 16, scope: !4027)
!4033 = !DILocation(line: 110, column: 27, scope: !4027)
!4034 = !DILocation(line: 111, column: 9, scope: !4027)
!4035 = !DILocation(line: 112, column: 6, scope: !4027)
!4036 = distinct !DISubprogram(name: "encode_with_padding", linkageName: "_ZN6base646encode19encode_with_padding17h1ee6cd47bb3955dfE", scope: !2348, file: !4037, line: 140, type: !4038, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4040)
!4037 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "e8aa4f363ad7ecc90e9b3dcf0dc49e12")
!4038 = !DISubroutineType(types: !4039)
!4039 = !{null, !210, !3764, !11, !241}
!4040 = !{!4041, !4042, !4043, !4044, !4045, !4048, !4049, !4052, !4054, !4056, !4058, !4061, !4062}
!4041 = !DILocalVariable(name: "input", arg: 1, scope: !4036, file: !4037, line: 140, type: !210)
!4042 = !DILocalVariable(name: "config", arg: 2, scope: !4036, file: !4037, line: 140, type: !3764)
!4043 = !DILocalVariable(name: "encoded_size", arg: 3, scope: !4036, file: !4037, line: 140, type: !11)
!4044 = !DILocalVariable(name: "output", arg: 4, scope: !4036, file: !4037, line: 140, type: !241)
!4045 = !DILocalVariable(name: "left_val", scope: !4046, file: !4037, line: 141, type: !45, align: 8)
!4046 = !DILexicalBlockFile(scope: !4047, file: !4037, discriminator: 0)
!4047 = distinct !DILexicalBlock(scope: !4036, file: !1880, line: 38, column: 13)
!4048 = !DILocalVariable(name: "right_val", scope: !4046, file: !4037, line: 141, type: !45, align: 8)
!4049 = !DILocalVariable(name: "kind", scope: !4050, file: !4037, line: 141, type: !94, align: 1)
!4050 = !DILexicalBlockFile(scope: !4051, file: !4037, discriminator: 0)
!4051 = distinct !DILexicalBlock(scope: !4047, file: !1880, line: 40, column: 21)
!4052 = !DILocalVariable(name: "b64_bytes_written", scope: !4053, file: !4037, line: 143, type: !11, align: 8)
!4053 = distinct !DILexicalBlock(scope: !4036, file: !4037, line: 143, column: 5)
!4054 = !DILocalVariable(name: "padding_bytes", scope: !4055, file: !4037, line: 145, type: !11, align: 8)
!4055 = distinct !DILexicalBlock(scope: !4053, file: !4037, line: 145, column: 5)
!4056 = !DILocalVariable(name: "encoded_bytes", scope: !4057, file: !4037, line: 151, type: !11, align: 8)
!4057 = distinct !DILexicalBlock(scope: !4055, file: !4037, line: 151, column: 5)
!4058 = !DILocalVariable(name: "left_val", scope: !4059, file: !4037, line: 155, type: !45, align: 8)
!4059 = !DILexicalBlockFile(scope: !4060, file: !4037, discriminator: 0)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !1880, line: 38, column: 13)
!4061 = !DILocalVariable(name: "right_val", scope: !4059, file: !4037, line: 155, type: !45, align: 8)
!4062 = !DILocalVariable(name: "kind", scope: !4063, file: !4037, line: 155, type: !94, align: 1)
!4063 = !DILexicalBlockFile(scope: !4064, file: !4037, discriminator: 0)
!4064 = distinct !DILexicalBlock(scope: !4060, file: !1880, line: 40, column: 21)
!4065 = !DILocation(line: 140, column: 24, scope: !4036)
!4066 = !DILocation(line: 140, column: 38, scope: !4036)
!4067 = !DILocation(line: 140, column: 54, scope: !4036)
!4068 = !DILocation(line: 140, column: 75, scope: !4036)
!4069 = !DILocation(line: 141, column: 5, scope: !4050)
!4070 = !DILocation(line: 145, column: 9, scope: !4055)
!4071 = !DILocation(line: 151, column: 9, scope: !4057)
!4072 = !DILocation(line: 155, column: 5, scope: !4063)
!4073 = !DILocation(line: 141, column: 36, scope: !4036)
!4074 = !DILocation(line: 141, column: 5, scope: !4036)
!4075 = !DILocation(line: 141, column: 5, scope: !4046)
!4076 = !DILocation(line: 143, column: 60, scope: !4036)
!4077 = !DILocation(line: 143, column: 29, scope: !4036)
!4078 = !DILocation(line: 143, column: 9, scope: !4053)
!4079 = !DILocation(line: 145, column: 28, scope: !4053)
!4080 = !DILocation(line: 148, column: 9, scope: !4053)
!4081 = !DILocation(line: 145, column: 25, scope: !4053)
!4082 = !DILocation(line: 146, column: 46, scope: !4053)
!4083 = !DILocation(line: 146, column: 39, scope: !4053)
!4084 = !DILocation(line: 146, column: 9, scope: !4053)
!4085 = !DILocation(line: 152, column: 22, scope: !4055)
!4086 = !DILocation(line: 151, column: 25, scope: !4055)
!4087 = !DILocation(line: 155, column: 5, scope: !4057)
!4088 = !DILocation(line: 155, column: 5, scope: !4059)
!4089 = !DILocation(line: 156, column: 2, scope: !4036)
!4090 = distinct !DISubprogram(name: "read_u64", linkageName: "_ZN6base646encode8read_u6417h649c0944f46a022aE", scope: !2348, file: !4037, line: 159, type: !4091, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4093)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!381, !210}
!4093 = !{!4094}
!4094 = !DILocalVariable(name: "s", arg: 1, scope: !4090, file: !4037, line: 159, type: !210)
!4095 = !DILocation(line: 159, column: 13, scope: !4090)
!4096 = !DILocation(line: 160, column: 26, scope: !4090)
!4097 = !DILocation(line: 160, column: 24, scope: !4090)
!4098 = !DILocation(line: 160, column: 5, scope: !4090)
!4099 = !DILocation(line: 161, column: 2, scope: !4090)
!4100 = distinct !DISubprogram(name: "encode_to_slice", linkageName: "_ZN6base646encode15encode_to_slice17h9d7946914443da15E", scope: !2348, file: !4037, line: 167, type: !4101, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4103)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!11, !210, !241, !3797}
!4103 = !{!4104, !4105, !4106, !4107, !4109, !4111, !4113, !4115, !4117, !4119, !4121, !4123, !4125, !4127, !4129, !4131}
!4104 = !DILocalVariable(name: "input", arg: 1, scope: !4100, file: !4037, line: 167, type: !210)
!4105 = !DILocalVariable(name: "output", arg: 2, scope: !4100, file: !4037, line: 167, type: !241)
!4106 = !DILocalVariable(name: "encode_table", arg: 3, scope: !4100, file: !4037, line: 167, type: !3797)
!4107 = !DILocalVariable(name: "input_index", scope: !4108, file: !4037, line: 168, type: !11, align: 8)
!4108 = distinct !DILexicalBlock(scope: !4100, file: !4037, line: 168, column: 5)
!4109 = !DILocalVariable(name: "last_fast_index", scope: !4110, file: !4037, line: 175, type: !11, align: 8)
!4110 = distinct !DILexicalBlock(scope: !4108, file: !4037, line: 175, column: 5)
!4111 = !DILocalVariable(name: "output_index", scope: !4112, file: !4037, line: 176, type: !11, align: 8)
!4112 = distinct !DILexicalBlock(scope: !4110, file: !4037, line: 176, column: 5)
!4113 = !DILocalVariable(name: "input_chunk", scope: !4114, file: !4037, line: 182, type: !210, align: 8)
!4114 = distinct !DILexicalBlock(scope: !4112, file: !4037, line: 182, column: 13)
!4115 = !DILocalVariable(name: "output_chunk", scope: !4116, file: !4037, line: 183, type: !241, align: 8)
!4116 = distinct !DILexicalBlock(scope: !4114, file: !4037, line: 183, column: 13)
!4117 = !DILocalVariable(name: "input_u64", scope: !4118, file: !4037, line: 193, type: !381, align: 8)
!4118 = distinct !DILexicalBlock(scope: !4116, file: !4037, line: 193, column: 13)
!4119 = !DILocalVariable(name: "input_u64", scope: !4120, file: !4037, line: 204, type: !381, align: 8)
!4120 = distinct !DILexicalBlock(scope: !4118, file: !4037, line: 204, column: 13)
!4121 = !DILocalVariable(name: "input_u64", scope: !4122, file: !4037, line: 215, type: !381, align: 8)
!4122 = distinct !DILexicalBlock(scope: !4120, file: !4037, line: 215, column: 13)
!4123 = !DILocalVariable(name: "input_u64", scope: !4124, file: !4037, line: 226, type: !381, align: 8)
!4124 = distinct !DILexicalBlock(scope: !4122, file: !4037, line: 226, column: 13)
!4125 = !DILocalVariable(name: "rem", scope: !4126, file: !4037, line: 246, type: !11, align: 8)
!4126 = distinct !DILexicalBlock(scope: !4112, file: !4037, line: 246, column: 5)
!4127 = !DILocalVariable(name: "start_of_rem", scope: !4128, file: !4037, line: 247, type: !11, align: 8)
!4128 = distinct !DILexicalBlock(scope: !4126, file: !4037, line: 247, column: 5)
!4129 = !DILocalVariable(name: "input_chunk", scope: !4130, file: !4037, line: 252, type: !210, align: 8)
!4130 = distinct !DILexicalBlock(scope: !4128, file: !4037, line: 252, column: 9)
!4131 = !DILocalVariable(name: "output_chunk", scope: !4132, file: !4037, line: 253, type: !241, align: 8)
!4132 = distinct !DILexicalBlock(scope: !4130, file: !4037, line: 253, column: 9)
!4133 = !DILocation(line: 176, column: 9, scope: !4112)
!4134 = !DILocation(line: 167, column: 24, scope: !4100)
!4135 = !DILocation(line: 167, column: 38, scope: !4100)
!4136 = !DILocation(line: 167, column: 57, scope: !4100)
!4137 = !DILocation(line: 168, column: 9, scope: !4108)
!4138 = !DILocation(line: 168, column: 34, scope: !4100)
!4139 = !DILocalVariable(name: "self", arg: 1, scope: !4140, file: !810, line: 1017, type: !11)
!4140 = distinct !DISubprogram(name: "saturating_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_sub17hab3763294816eb16E", scope: !811, file: !810, line: 1017, type: !801, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4141)
!4141 = !{!4139, !4142}
!4142 = !DILocalVariable(name: "rhs", arg: 2, scope: !4140, file: !810, line: 1017, type: !11)
!4143 = !DILocation(line: 1017, column: 37, scope: !4140, inlinedAt: !4144)
!4144 = distinct !DILocation(line: 175, column: 27, scope: !4108)
!4145 = !DILocation(line: 1017, column: 43, scope: !4140, inlinedAt: !4144)
!4146 = !DILocation(line: 1018, column: 13, scope: !4140, inlinedAt: !4144)
!4147 = !DILocation(line: 175, column: 27, scope: !4108)
!4148 = !DILocation(line: 175, column: 9, scope: !4110)
!4149 = !DILocation(line: 176, column: 28, scope: !4110)
!4150 = !DILocation(line: 178, column: 8, scope: !4112)
!4151 = !DILocation(line: 246, column: 15, scope: !4112)
!4152 = !DILocation(line: 246, column: 9, scope: !4126)
!4153 = !DILocation(line: 247, column: 24, scope: !4126)
!4154 = !DILocation(line: 179, column: 15, scope: !4112)
!4155 = !DILocation(line: 182, column: 38, scope: !4112)
!4156 = !DILocation(line: 182, column: 52, scope: !4112)
!4157 = !DILocation(line: 182, column: 51, scope: !4112)
!4158 = !DILocation(line: 182, column: 32, scope: !4112)
!4159 = !DILocation(line: 182, column: 31, scope: !4112)
!4160 = !DILocation(line: 182, column: 17, scope: !4114)
!4161 = !DILocation(line: 183, column: 44, scope: !4114)
!4162 = !DILocation(line: 183, column: 59, scope: !4114)
!4163 = !DILocation(line: 183, column: 58, scope: !4114)
!4164 = !DILocation(line: 183, column: 37, scope: !4114)
!4165 = !DILocation(line: 183, column: 32, scope: !4114)
!4166 = !DILocation(line: 183, column: 17, scope: !4116)
!4167 = !DILocation(line: 193, column: 51, scope: !4116)
!4168 = !DILocation(line: 193, column: 39, scope: !4116)
!4169 = !DILocation(line: 193, column: 29, scope: !4116)
!4170 = !DILocation(line: 193, column: 17, scope: !4118)
!4171 = !DILocation(line: 195, column: 45, scope: !4118)
!4172 = !DILocation(line: 195, column: 44, scope: !4118)
!4173 = !DILocation(line: 195, column: 31, scope: !4118)
!4174 = !DILocation(line: 195, column: 13, scope: !4118)
!4175 = !DILocation(line: 196, column: 45, scope: !4118)
!4176 = !DILocation(line: 196, column: 44, scope: !4118)
!4177 = !DILocation(line: 196, column: 31, scope: !4118)
!4178 = !DILocation(line: 196, column: 13, scope: !4118)
!4179 = !DILocation(line: 197, column: 45, scope: !4118)
!4180 = !DILocation(line: 197, column: 44, scope: !4118)
!4181 = !DILocation(line: 197, column: 31, scope: !4118)
!4182 = !DILocation(line: 197, column: 13, scope: !4118)
!4183 = !DILocation(line: 198, column: 45, scope: !4118)
!4184 = !DILocation(line: 198, column: 44, scope: !4118)
!4185 = !DILocation(line: 198, column: 31, scope: !4118)
!4186 = !DILocation(line: 198, column: 13, scope: !4118)
!4187 = !DILocation(line: 199, column: 45, scope: !4118)
!4188 = !DILocation(line: 199, column: 44, scope: !4118)
!4189 = !DILocation(line: 199, column: 31, scope: !4118)
!4190 = !DILocation(line: 199, column: 13, scope: !4118)
!4191 = !DILocation(line: 200, column: 45, scope: !4118)
!4192 = !DILocation(line: 200, column: 44, scope: !4118)
!4193 = !DILocation(line: 200, column: 31, scope: !4118)
!4194 = !DILocation(line: 200, column: 13, scope: !4118)
!4195 = !DILocation(line: 201, column: 45, scope: !4118)
!4196 = !DILocation(line: 201, column: 44, scope: !4118)
!4197 = !DILocation(line: 201, column: 31, scope: !4118)
!4198 = !DILocation(line: 201, column: 13, scope: !4118)
!4199 = !DILocation(line: 202, column: 45, scope: !4118)
!4200 = !DILocation(line: 202, column: 44, scope: !4118)
!4201 = !DILocation(line: 202, column: 31, scope: !4118)
!4202 = !DILocation(line: 202, column: 13, scope: !4118)
!4203 = !DILocation(line: 204, column: 51, scope: !4118)
!4204 = !DILocation(line: 204, column: 39, scope: !4118)
!4205 = !DILocation(line: 204, column: 29, scope: !4118)
!4206 = !DILocation(line: 204, column: 17, scope: !4120)
!4207 = !DILocation(line: 206, column: 45, scope: !4120)
!4208 = !DILocation(line: 206, column: 44, scope: !4120)
!4209 = !DILocation(line: 206, column: 31, scope: !4120)
!4210 = !DILocation(line: 206, column: 13, scope: !4120)
!4211 = !DILocation(line: 207, column: 45, scope: !4120)
!4212 = !DILocation(line: 207, column: 44, scope: !4120)
!4213 = !DILocation(line: 207, column: 31, scope: !4120)
!4214 = !DILocation(line: 207, column: 13, scope: !4120)
!4215 = !DILocation(line: 208, column: 46, scope: !4120)
!4216 = !DILocation(line: 208, column: 45, scope: !4120)
!4217 = !DILocation(line: 208, column: 32, scope: !4120)
!4218 = !DILocation(line: 208, column: 13, scope: !4120)
!4219 = !DILocation(line: 209, column: 46, scope: !4120)
!4220 = !DILocation(line: 209, column: 45, scope: !4120)
!4221 = !DILocation(line: 209, column: 32, scope: !4120)
!4222 = !DILocation(line: 209, column: 13, scope: !4120)
!4223 = !DILocation(line: 210, column: 46, scope: !4120)
!4224 = !DILocation(line: 210, column: 45, scope: !4120)
!4225 = !DILocation(line: 210, column: 32, scope: !4120)
!4226 = !DILocation(line: 210, column: 13, scope: !4120)
!4227 = !DILocation(line: 211, column: 46, scope: !4120)
!4228 = !DILocation(line: 211, column: 45, scope: !4120)
!4229 = !DILocation(line: 211, column: 32, scope: !4120)
!4230 = !DILocation(line: 211, column: 13, scope: !4120)
!4231 = !DILocation(line: 212, column: 46, scope: !4120)
!4232 = !DILocation(line: 212, column: 45, scope: !4120)
!4233 = !DILocation(line: 212, column: 32, scope: !4120)
!4234 = !DILocation(line: 212, column: 13, scope: !4120)
!4235 = !DILocation(line: 213, column: 46, scope: !4120)
!4236 = !DILocation(line: 213, column: 45, scope: !4120)
!4237 = !DILocation(line: 213, column: 32, scope: !4120)
!4238 = !DILocation(line: 213, column: 13, scope: !4120)
!4239 = !DILocation(line: 215, column: 51, scope: !4120)
!4240 = !DILocation(line: 215, column: 39, scope: !4120)
!4241 = !DILocation(line: 215, column: 29, scope: !4120)
!4242 = !DILocation(line: 215, column: 17, scope: !4122)
!4243 = !DILocation(line: 217, column: 46, scope: !4122)
!4244 = !DILocation(line: 217, column: 45, scope: !4122)
!4245 = !DILocation(line: 217, column: 32, scope: !4122)
!4246 = !DILocation(line: 217, column: 13, scope: !4122)
!4247 = !DILocation(line: 218, column: 46, scope: !4122)
!4248 = !DILocation(line: 218, column: 45, scope: !4122)
!4249 = !DILocation(line: 218, column: 32, scope: !4122)
!4250 = !DILocation(line: 218, column: 13, scope: !4122)
!4251 = !DILocation(line: 219, column: 46, scope: !4122)
!4252 = !DILocation(line: 219, column: 45, scope: !4122)
!4253 = !DILocation(line: 219, column: 32, scope: !4122)
!4254 = !DILocation(line: 219, column: 13, scope: !4122)
!4255 = !DILocation(line: 220, column: 46, scope: !4122)
!4256 = !DILocation(line: 220, column: 45, scope: !4122)
!4257 = !DILocation(line: 220, column: 32, scope: !4122)
!4258 = !DILocation(line: 220, column: 13, scope: !4122)
!4259 = !DILocation(line: 221, column: 46, scope: !4122)
!4260 = !DILocation(line: 221, column: 45, scope: !4122)
!4261 = !DILocation(line: 221, column: 32, scope: !4122)
!4262 = !DILocation(line: 221, column: 13, scope: !4122)
!4263 = !DILocation(line: 222, column: 46, scope: !4122)
!4264 = !DILocation(line: 222, column: 45, scope: !4122)
!4265 = !DILocation(line: 222, column: 32, scope: !4122)
!4266 = !DILocation(line: 222, column: 13, scope: !4122)
!4267 = !DILocation(line: 223, column: 46, scope: !4122)
!4268 = !DILocation(line: 223, column: 45, scope: !4122)
!4269 = !DILocation(line: 223, column: 32, scope: !4122)
!4270 = !DILocation(line: 223, column: 13, scope: !4122)
!4271 = !DILocation(line: 224, column: 46, scope: !4122)
!4272 = !DILocation(line: 224, column: 45, scope: !4122)
!4273 = !DILocation(line: 224, column: 32, scope: !4122)
!4274 = !DILocation(line: 224, column: 13, scope: !4122)
!4275 = !DILocation(line: 226, column: 51, scope: !4122)
!4276 = !DILocation(line: 226, column: 39, scope: !4122)
!4277 = !DILocation(line: 226, column: 29, scope: !4122)
!4278 = !DILocation(line: 226, column: 17, scope: !4124)
!4279 = !DILocation(line: 228, column: 46, scope: !4124)
!4280 = !DILocation(line: 228, column: 45, scope: !4124)
!4281 = !DILocation(line: 228, column: 32, scope: !4124)
!4282 = !DILocation(line: 228, column: 13, scope: !4124)
!4283 = !DILocation(line: 229, column: 46, scope: !4124)
!4284 = !DILocation(line: 229, column: 45, scope: !4124)
!4285 = !DILocation(line: 229, column: 32, scope: !4124)
!4286 = !DILocation(line: 229, column: 13, scope: !4124)
!4287 = !DILocation(line: 230, column: 46, scope: !4124)
!4288 = !DILocation(line: 230, column: 45, scope: !4124)
!4289 = !DILocation(line: 230, column: 32, scope: !4124)
!4290 = !DILocation(line: 230, column: 13, scope: !4124)
!4291 = !DILocation(line: 231, column: 46, scope: !4124)
!4292 = !DILocation(line: 231, column: 45, scope: !4124)
!4293 = !DILocation(line: 231, column: 32, scope: !4124)
!4294 = !DILocation(line: 231, column: 13, scope: !4124)
!4295 = !DILocation(line: 232, column: 46, scope: !4124)
!4296 = !DILocation(line: 232, column: 45, scope: !4124)
!4297 = !DILocation(line: 232, column: 32, scope: !4124)
!4298 = !DILocation(line: 232, column: 13, scope: !4124)
!4299 = !DILocation(line: 233, column: 46, scope: !4124)
!4300 = !DILocation(line: 233, column: 45, scope: !4124)
!4301 = !DILocation(line: 233, column: 32, scope: !4124)
!4302 = !DILocation(line: 233, column: 13, scope: !4124)
!4303 = !DILocation(line: 234, column: 46, scope: !4124)
!4304 = !DILocation(line: 234, column: 45, scope: !4124)
!4305 = !DILocation(line: 234, column: 32, scope: !4124)
!4306 = !DILocation(line: 234, column: 13, scope: !4124)
!4307 = !DILocation(line: 235, column: 46, scope: !4124)
!4308 = !DILocation(line: 235, column: 45, scope: !4124)
!4309 = !DILocation(line: 235, column: 32, scope: !4124)
!4310 = !DILocation(line: 235, column: 13, scope: !4124)
!4311 = !DILocation(line: 237, column: 13, scope: !4124)
!4312 = !DILocation(line: 238, column: 13, scope: !4124)
!4313 = !DILocation(line: 179, column: 9, scope: !4112)
!4314 = !DILocation(line: 247, column: 9, scope: !4128)
!4315 = !DILocation(line: 251, column: 5, scope: !4128)
!4316 = !DILocation(line: 251, column: 11, scope: !4128)
!4317 = !DILocation(line: 266, column: 8, scope: !4128)
!4318 = !DILocation(line: 252, column: 34, scope: !4128)
!4319 = !DILocation(line: 252, column: 48, scope: !4128)
!4320 = !DILocation(line: 252, column: 47, scope: !4128)
!4321 = !DILocation(line: 252, column: 28, scope: !4128)
!4322 = !DILocation(line: 252, column: 27, scope: !4128)
!4323 = !DILocation(line: 252, column: 13, scope: !4130)
!4324 = !DILocation(line: 253, column: 40, scope: !4130)
!4325 = !DILocation(line: 253, column: 55, scope: !4130)
!4326 = !DILocation(line: 253, column: 54, scope: !4130)
!4327 = !DILocation(line: 253, column: 33, scope: !4130)
!4328 = !DILocation(line: 253, column: 28, scope: !4130)
!4329 = !DILocation(line: 253, column: 13, scope: !4132)
!4330 = !DILocation(line: 255, column: 41, scope: !4132)
!4331 = !DILocation(line: 255, column: 40, scope: !4132)
!4332 = !DILocation(line: 255, column: 27, scope: !4132)
!4333 = !DILocation(line: 255, column: 9, scope: !4132)
!4334 = !DILocation(line: 257, column: 28, scope: !4132)
!4335 = !DILocation(line: 257, column: 50, scope: !4132)
!4336 = !DILocation(line: 257, column: 27, scope: !4132)
!4337 = !DILocation(line: 257, column: 26, scope: !4132)
!4338 = !DILocation(line: 257, column: 13, scope: !4132)
!4339 = !DILocation(line: 256, column: 9, scope: !4132)
!4340 = !DILocation(line: 259, column: 28, scope: !4132)
!4341 = !DILocation(line: 259, column: 50, scope: !4132)
!4342 = !DILocation(line: 259, column: 27, scope: !4132)
!4343 = !DILocation(line: 259, column: 26, scope: !4132)
!4344 = !DILocation(line: 259, column: 13, scope: !4132)
!4345 = !DILocation(line: 258, column: 9, scope: !4132)
!4346 = !DILocation(line: 260, column: 41, scope: !4132)
!4347 = !DILocation(line: 260, column: 40, scope: !4132)
!4348 = !DILocation(line: 260, column: 27, scope: !4132)
!4349 = !DILocation(line: 260, column: 9, scope: !4132)
!4350 = !DILocation(line: 262, column: 9, scope: !4132)
!4351 = !DILocation(line: 263, column: 9, scope: !4132)
!4352 = !DILocation(line: 267, column: 46, scope: !4128)
!4353 = !DILocation(line: 274, column: 15, scope: !4128)
!4354 = !DILocation(line: 275, column: 46, scope: !4128)
!4355 = !DILocation(line: 282, column: 2, scope: !4100)
!4356 = !DILocation(line: 275, column: 45, scope: !4128)
!4357 = !DILocation(line: 275, column: 32, scope: !4128)
!4358 = !DILocation(line: 275, column: 16, scope: !4128)
!4359 = !DILocation(line: 275, column: 9, scope: !4128)
!4360 = !DILocation(line: 277, column: 28, scope: !4128)
!4361 = !DILocation(line: 277, column: 27, scope: !4128)
!4362 = !DILocation(line: 277, column: 26, scope: !4128)
!4363 = !DILocation(line: 277, column: 13, scope: !4128)
!4364 = !DILocation(line: 276, column: 16, scope: !4128)
!4365 = !DILocation(line: 276, column: 9, scope: !4128)
!4366 = !DILocation(line: 278, column: 9, scope: !4128)
!4367 = !DILocation(line: 274, column: 12, scope: !4128)
!4368 = !DILocation(line: 267, column: 45, scope: !4128)
!4369 = !DILocation(line: 267, column: 32, scope: !4128)
!4370 = !DILocation(line: 267, column: 16, scope: !4128)
!4371 = !DILocation(line: 267, column: 9, scope: !4128)
!4372 = !DILocation(line: 268, column: 51, scope: !4128)
!4373 = !DILocation(line: 269, column: 21, scope: !4128)
!4374 = !DILocation(line: 269, column: 15, scope: !4128)
!4375 = !DILocation(line: 268, column: 50, scope: !4128)
!4376 = !DILocation(line: 268, column: 49, scope: !4128)
!4377 = !DILocation(line: 268, column: 36, scope: !4128)
!4378 = !DILocation(line: 268, column: 16, scope: !4128)
!4379 = !DILocation(line: 268, column: 9, scope: !4128)
!4380 = !DILocation(line: 272, column: 34, scope: !4128)
!4381 = !DILocation(line: 272, column: 28, scope: !4128)
!4382 = !DILocation(line: 272, column: 27, scope: !4128)
!4383 = !DILocation(line: 272, column: 26, scope: !4128)
!4384 = !DILocation(line: 272, column: 13, scope: !4128)
!4385 = !DILocation(line: 271, column: 16, scope: !4128)
!4386 = !DILocation(line: 271, column: 9, scope: !4128)
!4387 = !DILocation(line: 273, column: 9, scope: !4128)
!4388 = !DILocation(line: 266, column: 5, scope: !4128)
!4389 = distinct !DISubprogram(name: "encoded_size", linkageName: "_ZN6base646encode12encoded_size17h298c08caba0cfc08E", scope: !2348, file: !4037, line: 285, type: !4390, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4392)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!697, !11, !3764}
!4392 = !{!4393, !4394, !4395, !4397, !4399, !4401, !4403, !4407}
!4393 = !DILocalVariable(name: "bytes_len", arg: 1, scope: !4389, file: !4037, line: 285, type: !11)
!4394 = !DILocalVariable(name: "config", arg: 2, scope: !4389, file: !4037, line: 285, type: !3764)
!4395 = !DILocalVariable(name: "rem", scope: !4396, file: !4037, line: 286, type: !11, align: 8)
!4396 = distinct !DILexicalBlock(scope: !4389, file: !4037, line: 286, column: 5)
!4397 = !DILocalVariable(name: "complete_input_chunks", scope: !4398, file: !4037, line: 288, type: !11, align: 8)
!4398 = distinct !DILexicalBlock(scope: !4396, file: !4037, line: 288, column: 5)
!4399 = !DILocalVariable(name: "complete_chunk_output", scope: !4400, file: !4037, line: 289, type: !697, align: 8)
!4400 = distinct !DILexicalBlock(scope: !4398, file: !4037, line: 289, column: 5)
!4401 = !DILocalVariable(name: "encoded_rem", scope: !4402, file: !4037, line: 295, type: !11, align: 8)
!4402 = distinct !DILexicalBlock(scope: !4400, file: !4037, line: 295, column: 13)
!4403 = !DILocalVariable(name: "arg0", scope: !4404, file: !4037, line: 298, type: !784, align: 8)
!4404 = !DILexicalBlockFile(scope: !4405, file: !4037, discriminator: 0)
!4405 = distinct !DILexicalBlock(scope: !4400, file: !4406, line: 34, column: 38)
!4406 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "95851010b93c9b57c6fb236c55505626")
!4407 = !DILocalVariable(name: "args", scope: !4408, file: !4037, line: 298, type: !4410, align: 8)
!4408 = !DILexicalBlockFile(scope: !4409, file: !4037, discriminator: 0)
!4409 = distinct !DILexicalBlock(scope: !4400, file: !4406, line: 34, column: 38)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[core::fmt::ArgumentV1; 1]", baseType: !4411, size: 64, align: 64, dwarfAddressSpace: 0)
!4411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 128, align: 64, elements: !4412)
!4412 = !{!4413}
!4413 = !DISubrange(count: 1, lowerBound: 0)
!4414 = !DILocation(line: 285, column: 21, scope: !4389)
!4415 = !DILocation(line: 285, column: 39, scope: !4389)
!4416 = !DILocation(line: 295, column: 17, scope: !4402)
!4417 = !DILocation(line: 286, column: 15, scope: !4389)
!4418 = !DILocation(line: 286, column: 9, scope: !4396)
!4419 = !DILocation(line: 288, column: 33, scope: !4396)
!4420 = !DILocation(line: 288, column: 9, scope: !4398)
!4421 = !DILocation(line: 289, column: 33, scope: !4398)
!4422 = !DILocation(line: 289, column: 9, scope: !4400)
!4423 = !DILocation(line: 291, column: 8, scope: !4400)
!4424 = !DILocation(line: 303, column: 9, scope: !4400)
!4425 = !DILocation(line: 291, column: 5, scope: !4400)
!4426 = !DILocation(line: 292, column: 12, scope: !4400)
!4427 = !DILocation(line: 295, column: 31, scope: !4400)
!4428 = !DILocation(line: 293, column: 13, scope: !4400)
!4429 = !DILocation(line: 305, column: 2, scope: !4389)
!4430 = !DILocation(line: 298, column: 22, scope: !4400)
!4431 = !DILocation(line: 298, column: 22, scope: !4404)
!4432 = !DILocation(line: 296, column: 22, scope: !4400)
!4433 = !DILocation(line: 297, column: 22, scope: !4400)
!4434 = !DILocation(line: 298, column: 22, scope: !4408)
!4435 = !DILocation(line: 300, column: 44, scope: !4402)
!4436 = !DILocation(line: 300, column: 13, scope: !4402)
!4437 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN6base646encode12encoded_size28_$u7b$$u7b$closure$u7d$$u7d$17h67d94fbfae20557fE", scope: !2347, file: !4037, line: 293, type: !4438, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4440)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!697, !2372, !11}
!4440 = !{!4441, !4442}
!4441 = !DILocalVariable(name: "c", arg: 2, scope: !4437, file: !4037, line: 293, type: !11)
!4442 = !DILocalVariable(arg: 1, scope: !4437, file: !4037, line: 293, type: !2372)
!4443 = !DILocation(line: 293, column: 44, scope: !4437)
!4444 = !DILocation(line: 293, column: 45, scope: !4437)
!4445 = !DILocation(line: 293, column: 48, scope: !4437)
!4446 = !DILocation(line: 293, column: 64, scope: !4437)
!4447 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN6base646encode12encoded_size28_$u7b$$u7b$closure$u7d$$u7d$17h6db7cfe2e3285615E", scope: !2347, file: !4037, line: 300, type: !4448, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4450)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!697, !2346, !11}
!4450 = !{!4451, !4452}
!4451 = !DILocalVariable(name: "c", arg: 2, scope: !4447, file: !4037, line: 300, type: !11)
!4452 = !DILocalVariable(name: "encoded_rem", scope: !4447, file: !4037, line: 295, type: !11, align: 8)
!4453 = !DILocation(line: 295, column: 17, scope: !4447)
!4454 = !DILocation(line: 300, column: 45, scope: !4447)
!4455 = !DILocation(line: 300, column: 62, scope: !4447)
!4456 = !DILocation(line: 300, column: 48, scope: !4447)
!4457 = !DILocation(line: 300, column: 74, scope: !4447)
!4458 = distinct !DISubprogram(name: "add_padding", linkageName: "_ZN6base646encode11add_padding17h9d64c96abebfa52eE", scope: !2348, file: !4037, line: 311, type: !4459, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4461)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!11, !11, !241}
!4461 = !{!4462, !4463, !4464, !4466, !4468, !4470, !4472}
!4462 = !DILocalVariable(name: "input_len", arg: 1, scope: !4458, file: !4037, line: 311, type: !11)
!4463 = !DILocalVariable(name: "output", arg: 2, scope: !4458, file: !4037, line: 311, type: !241)
!4464 = !DILocalVariable(name: "rem", scope: !4465, file: !4037, line: 312, type: !11, align: 8)
!4465 = distinct !DILexicalBlock(scope: !4458, file: !4037, line: 312, column: 5)
!4466 = !DILocalVariable(name: "bytes_written", scope: !4467, file: !4037, line: 313, type: !11, align: 8)
!4467 = distinct !DILexicalBlock(scope: !4465, file: !4037, line: 313, column: 5)
!4468 = !DILocalVariable(name: "iter", scope: !4469, file: !4037, line: 314, type: !119, align: 8)
!4469 = distinct !DILexicalBlock(scope: !4467, file: !4037, line: 314, column: 5)
!4470 = !DILocalVariable(name: "__next", scope: !4471, file: !4037, line: 314, type: !11, align: 8)
!4471 = distinct !DILexicalBlock(scope: !4469, file: !4037, line: 314, column: 14)
!4472 = !DILocalVariable(name: "val", scope: !4473, file: !4037, line: 314, type: !11, align: 8)
!4473 = distinct !DILexicalBlock(scope: !4471, file: !4037, line: 314, column: 9)
!4474 = !DILocation(line: 313, column: 9, scope: !4467)
!4475 = !DILocation(line: 311, column: 20, scope: !4458)
!4476 = !DILocation(line: 311, column: 38, scope: !4458)
!4477 = !DILocation(line: 314, column: 14, scope: !4469)
!4478 = !DILocation(line: 312, column: 15, scope: !4458)
!4479 = !DILocation(line: 312, column: 9, scope: !4465)
!4480 = !DILocation(line: 313, column: 29, scope: !4465)
!4481 = !DILocation(line: 314, column: 18, scope: !4467)
!4482 = !DILocation(line: 314, column: 17, scope: !4467)
!4483 = !DILocation(line: 314, column: 14, scope: !4467)
!4484 = !DILocation(line: 314, column: 5, scope: !4469)
!4485 = !DILocation(line: 314, column: 14, scope: !4471)
!4486 = !DILocation(line: 320, column: 2, scope: !4458)
!4487 = !DILocation(line: 314, column: 9, scope: !4471)
!4488 = !DILocation(line: 314, column: 9, scope: !4473)
!4489 = !DILocation(line: 315, column: 16, scope: !4471)
!4490 = !DILocation(line: 315, column: 9, scope: !4471)
!4491 = !DILocation(line: 316, column: 9, scope: !4471)
!4492 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$base64..decode..DecodeError$u20$as$u20$core..fmt..Display$GT$3fmt17h5d1678b63c0ca974E", scope: !4494, file: !4493, line: 45, type: !4496, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4516)
!4493 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0", checksumkind: CSK_MD5, checksum: "bf787a83f74dafb5dffe7c892e28b7bd")
!4494 = !DINamespace(name: "{impl#0}", scope: !4495)
!4495 = !DINamespace(name: "decode", scope: !55)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!73, !4498, !689}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&DecodeError", baseType: !4499, size: 64, align: 64, dwarfAddressSpace: 0)
!4499 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeError", scope: !4495, file: !2, size: 128, align: 64, elements: !4500, identifier: "3557fa90da2e903259f6cabee4e8d967")
!4500 = !{!4501}
!4501 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4495, file: !2, size: 128, align: 64, elements: !4502, templateParams: !4, identifier: "3557fa90da2e903259f6cabee4e8d967_variant_part", discriminator: !4515)
!4502 = !{!4503, !4508, !4510}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "InvalidByte", scope: !4501, file: !2, baseType: !4504, size: 128, align: 64, extraData: i64 0)
!4504 = !DICompositeType(tag: DW_TAG_structure_type, name: "InvalidByte", scope: !4499, file: !2, size: 128, align: 64, elements: !4505, templateParams: !4, identifier: "3557fa90da2e903259f6cabee4e8d967::InvalidByte")
!4505 = !{!4506, !4507}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4504, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4504, file: !2, baseType: !22, size: 8, align: 8, offset: 8)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "InvalidLength", scope: !4501, file: !2, baseType: !4509, size: 128, align: 64, extraData: i64 1)
!4509 = !DICompositeType(tag: DW_TAG_structure_type, name: "InvalidLength", scope: !4499, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "3557fa90da2e903259f6cabee4e8d967::InvalidLength")
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "InvalidLastSymbol", scope: !4501, file: !2, baseType: !4511, size: 128, align: 64, extraData: i64 2)
!4511 = !DICompositeType(tag: DW_TAG_structure_type, name: "InvalidLastSymbol", scope: !4499, file: !2, size: 128, align: 64, elements: !4512, templateParams: !4, identifier: "3557fa90da2e903259f6cabee4e8d967::InvalidLastSymbol")
!4512 = !{!4513, !4514}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4511, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4511, file: !2, baseType: !22, size: 8, align: 8, offset: 8)
!4515 = !DIDerivedType(tag: DW_TAG_member, scope: !4495, file: !2, baseType: !22, size: 8, align: 8, flags: DIFlagArtificial)
!4516 = !{!4517, !4518, !4519, !4521, !4522, !4525, !4526, !4533, !4540, !4542, !4543, !4546, !4547}
!4517 = !DILocalVariable(name: "self", arg: 1, scope: !4492, file: !4493, line: 45, type: !4498)
!4518 = !DILocalVariable(name: "f", arg: 2, scope: !4492, file: !4493, line: 45, type: !689)
!4519 = !DILocalVariable(name: "index", scope: !4520, file: !4493, line: 47, type: !11, align: 8)
!4520 = distinct !DILexicalBlock(scope: !4492, file: !4493, line: 47, column: 13)
!4521 = !DILocalVariable(name: "byte", scope: !4520, file: !4493, line: 47, type: !22, align: 1)
!4522 = !DILocalVariable(name: "arg0", scope: !4523, file: !4493, line: 48, type: !49, align: 8)
!4523 = !DILexicalBlockFile(scope: !4524, file: !4493, discriminator: 0)
!4524 = distinct !DILexicalBlock(scope: !4520, file: !1880, line: 479, column: 49)
!4525 = !DILocalVariable(name: "arg1", scope: !4523, file: !4493, line: 48, type: !45, align: 8)
!4526 = !DILocalVariable(name: "args", scope: !4527, file: !4493, line: 48, type: !4529, align: 8)
!4527 = !DILexicalBlockFile(scope: !4528, file: !4493, discriminator: 0)
!4528 = distinct !DILexicalBlock(scope: !4520, file: !1880, line: 479, column: 49)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[core::fmt::ArgumentV1; 2]", baseType: !4530, size: 64, align: 64, dwarfAddressSpace: 0)
!4530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 256, align: 64, elements: !4531)
!4531 = !{!4532}
!4532 = !DISubrange(count: 2, lowerBound: 0)
!4533 = !DILocalVariable(name: "args", scope: !4534, file: !4493, line: 50, type: !4536, align: 8)
!4534 = !DILexicalBlockFile(scope: !4535, file: !4493, discriminator: 0)
!4535 = distinct !DILexicalBlock(scope: !4492, file: !1880, line: 479, column: 49)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[core::fmt::ArgumentV1; 0]", baseType: !4537, size: 64, align: 64, dwarfAddressSpace: 0)
!4537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, align: 64, elements: !4538)
!4538 = !{!4539}
!4539 = !DISubrange(count: 0, lowerBound: 0)
!4540 = !DILocalVariable(name: "index", scope: !4541, file: !4493, line: 51, type: !11, align: 8)
!4541 = distinct !DILexicalBlock(scope: !4492, file: !4493, line: 51, column: 13)
!4542 = !DILocalVariable(name: "byte", scope: !4541, file: !4493, line: 51, type: !22, align: 1)
!4543 = !DILocalVariable(name: "arg0", scope: !4544, file: !4493, line: 52, type: !49, align: 8)
!4544 = !DILexicalBlockFile(scope: !4545, file: !4493, discriminator: 0)
!4545 = distinct !DILexicalBlock(scope: !4541, file: !1880, line: 479, column: 49)
!4546 = !DILocalVariable(name: "arg1", scope: !4544, file: !4493, line: 52, type: !45, align: 8)
!4547 = !DILocalVariable(name: "args", scope: !4548, file: !4493, line: 52, type: !4529, align: 8)
!4548 = !DILexicalBlockFile(scope: !4549, file: !4493, discriminator: 0)
!4549 = distinct !DILexicalBlock(scope: !4541, file: !1880, line: 479, column: 49)
!4550 = !DILocation(line: 45, column: 12, scope: !4492)
!4551 = !DILocation(line: 45, column: 19, scope: !4492)
!4552 = !DILocation(line: 47, column: 38, scope: !4520)
!4553 = !DILocation(line: 47, column: 45, scope: !4520)
!4554 = !DILocation(line: 51, column: 44, scope: !4541)
!4555 = !DILocation(line: 51, column: 51, scope: !4541)
!4556 = !DILocation(line: 46, column: 15, scope: !4492)
!4557 = !{i8 0, i8 3}
!4558 = !DILocation(line: 46, column: 9, scope: !4492)
!4559 = !DILocation(line: 47, column: 38, scope: !4492)
!4560 = !DILocation(line: 47, column: 45, scope: !4492)
!4561 = !DILocation(line: 48, column: 17, scope: !4520)
!4562 = !DILocation(line: 48, column: 17, scope: !4523)
!4563 = !DILocation(line: 50, column: 43, scope: !4492)
!4564 = !DILocation(line: 50, column: 43, scope: !4534)
!4565 = !DILocation(line: 51, column: 44, scope: !4492)
!4566 = !DILocation(line: 51, column: 51, scope: !4492)
!4567 = !DILocation(line: 52, column: 17, scope: !4541)
!4568 = !DILocation(line: 52, column: 17, scope: !4544)
!4569 = !DILocation(line: 52, column: 17, scope: !4548)
!4570 = !DILocation(line: 55, column: 6, scope: !4492)
!4571 = !DILocation(line: 48, column: 17, scope: !4527)
!4572 = distinct !DISubprogram(name: "description", linkageName: "_ZN65_$LT$base64..decode..DecodeError$u20$as$u20$std..error..Error$GT$11description17h0132e6b00ae973caE", scope: !4573, file: !4493, line: 60, type: !4574, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4576)
!4573 = !DINamespace(name: "{impl#1}", scope: !4495)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!220, !4498}
!4576 = !{!4577}
!4577 = !DILocalVariable(name: "self", arg: 1, scope: !4572, file: !4493, line: 60, type: !4498)
!4578 = !DILocation(line: 60, column: 20, scope: !4572)
!4579 = !DILocation(line: 61, column: 15, scope: !4572)
!4580 = !DILocation(line: 61, column: 9, scope: !4572)
!4581 = !DILocation(line: 62, column: 47, scope: !4572)
!4582 = !DILocation(line: 62, column: 60, scope: !4572)
!4583 = !DILocation(line: 63, column: 43, scope: !4572)
!4584 = !DILocation(line: 63, column: 58, scope: !4572)
!4585 = !DILocation(line: 64, column: 53, scope: !4572)
!4586 = !DILocation(line: 64, column: 73, scope: !4572)
!4587 = !DILocation(line: 66, column: 6, scope: !4572)
!4588 = distinct !DISubprogram(name: "cause", linkageName: "_ZN65_$LT$base64..decode..DecodeError$u20$as$u20$std..error..Error$GT$5cause17h5fc93a3133d6890bE", scope: !4573, file: !4493, line: 68, type: !4589, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4607)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!4591, !4498}
!4591 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&dyn std::error::Error>", scope: !14, file: !2, size: 128, align: 64, elements: !4592, identifier: "8cfc0790c3e7521277246efc56ca4298")
!4592 = !{!4593}
!4593 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14, file: !2, size: 128, align: 64, elements: !4594, templateParams: !4597, identifier: "8cfc0790c3e7521277246efc56ca4298_variant_part", discriminator: !709)
!4594 = !{!4595, !4603}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4593, file: !2, baseType: !4596, size: 128, align: 64, extraData: i64 0)
!4596 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4591, file: !2, size: 128, align: 64, elements: !4, templateParams: !4597, identifier: "8cfc0790c3e7521277246efc56ca4298::None")
!4597 = !{!4598}
!4598 = !DITemplateTypeParameter(name: "T", type: !4599)
!4599 = !DICompositeType(tag: DW_TAG_structure_type, name: "&dyn std::error::Error", file: !2, size: 128, align: 64, elements: !4600, templateParams: !4, identifier: "50fdba6a6c2c004ab069e318f06a9018")
!4600 = !{!4601, !4602}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4599, file: !2, baseType: !178, size: 64, align: 64, flags: DIFlagArtificial)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4599, file: !2, baseType: !716, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4593, file: !2, baseType: !4604, size: 128, align: 64)
!4604 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4591, file: !2, size: 128, align: 64, elements: !4605, templateParams: !4597, identifier: "8cfc0790c3e7521277246efc56ca4298::Some")
!4605 = !{!4606}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4604, file: !2, baseType: !4599, size: 128, align: 64)
!4607 = !{!4608}
!4608 = !DILocalVariable(name: "self", arg: 1, scope: !4588, file: !4493, line: 68, type: !4498)
!4609 = !DILocation(line: 68, column: 14, scope: !4588)
!4610 = !DILocation(line: 69, column: 9, scope: !4588)
!4611 = !DILocation(line: 70, column: 6, scope: !4588)
!4612 = distinct !DISubprogram(name: "num_chunks", linkageName: "_ZN6base646decode10num_chunks17h393719bfe2dd0621E", scope: !4495, file: !4493, line: 184, type: !4613, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4615)
!4613 = !DISubroutineType(types: !4614)
!4614 = !{!11, !210}
!4615 = !{!4616}
!4616 = !DILocalVariable(name: "input", arg: 1, scope: !4612, file: !4493, line: 184, type: !210)
!4617 = !DILocation(line: 184, column: 15, scope: !4612)
!4618 = !DILocation(line: 185, column: 5, scope: !4612)
!4619 = !DILocation(line: 190, column: 2, scope: !4612)
!4620 = distinct !DISubprogram(name: "encode_table", linkageName: "_ZN6base6412CharacterSet12encode_table17h9d36b7121cb3fda5E", scope: !54, file: !1777, line: 128, type: !4621, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!3797, !54}
!4623 = !{!4624}
!4624 = !DILocalVariable(name: "self", arg: 1, scope: !4620, file: !1777, line: 128, type: !54)
!4625 = !DILocation(line: 128, column: 21, scope: !4620)
!4626 = !DILocation(line: 129, column: 15, scope: !4620)
!4627 = !DILocation(line: 129, column: 9, scope: !4620)
!4628 = !DILocation(line: 130, column: 39, scope: !4620)
!4629 = !DILocation(line: 131, column: 38, scope: !4620)
!4630 = !DILocation(line: 132, column: 36, scope: !4620)
!4631 = !DILocation(line: 133, column: 37, scope: !4620)
!4632 = !DILocation(line: 134, column: 40, scope: !4620)
!4633 = !DILocation(line: 135, column: 37, scope: !4620)
!4634 = !DILocation(line: 137, column: 6, scope: !4620)
!4635 = distinct !DISubprogram(name: "decode_table", linkageName: "_ZN6base6412CharacterSet12decode_table17hb247266c39396e3dE", scope: !54, file: !1777, line: 139, type: !4636, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4642)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!4638, !54}
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 256]", baseType: !4639, size: 64, align: 64, dwarfAddressSpace: 0)
!4639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2048, align: 8, elements: !4640)
!4640 = !{!4641}
!4641 = !DISubrange(count: 256, lowerBound: 0)
!4642 = !{!4643}
!4643 = !DILocalVariable(name: "self", arg: 1, scope: !4635, file: !1777, line: 139, type: !54)
!4644 = !DILocation(line: 139, column: 21, scope: !4635)
!4645 = !DILocation(line: 140, column: 15, scope: !4635)
!4646 = !DILocation(line: 140, column: 9, scope: !4635)
!4647 = !DILocation(line: 141, column: 39, scope: !4635)
!4648 = !DILocation(line: 142, column: 38, scope: !4635)
!4649 = !DILocation(line: 143, column: 36, scope: !4635)
!4650 = !DILocation(line: 144, column: 37, scope: !4635)
!4651 = !DILocation(line: 145, column: 40, scope: !4635)
!4652 = !DILocation(line: 146, column: 37, scope: !4635)
!4653 = !DILocation(line: 148, column: 6, scope: !4635)
!4654 = distinct !DISubprogram(name: "new", linkageName: "_ZN6base646Config3new17hef66318e98a8a26eE", scope: !3764, file: !1777, line: 164, type: !4655, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4657)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!3764, !54, !67}
!4657 = !{!4658, !4659}
!4658 = !DILocalVariable(name: "char_set", arg: 1, scope: !4654, file: !1777, line: 164, type: !54)
!4659 = !DILocalVariable(name: "pad", arg: 2, scope: !4654, file: !1777, line: 164, type: !67)
!4660 = !DILocation(line: 164, column: 22, scope: !4654)
!4661 = !DILocation(line: 164, column: 46, scope: !4654)
!4662 = !DILocation(line: 165, column: 9, scope: !4654)
!4663 = !DILocation(line: 170, column: 6, scope: !4654)
!4664 = distinct !DISubprogram(name: "pad", linkageName: "_ZN6base646Config3pad17h7eec04f9860184c1E", scope: !3764, file: !1777, line: 173, type: !4665, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4667)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!3764, !3764, !67}
!4667 = !{!4668, !4669}
!4668 = !DILocalVariable(name: "self", arg: 1, scope: !4664, file: !1777, line: 173, type: !3764)
!4669 = !DILocalVariable(name: "pad", arg: 2, scope: !4664, file: !1777, line: 173, type: !67)
!4670 = !DILocation(line: 173, column: 22, scope: !4664)
!4671 = !DILocation(line: 173, column: 28, scope: !4664)
!4672 = !DILocation(line: 174, column: 9, scope: !4664)
!4673 = !DILocation(line: 175, column: 6, scope: !4664)
!4674 = distinct !DISubprogram(name: "decode_allow_trailing_bits", linkageName: "_ZN6base646Config26decode_allow_trailing_bits17h6ba816a23a7bca7aE", scope: !3764, file: !1777, line: 181, type: !4665, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4675)
!4675 = !{!4676, !4677}
!4676 = !DILocalVariable(name: "self", arg: 1, scope: !4674, file: !1777, line: 181, type: !3764)
!4677 = !DILocalVariable(name: "allow", arg: 2, scope: !4674, file: !1777, line: 181, type: !67)
!4678 = !DILocation(line: 181, column: 45, scope: !4674)
!4679 = !DILocation(line: 181, column: 51, scope: !4674)
!4680 = !DILocation(line: 182, column: 9, scope: !4674)
!4681 = !DILocation(line: 186, column: 6, scope: !4674)
!4682 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$base64..decode..DecodeError$u20$as$u20$core..fmt..Debug$GT$3fmt17he7c645030fb354f4E", scope: !4683, file: !4493, line: 27, type: !4496, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4684)
!4683 = !DINamespace(name: "{impl#3}", scope: !4495)
!4684 = !{!4685, !4686, !4687, !4689, !4690, !4700, !4702, !4704, !4705}
!4685 = !DILocalVariable(name: "self", arg: 1, scope: !4682, file: !4493, line: 27, type: !4498)
!4686 = !DILocalVariable(name: "f", arg: 2, scope: !4682, file: !4493, line: 27, type: !689)
!4687 = !DILocalVariable(name: "__self_0", scope: !4688, file: !4493, line: 30, type: !45, align: 8)
!4688 = distinct !DILexicalBlock(scope: !4682, file: !4493, line: 27, column: 17)
!4689 = !DILocalVariable(name: "__self_1", scope: !4688, file: !4493, line: 30, type: !49, align: 8)
!4690 = !DILocalVariable(name: "debug_trait_builder", scope: !4691, file: !4493, line: 27, type: !4692, align: 8)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !4493, line: 27, column: 17)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugTuple", baseType: !4693, size: 64, align: 64, dwarfAddressSpace: 0)
!4693 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugTuple", scope: !4694, file: !2, size: 192, align: 64, elements: !4695, templateParams: !4, identifier: "b87e16a2b5c8e5fbfa596aeab6e7643")
!4694 = !DINamespace(name: "builders", scope: !81)
!4695 = !{!4696, !4697, !4698, !4699}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4693, file: !2, baseType: !689, size: 64, align: 64)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4693, file: !2, baseType: !73, size: 8, align: 8, offset: 128)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !4693, file: !2, baseType: !11, size: 64, align: 64, offset: 64)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "empty_name", scope: !4693, file: !2, baseType: !67, size: 8, align: 8, offset: 136)
!4700 = !DILocalVariable(name: "debug_trait_builder", scope: !4701, file: !4493, line: 27, type: !4692, align: 8)
!4701 = distinct !DILexicalBlock(scope: !4682, file: !4493, line: 27, column: 17)
!4702 = !DILocalVariable(name: "__self_0", scope: !4703, file: !4493, line: 41, type: !45, align: 8)
!4703 = distinct !DILexicalBlock(scope: !4682, file: !4493, line: 27, column: 17)
!4704 = !DILocalVariable(name: "__self_1", scope: !4703, file: !4493, line: 41, type: !49, align: 8)
!4705 = !DILocalVariable(name: "debug_trait_builder", scope: !4706, file: !4493, line: 27, type: !4692, align: 8)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !4493, line: 27, column: 17)
!4707 = !DILocation(line: 27, column: 17, scope: !4682)
!4708 = !DILocation(line: 30, column: 17, scope: !4682)
!4709 = !DILocation(line: 30, column: 17, scope: !4688)
!4710 = !DILocation(line: 30, column: 24, scope: !4682)
!4711 = !DILocation(line: 30, column: 24, scope: !4688)
!4712 = !DILocation(line: 27, column: 17, scope: !4688)
!4713 = !DILocation(line: 41, column: 23, scope: !4682)
!4714 = !DILocation(line: 41, column: 23, scope: !4703)
!4715 = !DILocation(line: 41, column: 30, scope: !4682)
!4716 = !DILocation(line: 41, column: 30, scope: !4703)
!4717 = !DILocation(line: 27, column: 17, scope: !4703)
!4718 = !DILocation(line: 27, column: 17, scope: !4706)
!4719 = !DILocation(line: 41, column: 23, scope: !4706)
!4720 = !DILocation(line: 41, column: 30, scope: !4706)
!4721 = !DILocation(line: 27, column: 22, scope: !4682)
!4722 = !DILocation(line: 27, column: 17, scope: !4701)
!4723 = !DILocation(line: 27, column: 17, scope: !4691)
!4724 = !DILocation(line: 30, column: 17, scope: !4691)
!4725 = !DILocation(line: 30, column: 24, scope: !4691)
!4726 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$base64..CharacterSet$u20$as$u20$core..fmt..Debug$GT$3fmt17he02be908e3c415b2E", scope: !4727, file: !1777, line: 101, type: !4728, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4730)
!4727 = !DINamespace(name: "{impl#4}", scope: !55)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!73, !53, !689}
!4730 = !{!4731, !4732, !4733, !4735, !4737, !4739, !4741, !4743}
!4731 = !DILocalVariable(name: "self", arg: 1, scope: !4726, file: !1777, line: 101, type: !53)
!4732 = !DILocalVariable(name: "f", arg: 2, scope: !4726, file: !1777, line: 101, type: !689)
!4733 = !DILocalVariable(name: "debug_trait_builder", scope: !4734, file: !1777, line: 101, type: !4692, align: 8)
!4734 = distinct !DILexicalBlock(scope: !4726, file: !1777, line: 101, column: 23)
!4735 = !DILocalVariable(name: "debug_trait_builder", scope: !4736, file: !1777, line: 101, type: !4692, align: 8)
!4736 = distinct !DILexicalBlock(scope: !4726, file: !1777, line: 101, column: 23)
!4737 = !DILocalVariable(name: "debug_trait_builder", scope: !4738, file: !1777, line: 101, type: !4692, align: 8)
!4738 = distinct !DILexicalBlock(scope: !4726, file: !1777, line: 101, column: 23)
!4739 = !DILocalVariable(name: "debug_trait_builder", scope: !4740, file: !1777, line: 101, type: !4692, align: 8)
!4740 = distinct !DILexicalBlock(scope: !4726, file: !1777, line: 101, column: 23)
!4741 = !DILocalVariable(name: "debug_trait_builder", scope: !4742, file: !1777, line: 101, type: !4692, align: 8)
!4742 = distinct !DILexicalBlock(scope: !4726, file: !1777, line: 101, column: 23)
!4743 = !DILocalVariable(name: "debug_trait_builder", scope: !4744, file: !1777, line: 101, type: !4692, align: 8)
!4744 = distinct !DILexicalBlock(scope: !4726, file: !1777, line: 101, column: 23)
!4745 = !DILocation(line: 101, column: 23, scope: !4726)
!4746 = !DILocation(line: 101, column: 23, scope: !4744)
!4747 = !DILocation(line: 101, column: 28, scope: !4726)
!4748 = !DILocation(line: 101, column: 23, scope: !4742)
!4749 = !DILocation(line: 101, column: 23, scope: !4740)
!4750 = !DILocation(line: 101, column: 23, scope: !4738)
!4751 = !DILocation(line: 101, column: 23, scope: !4736)
!4752 = !DILocation(line: 101, column: 23, scope: !4734)
!4753 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN51_$LT$base64..Config$u20$as$u20$core..fmt..Debug$GT$3fmt17h258e62ae7b6b7f66E", scope: !4754, file: !1777, line: 152, type: !4755, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !70, templateParams: !4, retainedNodes: !4758)
!4754 = !DINamespace(name: "{impl#7}", scope: !55)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!73, !4757, !689}
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Config", baseType: !3764, size: 64, align: 64, dwarfAddressSpace: 0)
!4758 = !{!4759, !4760, !4761, !4763, !4764, !4765}
!4759 = !DILocalVariable(name: "self", arg: 1, scope: !4753, file: !1777, line: 152, type: !4757)
!4760 = !DILocalVariable(name: "f", arg: 2, scope: !4753, file: !1777, line: 152, type: !689)
!4761 = !DILocalVariable(name: "__self_0_0", scope: !4762, file: !1777, line: 155, type: !53, align: 8)
!4762 = distinct !DILexicalBlock(scope: !4753, file: !1777, line: 152, column: 23)
!4763 = !DILocalVariable(name: "__self_0_1", scope: !4762, file: !1777, line: 157, type: !66, align: 8)
!4764 = !DILocalVariable(name: "__self_0_2", scope: !4762, file: !1777, line: 159, type: !66, align: 8)
!4765 = !DILocalVariable(name: "debug_trait_builder", scope: !4766, file: !1777, line: 1, type: !4767, align: 8)
!4766 = distinct !DILexicalBlock(scope: !4762, file: !1777, line: 152, column: 23)
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugStruct", baseType: !4768, size: 64, align: 64, dwarfAddressSpace: 0)
!4768 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugStruct", scope: !4694, file: !2, size: 128, align: 64, elements: !4769, templateParams: !4, identifier: "b8ccb8ae22ce0b331b3e3a943d09da82")
!4769 = !{!4770, !4771, !4772}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4768, file: !2, baseType: !689, size: 64, align: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4768, file: !2, baseType: !73, size: 8, align: 8, offset: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !4768, file: !2, baseType: !67, size: 8, align: 8, offset: 72)
!4773 = !DILocation(line: 152, column: 23, scope: !4753)
!4774 = !DILocation(line: 155, column: 5, scope: !4753)
!4775 = !DILocation(line: 155, column: 5, scope: !4762)
!4776 = !DILocation(line: 157, column: 5, scope: !4753)
!4777 = !DILocation(line: 157, column: 5, scope: !4762)
!4778 = !DILocation(line: 159, column: 5, scope: !4753)
!4779 = !DILocation(line: 159, column: 5, scope: !4762)
!4780 = !DILocation(line: 152, column: 23, scope: !4762)
!4781 = !DILocation(line: 1, column: 1, scope: !4766)
!4782 = !DILocation(line: 155, column: 5, scope: !4766)
!4783 = !DILocation(line: 152, column: 23, scope: !4766)
!4784 = !DILocation(line: 157, column: 5, scope: !4766)
!4785 = !DILocation(line: 159, column: 5, scope: !4766)
!4786 = !DILocation(line: 152, column: 28, scope: !4753)
