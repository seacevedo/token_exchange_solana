; ModuleID = 'itertools.4df44570-cgu.0'
source_filename = "itertools.4df44570-cgu.0"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "bpfel"

%"std::iter::Enumerate<std::slice::Iter<usize>>" = type { { i64*, i64* }, i64 }
%"std::option::Option<std::convert::Infallible>::None" = type {}
%"std::panic::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"std::vec::Vec<usize>" = type { { i64*, i64 }, i64 }
%"std::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"std::result::Result<(), std::collections::TryReserveError>" = type { i64, [2 x i64] }
%"std::result::Result<(), std::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>" = type { [1 x i64], i64, [1 x i64] }
%"std::alloc::LayoutError" = type {}
%"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::alloc::AllocError" = type {}
%"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>" = type { i64, [2 x i64] }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::panic::PanicInfo<'a>::internal_constructor::NoPayload" = type {}
%"std::panic::PanicInfo" = type { { {}*, [3 x i64]* }, i64*, %"std::panic::Location"* }
%"std::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"permutations::CompleteState" = type { i64, [6 x i64] }
%"std::fmt::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"std::fmt::Formatter"*, i8, i8, [6 x i8] }
%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]" = type { i64*, { i64*, i64 } }
%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]" = type { i64*, { i64*, i64 } }
%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]" = type { %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]" }
%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]" = type { %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]" }
%"permutations::CompleteState::Ongoing" = type { [1 x i64], %"std::vec::Vec<usize>", %"std::vec::Vec<usize>" }
%"std::ptr::metadata::PtrRepr<[usize]>" = type { [2 x i64] }
%"std::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]" = type {}
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>" = type { [1 x i64], i64, [1 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue" = type { { { i64, i64 }, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok" = type { { { i64, i64 }, i64 } }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<usize, std::alloc::LayoutError>::Err" = type { [8 x i8], %"std::alloc::LayoutError" }
%"std::result::Result<usize, std::alloc::LayoutError>::Ok" = type { [1 x i64], i64 }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"std::result::Result<(), std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"std::result::Result<(), std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]" = type {}
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::alloc::Global" = type {}
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>" = type { {}*, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break" = type { [8 x i8], %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" }
%"permutations::CompleteStateRemaining::Known" = type { [1 x i64], i64 }
%"permutations::CompleteState::Start" = type { [1 x i64], i64, i64 }
%"adaptors::coalesce::DedupEq" = type {}
%"std::fmt::DebugTuple" = type { %"std::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"std::fmt::DebugStruct" = type { %"std::fmt::Formatter"*, i8, i8, [6 x i8] }
%"adaptors::MergeLte" = type {}
%"groupbylazy::ChunkIndex" = type { i64, i64, i64 }
%"kmerge_impl::KMergeByLt" = type {}
%"permutations::PermutationState" = type { i64, [7 x i64] }
%"permutations::PermutationState::StartUnknownLen" = type { [1 x i64], i64 }
%"permutations::PermutationState::OngoingUnknownLen" = type { [1 x i64], i64, i64 }
%"permutations::PermutationState::Complete" = type { [1 x i64], %"permutations::CompleteState" }
%"duplicates_impl::private::ById" = type {}

@alloc1863 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/enumerate.rs" }>, align 1
@alloc1864 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1863, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\000\00\00\00\09\00\00\00" }>, align 8
@str.0 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc1892 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"capacity overflow" }>, align 1
@alloc1866 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/spec_from_iter_nested.rs" }>, align 1
@alloc1867 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [93 x i8] }>, <{ [93 x i8] }>* @alloc1866, i32 0, i32 0, i32 0), [16 x i8] c"]\00\00\00\00\00\00\005\00\00\00\12\00\00\00" }>, align 8
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h827b1345bfae1883E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7e1dba77163ed755E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !0
@alloc1872 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc1873 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1872, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\BC\02\00\00\0D\00\00\00" }>, align 8
@alloc1874 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/alloc/layout.rs" }>, align 1
@alloc1875 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1874, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\10\01\00\009\00\00\00" }>, align 8
@alloc1791 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 1
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"*)* @"_ZN4core3ptr88drop_in_place$LT$core..panic..panic_info..PanicInfo..internal_constructor..NoPayload$GT$17hd8a79b41633b8d7eE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i64 (%"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h5b46453aad772686E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !7
@alloc1881 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc1880 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1881, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\005\02\00\00$\00\00\00" }>, align 8
@alloc1882 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1881, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\006\02\00\00$\00\00\00" }>, align 8
@alloc1883 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::alloc::LayoutError"*)* @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17hf913786a589be1ceE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::alloc::LayoutError"*, %"std::fmt::Formatter"*)* @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdaf89633c8bfad9eE" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !16
@alloc1887 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/raw_vec.rs" }>, align 1
@alloc1888 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1887, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\97\01\00\00\09\00\00\00" }>, align 8
@str.4 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc1890 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/spec_extend.rs" }>, align 1
@alloc1891 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1890, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\007\00\00\00\0D\00\00\00" }>, align 8
@alloc1893 = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"Iterator count greater than usize::MAX" }>, align 1
@alloc1916 = private unnamed_addr constant <{ [99 x i8] }> <{ [99 x i8] c"/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs" }>, align 1
@alloc1895 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\85\00\00\00\15\00\00\00" }>, align 8
@alloc1897 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\E1\00\00\00\18\00\00\00" }>, align 8
@alloc1899 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\E7\00\00\00.\00\00\00" }>, align 8
@alloc1901 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\E7\00\00\00*\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc1903 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\EA\00\00\00\19\00\00\00" }>, align 8
@alloc1905 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\E2\00\00\00%\00\00\00" }>, align 8
@alloc1907 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\E2\00\00\00\19\00\00\00" }>, align 8
@alloc1909 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\E4\00\00\00/\00\00\00" }>, align 8
@alloc1911 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\D5\00\00\00\1F\00\00\00" }>, align 8
@alloc1913 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\0A\01\00\00!\00\00\00" }>, align 8
@alloc1915 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\FD\00\00\00-\00\00\00" }>, align 8
@alloc1917 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1916, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\FD\00\00\008\00\00\00" }>, align 8
@alloc1918 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"DedupEq" }>, align 1
@alloc1919 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"MidIter" }>, align 1
@alloc1920 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"on_first_iter" }>, align 1
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17h6d5de9abef6c9f09E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd17644f68d686941E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !22
@alloc1924 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"StartOfIter" }>, align 1
@alloc1925 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"MergeLte" }>, align 1
@alloc1926 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"ChunkIndex" }>, align 1
@alloc1927 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"size" }>, align 1
@alloc1928 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"index" }>, align 1
@alloc1929 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"key" }>, align 1
@alloc1930 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"KMergeByLt" }>, align 1
@alloc1931 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc1932 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Complete" }>, align 1
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"permutations::CompleteState"**)* @"_ZN4core3ptr63drop_in_place$LT$$RF$itertools..permutations..CompleteState$GT$17h06fc7b877ec335c6E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"permutations::CompleteState"**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bad0aac058f314eE" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !27
@alloc1936 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"OngoingUnknownLen" }>, align 1
@alloc1949 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"k" }>, align 1
@alloc1938 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"min_n" }>, align 1
@alloc1939 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"StartUnknownLen" }>, align 1
@alloc1941 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Ongoing" }>, align 1
@alloc1942 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"indices" }>, align 1
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::vec::Vec<usize>"**)* @"_ZN4core3ptr53drop_in_place$LT$$RF$alloc..vec..Vec$LT$usize$GT$$GT$17he73327f1f580cc8aE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::vec::Vec<usize>"**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc8f0fbfac000d4b1E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !76
@alloc1946 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"cycles" }>, align 1
@alloc1947 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Start" }>, align 1
@alloc1948 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"n" }>, align 1
@alloc1950 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"ById" }>, align 1

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define { i64, i64* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc51ddd6826cf0fbaE"(%"std::iter::Enumerate<std::slice::Iter<usize>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !118 {
start:
  %i.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64*, align 8
  %val.dbg.spill = alloca i64*, align 8
  %residual.dbg.spill = alloca %"std::option::Option<std::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"std::iter::Enumerate<std::slice::Iter<usize>>"*, align 8
  %_12 = alloca { i64, i64* }, align 8
  %_3 = alloca i64*, align 8
  %0 = alloca { i64, i64* }, align 8
  store %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self, %"std::iter::Enumerate<std::slice::Iter<usize>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::iter::Enumerate<std::slice::Iter<usize>>"** %self.dbg.spill, metadata !166, metadata !DIExpression()), !dbg !187
  call void @llvm.dbg.declare(metadata %"std::option::Option<std::convert::Infallible>::None"* %residual.dbg.spill, metadata !169, metadata !DIExpression()), !dbg !188
  %_5 = bitcast %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self to { i64*, i64* }*, !dbg !189
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_4 = call align 8 dereferenceable_or_null(8) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb7a26fabf560e407E"({ i64*, i64* }* align 8 dereferenceable(16) %_5), !dbg !189
  br label %bb1, !dbg !189

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h53e0639504ab69baE"(i64* align 8 dereferenceable_or_null(8) %_4), !dbg !189
  store i64* %1, i64** %_3, align 8, !dbg !189
  br label %bb2, !dbg !189

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %_3 to {}**, !dbg !189
  %3 = load {}*, {}** %2, align 8, !dbg !189
  %4 = icmp eq {}* %3, null, !dbg !189
  %_6 = select i1 %4, i64 1, i64 0, !dbg !189
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !189

bb4:                                              ; preds = %bb2
  unreachable, !dbg !189

bb3:                                              ; preds = %bb2
  %val = load i64*, i64** %_3, align 8, !dbg !189, !nonnull !4
  store i64* %val, i64** %val.dbg.spill, align 8, !dbg !189
  call void @llvm.dbg.declare(metadata i64** %val.dbg.spill, metadata !183, metadata !DIExpression()), !dbg !190
  store i64* %val, i64** %a.dbg.spill, align 8, !dbg !190
  call void @llvm.dbg.declare(metadata i64** %a.dbg.spill, metadata !167, metadata !DIExpression()), !dbg !191
  %5 = getelementptr inbounds %"std::iter::Enumerate<std::slice::Iter<usize>>", %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self, i32 0, i32 1, !dbg !192
  %i = load i64, i64* %5, align 8, !dbg !192
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !192
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !185, metadata !DIExpression()), !dbg !193
  %6 = getelementptr inbounds %"std::iter::Enumerate<std::slice::Iter<usize>>", %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self, i32 0, i32 1, !dbg !194
  %7 = load i64, i64* %6, align 8, !dbg !194
  %8 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %7, i64 1), !dbg !194
  %_11.0 = extractvalue { i64, i1 } %8, 0, !dbg !194
  %_11.1 = extractvalue { i64, i1 } %8, 1, !dbg !194
  %9 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !194
  br i1 %9, label %panic, label %bb7, !dbg !194

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %10 = call { i64, i64* } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hbb5d4cabaf1a504dE"(), !dbg !195
  store { i64, i64* } %10, { i64, i64* }* %0, align 8, !dbg !195
  br label %bb6, !dbg !195

bb6:                                              ; preds = %bb5
  br label %bb8, !dbg !196

bb8:                                              ; preds = %bb7, %bb6
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !196
  %12 = load i64, i64* %11, align 8, !dbg !196
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !196
  %14 = load i64*, i64** %13, align 8, !dbg !196
  %15 = insertvalue { i64, i64* } undef, i64 %12, 0, !dbg !196
  %16 = insertvalue { i64, i64* } %15, i64* %14, 1, !dbg !196
  ret { i64, i64* } %16, !dbg !196

bb7:                                              ; preds = %bb3
  %17 = getelementptr inbounds %"std::iter::Enumerate<std::slice::Iter<usize>>", %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self, i32 0, i32 1, !dbg !194
  store i64 %_11.0, i64* %17, align 8, !dbg !194
  %18 = bitcast { i64, i64* }* %_12 to i64*, !dbg !197
  store i64 %i, i64* %18, align 8, !dbg !197
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_12, i32 0, i32 1, !dbg !197
  store i64* %val, i64** %19, align 8, !dbg !197
  %20 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_12, i32 0, i32 0, !dbg !198
  %21 = load i64, i64* %20, align 8, !dbg !198
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_12, i32 0, i32 1, !dbg !198
  %23 = load i64*, i64** %22, align 8, !dbg !198, !nonnull !4
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !198
  store i64 %21, i64* %24, align 8, !dbg !198
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !198
  store i64* %23, i64** %25, align 8, !dbg !198
  br label %bb8, !dbg !196

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1864 to %"std::panic::Location"*)), !dbg !194
  unreachable, !dbg !194
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nounwind
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h1209d306fa6dbda7E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %vector, i64 %0, i64 %1) unnamed_addr #1 !dbg !199 {
start:
  %upper.dbg.spill = alloca i64, align 8
  %_2 = alloca { i64, { i64, i64 } }, align 8
  %iterator = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"* %vector, metadata !221, metadata !DIExpression()), !dbg !227
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iterator, metadata !220, metadata !DIExpression()), !dbg !228
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18fe86b74cb9542cE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_2, { i64, i64 }* align 8 dereferenceable(16) %iterator), !dbg !229
  br label %bb1, !dbg !229

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_2, i32 0, i32 1, !dbg !229
  %5 = bitcast { i64, i64 }* %4 to i64*, !dbg !229
  %_4 = load i64, i64* %5, align 8, !dbg !229, !range !230
  %6 = icmp eq i64 %_4, 1, !dbg !231
  br i1 %6, label %bb3, label %bb2, !dbg !231

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_2, i32 0, i32 1, !dbg !232
  %8 = bitcast { i64, i64 }* %7 to %"std::option::Option<usize>::Some"*, !dbg !232
  %9 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %8, i32 0, i32 1, !dbg !232
  %upper = load i64, i64* %9, align 8, !dbg !232
  store i64 %upper, i64* %upper.dbg.spill, align 8, !dbg !232
  call void @llvm.dbg.declare(metadata i64* %upper.dbg.spill, metadata !223, metadata !DIExpression()), !dbg !233
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h55c4238cdfe60bb0E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %vector, i64 %upper), !dbg !234
  br label %bb4, !dbg !234

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1892 to [0 x i8]*), i64 17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1867 to %"std::panic::Location"*)), !dbg !235
  unreachable, !dbg !235

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0, !dbg !236
  %_9.0 = load i64, i64* %10, align 8, !dbg !236
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1, !dbg !236
  %_9.1 = load i64, i64* %11, align 8, !dbg !236
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h384af5a6d3d098cfE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %vector, i64 %_9.0, i64 %_9.1), !dbg !237
  br label %bb5, !dbg !237

bb5:                                              ; preds = %bb4
  ret void, !dbg !238
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nounwind
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h71c6e51a3a8030ffE"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %vector, i64 %0, i64 %1) unnamed_addr #1 !dbg !239 {
start:
  %upper.dbg.spill = alloca i64, align 8
  %_2 = alloca { i64, { i64, i64 } }, align 8
  %iterator = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"* %vector, metadata !244, metadata !DIExpression()), !dbg !250
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iterator, metadata !243, metadata !DIExpression()), !dbg !251
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
  call void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17hdd5a7ccf0a5ee504E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_2, { i64, i64 }* align 8 dereferenceable(16) %iterator), !dbg !252
  br label %bb1, !dbg !252

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_2, i32 0, i32 1, !dbg !252
  %5 = bitcast { i64, i64 }* %4 to i64*, !dbg !252
  %_4 = load i64, i64* %5, align 8, !dbg !252, !range !230
  %6 = icmp eq i64 %_4, 1, !dbg !253
  br i1 %6, label %bb3, label %bb2, !dbg !253

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_2, i32 0, i32 1, !dbg !254
  %8 = bitcast { i64, i64 }* %7 to %"std::option::Option<usize>::Some"*, !dbg !254
  %9 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %8, i32 0, i32 1, !dbg !254
  %upper = load i64, i64* %9, align 8, !dbg !254
  store i64 %upper, i64* %upper.dbg.spill, align 8, !dbg !254
  call void @llvm.dbg.declare(metadata i64* %upper.dbg.spill, metadata !246, metadata !DIExpression()), !dbg !255
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h55c4238cdfe60bb0E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %vector, i64 %upper), !dbg !256
  br label %bb4, !dbg !256

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1892 to [0 x i8]*), i64 17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1867 to %"std::panic::Location"*)), !dbg !257
  unreachable, !dbg !257

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0, !dbg !258
  %_9.0 = load i64, i64* %10, align 8, !dbg !258
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1, !dbg !258
  %_9.1 = load i64, i64* %11, align 8, !dbg !258
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hc93b117c5de546beE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %vector, i64 %_9.0, i64 %_9.1), !dbg !259
  br label %bb5, !dbg !259

bb5:                                              ; preds = %bb4
  ret void, !dbg !260
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9d543e1606bc68cdE"(i8* nonnull %unique) unnamed_addr #0 !dbg !261 {
start:
  %unique.dbg.spill = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !278, metadata !DIExpression()), !dbg !279
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17had4afa70e4d11c21E"(i8* nonnull %unique), !dbg !280
  br label %bb1, !dbg !280

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h261173f5f5c7c267E"(i8* %_2), !dbg !281
  br label %bb2, !dbg !281

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !282
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hdf481845201483dfE"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !283 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !315, metadata !DIExpression()), !dbg !316
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !317
  store i64 %kind.0, i64* %3, align 8, !dbg !317
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !317
  store i64 %kind.1, i64* %4, align 8, !dbg !317
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !318
  %6 = load i64, i64* %5, align 8, !dbg !318
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !318
  %8 = load i64, i64* %7, align 8, !dbg !318
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !318
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !318
  ret { i64, i64 } %10, !dbg !318
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2b2e804e1b0a951aE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !319 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !351, metadata !DIExpression()), !dbg !356
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !357
  %e.0 = load i64, i64* %5, align 8, !dbg !357
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !357
  %e.1 = load i64, i64* %6, align 8, !dbg !357
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !357
  store i64 %e.0, i64* %7, align 8, !dbg !357
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !357
  store i64 %e.1, i64* %8, align 8, !dbg !357
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !352, metadata !DIExpression()), !dbg !358
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %9 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hdf481845201483dfE"(i64 %e.0, i64 %e.1), !dbg !359
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !359
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !359
  br label %bb1, !dbg !359

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !360
  %11 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !360
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !360
  store i64 %_3.0, i64* %12, align 8, !dbg !360
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !360
  store i64 %_3.1, i64* %13, align 8, !dbg !360
  %14 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !360
  store i64 1, i64* %14, align 8, !dbg !360
  ret void, !dbg !361
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h46a049a9bc5611d6E"(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0) unnamed_addr #0 !dbg !362 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !395, metadata !DIExpression()), !dbg !400
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !396, metadata !DIExpression()), !dbg !401
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8314695760a1c4e1E"(), !dbg !402
  br label %bb1, !dbg !402

bb1:                                              ; preds = %start
  %1 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0 to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err"*, !dbg !403
  %2 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err"* %1 to %"std::alloc::LayoutError"*, !dbg !403
  %3 = getelementptr inbounds %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0, i32 0, i32 1, !dbg !403
  store i64 0, i64* %3, align 8, !dbg !403
  ret void, !dbg !404
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h54656286740a6161E"() unnamed_addr #0 !dbg !405 {
start:
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %0 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !446, metadata !DIExpression()), !dbg !451
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !447, metadata !DIExpression()), !dbg !452
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f039a29a54e3f3aE"(), !dbg !453
  br label %bb1, !dbg !453

bb1:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"*, !dbg !454
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"* %1 to %"std::alloc::AllocError"*, !dbg !454
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !454
  store {}* null, {}** %3, align 8, !dbg !454
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !455
  %5 = load i8*, i8** %4, align 8, !dbg !455
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !455
  %7 = load i64, i64* %6, align 8, !dbg !455
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !455
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1, !dbg !455
  ret { i8*, i64 } %9, !dbg !455
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h846f6cef6ac19211E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !456 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !482, metadata !DIExpression()), !dbg !486
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !487
  %e.0 = load i64, i64* %5, align 8, !dbg !487
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !487
  %e.1 = load i64, i64* %6, align 8, !dbg !487
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !487
  store i64 %e.0, i64* %7, align 8, !dbg !487
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !487
  store i64 %e.1, i64* %8, align 8, !dbg !487
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !483, metadata !DIExpression()), !dbg !488
; call <T as core::convert::From<T>>::from
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha071b62114951ebdE"(i64 %e.0, i64 %e.1), !dbg !489
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !489
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !489
  br label %bb1, !dbg !489

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !490
  %11 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !490
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !490
  store i64 %_3.0, i64* %12, align 8, !dbg !490
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !490
  store i64 %_3.1, i64* %13, align 8, !dbg !490
  %14 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !490
  store i64 1, i64* %14, align 8, !dbg !490
  ret void, !dbg !491
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17haaf5fd1809fd2271E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !492 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !496, metadata !DIExpression()), !dbg !500
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !501
  %e.0 = load i64, i64* %5, align 8, !dbg !501
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !501
  %e.1 = load i64, i64* %6, align 8, !dbg !501
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !501
  store i64 %e.0, i64* %7, align 8, !dbg !501
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !501
  store i64 %e.1, i64* %8, align 8, !dbg !501
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !497, metadata !DIExpression()), !dbg !502
; call <T as core::convert::From<T>>::from
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha071b62114951ebdE"(i64 %e.0, i64 %e.1), !dbg !503
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !503
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !503
  br label %bb1, !dbg !503

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !504
  %11 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !504
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !504
  store i64 %_3.0, i64* %12, align 8, !dbg !504
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !504
  store i64 %_3.1, i64* %13, align 8, !dbg !504
  %14 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !504
  store i64 1, i64* %14, align 8, !dbg !504
  ret void, !dbg !505
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbc8f0f0227d7fc3cE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !506 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !510, metadata !DIExpression()), !dbg !514
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !515
  %e.0 = load i64, i64* %5, align 8, !dbg !515
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !515
  %e.1 = load i64, i64* %6, align 8, !dbg !515
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !515
  store i64 %e.0, i64* %7, align 8, !dbg !515
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !515
  store i64 %e.1, i64* %8, align 8, !dbg !515
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !511, metadata !DIExpression()), !dbg !516
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %9 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hdf481845201483dfE"(i64 %e.0, i64 %e.1), !dbg !517
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !517
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !517
  br label %bb1, !dbg !517

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !518
  %11 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !518
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !518
  store i64 %_3.0, i64* %12, align 8, !dbg !518
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !518
  store i64 %_3.1, i64* %13, align 8, !dbg !518
  %14 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !518
  store i64 1, i64* %14, align 8, !dbg !518
  ret void, !dbg !519
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd470ea46d1981105E"() unnamed_addr #0 !dbg !520 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !538, metadata !DIExpression()), !dbg !542
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !539, metadata !DIExpression()), !dbg !543
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8314695760a1c4e1E"(), !dbg !544
  br label %bb1, !dbg !544

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to %"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err"*, !dbg !545
  %2 = bitcast %"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err"* %1 to %"std::alloc::LayoutError"*, !dbg !545
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !545
  store i64 0, i64* %3, align 8, !dbg !545
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !546
  %5 = load i64, i64* %4, align 8, !dbg !546
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !546
  %7 = load i64, i64* %6, align 8, !dbg !546
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !546
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !546
  ret { i64, i64 } %9, !dbg !546
}

; <T as core::any::Any>::type_id
; Function Attrs: nounwind
define i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h5b46453aad772686E"(%"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"* nonnull align 1 %self) unnamed_addr #1 !dbg !547 {
start:
  %self.dbg.spill = alloca %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"*, align 8
  store %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"* %self, %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"** %self.dbg.spill, metadata !558, metadata !DIExpression()), !dbg !561
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h5eb98d3fdc8425cbE(), !dbg !562
  br label %bb1, !dbg !562

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !563
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nounwind
define void @_ZN3std9panicking11begin_panic17hb30a5c1f168cf260E([0 x i8]* nonnull align 1 %_msg.0, i64 %_msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #2 !dbg !564 {
start:
  %_msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_3 = alloca i64*, align 8
  %info = alloca %"std::panic::PanicInfo", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %_msg.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_msg.dbg.spill, i32 0, i32 1
  store i64 %_msg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %_msg.dbg.spill, metadata !583, metadata !DIExpression()), !dbg !707
  call void @llvm.dbg.declare(metadata %"std::panic::PanicInfo"* %info, metadata !584, metadata !DIExpression()), !dbg !708
  %3 = bitcast i64** %_3 to {}**, !dbg !709
  store {}* null, {}** %3, align 8, !dbg !709
; call core::panic::location::Location::caller
  %_5 = call align 8 dereferenceable(24) %"std::panic::Location"* @_ZN4core5panic8location8Location6caller17hfb9b9b4fd18ca0bcE(%"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !710
  br label %bb1, !dbg !710

bb1:                                              ; preds = %start
  %4 = load i64*, i64** %_3, align 8, !dbg !711
; call core::panic::panic_info::PanicInfo::internal_constructor
  call void @_ZN4core5panic10panic_info9PanicInfo20internal_constructor17haab071d2c0fa51c2E(%"std::panic::PanicInfo"* noalias nocapture sret(%"std::panic::PanicInfo") dereferenceable(32) %info, i64* align 8 dereferenceable_or_null(48) %4, %"std::panic::Location"* align 8 dereferenceable(24) %_5), !dbg !711
  br label %bb2, !dbg !711

bb2:                                              ; preds = %bb1
; call std::sys::sbf::panic
  call void @_ZN3std3sys3sbf5panic17h2f31c33434634037E(%"std::panic::PanicInfo"* align 8 dereferenceable(32) %info), !dbg !712
  unreachable, !dbg !712
}

; <bool as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h17b2a9106e96f249E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 !dbg !713 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !719, metadata !DIExpression()), !dbg !721
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !720, metadata !DIExpression()), !dbg !722
; call <bool as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h8cd87f7769d26608E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !723
  br label %bb1, !dbg !723

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !724
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bad0aac058f314eE"(%"permutations::CompleteState"** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !725 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"permutations::CompleteState"**, align 8
  store %"permutations::CompleteState"** %self, %"permutations::CompleteState"*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"*** %self.dbg.spill, metadata !731, metadata !DIExpression()), !dbg !735
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !732, metadata !DIExpression()), !dbg !736
  %_4 = load %"permutations::CompleteState"*, %"permutations::CompleteState"** %self, align 8, !dbg !737, !nonnull !4
; call <itertools::permutations::CompleteState as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN75_$LT$itertools..permutations..CompleteState$u20$as$u20$core..fmt..Debug$GT$3fmt17h095a9a725735a5baE"(%"permutations::CompleteState"* align 8 dereferenceable(56) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !738
  br label %bb1, !dbg !738

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !739
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7e1dba77163ed755E"(i64** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !740 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !745, metadata !DIExpression()), !dbg !747
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !746, metadata !DIExpression()), !dbg !748
  %_4 = load i64*, i64** %self, align 8, !dbg !749, !nonnull !4
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h6b45b358b6a786f6E"(i64* align 8 dereferenceable(8) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !750
  br label %bb1, !dbg !750

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !751
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc8f0fbfac000d4b1E"(%"std::vec::Vec<usize>"** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !752 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"**, align 8
  store %"std::vec::Vec<usize>"** %self, %"std::vec::Vec<usize>"*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"*** %self.dbg.spill, metadata !757, metadata !DIExpression()), !dbg !761
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !758, metadata !DIExpression()), !dbg !762
  %_4 = load %"std::vec::Vec<usize>"*, %"std::vec::Vec<usize>"** %self, align 8, !dbg !763, !nonnull !4
; call <alloc::vec::Vec<T,A> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h988cd1f8f8335c60E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !764
  br label %bb1, !dbg !764

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !765
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd17644f68d686941E"(i8** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !766 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !771, metadata !DIExpression()), !dbg !775
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !772, metadata !DIExpression()), !dbg !776
  %_4 = load i8*, i8** %self, align 8, !dbg !777, !nonnull !4
; call <bool as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h17b2a9106e96f249E"(i8* align 1 dereferenceable(1) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !778
  br label %bb1, !dbg !778

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !779
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hca135c73f9bafa40E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !780 {
start:
  %0 = alloca i128, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %_6 = alloca %"std::fmt::DebugList", align 8
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i64]* %self.0, [0 x i64]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %self.dbg.spill, metadata !789, metadata !DIExpression()), !dbg !791
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !790, metadata !DIExpression()), !dbg !792
; call core::fmt::Formatter::debug_list
  %3 = call i128 @_ZN4core3fmt9Formatter10debug_list17h22148c574c853296E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !793
  store i128 %3, i128* %0, align 8, !dbg !793
  %4 = bitcast %"std::fmt::DebugList"* %_6 to i8*, !dbg !793
  %5 = bitcast i128* %0 to i8*, !dbg !793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false), !dbg !793
  br label %bb1, !dbg !793

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %6 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h234dbc8e2fe698e1E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1), !dbg !794
  %_8.0 = extractvalue { i64*, i64* } %6, 0, !dbg !794
  %_8.1 = extractvalue { i64*, i64* } %6, 1, !dbg !794
  br label %bb2, !dbg !794

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 dereferenceable(16) %"std::fmt::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h53af767265d751b6E(%"std::fmt::DebugList"* align 8 dereferenceable(16) %_6, i64* nonnull %_8.0, i64* %_8.1), !dbg !793
  br label %bb3, !dbg !793

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugList::finish
  %7 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h572d0b3c8b47cacfE(%"std::fmt::DebugList"* align 8 dereferenceable(16) %_4), !dbg !793
  br label %bb4, !dbg !793

bb4:                                              ; preds = %bb3
  ret i1 %7, !dbg !795
}

; <usize as core::iter::range::Step>::steps_between
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hc037fed79425c43cE"(i64* align 8 dereferenceable(8) %start1, i64* align 8 dereferenceable(8) %end) unnamed_addr #0 !dbg !796 {
start:
  %end.dbg.spill = alloca i64*, align 8
  %start.dbg.spill = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64* %start1, i64** %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %start.dbg.spill, metadata !803, metadata !DIExpression()), !dbg !805
  store i64* %end, i64** %end.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %end.dbg.spill, metadata !804, metadata !DIExpression()), !dbg !806
  %_4 = load i64, i64* %start1, align 8, !dbg !807
  %_5 = load i64, i64* %end, align 8, !dbg !808
  %_3 = icmp ule i64 %_4, %_5, !dbg !807
  br i1 %_3, label %bb1, label %bb2, !dbg !807

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !809
  store i64 0, i64* %1, align 8, !dbg !809
  br label %bb3, !dbg !810

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %end, align 8, !dbg !811
  %_8 = load i64, i64* %start1, align 8, !dbg !812
  %_6 = sub i64 %_7, %_8, !dbg !813
  %2 = bitcast { i64, i64 }* %0 to %"std::option::Option<usize>::Some"*, !dbg !814
  %3 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %2, i32 0, i32 1, !dbg !814
  store i64 %_6, i64* %3, align 8, !dbg !814
  %4 = bitcast { i64, i64 }* %0 to i64*, !dbg !814
  store i64 1, i64* %4, align 8, !dbg !814
  br label %bb3, !dbg !810

bb3:                                              ; preds = %bb2, %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !815
  %6 = load i64, i64* %5, align 8, !dbg !815, !range !230
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !815
  %8 = load i64, i64* %7, align 8, !dbg !815
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !815
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !815
  ret { i64, i64 } %10, !dbg !815
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h5d754a3b500a5147E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !816 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !820, metadata !DIExpression()), !dbg !822
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !821, metadata !DIExpression()), !dbg !823
  store i64 %start1, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !824, metadata !DIExpression()), !dbg !830
  store i64 %n, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !829, metadata !DIExpression()), !dbg !832
  %1 = add nuw i64 %start1, %n, !dbg !833
  store i64 %1, i64* %0, align 8, !dbg !833
  %2 = load i64, i64* %0, align 8, !dbg !833
  br label %bb1, !dbg !834

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !835
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17he9d3b7f063022099E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !836 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !838, metadata !DIExpression()), !dbg !840
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !839, metadata !DIExpression()), !dbg !841
  store i64 %start1, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !842, metadata !DIExpression()), !dbg !846
  store i64 %n, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !845, metadata !DIExpression()), !dbg !848
  %1 = sub nuw i64 %start1, %n, !dbg !849
  store i64 %1, i64* %0, align 8, !dbg !849
  %2 = load i64, i64* %0, align 8, !dbg !849
  br label %bb1, !dbg !850

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !851
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics11write_bytes17h862ff44c68d1e80cE(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 !dbg !852 {
start:
  %count.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i8, align 1
  %dst.dbg.spill = alloca i8*, align 8
  store i8* %dst, i8** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !858, metadata !DIExpression()), !dbg !861
  store i8 %val, i8* %val.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill, metadata !859, metadata !DIExpression()), !dbg !862
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !860, metadata !DIExpression()), !dbg !863
  %0 = mul i64 1, %count, !dbg !864
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false), !dbg !864
  br label %bb1, !dbg !864

bb1:                                              ; preds = %start
  ret void, !dbg !865
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h50123e3b718f0f56E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 !dbg !866 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  store i8* %src, i8** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !870, metadata !DIExpression()), !dbg !873
  store i8* %dst, i8** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !871, metadata !DIExpression()), !dbg !874
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !872, metadata !DIExpression()), !dbg !875
  %0 = mul i64 %count, 1, !dbg !876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false), !dbg !876
  ret void, !dbg !877
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics19copy_nonoverlapping17h8075118644eaa71bE(i64* %src, i64* %dst, i64 %count) unnamed_addr #0 !dbg !878 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i64*, align 8
  %src.dbg.spill = alloca i64*, align 8
  store i64* %src, i64** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill, metadata !883, metadata !DIExpression()), !dbg !886
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !884, metadata !DIExpression()), !dbg !887
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !885, metadata !DIExpression()), !dbg !888
  %0 = mul i64 %count, 8, !dbg !889
  %1 = bitcast i64* %dst to i8*, !dbg !889
  %2 = bitcast i64* %src to i8*, !dbg !889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !dbg !889
  ret void, !dbg !890
}

; core::intrinsics::copy
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics4copy17h2e5cb4dc4ce77089E(i64* %src, i64* %dst, i64 %count) unnamed_addr #0 !dbg !891 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i64*, align 8
  %src.dbg.spill = alloca i64*, align 8
  store i64* %src, i64** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill, metadata !893, metadata !DIExpression()), !dbg !896
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !894, metadata !DIExpression()), !dbg !897
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !895, metadata !DIExpression()), !dbg !898
  %0 = mul i64 8, %count, !dbg !899
  %1 = bitcast i64* %dst to i8*, !dbg !899
  %2 = bitcast i64* %src to i8*, !dbg !899
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !dbg !899
  br label %bb1, !dbg !899

bb1:                                              ; preds = %start
  ret void, !dbg !900
}

; core::any::TypeId::of
; Function Attrs: nounwind
define i64 @_ZN4core3any6TypeId2of17h5eb98d3fdc8425cbE() unnamed_addr #1 !dbg !901 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 7118324936031314547, i64* %0, align 8, !dbg !904
  %_1 = load i64, i64* %0, align 8, !dbg !904
  br label %bb1, !dbg !904

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8, !dbg !905
  %2 = load i64, i64* %1, align 8, !dbg !906
  ret i64 %2, !dbg !906
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3Ord3max17h05a5e76f805268beE(i64 %self, i64 %other) unnamed_addr #0 !dbg !907 {
start:
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !911, metadata !DIExpression()), !dbg !915
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !912, metadata !DIExpression()), !dbg !916
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h3eafb6250fdad636E(i64 %self, i64 %other), !dbg !917
  br label %bb1, !dbg !917

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !918
}

; core::cmp::max
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3max17h7229c2c0330f0f9fE(i64 %v1, i64 %v2) unnamed_addr #0 !dbg !919 {
start:
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  store i64 %v1, i64* %v1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !921, metadata !DIExpression()), !dbg !923
  store i64 %v2, i64* %v2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !922, metadata !DIExpression()), !dbg !924
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17h05a5e76f805268beE(i64 %v1, i64 %v2), !dbg !925
  br label %bb1, !dbg !925

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !926
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h7b4cf76b9cdd1ba0E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !927 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !933, metadata !DIExpression()), !dbg !935
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !934, metadata !DIExpression()), !dbg !936
  %_4 = load i64, i64* %self, align 8, !dbg !937
  %_5 = load i64, i64* %other, align 8, !dbg !938
  %_3 = icmp ult i64 %_4, %_5, !dbg !937
  br i1 %_3, label %bb1, label %bb2, !dbg !937

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !939
  %_8 = load i64, i64* %other, align 8, !dbg !940
  %_6 = icmp eq i64 %_7, %_8, !dbg !939
  br i1 %_6, label %bb3, label %bb4, !dbg !939

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !941
  br label %bb6, !dbg !942

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !943, !range !944
  ret i8 %1, !dbg !943

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !945
  br label %bb5, !dbg !946

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !947
  br label %bb5, !dbg !946

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !942
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h6ae0d9c40d77ba84E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !948 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !953, metadata !DIExpression()), !dbg !955
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !954, metadata !DIExpression()), !dbg !956
  %_3 = load i64, i64* %self, align 8, !dbg !957
  %_4 = load i64, i64* %other, align 8, !dbg !958
  %0 = icmp ult i64 %_3, %_4, !dbg !957
  ret i1 %0, !dbg !959
}

; core::cmp::max_by
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp6max_by17h3eafb6250fdad636E(i64 %0, i64 %1) unnamed_addr #0 !dbg !960 {
start:
  %compare.dbg.spill = alloca {}, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  call void @llvm.dbg.declare(metadata i64* %v1, metadata !965, metadata !DIExpression()), !dbg !970
  call void @llvm.dbg.declare(metadata i64* %v2, metadata !966, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.declare(metadata {}* %compare.dbg.spill, metadata !967, metadata !DIExpression()), !dbg !972
  store i8 0, i8* %_13, align 1, !dbg !973
  store i8 0, i8* %_12, align 1, !dbg !973
  store i8 1, i8* %_13, align 1, !dbg !973
  store i8 1, i8* %_12, align 1, !dbg !973
  %3 = bitcast { i64*, i64* }* %_6 to i64**, !dbg !973
  store i64* %v1, i64** %3, align 8, !dbg !973
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !973
  store i64* %v2, i64** %4, align 8, !dbg !973
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0, !dbg !973
  %6 = load i64*, i64** %5, align 8, !dbg !973, !nonnull !4
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !973
  %8 = load i64*, i64** %7, align 8, !dbg !973, !nonnull !4
; call core::ops::function::FnOnce::call_once
  %9 = call i8 @_ZN4core3ops8function6FnOnce9call_once17h5d757a63dc0c0a58E(i64* align 8 dereferenceable(8) %6, i64* align 8 dereferenceable(8) %8), !dbg !973, !range !944
  store i8 %9, i8* %_4, align 1, !dbg !973
  br label %bb1, !dbg !973

bb1:                                              ; preds = %start
  %10 = load i8, i8* %_4, align 1, !dbg !973, !range !944
  %_11 = sext i8 %10 to i64, !dbg !973
  switch i64 %_11, label %bb3 [
    i64 -1, label %bb4
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !974

bb3:                                              ; preds = %bb1
  unreachable, !dbg !973

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1, !dbg !975
  %11 = load i64, i64* %v2, align 8, !dbg !975
  store i64 %11, i64* %2, align 8, !dbg !975
  br label %bb5, !dbg !975

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1, !dbg !976
  %12 = load i64, i64* %v1, align 8, !dbg !976
  store i64 %12, i64* %2, align 8, !dbg !976
  br label %bb5, !dbg !976

bb5:                                              ; preds = %bb4, %bb2
  %13 = load i8, i8* %_12, align 1, !dbg !977, !range !978
  %14 = trunc i8 %13 to i1, !dbg !977
  br i1 %14, label %bb8, label %bb6, !dbg !977

bb6:                                              ; preds = %bb8, %bb5
  %15 = load i8, i8* %_13, align 1, !dbg !977, !range !978
  %16 = trunc i8 %15 to i1, !dbg !977
  br i1 %16, label %bb9, label %bb7, !dbg !977

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !977

bb7:                                              ; preds = %bb9, %bb6
  %17 = load i64, i64* %2, align 8, !dbg !979
  ret i64 %17, !dbg !979

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !977
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h6b45b358b6a786f6E"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 !dbg !980 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !987, metadata !DIExpression()), !dbg !989
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !988, metadata !DIExpression()), !dbg !990
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !991
  br label %bb1, !dbg !991

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !991

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !992
  br label %bb5, !dbg !992

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h1a12a50969152654E"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !993
  %2 = zext i1 %1 to i8, !dbg !993
  store i8 %2, i8* %0, align 1, !dbg !993
  br label %bb3, !dbg !993

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !994

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !995, !range !978
  %4 = trunc i8 %3 to i1, !dbg !995
  ret i1 %4, !dbg !995

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !992

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !996
  %6 = zext i1 %5 to i8, !dbg !996
  store i8 %6, i8* %0, align 1, !dbg !996
  br label %bb9, !dbg !996

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h571918675fe47debE"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !997
  %8 = zext i1 %7 to i8, !dbg !997
  store i8 %8, i8* %0, align 1, !dbg !997
  br label %bb7, !dbg !997

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !998

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !994

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !998
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nounwind
define align 8 dereferenceable(16) %"std::fmt::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h53af767265d751b6E(%"std::fmt::DebugList"* align 8 dereferenceable(16) %self, i64* nonnull %entries.0, i64* %entries.1) unnamed_addr #1 !dbg !999 {
start:
  %__next.dbg.spill = alloca i64*, align 8
  %val.dbg.spill = alloca i64*, align 8
  %entries.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca %"std::fmt::DebugList"*, align 8
  %entry = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  store %"std::fmt::DebugList"* %self, %"std::fmt::DebugList"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugList"** %self.dbg.spill, metadata !1014, metadata !DIExpression()), !dbg !1026
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %entries.dbg.spill, i32 0, i32 0
  store i64* %entries.0, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %entries.dbg.spill, i32 0, i32 1
  store i64* %entries.1, i64** %1, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %entries.dbg.spill, metadata !1015, metadata !DIExpression()), !dbg !1027
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter, metadata !1016, metadata !DIExpression()), !dbg !1028
  call void @llvm.dbg.declare(metadata i64** %entry, metadata !1022, metadata !DIExpression()), !dbg !1029
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h63785f047cdcae07E"(i64* nonnull %entries.0, i64* %entries.1), !dbg !1030
  %_4.0 = extractvalue { i64*, i64* } %2, 0, !dbg !1030
  %_4.1 = extractvalue { i64*, i64* } %2, 1, !dbg !1030
  br label %bb1, !dbg !1030

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0, !dbg !1030
  store i64* %_4.0, i64** %3, align 8, !dbg !1030
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !1030
  store i64* %_4.1, i64** %4, align 8, !dbg !1030
  br label %bb2, !dbg !1031

bb2:                                              ; preds = %bb8, %bb1
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 dereferenceable_or_null(8) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb7a26fabf560e407E"({ i64*, i64* }* align 8 dereferenceable(16) %iter), !dbg !1032
  store i64* %5, i64** %_8, align 8, !dbg !1032
  br label %bb3, !dbg !1032

bb3:                                              ; preds = %bb2
  %6 = bitcast i64** %_8 to {}**, !dbg !1032
  %7 = load {}*, {}** %6, align 8, !dbg !1032
  %8 = icmp eq {}* %7, null, !dbg !1032
  %_11 = select i1 %8, i64 0, i64 1, !dbg !1032
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !1032

bb5:                                              ; preds = %bb3
  unreachable, !dbg !1032

bb4:                                              ; preds = %bb3
  br label %bb9, !dbg !1033

bb6:                                              ; preds = %bb3
  %val = load i64*, i64** %_8, align 8, !dbg !1034, !nonnull !4
  store i64* %val, i64** %val.dbg.spill, align 8, !dbg !1034
  call void @llvm.dbg.declare(metadata i64** %val.dbg.spill, metadata !1020, metadata !DIExpression()), !dbg !1035
  store i64* %val, i64** %__next.dbg.spill, align 8, !dbg !1035
  call void @llvm.dbg.declare(metadata i64** %__next.dbg.spill, metadata !1018, metadata !DIExpression()), !dbg !1032
  store i64* %val, i64** %entry, align 8, !dbg !1032
  %_17.0 = bitcast i64** %entry to {}*, !dbg !1036
; call core::fmt::builders::DebugList::entry
  %_15 = call align 8 dereferenceable(16) %"std::fmt::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h923aa4cd010173edE(%"std::fmt::DebugList"* align 8 dereferenceable(16) %self, {}* nonnull align 1 %_17.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !1037
  br label %bb7, !dbg !1037

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !1038

bb8:                                              ; preds = %bb7
  br label %bb2, !dbg !1031

bb9:                                              ; preds = %bb4
  ret %"std::fmt::DebugList"* %self, !dbg !1039
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3mem7replace17hf0f2ad2ef3fbe0a5E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 !dbg !1040 {
start:
  %result.dbg.spill = alloca i64, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !1047, metadata !DIExpression()), !dbg !1051
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !1048, metadata !DIExpression()), !dbg !1052
; call core::ptr::read
  %result = call i64 @_ZN4core3ptr4read17hf728125a2e91769bE(i64* %dest), !dbg !1053
  store i64 %result, i64* %result.dbg.spill, align 8, !dbg !1053
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !1049, metadata !DIExpression()), !dbg !1054
  br label %bb1, !dbg !1053

bb1:                                              ; preds = %start
; call core::ptr::write
  call void @_ZN4core3ptr5write17h39b530a88072e8ebE(i64* %dest, i64 %src), !dbg !1055
  br label %bb2, !dbg !1055

bb2:                                              ; preds = %bb1
  ret i64 %result, !dbg !1056
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hdc59359d34489ae8E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1057 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1061, metadata !DIExpression()), !dbg !1066
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1062, metadata !DIExpression()), !dbg !1067
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1068, metadata !DIExpression()) #12, !dbg !1081
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1077, metadata !DIExpression()) #12, !dbg !1083
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1084
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1084
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1084
  %7 = zext i1 %6 to i8, !dbg !1084
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1084
  store i64 %5, i64* %8, align 8, !dbg !1084
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1084
  store i8 %7, i8* %9, align 8, !dbg !1084
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1084
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1084
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1084
  %12 = load i8, i8* %11, align 8, !dbg !1084, !range !978
  %_5.1.i = trunc i8 %12 to i1, !dbg !1084
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1085
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1078, metadata !DIExpression()) #12, !dbg !1086
  %13 = zext i1 %_5.1.i to i8, !dbg !1087
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1087
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1080, metadata !DIExpression()) #12, !dbg !1088
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1089
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1089
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1089
  %16 = zext i1 %_5.1.i to i8, !dbg !1089
  store i8 %16, i8* %15, align 8, !dbg !1089
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1090
  %18 = load i64, i64* %17, align 8, !dbg !1090
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1090
  %20 = load i8, i8* %19, align 8, !dbg !1090, !range !978
  %21 = trunc i8 %20 to i1, !dbg !1090
  %22 = zext i1 %21 to i8, !dbg !1090
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1090
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1090
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1091
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1091
  %_5.1 = trunc i8 %25 to i1, !dbg !1091
  br label %bb1, !dbg !1091

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1092
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1063, metadata !DIExpression()), !dbg !1093
  %26 = zext i1 %_5.1 to i8, !dbg !1094
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1094
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1065, metadata !DIExpression()), !dbg !1095
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1096
  %28 = zext i1 %27 to i8, !dbg !1096
  store i8 %28, i8* %2, align 1, !dbg !1096
  %29 = load i8, i8* %2, align 1, !dbg !1096, !range !978
  %_8 = trunc i8 %29 to i1, !dbg !1096
  br label %bb2, !dbg !1096

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1096

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1097
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1097
  store i64 %_5.0, i64* %31, align 8, !dbg !1097
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1097
  store i64 1, i64* %32, align 8, !dbg !1097
  br label %bb5, !dbg !1098

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1099
  store i64 0, i64* %33, align 8, !dbg !1099
  br label %bb5, !dbg !1098

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1100
  %35 = load i64, i64* %34, align 8, !dbg !1100, !range !230
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1100
  %37 = load i64, i64* %36, align 8, !dbg !1100
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1100
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1100
  ret { i64, i64 } %39, !dbg !1100
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfc8edd9d59d78604E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1101 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1103, metadata !DIExpression()), !dbg !1108
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1104, metadata !DIExpression()), !dbg !1109
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1110, metadata !DIExpression()) #12, !dbg !1117
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1113, metadata !DIExpression()) #12, !dbg !1119
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1120
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1120
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1120
  %7 = zext i1 %6 to i8, !dbg !1120
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1120
  store i64 %5, i64* %8, align 8, !dbg !1120
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1120
  store i8 %7, i8* %9, align 8, !dbg !1120
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1120
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1120
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1120
  %12 = load i8, i8* %11, align 8, !dbg !1120, !range !978
  %_5.1.i = trunc i8 %12 to i1, !dbg !1120
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1121
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1114, metadata !DIExpression()) #12, !dbg !1122
  %13 = zext i1 %_5.1.i to i8, !dbg !1123
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1123
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1116, metadata !DIExpression()) #12, !dbg !1124
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1125
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1125
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1125
  %16 = zext i1 %_5.1.i to i8, !dbg !1125
  store i8 %16, i8* %15, align 8, !dbg !1125
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1126
  %18 = load i64, i64* %17, align 8, !dbg !1126
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1126
  %20 = load i8, i8* %19, align 8, !dbg !1126, !range !978
  %21 = trunc i8 %20 to i1, !dbg !1126
  %22 = zext i1 %21 to i8, !dbg !1126
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1126
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1126
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1127
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1127
  %_5.1 = trunc i8 %25 to i1, !dbg !1127
  br label %bb1, !dbg !1127

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1128
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1105, metadata !DIExpression()), !dbg !1129
  %26 = zext i1 %_5.1 to i8, !dbg !1130
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1130
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1107, metadata !DIExpression()), !dbg !1131
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1132
  %28 = zext i1 %27 to i8, !dbg !1132
  store i8 %28, i8* %2, align 1, !dbg !1132
  %29 = load i8, i8* %2, align 1, !dbg !1132, !range !978
  %_8 = trunc i8 %29 to i1, !dbg !1132
  br label %bb2, !dbg !1132

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1132

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1133
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1133
  store i64 %_5.0, i64* %31, align 8, !dbg !1133
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1133
  store i64 1, i64* %32, align 8, !dbg !1133
  br label %bb5, !dbg !1134

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1135
  store i64 0, i64* %33, align 8, !dbg !1135
  br label %bb5, !dbg !1134

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1136
  %35 = load i64, i64* %34, align 8, !dbg !1136, !range !230
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1136
  %37 = load i64, i64* %36, align 8, !dbg !1136
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1136
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1136
  ret { i64, i64 } %39, !dbg !1136
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd982396593d5f84eE(i64 %n) unnamed_addr #0 !dbg !1137 {
start:
  %n.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1142, metadata !DIExpression()), !dbg !1143
  store i64 %n, i64* %0, align 8, !dbg !1144
  %1 = load i64, i64* %0, align 8, !dbg !1145, !range !1146
  ret i64 %1, !dbg !1145
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17hab7a81ef096fdfa4E(i64 %self) unnamed_addr #0 !dbg !1147 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1151, metadata !DIExpression()), !dbg !1152
  ret i64 %self, !dbg !1153
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nounwind
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h5d757a63dc0c0a58E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 !dbg !1154 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !1161, metadata !DIExpression()), !dbg !1170
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_2, metadata !1162, metadata !DIExpression()), !dbg !1170
  %4 = bitcast { i64*, i64* }* %_2 to i64**, !dbg !1170
  %5 = load i64*, i64** %4, align 8, !dbg !1170, !nonnull !4
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1, !dbg !1170
  %7 = load i64*, i64** %6, align 8, !dbg !1170, !nonnull !4
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h7b4cf76b9cdd1ba0E"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !dbg !1170, !range !944
  br label %bb1, !dbg !1170

bb1:                                              ; preds = %start
  ret i8 %8, !dbg !1170
}

; core::ptr::drop_in_place<<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::ops::range::Range<usize>>>::spec_extend::{{closure}}>
; Function Attrs: nounwind
define void @"_ZN4core3ptr198drop_in_place$LT$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..ops..range..Range$LT$usize$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2810211a64a47804E"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1) unnamed_addr #1 !dbg !1171 {
start:
  %_1.dbg.spill = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, align 8
  store %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, metadata !1189, metadata !DIExpression()), !dbg !1192
  %0 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1192
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hc58a6fbc99c5a688E"({ i64*, i64 }* %0), !dbg !1192
  br label %bb1, !dbg !1192

bb1:                                              ; preds = %start
  ret void, !dbg !1192
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i64]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h882698a9b1f10e27E(i64* %data, i64 %len) unnamed_addr #0 !dbg !1193 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i64*, align 8
  store i64* %data, i64** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %data.dbg.spill, metadata !1201, metadata !DIExpression()), !dbg !1203
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1202, metadata !DIExpression()), !dbg !1204
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8d2d45fc177d8777E"(i64* %data), !dbg !1205
  br label %bb1, !dbg !1205

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i64]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h4b62744334efbe6aE({}* %_3, i64 %len), !dbg !1206
  %1 = extractvalue { [0 x i64]*, i64 } %0, 0, !dbg !1206
  %2 = extractvalue { [0 x i64]*, i64 } %0, 1, !dbg !1206
  br label %bb2, !dbg !1206

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %1, 0, !dbg !1207
  %4 = insertvalue { [0 x i64]*, i64 } %3, i64 %2, 1, !dbg !1207
  ret { [0 x i64]*, i64 } %4, !dbg !1207
}

; core::ptr::drop_in_place<<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>>::spec_extend::{{closure}}>
; Function Attrs: nounwind
define void @"_ZN4core3ptr236drop_in_place$LT$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..iter..adapters..rev..Rev$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb67f0149e9143ffcE"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1) unnamed_addr #1 !dbg !1208 {
start:
  %_1.dbg.spill = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, align 8
  store %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, metadata !1217, metadata !DIExpression()), !dbg !1220
  %0 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1, i32 0, i32 1, !dbg !1220
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hc58a6fbc99c5a688E"({ i64*, i64 }* %0), !dbg !1220
  br label %bb1, !dbg !1220

bb1:                                              ; preds = %start
  ret void, !dbg !1220
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i64]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h85f2168ac0038682E(i64* %data, i64 %len) unnamed_addr #0 !dbg !1221 {
start:
  %self.dbg.spill.i = alloca i64*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i64*, align 8
  store i64* %data, i64** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %data.dbg.spill, metadata !1229, metadata !DIExpression()), !dbg !1231
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1230, metadata !DIExpression()), !dbg !1232
  store i64* %data, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !1233, metadata !DIExpression()), !dbg !1244
  %0 = bitcast i64* %data to {}*, !dbg !1246
  br label %bb1, !dbg !1247

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i64]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17he15f99523fc081e7E({}* %0, i64 %len), !dbg !1248
  %2 = extractvalue { [0 x i64]*, i64 } %1, 0, !dbg !1248
  %3 = extractvalue { [0 x i64]*, i64 } %1, 1, !dbg !1248
  br label %bb2, !dbg !1248

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %2, 0, !dbg !1249
  %5 = insertvalue { [0 x i64]*, i64 } %4, i64 %3, 1, !dbg !1249
  ret { [0 x i64]*, i64 } %5, !dbg !1249
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbb899ff8d8b31deaE(i8* %data, i64 %len) unnamed_addr #0 !dbg !1250 {
start:
  %self.dbg.spill.i = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1258, metadata !DIExpression()), !dbg !1260
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1259, metadata !DIExpression()), !dbg !1261
  store i8* %data, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !1262, metadata !DIExpression()), !dbg !1268
  %0 = bitcast i8* %data to {}*, !dbg !1270
  br label %bb1, !dbg !1271

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h8e26d0e54a1de4cfE({}* %0, i64 %len), !dbg !1272
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !1272
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !1272
  br label %bb2, !dbg !1272

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !1273
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1, !dbg !1273
  ret { [0 x i8]*, i64 } %5, !dbg !1273
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<usize,<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::ops::range::Range<usize>>>::spec_extend::{{closure}}>::{{closure}}>
; Function Attrs: nounwind
define void @"_ZN4core3ptr297drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$usize$C$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..ops..range..Range$LT$usize$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2af6467216b7d63eE"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1) unnamed_addr #1 !dbg !1274 {
start:
  %_1.dbg.spill = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"*, align 8
  store %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, metadata !1287, metadata !DIExpression()), !dbg !1290
  %0 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, !dbg !1290
; call core::ptr::drop_in_place<<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::ops::range::Range<usize>>>::spec_extend::{{closure}}>
  call void @"_ZN4core3ptr198drop_in_place$LT$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..ops..range..Range$LT$usize$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2810211a64a47804E"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %0), !dbg !1290
  br label %bb1, !dbg !1290

bb1:                                              ; preds = %start
  ret void, !dbg !1290
}

; core::ptr::drop_in_place<&bool>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17h6d5de9abef6c9f09E"(i8** %_1) unnamed_addr #0 !dbg !1291 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !1296, metadata !DIExpression()), !dbg !1299
  ret void, !dbg !1299
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h827b1345bfae1883E"(i64** %_1) unnamed_addr #0 !dbg !1300 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1305, metadata !DIExpression()), !dbg !1306
  ret void, !dbg !1306
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<usize,<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>>::spec_extend::{{closure}}>::{{closure}}>
; Function Attrs: nounwind
define void @"_ZN4core3ptr335drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$usize$C$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..iter..adapters..rev..Rev$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hede8acf3d6b2d9f0E"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1) unnamed_addr #1 !dbg !1307 {
start:
  %_1.dbg.spill = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"*, align 8
  store %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, metadata !1315, metadata !DIExpression()), !dbg !1318
  %0 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, !dbg !1318
; call core::ptr::drop_in_place<<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>>::spec_extend::{{closure}}>
  call void @"_ZN4core3ptr236drop_in_place$LT$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..iter..adapters..rev..Rev$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb67f0149e9143ffcE"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %0), !dbg !1318
  br label %bb1, !dbg !1318

bb1:                                              ; preds = %start
  ret void, !dbg !1318
}

; core::ptr::drop_in_place<alloc::vec::Vec<usize>>
; Function Attrs: nounwind
define void @"_ZN4core3ptr49drop_in_place$LT$alloc..vec..Vec$LT$usize$GT$$GT$17h1cff5daf5d0325b6E"(%"std::vec::Vec<usize>"* %_1) unnamed_addr #1 !dbg !1319 {
start:
  %_1.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %_1, %"std::vec::Vec<usize>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %_1.dbg.spill, metadata !1324, metadata !DIExpression()), !dbg !1325
; call <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc777ebcdf3ffdf11E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %_1), !dbg !1325
  br label %bb2, !dbg !1325

bb2:                                              ; preds = %start
  %0 = bitcast %"std::vec::Vec<usize>"* %_1 to { i64*, i64 }*, !dbg !1325
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<usize>>
  call void @"_ZN4core3ptr56drop_in_place$LT$alloc..raw_vec..RawVec$LT$usize$GT$$GT$17h4a51cf27f05cf454E"({ i64*, i64 }* %0), !dbg !1325
  br label %bb1, !dbg !1325

bb1:                                              ; preds = %bb2
  ret void, !dbg !1325
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr4read17hf728125a2e91769bE(i64* %src) unnamed_addr #0 !dbg !1326 {
start:
  %self.dbg.spill.i1 = alloca i64*, align 8
  %slot.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca i64, align 8
  %src.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i64* %src, i64** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill, metadata !1330, metadata !DIExpression()), !dbg !1342
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !1331, metadata !DIExpression()), !dbg !1343
  %1 = bitcast i64* %0 to {}*, !dbg !1344
  %2 = load i64, i64* %0, align 8, !dbg !1350
  store i64 %2, i64* %tmp, align 8, !dbg !1351
  br label %bb1, !dbg !1351

bb1:                                              ; preds = %start
  store i64* %tmp, i64** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i1, metadata !1352, metadata !DIExpression()), !dbg !1358
  br label %bb2, !dbg !1360

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*, !dbg !1361
  %4 = bitcast i64* %src to i8*, !dbg !1361
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false), !dbg !1361
  %_6 = load i64, i64* %tmp, align 8, !dbg !1362
  store i64 %_6, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1363, metadata !DIExpression()), !dbg !1368
  store i64 %_6, i64* %slot.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill.i.i, metadata !1370, metadata !DIExpression()), !dbg !1376
  br label %bb3, !dbg !1362

bb3:                                              ; preds = %bb2
  ret i64 %_6, !dbg !1378
}

; core::ptr::swap
; Function Attrs: inlinehint nounwind
define void @_ZN4core3ptr4swap17hfdc458cd1061b87dE(i64* %x, i64* %y) unnamed_addr #0 !dbg !1379 {
start:
  %self.dbg.spill.i1 = alloca i64*, align 8
  %self.dbg.spill.i = alloca i64*, align 8
  %0 = alloca i64, align 8
  %y.dbg.spill = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i64* %x, i64** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !1383, metadata !DIExpression()), !dbg !1387
  store i64* %y, i64** %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %y.dbg.spill, metadata !1384, metadata !DIExpression()), !dbg !1388
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !1385, metadata !DIExpression()), !dbg !1389
  %1 = bitcast i64* %0 to {}*, !dbg !1390
  %2 = load i64, i64* %0, align 8, !dbg !1392
  store i64 %2, i64* %tmp, align 8, !dbg !1393
  br label %bb1, !dbg !1393

bb1:                                              ; preds = %start
  store i64* %tmp, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !1352, metadata !DIExpression()), !dbg !1394
  br label %bb2, !dbg !1396

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h8075118644eaa71bE(i64* %x, i64* %tmp, i64 1), !dbg !1397
  br label %bb3, !dbg !1397

bb3:                                              ; preds = %bb2
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h2e5cb4dc4ce77089E(i64* %y, i64* %x, i64 1), !dbg !1398
  br label %bb4, !dbg !1398

bb4:                                              ; preds = %bb3
  store i64* %tmp, i64** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i1, metadata !1399, metadata !DIExpression()), !dbg !1405
  br label %bb5, !dbg !1407

bb5:                                              ; preds = %bb4
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h8075118644eaa71bE(i64* %tmp, i64* %y, i64 1), !dbg !1408
  br label %bb6, !dbg !1408

bb6:                                              ; preds = %bb5
  ret void, !dbg !1409
}

; core::ptr::drop_in_place<&alloc::vec::Vec<usize>>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr53drop_in_place$LT$$RF$alloc..vec..Vec$LT$usize$GT$$GT$17he73327f1f580cc8aE"(%"std::vec::Vec<usize>"** %_1) unnamed_addr #0 !dbg !1410 {
start:
  %_1.dbg.spill = alloca %"std::vec::Vec<usize>"**, align 8
  store %"std::vec::Vec<usize>"** %_1, %"std::vec::Vec<usize>"*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"*** %_1.dbg.spill, metadata !1415, metadata !DIExpression()), !dbg !1418
  ret void, !dbg !1418
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17hf913786a589be1ceE"(%"std::alloc::LayoutError"* %_1) unnamed_addr #0 !dbg !1419 {
start:
  %_1.dbg.spill = alloca %"std::alloc::LayoutError"*, align 8
  store %"std::alloc::LayoutError"* %_1, %"std::alloc::LayoutError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"** %_1.dbg.spill, metadata !1424, metadata !DIExpression()), !dbg !1427
  ret void, !dbg !1427
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<usize>>
; Function Attrs: nounwind
define void @"_ZN4core3ptr56drop_in_place$LT$alloc..raw_vec..RawVec$LT$usize$GT$$GT$17h4a51cf27f05cf454E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !1428 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !1433, metadata !DIExpression()), !dbg !1436
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h110a0acc4e3d2603E"({ i64*, i64 }* align 8 dereferenceable(16) %_1), !dbg !1436
  br label %bb1, !dbg !1436

bb1:                                              ; preds = %start
  ret void, !dbg !1436
}

; core::ptr::drop_in_place<itertools::permutations::CompleteState>
; Function Attrs: nounwind
define void @"_ZN4core3ptr59drop_in_place$LT$itertools..permutations..CompleteState$GT$17h85244e3766564339E"(%"permutations::CompleteState"* %_1) unnamed_addr #1 !dbg !1437 {
start:
  %_1.dbg.spill = alloca %"permutations::CompleteState"*, align 8
  store %"permutations::CompleteState"* %_1, %"permutations::CompleteState"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"** %_1.dbg.spill, metadata !1442, metadata !DIExpression()), !dbg !1443
  %0 = bitcast %"permutations::CompleteState"* %_1 to i64*, !dbg !1443
  %_2 = load i64, i64* %0, align 8, !dbg !1443, !range !230
  %1 = icmp eq i64 %_2, 0, !dbg !1443
  br i1 %1, label %bb1, label %bb3, !dbg !1443

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !1443

bb3:                                              ; preds = %start
  %2 = bitcast %"permutations::CompleteState"* %_1 to %"permutations::CompleteState::Ongoing"*, !dbg !1443
  %3 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %2, i32 0, i32 1, !dbg !1443
; call core::ptr::drop_in_place<alloc::vec::Vec<usize>>
  call void @"_ZN4core3ptr49drop_in_place$LT$alloc..vec..Vec$LT$usize$GT$$GT$17h1cff5daf5d0325b6E"(%"std::vec::Vec<usize>"* %3), !dbg !1443
  br label %bb2, !dbg !1443

bb2:                                              ; preds = %bb3
  %4 = bitcast %"permutations::CompleteState"* %_1 to %"permutations::CompleteState::Ongoing"*, !dbg !1443
  %5 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %4, i32 0, i32 2, !dbg !1443
; call core::ptr::drop_in_place<alloc::vec::Vec<usize>>
  call void @"_ZN4core3ptr49drop_in_place$LT$alloc..vec..Vec$LT$usize$GT$$GT$17h1cff5daf5d0325b6E"(%"std::vec::Vec<usize>"* %5), !dbg !1443
  br label %bb1, !dbg !1443
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define void @_ZN4core3ptr5write17h39b530a88072e8ebE(i64* %dst, i64 %0) unnamed_addr #0 !dbg !1444 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !1448, metadata !DIExpression()), !dbg !1450
  call void @llvm.dbg.declare(metadata i64* %src, metadata !1449, metadata !DIExpression()), !dbg !1451
  %1 = bitcast i64* %dst to i8*, !dbg !1452
  %2 = bitcast i64* %src to i8*, !dbg !1452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !dbg !1452
  ret void, !dbg !1453
}

; core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
; Function Attrs: nounwind
define void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hc58a6fbc99c5a688E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !1454 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !1459, metadata !DIExpression()), !dbg !1462
; call <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha5f8fbfab3675821E"({ i64*, i64 }* align 8 dereferenceable(16) %_1), !dbg !1462
  br label %bb1, !dbg !1462

bb1:                                              ; preds = %start
  ret void, !dbg !1462
}

; core::ptr::drop_in_place<&itertools::permutations::CompleteState>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr63drop_in_place$LT$$RF$itertools..permutations..CompleteState$GT$17h06fc7b877ec335c6E"(%"permutations::CompleteState"** %_1) unnamed_addr #0 !dbg !1463 {
start:
  %_1.dbg.spill = alloca %"permutations::CompleteState"**, align 8
  store %"permutations::CompleteState"** %_1, %"permutations::CompleteState"*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"*** %_1.dbg.spill, metadata !1468, metadata !DIExpression()), !dbg !1471
  ret void, !dbg !1471
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6911255c7520caf0E"(i8* %ptr) unnamed_addr #0 !dbg !1472 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1477, metadata !DIExpression()), !dbg !1478
  store i8* %ptr, i8** %0, align 8, !dbg !1479
  %1 = load i8*, i8** %0, align 8, !dbg !1480, !nonnull !4
  ret i8* %1, !dbg !1480
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbe85731dd4f93460E"(i64* %ptr) unnamed_addr #0 !dbg !1481 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !1485, metadata !DIExpression()), !dbg !1486
  store i64* %ptr, i64** %0, align 8, !dbg !1487
  %1 = load i64*, i64** %0, align 8, !dbg !1488, !nonnull !4
  ret i64* %1, !dbg !1488
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6839eb95853901f0E"(i64* nonnull %self) unnamed_addr #0 !dbg !1489 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1493, metadata !DIExpression()), !dbg !1496
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h205c4e675a273432E"(i64* nonnull %self), !dbg !1497
  br label %bb1, !dbg !1497

bb1:                                              ; preds = %start
  %_2 = bitcast i64* %_3 to i8*, !dbg !1497
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6911255c7520caf0E"(i8* %_2), !dbg !1498
  br label %bb2, !dbg !1498

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !1499
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h205c4e675a273432E"(i64* nonnull %self) unnamed_addr #0 !dbg !1500 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1504, metadata !DIExpression()), !dbg !1505
  ret i64* %self, !dbg !1506
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17had4afa70e4d11c21E"(i8* nonnull %self) unnamed_addr #0 !dbg !1507 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1511, metadata !DIExpression()), !dbg !1512
  ret i8* %self, !dbg !1513
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nounwind
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he48c5ab346c0a3a6E"() unnamed_addr #0 !dbg !1514 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8, !dbg !1517
  %1 = load i64, i64* %0, align 8, !dbg !1517
  br label %bb1, !dbg !1522

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 %1 to i64*, !dbg !1522
; call core::ptr::unique::Unique<T>::new_unchecked
  %2 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbe85731dd4f93460E"(i64* %_1), !dbg !1523
  br label %bb2, !dbg !1523

bb2:                                              ; preds = %bb1
  ret i64* %2, !dbg !1524
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h3468ef122634fdd5E"(i8* %self, i8* %other) unnamed_addr #0 !dbg !1525 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1529, metadata !DIExpression()), !dbg !1531
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1530, metadata !DIExpression()), !dbg !1532
  %1 = icmp eq i8* %self, %other, !dbg !1533
  %2 = zext i1 %1 to i8, !dbg !1533
  store i8 %2, i8* %0, align 1, !dbg !1533
  %3 = load i8, i8* %0, align 1, !dbg !1533, !range !978
  %4 = trunc i8 %3 to i1, !dbg !1533
  br label %bb1, !dbg !1533

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !1534
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0a1ac1189ec0120dE"(i8* %self) unnamed_addr #0 !dbg !1535 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1539, metadata !DIExpression()), !dbg !1540
  br label %bb1, !dbg !1541

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h3468ef122634fdd5E"(i8* %self, i8* null), !dbg !1542
  br label %bb2, !dbg !1542

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !1543
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1b9b0a36be9d5327E"(i64* %self) unnamed_addr #0 !dbg !1544 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1548, metadata !DIExpression()), !dbg !1549
  %_2 = bitcast i64* %self to i8*, !dbg !1550
  br label %bb1, !dbg !1551

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h3468ef122634fdd5E"(i8* %_2, i8* null), !dbg !1550
  br label %bb2, !dbg !1550

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !1552
}

; core::ptr::drop_in_place<core::panic::panic_info::PanicInfo::internal_constructor::NoPayload>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr88drop_in_place$LT$core..panic..panic_info..PanicInfo..internal_constructor..NoPayload$GT$17hd8a79b41633b8d7eE"(%"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"* %_1) unnamed_addr #0 !dbg !1553 {
start:
  %_1.dbg.spill = alloca %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"*, align 8
  store %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"* %_1, %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::panic::PanicInfo<'a>::internal_constructor::NoPayload"** %_1.dbg.spill, metadata !1558, metadata !DIExpression()), !dbg !1559
  ret void, !dbg !1559
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i64]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h4b62744334efbe6aE({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1560 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[usize]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1567, metadata !DIExpression()), !dbg !1572
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1568, metadata !DIExpression()), !dbg !1573
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1574
  store {}* %data_address, {}** %0, align 8, !dbg !1574
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1574
  store i64 %metadata, i64* %1, align 8, !dbg !1574
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[usize]>"* %_3 to { i8*, i64 }*, !dbg !1575
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1575
  %4 = load i8*, i8** %3, align 8, !dbg !1575
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1575
  %6 = load i64, i64* %5, align 8, !dbg !1575
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1575
  store i8* %4, i8** %7, align 8, !dbg !1575
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1575
  store i64 %6, i64* %8, align 8, !dbg !1575
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[usize]>"* %_3 to { [0 x i64]*, i64 }*, !dbg !1575
  %10 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %9, i32 0, i32 0, !dbg !1575
  %11 = load [0 x i64]*, [0 x i64]** %10, align 8, !dbg !1575
  %12 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %9, i32 0, i32 1, !dbg !1575
  %13 = load i64, i64* %12, align 8, !dbg !1575
  %14 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %11, 0, !dbg !1576
  %15 = insertvalue { [0 x i64]*, i64 } %14, i64 %13, 1, !dbg !1576
  ret { [0 x i64]*, i64 } %15, !dbg !1576
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h8e26d0e54a1de4cfE({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1577 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[u8]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1581, metadata !DIExpression()), !dbg !1583
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1582, metadata !DIExpression()), !dbg !1584
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1585
  store {}* %data_address, {}** %0, align 8, !dbg !1585
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1585
  store i64 %metadata, i64* %1, align 8, !dbg !1585
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*, !dbg !1586
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1586
  %4 = load i8*, i8** %3, align 8, !dbg !1586
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1586
  %6 = load i64, i64* %5, align 8, !dbg !1586
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1586
  store i8* %4, i8** %7, align 8, !dbg !1586
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1586
  store i64 %6, i64* %8, align 8, !dbg !1586
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*, !dbg !1586
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1586
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1586
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1586
  %13 = load i64, i64* %12, align 8, !dbg !1586
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !1587
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !1587
  ret { [0 x i8]*, i64 } %15, !dbg !1587
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i64]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17he15f99523fc081e7E({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1588 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[usize]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1592, metadata !DIExpression()), !dbg !1594
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1593, metadata !DIExpression()), !dbg !1595
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1596
  store {}* %data_address, {}** %0, align 8, !dbg !1596
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1596
  store i64 %metadata, i64* %1, align 8, !dbg !1596
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[usize]>"* %_3 to { i8*, i64 }*, !dbg !1597
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1597
  %4 = load i8*, i8** %3, align 8, !dbg !1597
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1597
  %6 = load i64, i64* %5, align 8, !dbg !1597
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1597
  store i8* %4, i8** %7, align 8, !dbg !1597
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1597
  store i64 %6, i64* %8, align 8, !dbg !1597
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[usize]>"* %_3 to { [0 x i64]*, i64 }*, !dbg !1597
  %10 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %9, i32 0, i32 0, !dbg !1597
  %11 = load [0 x i64]*, [0 x i64]** %10, align 8, !dbg !1597
  %12 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %9, i32 0, i32 1, !dbg !1597
  %13 = load i64, i64* %12, align 8, !dbg !1597
  %14 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %11, 0, !dbg !1598
  %15 = insertvalue { [0 x i64]*, i64 } %14, i64 %13, 1, !dbg !1598
  ret { [0 x i64]*, i64 } %15, !dbg !1598
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr8metadata8metadata17hafda8c3dc7d0bb07E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1599 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"std::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1603, metadata !DIExpression()), !dbg !1604
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*, !dbg !1605
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !1605
  store [0 x i8]* %ptr.0, [0 x i8]** %3, align 8, !dbg !1605
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !1605
  store i64 %ptr.1, i64* %4, align 8, !dbg !1605
  %5 = bitcast %"std::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*, !dbg !1605
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !1605
  %7 = load i64, i64* %6, align 8, !dbg !1605
  ret i64 %7, !dbg !1606
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h261173f5f5c7c267E"(i8* %ptr) unnamed_addr #0 !dbg !1607 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1611, metadata !DIExpression()), !dbg !1612
  store i8* %ptr, i8** %0, align 8, !dbg !1613
  %1 = load i8*, i8** %0, align 8, !dbg !1614, !nonnull !4
  ret i8* %1, !dbg !1614
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h318bd0df0884951bE"(i64* %ptr) unnamed_addr #0 !dbg !1615 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !1619, metadata !DIExpression()), !dbg !1620
  store i64* %ptr, i64** %0, align 8, !dbg !1621
  %1 = load i64*, i64** %0, align 8, !dbg !1622, !nonnull !4
  ret i64* %1, !dbg !1622
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c2c825d058e5188E"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1623 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1627, metadata !DIExpression()), !dbg !1628
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !1629
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !1629
  store [0 x i8]* %ptr.0, [0 x i8]** %4, align 8, !dbg !1629
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !1629
  store i64 %ptr.1, i64* %5, align 8, !dbg !1629
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !1630
  %7 = load i8*, i8** %6, align 8, !dbg !1630, !nonnull !4
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !1630
  %9 = load i64, i64* %8, align 8, !dbg !1630
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0, !dbg !1630
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1, !dbg !1630
  ret { i8*, i64 } %11, !dbg !1630
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17habe433947869e644E"(i8* %ptr) unnamed_addr #0 !dbg !1631 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1647, metadata !DIExpression()), !dbg !1648
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0a1ac1189ec0120dE"(i8* %ptr), !dbg !1649
  br label %bb1, !dbg !1649

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !1650
  br i1 %_2, label %bb2, label %bb4, !dbg !1650

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**, !dbg !1651
  store {}* null, {}** %1, align 8, !dbg !1651
  br label %bb5, !dbg !1652

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h261173f5f5c7c267E"(i8* %ptr), !dbg !1653
  br label %bb3, !dbg !1653

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8, !dbg !1654
  br label %bb5, !dbg !1652

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8, !dbg !1655
  ret i8* %2, !dbg !1655
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he238f352c767a682E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1656 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1660, metadata !DIExpression()), !dbg !1663
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc04cde3ef68de4e4E"(i8* nonnull %self.0, i64 %self.1), !dbg !1664
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1664
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1664
  br label %bb1, !dbg !1664

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i64*, !dbg !1664
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h318bd0df0884951bE"(i64* %_2), !dbg !1665
  br label %bb2, !dbg !1665

bb2:                                              ; preds = %bb1
  ret i64* %3, !dbg !1666
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %self) unnamed_addr #0 !dbg !1667 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1671, metadata !DIExpression()), !dbg !1672
  ret i64* %self, !dbg !1673
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E"(i8* nonnull %self) unnamed_addr #0 !dbg !1674 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1678, metadata !DIExpression()), !dbg !1679
  ret i8* %self, !dbg !1680
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc04cde3ef68de4e4E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1681 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1685, metadata !DIExpression()), !dbg !1686
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !1687
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0, !dbg !1688
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !1688
  ret { [0 x i8]*, i64 } %3, !dbg !1688
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h9fe46e2f4b565a65E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1689 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1693, metadata !DIExpression()), !dbg !1694
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hb505f6203ea22404E"(i8* nonnull %self.0, i64 %self.1), !dbg !1695
  br label %bb1, !dbg !1695

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E"(i8* nonnull %_2), !dbg !1695
  br label %bb2, !dbg !1695

bb2:                                              ; preds = %bb1
  ret i8* %2, !dbg !1696
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hb505f6203ea22404E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1697 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1701, metadata !DIExpression()), !dbg !1702
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc04cde3ef68de4e4E"(i8* nonnull %self.0, i64 %self.1), !dbg !1703
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1703
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1703
  br label %bb1, !dbg !1703

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %_3.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1704, metadata !DIExpression()), !dbg !1710
  %5 = bitcast [0 x i8]* %_3.0 to i8*, !dbg !1712
  br label %bb2, !dbg !1703

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %6 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h261173f5f5c7c267E"(i8* %5), !dbg !1713
  br label %bb3, !dbg !1713

bb3:                                              ; preds = %bb2
  ret i8* %6, !dbg !1714
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc0589c963be055f8E"(i8* nonnull %data, i64 %len) unnamed_addr #0 !dbg !1715 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1719, metadata !DIExpression()), !dbg !1721
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1720, metadata !DIExpression()), !dbg !1722
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E"(i8* nonnull %data), !dbg !1723
  br label %bb1, !dbg !1723

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbb899ff8d8b31deaE(i8* %_4, i64 %len), !dbg !1724
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !1724
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !1724
  br label %bb2, !dbg !1724

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c2c825d058e5188E"([0 x i8]* %_3.0, i64 %_3.1), !dbg !1725
  %2 = extractvalue { i8*, i64 } %1, 0, !dbg !1725
  %3 = extractvalue { i8*, i64 } %1, 1, !dbg !1725
  br label %bb3, !dbg !1725

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0, !dbg !1726
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1, !dbg !1726
  ret { i8*, i64 } %5, !dbg !1726
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h697dd1e73004a5a0E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1727 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1732
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc04cde3ef68de4e4E"(i8* nonnull %self.0, i64 %self.1), !dbg !1733
  %_2.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1733
  %_2.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1733
  br label %bb1, !dbg !1733

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %_2.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %_2.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1734, metadata !DIExpression()) #12, !dbg !1739
; call core::ptr::metadata::metadata
  %5 = call i64 @_ZN4core3ptr8metadata8metadata17hafda8c3dc7d0bb07E([0 x i8]* %_2.0, i64 %_2.1) #12, !dbg !1741
  br label %bb2, !dbg !1733

bb2:                                              ; preds = %bb1
  ret i64 %5, !dbg !1742
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h10a9963373449480E"(i8* %self, i8* %other) unnamed_addr #0 !dbg !1743 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1750, metadata !DIExpression()), !dbg !1752
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1751, metadata !DIExpression()), !dbg !1753
  %1 = icmp eq i8* %self, %other, !dbg !1754
  %2 = zext i1 %1 to i8, !dbg !1754
  store i8 %2, i8* %0, align 1, !dbg !1754
  %3 = load i8, i8* %0, align 1, !dbg !1754, !range !978
  %4 = trunc i8 %3 to i1, !dbg !1754
  br label %bb1, !dbg !1754

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !1755
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nounwind
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8d2d45fc177d8777E"(i64* %self) unnamed_addr #0 !dbg !1756 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1760, metadata !DIExpression()), !dbg !1761
  %0 = bitcast i64* %self to {}*, !dbg !1762
  ret {}* %0, !dbg !1763
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha99b5b7e9bafbc86E"(i64* %self) unnamed_addr #0 !dbg !1764 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1768, metadata !DIExpression()), !dbg !1769
  %_2 = bitcast i64* %self to i8*, !dbg !1770
  br label %bb1, !dbg !1771

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h10a9963373449480E"(i8* %_2, i8* null), !dbg !1770
  br label %bb2, !dbg !1770

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !1772
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hafa76b4b20914880E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1773 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1779, metadata !DIExpression()), !dbg !1782
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd3bca098422bb437E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1783
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1783
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1783
  br label %bb1, !dbg !1783

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1784
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1784
  ret { i64, i64 } %4, !dbg !1784
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
; Function Attrs: inlinehint nounwind
define void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17hdd5a7ccf0a5ee504E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1785 {
start:
  %hint.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_13 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1794, metadata !DIExpression()), !dbg !1797
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !1798
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1799
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h6ae0d9c40d77ba84E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4), !dbg !1798
  br label %bb1, !dbg !1798

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb5, !dbg !1798

bb5:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %_13 to %"std::option::Option<usize>::Some"*, !dbg !1800
  %2 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %1, i32 0, i32 1, !dbg !1800
  store i64 0, i64* %2, align 8, !dbg !1800
  %3 = bitcast { i64, i64 }* %_13 to i64*, !dbg !1800
  store i64 1, i64* %3, align 8, !dbg !1800
  %4 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !1801
  store i64 0, i64* %4, align 8, !dbg !1801
  %5 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !1801
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !1801
  %7 = load i64, i64* %6, align 8, !dbg !1801, !range !230
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !1801
  %9 = load i64, i64* %8, align 8, !dbg !1801
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !1801
  store i64 %7, i64* %10, align 8, !dbg !1801
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !1801
  store i64 %9, i64* %11, align 8, !dbg !1801
  br label %bb6, !dbg !1802

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !1803
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1804
; call <usize as core::iter::range::Step>::steps_between
  %12 = call { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hc037fed79425c43cE"(i64* align 8 dereferenceable(8) %_7, i64* align 8 dereferenceable(8) %_9), !dbg !1805
  %hint.0 = extractvalue { i64, i64 } %12, 0, !dbg !1805
  %hint.1 = extractvalue { i64, i64 } %12, 1, !dbg !1805
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %hint.dbg.spill, i32 0, i32 0, !dbg !1805
  store i64 %hint.0, i64* %13, align 8, !dbg !1805
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %hint.dbg.spill, i32 0, i32 1, !dbg !1805
  store i64 %hint.1, i64* %14, align 8, !dbg !1805
  call void @llvm.dbg.declare(metadata { i64, i64 }* %hint.dbg.spill, metadata !1795, metadata !DIExpression()), !dbg !1806
  br label %bb3, !dbg !1805

bb3:                                              ; preds = %bb2
; call core::option::Option<T>::unwrap_or
  %_10 = call i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd849ad9b75b5bafdE"(i64 %hint.0, i64 %hint.1, i64 -1), !dbg !1807
  br label %bb4, !dbg !1807

bb4:                                              ; preds = %bb3
  %15 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !1808
  store i64 %_10, i64* %15, align 8, !dbg !1808
  %16 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !1808
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !1808
  store i64 %hint.0, i64* %17, align 8, !dbg !1808
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !1808
  store i64 %hint.1, i64* %18, align 8, !dbg !1808
  br label %bb6, !dbg !1802

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !1809
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h4db9249addc4e14cE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1810 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1813, metadata !DIExpression()), !dbg !1814
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h12317ff84a91bd31E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1815
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1815
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1815
  br label %bb1, !dbg !1815

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1816
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1816
  ret { i64, i64 } %4, !dbg !1816
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfold
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfold17h94d6b93561bea54fE(i64 %0, i64 %1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 !dbg !1817 {
start:
  %x.dbg.spill = alloca i64, align 8
  %init.dbg.spill = alloca {}, align 1
  %accum.dbg.spill = alloca {}, align 1
  %_10 = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata {}* %accum.dbg.spill, metadata !1827, metadata !DIExpression()), !dbg !1835
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1824, metadata !DIExpression()), !dbg !1836
  call void @llvm.dbg.declare(metadata {}* %init.dbg.spill, metadata !1825, metadata !DIExpression()), !dbg !1837
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %f, metadata !1826, metadata !DIExpression()), !dbg !1838
  br label %bb1, !dbg !1839

bb1:                                              ; preds = %bb4, %start
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %4 = call { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h4db9249addc4e14cE"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1840
  store { i64, i64 } %4, { i64, i64 }* %_4, align 8, !dbg !1840
  br label %bb2, !dbg !1840

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %_4 to i64*, !dbg !1841
  %_6 = load i64, i64* %5, align 8, !dbg !1841, !range !230
  %6 = icmp eq i64 %_6, 1, !dbg !1841
  br i1 %6, label %bb3, label %bb5, !dbg !1841

bb3:                                              ; preds = %bb2
  %7 = bitcast { i64, i64 }* %_4 to %"std::option::Option<usize>::Some"*, !dbg !1842
  %8 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %7, i32 0, i32 1, !dbg !1842
  %x = load i64, i64* %8, align 8, !dbg !1842
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !1842
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !1829, metadata !DIExpression()), !dbg !1843
  %9 = bitcast i64* %_10 to {}*, !dbg !1844
  store i64 %x, i64* %_10, align 8, !dbg !1844
  %10 = load i64, i64* %_10, align 8, !dbg !1844
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h39a66a7140c5b165E"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* align 8 dereferenceable(24) %f, i64 %10), !dbg !1844
  br label %bb4, !dbg !1844

bb5:                                              ; preds = %bb2
  br label %bb6, !dbg !1845

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<usize,<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>>::spec_extend::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr335drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$usize$C$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..iter..adapters..rev..Rev$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hede8acf3d6b2d9f0E"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %f), !dbg !1846
  br label %bb7, !dbg !1846

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !1846

bb8:                                              ; preds = %bb7
  ret void, !dbg !1847

bb4:                                              ; preds = %bb3
  br label %bb1, !dbg !1839
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17he0cc0d0348a7af5dE(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1848 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1853, metadata !DIExpression()), !dbg !1855
; call core::iter::adapters::rev::Rev<T>::new
  %2 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h6944f2caf517b4abE"(i64 %self.0, i64 %self.1), !dbg !1856
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !1856
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !1856
  br label %bb1, !dbg !1856

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !1857
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !1857
  ret { i64, i64 } %6, !dbg !1857
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator4fold17h06f585ccccddf3c3E(i64 %0, i64 %1, i64 %init.0, i64 %init.1) unnamed_addr #0 !dbg !1858 {
start:
  %x.dbg.spill = alloca i64, align 8
  %init.dbg.spill = alloca { i64, i64 }, align 8
  %_10 = alloca { { i64, i64 }, i64 }, align 8
  %_4 = alloca { i64, i64 }, align 8
  %accum = alloca { i64, i64 }, align 8
  %f = alloca %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]", align 1
  %self = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %accum, metadata !1868, metadata !DIExpression()), !dbg !1875
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1865, metadata !DIExpression()), !dbg !1876
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %init.dbg.spill, i32 0, i32 0
  store i64 %init.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %init.dbg.spill, i32 0, i32 1
  store i64 %init.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %init.dbg.spill, metadata !1866, metadata !DIExpression()), !dbg !1877
  call void @llvm.dbg.declare(metadata %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"* %f, metadata !1867, metadata !DIExpression()), !dbg !1878
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 0, !dbg !1879
  store i64 %init.0, i64* %6, align 8, !dbg !1879
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 1, !dbg !1879
  store i64 %init.1, i64* %7, align 8, !dbg !1879
  br label %bb1, !dbg !1880

bb1:                                              ; preds = %bb4, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %8 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hafa76b4b20914880E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1881
  store { i64, i64 } %8, { i64, i64 }* %_4, align 8, !dbg !1881
  br label %bb2, !dbg !1881

bb2:                                              ; preds = %bb1
  %9 = bitcast { i64, i64 }* %_4 to i64*, !dbg !1882
  %_6 = load i64, i64* %9, align 8, !dbg !1882, !range !230
  %10 = icmp eq i64 %_6, 1, !dbg !1882
  br i1 %10, label %bb3, label %bb5, !dbg !1882

bb3:                                              ; preds = %bb2
  %11 = bitcast { i64, i64 }* %_4 to %"std::option::Option<usize>::Some"*, !dbg !1883
  %12 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %11, i32 0, i32 1, !dbg !1883
  %x = load i64, i64* %12, align 8, !dbg !1883
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !1883
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !1870, metadata !DIExpression()), !dbg !1884
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 0, !dbg !1885
  %_11.0 = load i64, i64* %13, align 8, !dbg !1885, !range !230
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 1, !dbg !1885
  %_11.1 = load i64, i64* %14, align 8, !dbg !1885
  %15 = bitcast { { i64, i64 }, i64 }* %_10 to { i64, i64 }*, !dbg !1886
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !1886
  store i64 %_11.0, i64* %16, align 8, !dbg !1886
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !1886
  store i64 %_11.1, i64* %17, align 8, !dbg !1886
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_10, i32 0, i32 1, !dbg !1886
  store i64 %x, i64* %18, align 8, !dbg !1886
  %19 = bitcast { { i64, i64 }, i64 }* %_10 to { i64, i64 }*, !dbg !1886
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !1886
  %21 = load i64, i64* %20, align 8, !dbg !1886, !range !230
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !1886
  %23 = load i64, i64* %22, align 8, !dbg !1886
  %24 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_10, i32 0, i32 1, !dbg !1886
  %25 = load i64, i64* %24, align 8, !dbg !1886
; call itertools::permutations::CompleteState::remaining::{{closure}}
  %26 = call { i64, i64 } @"_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$17hb67bd229eb5fa747E"(%"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"* nonnull align 1 %f, i64 %21, i64 %23, i64 %25), !dbg !1886
  %_8.0 = extractvalue { i64, i64 } %26, 0, !dbg !1886
  %_8.1 = extractvalue { i64, i64 } %26, 1, !dbg !1886
  br label %bb4, !dbg !1886

bb5:                                              ; preds = %bb2
  br label %bb6, !dbg !1887

bb6:                                              ; preds = %bb5
  br label %bb7, !dbg !1888

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !1888

bb8:                                              ; preds = %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 0, !dbg !1889
  %28 = load i64, i64* %27, align 8, !dbg !1889, !range !230
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 1, !dbg !1889
  %30 = load i64, i64* %29, align 8, !dbg !1889
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !1889
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !1889
  ret { i64, i64 } %32, !dbg !1889

bb4:                                              ; preds = %bb3
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 0, !dbg !1890
  store i64 %_8.0, i64* %33, align 8, !dbg !1890
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %accum, i32 0, i32 1, !dbg !1890
  store i64 %_8.1, i64* %34, align 8, !dbg !1890
  br label %bb1, !dbg !1880
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator4fold17h72329ea0f180af1eE(i64 %0, i64 %1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 !dbg !1891 {
start:
  %x.dbg.spill = alloca i64, align 8
  %init.dbg.spill = alloca {}, align 1
  %accum.dbg.spill = alloca {}, align 1
  %_10 = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata {}* %accum.dbg.spill, metadata !1898, metadata !DIExpression()), !dbg !1904
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1895, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.declare(metadata {}* %init.dbg.spill, metadata !1896, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %f, metadata !1897, metadata !DIExpression()), !dbg !1907
  br label %bb1, !dbg !1908

bb1:                                              ; preds = %bb4, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %4 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hafa76b4b20914880E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1909
  store { i64, i64 } %4, { i64, i64 }* %_4, align 8, !dbg !1909
  br label %bb2, !dbg !1909

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %_4 to i64*, !dbg !1910
  %_6 = load i64, i64* %5, align 8, !dbg !1910, !range !230
  %6 = icmp eq i64 %_6, 1, !dbg !1910
  br i1 %6, label %bb3, label %bb5, !dbg !1910

bb3:                                              ; preds = %bb2
  %7 = bitcast { i64, i64 }* %_4 to %"std::option::Option<usize>::Some"*, !dbg !1911
  %8 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %7, i32 0, i32 1, !dbg !1911
  %x = load i64, i64* %8, align 8, !dbg !1911
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !1911
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !1900, metadata !DIExpression()), !dbg !1912
  %9 = bitcast i64* %_10 to {}*, !dbg !1913
  store i64 %x, i64* %_10, align 8, !dbg !1913
  %10 = load i64, i64* %_10, align 8, !dbg !1913
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd8492cc4be316fedE"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* align 8 dereferenceable(24) %f, i64 %10), !dbg !1913
  br label %bb4, !dbg !1913

bb5:                                              ; preds = %bb2
  br label %bb6, !dbg !1914

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<usize,<alloc::vec::Vec<usize> as alloc::vec::spec_extend::SpecExtend<usize,core::ops::range::Range<usize>>>::spec_extend::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr297drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$usize$C$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..ops..range..Range$LT$usize$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2af6467216b7d63eE"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %f), !dbg !1915
  br label %bb7, !dbg !1915

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !1915

bb8:                                              ; preds = %bb7
  ret void, !dbg !1916

bb4:                                              ; preds = %bb3
  br label %bb1, !dbg !1908
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h5a26c930e6531310E(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1917 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1919, metadata !DIExpression()), !dbg !1922
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h8c5a26dccc21557eE"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %self.0, i64 %self.1), !dbg !1923
  br label %bb1, !dbg !1923

bb1:                                              ; preds = %start
  ret void, !dbg !1924
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator7collect17hfcb59dd665720e82E(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !1925 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1927, metadata !DIExpression()), !dbg !1930
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17he381db13525916a3E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %self.0, i64 %self.1), !dbg !1931
  br label %bb1, !dbg !1931

bb1:                                              ; preds = %start
  ret void, !dbg !1932
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h0104e08a74c2bf75E(i64 %self.0, i64 %self.1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 !dbg !1933 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]", align 8
  %_6 = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]", align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1937, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %f, metadata !1938, metadata !DIExpression()), !dbg !1942
  %2 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_7 to i8*, !dbg !1943
  %3 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %f to i8*, !dbg !1943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !1943
; call core::iter::traits::iterator::Iterator::for_each::call
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hd35227754cdc723bE(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture sret(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]") dereferenceable(24) %_6, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %_7), !dbg !1944
  br label %bb1, !dbg !1944

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h72329ea0f180af1eE(i64 %self.0, i64 %self.1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture dereferenceable(24) %_6), !dbg !1945
  br label %bb2, !dbg !1945

bb2:                                              ; preds = %bb1
  ret void, !dbg !1946
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h26800b288d2fb69dE(i64 %self.0, i64 %self.1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 !dbg !1947 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]", align 8
  %_6 = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]", align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1951, metadata !DIExpression()), !dbg !1955
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %f, metadata !1952, metadata !DIExpression()), !dbg !1956
  %2 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_7 to i8*, !dbg !1957
  %3 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %f to i8*, !dbg !1957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !1957
; call core::iter::traits::iterator::Iterator::for_each::call
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h23a97057d9bbe47bE(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture sret(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]") dereferenceable(24) %_6, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %_7), !dbg !1958
  br label %bb1, !dbg !1958

bb1:                                              ; preds = %start
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h3c12418a31000f3cE"(i64 %self.0, i64 %self.1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture dereferenceable(24) %_6), !dbg !1959
  br label %bb2, !dbg !1959

bb2:                                              ; preds = %bb1
  ret void, !dbg !1960
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h23a97057d9bbe47bE(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture sret(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]") dereferenceable(24) %0, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 !dbg !1961 {
start:
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %f, metadata !1965, metadata !DIExpression()), !dbg !1968
  %1 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, !dbg !1969
  %2 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %1 to i8*, !dbg !1969
  %3 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %f to i8*, !dbg !1969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !1969
  ret void, !dbg !1970
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hd35227754cdc723bE(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture sret(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]") dereferenceable(24) %0, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 !dbg !1971 {
start:
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %f, metadata !1975, metadata !DIExpression()), !dbg !1978
  %1 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, !dbg !1979
  %2 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %1 to i8*, !dbg !1979
  %3 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %f to i8*, !dbg !1979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !1979
  ret void, !dbg !1980
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h39a66a7140c5b165E"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* align 8 dereferenceable(24) %_1, i64 %item) unnamed_addr #0 !dbg !1981 {
start:
  %item.dbg.spill = alloca i64, align 8
  %_2.dbg.spill = alloca {}, align 1
  %_1.dbg.spill = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"*, align 8
  %_5 = alloca i64, align 8
  store %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8
  %0 = load %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"*, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %1 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, metadata !1987, metadata !DIExpression(DW_OP_deref)), !dbg !1989
  call void @llvm.dbg.declare(metadata {}* %_2.dbg.spill, metadata !1988, metadata !DIExpression()), !dbg !1990
  store i64 %item, i64* %item.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %item.dbg.spill, metadata !1986, metadata !DIExpression()), !dbg !1991
  %_4 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, !dbg !1992
  store i64 %item, i64* %_5, align 8, !dbg !1992
  %2 = load i64, i64* %_5, align 8, !dbg !1992
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend::{{closure}}
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend28_$u7b$$u7b$closure$u7d$$u7d$17h1f4afca403b92a5dE"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* align 8 dereferenceable(24) %_4, i64 %2), !dbg !1992
  br label %bb1, !dbg !1992

bb1:                                              ; preds = %start
  ret void, !dbg !1993
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd8492cc4be316fedE"(%"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* align 8 dereferenceable(24) %_1, i64 %item) unnamed_addr #0 !dbg !1994 {
start:
  %item.dbg.spill = alloca i64, align 8
  %_2.dbg.spill = alloca {}, align 1
  %_1.dbg.spill = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"*, align 8
  %_5 = alloca i64, align 8
  store %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8
  %0 = load %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"*, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %1 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"** %_1.dbg.spill, metadata !2000, metadata !DIExpression(DW_OP_deref)), !dbg !2002
  call void @llvm.dbg.declare(metadata {}* %_2.dbg.spill, metadata !2001, metadata !DIExpression()), !dbg !2003
  store i64 %item, i64* %item.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %item.dbg.spill, metadata !1999, metadata !DIExpression()), !dbg !2004
  %_4 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, !dbg !2005
  store i64 %item, i64* %_5, align 8, !dbg !2005
  %2 = load i64, i64* %_5, align 8, !dbg !2005
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend::{{closure}}
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend28_$u7b$$u7b$closure$u7d$$u7d$17hbd2720235c2ff086E"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* align 8 dereferenceable(24) %_4, i64 %2), !dbg !2005
  br label %bb1, !dbg !2005

bb1:                                              ; preds = %start
  ret void, !dbg !2006
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h16d57dbee5ed8c1dE(%"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture sret(%"std::iter::Enumerate<std::slice::Iter<usize>>") dereferenceable(24) %0, i64* nonnull %self.0, i64* %self.1) unnamed_addr #0 !dbg !2007 {
start:
  %self.dbg.spill = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64* %self.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill, metadata !2011, metadata !DIExpression()), !dbg !2014
; call core::iter::adapters::enumerate::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h5466aacd68956aa9E"(%"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture sret(%"std::iter::Enumerate<std::slice::Iter<usize>>") dereferenceable(24) %0, i64* nonnull %self.0, i64* %self.1), !dbg !2015
  br label %bb1, !dbg !2015

bb1:                                              ; preds = %start
  ret void, !dbg !2016
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nounwind
define { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h6944f2caf517b4abE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 !dbg !2017 {
start:
  %iter.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter.dbg.spill, metadata !2020, metadata !DIExpression()), !dbg !2021
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2022
  store i64 %iter.0, i64* %3, align 8, !dbg !2022
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2022
  store i64 %iter.1, i64* %4, align 8, !dbg !2022
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2023
  %6 = load i64, i64* %5, align 8, !dbg !2023
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2023
  %8 = load i64, i64* %7, align 8, !dbg !2023
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !2023
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !2023
  ret { i64, i64 } %10, !dbg !2023
}

; core::iter::adapters::enumerate::Enumerate<I>::new
; Function Attrs: nounwind
define void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h5466aacd68956aa9E"(%"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture sret(%"std::iter::Enumerate<std::slice::Iter<usize>>") dereferenceable(24) %0, i64* nonnull %iter.0, i64* %iter.1) unnamed_addr #1 !dbg !2024 {
start:
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !2026, metadata !DIExpression()), !dbg !2027
  %3 = bitcast %"std::iter::Enumerate<std::slice::Iter<usize>>"* %0 to { i64*, i64* }*, !dbg !2028
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0, !dbg !2028
  store i64* %iter.0, i64** %4, align 8, !dbg !2028
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !2028
  store i64* %iter.1, i64** %5, align 8, !dbg !2028
  %6 = getelementptr inbounds %"std::iter::Enumerate<std::slice::Iter<usize>>", %"std::iter::Enumerate<std::slice::Iter<usize>>"* %0, i32 0, i32 1, !dbg !2028
  store i64 0, i64* %6, align 8, !dbg !2028
  ret void, !dbg !2029
}

; core::alloc::layout::size_align
; Function Attrs: nounwind
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h16a78acc6b9d6a6dE() unnamed_addr #1 !dbg !2030 {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  br label %bb1, !dbg !2038

bb1:                                              ; preds = %start
  store i64 8, i64* %0, align 8, !dbg !2039
  %2 = load i64, i64* %0, align 8, !dbg !2039
  br label %bb2, !dbg !2041

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %1 to i64*, !dbg !2042
  store i64 8, i64* %3, align 8, !dbg !2042
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2042
  store i64 %2, i64* %4, align 8, !dbg !2042
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !2043
  %6 = load i64, i64* %5, align 8, !dbg !2043
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2043
  %8 = load i64, i64* %7, align 8, !dbg !2043
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !2043
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !2043
  ret { i64, i64 } %10, !dbg !2043
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hc1669796bbc8a9a3E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2044 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %pad.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2049, metadata !DIExpression()), !dbg !2054
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2055
  br label %bb1, !dbg !2055

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h3658247fc7e144a7E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_4), !dbg !2056
  store i64 %pad, i64* %pad.dbg.spill, align 8, !dbg !2056
  call void @llvm.dbg.declare(metadata i64* %pad.dbg.spill, metadata !2050, metadata !DIExpression()), !dbg !2057
  br label %bb2, !dbg !2056

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2058
  br label %bb3, !dbg !2058

bb3:                                              ; preds = %bb2
  %new_size = add i64 %_7, %pad, !dbg !2058
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !2058
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !2052, metadata !DIExpression()), !dbg !2059
; call core::alloc::layout::Layout::align
  %_12 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2060
  br label %bb4, !dbg !2060

bb4:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h9e2ccb76571229b7E(i64 %new_size, i64 %_12), !dbg !2061
  %_10.0 = extractvalue { i64, i64 } %0, 0, !dbg !2061
  %_10.1 = extractvalue { i64, i64 } %0, 1, !dbg !2061
  br label %bb5, !dbg !2061

bb5:                                              ; preds = %bb4
; call core::result::Result<T,E>::unwrap
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h51d363fc12d341daE"(i64 %_10.0, i64 %_10.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1875 to %"std::panic::Location"*)), !dbg !2061
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !2061
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !2061
  br label %bb6, !dbg !2061

bb6:                                              ; preds = %bb5
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !2062
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !2062
  ret { i64, i64 } %5, !dbg !2062
}

; core::alloc::layout::Layout::from_size_align
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h9e2ccb76571229b7E(i64 %size, i64 %align) unnamed_addr #0 !dbg !2063 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2067, metadata !DIExpression()), !dbg !2069
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2068, metadata !DIExpression()), !dbg !2070
  store i64 %align, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !2071, metadata !DIExpression()) #12, !dbg !2076
  store i64 %align, i64* %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i.i, metadata !2078, metadata !DIExpression()) #12, !dbg !2083
  %2 = call i64 @llvm.ctpop.i64(i64 %align) #12, !dbg !2085
  store i64 %2, i64* %0, align 8, !dbg !2085
  %_2.i.i = load i64, i64* %0, align 8, !dbg !2085
  %3 = trunc i64 %_2.i.i to i32, !dbg !2085
  %4 = icmp eq i32 %3, 1, !dbg !2086
  br label %bb1, !dbg !2087

bb1:                                              ; preds = %start
  %_3 = xor i1 %4, true, !dbg !2088
  br i1 %_3, label %bb2, label %bb3, !dbg !2088

bb3:                                              ; preds = %bb1
  %_9 = sub i64 %align, 1, !dbg !2089
  %_8 = sub i64 -1, %_9, !dbg !2090
  %_6 = icmp ugt i64 %size, %_8, !dbg !2091
  br i1 %_6, label %bb4, label %bb5, !dbg !2091

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2092
  store i64 0, i64* %5, align 8, !dbg !2092
  br label %bb7, !dbg !2093

bb7:                                              ; preds = %bb6, %bb4, %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !2096
  %7 = load i64, i64* %6, align 8, !dbg !2096
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2096
  %9 = load i64, i64* %8, align 8, !dbg !2096
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0, !dbg !2096
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !2096
  ret { i64, i64 } %11, !dbg !2096

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align_unchecked
  %12 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3290f94581f3992eE(i64 %size, i64 %align), !dbg !2097
  %_11.0 = extractvalue { i64, i64 } %12, 0, !dbg !2097
  %_11.1 = extractvalue { i64, i64 } %12, 1, !dbg !2097
  br label %bb6, !dbg !2097

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2098
  store i64 0, i64* %13, align 8, !dbg !2098
  br label %bb7, !dbg !2093

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !2099
  store i64 %_11.0, i64* %14, align 8, !dbg !2099
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2099
  store i64 %_11.1, i64* %15, align 8, !dbg !2099
  br label %bb7, !dbg !2096
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h3658247fc7e144a7E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %align) unnamed_addr #0 !dbg !2100 {
start:
  %rhs.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca i64, align 8
  %rhs.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64, align 8
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %len_rounded_up.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2104, metadata !DIExpression()), !dbg !2110
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2105, metadata !DIExpression()), !dbg !2111
; call core::alloc::layout::Layout::size
  %len = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2112
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2112
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2106, metadata !DIExpression()), !dbg !2113
  br label %bb1, !dbg !2112

bb1:                                              ; preds = %start
  store i64 %len, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !2114, metadata !DIExpression()), !dbg !2118
  store i64 %align, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !2117, metadata !DIExpression()), !dbg !2120
  %0 = add i64 %len, %align, !dbg !2121
  br label %bb2, !dbg !2122

bb2:                                              ; preds = %bb1
  store i64 %0, i64* %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i6, metadata !2123, metadata !DIExpression()), !dbg !2127
  store i64 1, i64* %rhs.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i5, metadata !2126, metadata !DIExpression()), !dbg !2129
  %1 = sub i64 %0, 1, !dbg !2130
  br label %bb3, !dbg !2122

bb3:                                              ; preds = %bb2
  store i64 %align, i64* %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i4, metadata !2123, metadata !DIExpression()), !dbg !2131
  store i64 1, i64* %rhs.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i3, metadata !2126, metadata !DIExpression()), !dbg !2133
  %2 = sub i64 %align, 1, !dbg !2134
  br label %bb4, !dbg !2135

bb4:                                              ; preds = %bb3
  %_10 = xor i64 %2, -1, !dbg !2136
  %len_rounded_up = and i64 %1, %_10, !dbg !2122
  store i64 %len_rounded_up, i64* %len_rounded_up.dbg.spill, align 8, !dbg !2122
  call void @llvm.dbg.declare(metadata i64* %len_rounded_up.dbg.spill, metadata !2108, metadata !DIExpression()), !dbg !2137
  store i64 %len_rounded_up, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !2123, metadata !DIExpression()), !dbg !2138
  store i64 %len, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !2126, metadata !DIExpression()), !dbg !2140
  %3 = sub i64 %len_rounded_up, %len, !dbg !2141
  br label %bb5, !dbg !2142

bb5:                                              ; preds = %bb4
  ret i64 %3, !dbg !2143
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3290f94581f3992eE(i64 %size, i64 %align) unnamed_addr #0 !dbg !2144 {
start:
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2148, metadata !DIExpression()), !dbg !2150
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2149, metadata !DIExpression()), !dbg !2151
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd982396593d5f84eE(i64 %align), !dbg !2152, !range !1146
  br label %bb1, !dbg !2152

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !2153
  store i64 %size, i64* %1, align 8, !dbg !2153
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2153
  store i64 %_4, i64* %2, align 8, !dbg !2153
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2154
  %4 = load i64, i64* %3, align 8, !dbg !2154
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2154
  %6 = load i64, i64* %5, align 8, !dbg !2154, !range !1146
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !2154
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !2154
  ret { i64, i64 } %8, !dbg !2154
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h613820fd98b1e9f4E() unnamed_addr #0 !dbg !2155 {
start:
  %align.dbg.spill = alloca i64, align 8, !dbg !2162
  %size.dbg.spill = alloca i64, align 8, !dbg !2162
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h16a78acc6b9d6a6dE(), !dbg !2162
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !2162
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !2162
  br label %bb1, !dbg !2162

bb1:                                              ; preds = %start
  store i64 %_3.0, i64* %size.dbg.spill, align 8, !dbg !2163
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2159, metadata !DIExpression()), !dbg !2164
  store i64 %_3.1, i64* %align.dbg.spill, align 8, !dbg !2165
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2161, metadata !DIExpression()), !dbg !2166
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3290f94581f3992eE(i64 %_3.0, i64 %_3.1), !dbg !2167
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !2167
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !2167
  br label %bb2, !dbg !2167

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !2168
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !2168
  ret { i64, i64 } %5, !dbg !2168
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2169 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2173, metadata !DIExpression()), !dbg !2174
  %0 = bitcast { i64, i64 }* %self to i64*, !dbg !2175
  %1 = load i64, i64* %0, align 8, !dbg !2175
  ret i64 %1, !dbg !2176
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2177 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2179, metadata !DIExpression()), !dbg !2180
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2181
  %_2 = load i64, i64* %0, align 8, !dbg !2181, !range !1146
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17hab7a81ef096fdfa4E(i64 %_2), !dbg !2181
  br label %bb1, !dbg !2181

bb1:                                              ; preds = %start
  ret i64 %1, !dbg !2182
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h07662e3be769a547E(i64 %n) unnamed_addr #0 !dbg !2183 {
start:
  %offset.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %n.dbg.spill = alloca i64, align 8
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", align 8
  %_5 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2187, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2188, metadata !DIExpression()), !dbg !2204
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !2191, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.declare(metadata { { i64, i64 }, i64 }* %val, metadata !2193, metadata !DIExpression()), !dbg !2206
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h613820fd98b1e9f4E(), !dbg !2207
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8, !dbg !2207
  br label %bb1, !dbg !2207

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17hb3535c5534f05886E(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n), !dbg !2207
  br label %bb2, !dbg !2207

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h065c552dba6da9e3E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>") dereferenceable(24) %_5, %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture dereferenceable(24) %_6), !dbg !2207
  br label %bb3, !dbg !2207

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %_5, i32 0, i32 1, !dbg !2207
  %3 = load i64, i64* %2, align 8, !dbg !2207
  %4 = icmp eq i64 %3, 0, !dbg !2207
  %_10 = select i1 %4, i64 1, i64 0, !dbg !2207
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !2207

bb5:                                              ; preds = %bb3
  unreachable, !dbg !2207

bb4:                                              ; preds = %bb3
  %5 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"*, !dbg !2207
  %6 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*, !dbg !2207
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*, !dbg !2207
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*, !dbg !2207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !2207
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !2206
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*, !dbg !2206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !2206
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*, !dbg !2208
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !2208
  %13 = load i64, i64* %12, align 8, !dbg !2208
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !2208
  %15 = load i64, i64* %14, align 8, !dbg !2208, !range !1146
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2208
  store i64 %13, i64* %16, align 8, !dbg !2208
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2208
  store i64 %15, i64* %17, align 8, !dbg !2208
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1, !dbg !2209
  %offset = load i64, i64* %18, align 8, !dbg !2209
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !2209
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !2190, metadata !DIExpression()), !dbg !2210
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hc1669796bbc8a9a3E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2211
  %_17.0 = extractvalue { i64, i64 } %19, 0, !dbg !2211
  %_17.1 = extractvalue { i64, i64 } %19, 1, !dbg !2211
  br label %bb8, !dbg !2211

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd470ea46d1981105E"(), !dbg !2212
  store { i64, i64 } %20, { i64, i64 }* %0, align 8, !dbg !2212
  br label %bb7, !dbg !2212

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !2213

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2213
  %22 = load i64, i64* %21, align 8, !dbg !2213
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2213
  %24 = load i64, i64* %23, align 8, !dbg !2213
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0, !dbg !2213
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1, !dbg !2213
  ret { i64, i64 } %26, !dbg !2213

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2214
  store i64 %_17.0, i64* %27, align 8, !dbg !2214
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2214
  store i64 %_17.1, i64* %28, align 8, !dbg !2214
  br label %bb9, !dbg !2213
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5alloc6layout6Layout6repeat17hb3535c5534f05886E(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #0 !dbg !2215 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %padded_size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_21 = alloca { { i64, i64 }, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2219, metadata !DIExpression()), !dbg !2229
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2220, metadata !DIExpression()), !dbg !2230
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !2225, metadata !DIExpression()), !dbg !2231
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2232
  br label %bb1, !dbg !2232

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2233
  br label %bb2, !dbg !2233

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::padding_needed_for
  %_6 = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h3658247fc7e144a7E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_8), !dbg !2234
  br label %bb3, !dbg !2234

bb3:                                              ; preds = %bb2
  %padded_size = add i64 %_4, %_6, !dbg !2232
  store i64 %padded_size, i64* %padded_size.dbg.spill, align 8, !dbg !2232
  call void @llvm.dbg.declare(metadata i64* %padded_size.dbg.spill, metadata !2221, metadata !DIExpression()), !dbg !2235
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfc8edd9d59d78604E"(i64 %padded_size, i64 %n), !dbg !2236
  %_13.0 = extractvalue { i64, i64 } %1, 0, !dbg !2236
  %_13.1 = extractvalue { i64, i64 } %1, 1, !dbg !2236
  br label %bb4, !dbg !2236

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hfdd160600b4f5af3E"(i64 %_13.0, i64 %_13.1), !dbg !2236
  %_12.0 = extractvalue { i64, i64 } %2, 0, !dbg !2236
  %_12.1 = extractvalue { i64, i64 } %2, 1, !dbg !2236
  br label %bb5, !dbg !2236

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3ecc933418ec8cf1E"(i64 %_12.0, i64 %_12.1), !dbg !2236
  store { i64, i64 } %3, { i64, i64 }* %_11, align 8, !dbg !2236
  br label %bb6, !dbg !2236

bb6:                                              ; preds = %bb5
  %4 = bitcast { i64, i64 }* %_11 to i64*, !dbg !2236
  %_17 = load i64, i64* %4, align 8, !dbg !2236, !range !230
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !2236

bb8:                                              ; preds = %bb6
  unreachable, !dbg !2236

bb7:                                              ; preds = %bb6
  %5 = bitcast { i64, i64 }* %_11 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"*, !dbg !2236
  %6 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"* %5, i32 0, i32 1, !dbg !2236
  %val = load i64, i64* %6, align 8, !dbg !2236
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2236
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2227, metadata !DIExpression()), !dbg !2237
  store i64 %val, i64* %alloc_size.dbg.spill, align 8, !dbg !2237
  call void @llvm.dbg.declare(metadata i64* %alloc_size.dbg.spill, metadata !2223, metadata !DIExpression()), !dbg !2238
; call core::alloc::layout::Layout::align
  %_24 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2239
  br label %bb11, !dbg !2239

bb9:                                              ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h46a049a9bc5611d6E"(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0), !dbg !2240
  br label %bb10, !dbg !2240

bb10:                                             ; preds = %bb9
  br label %bb13, !dbg !2241

bb13:                                             ; preds = %bb12, %bb10
  ret void, !dbg !2241

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::from_size_align_unchecked
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3290f94581f3992eE(i64 %val, i64 %_24), !dbg !2242
  %_22.0 = extractvalue { i64, i64 } %7, 0, !dbg !2242
  %_22.1 = extractvalue { i64, i64 } %7, 1, !dbg !2242
  br label %bb12, !dbg !2242

bb12:                                             ; preds = %bb11
  %8 = bitcast { { i64, i64 }, i64 }* %_21 to { i64, i64 }*, !dbg !2243
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0, !dbg !2243
  store i64 %_22.0, i64* %9, align 8, !dbg !2243
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1, !dbg !2243
  store i64 %_22.1, i64* %10, align 8, !dbg !2243
  %11 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_21, i32 0, i32 1, !dbg !2243
  store i64 %padded_size, i64* %11, align 8, !dbg !2243
  %12 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0 to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"*, !dbg !2244
  %13 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"* %12 to { { i64, i64 }, i64 }*, !dbg !2244
  %14 = bitcast { { i64, i64 }, i64 }* %13 to i8*, !dbg !2244
  %15 = bitcast { { i64, i64 }, i64 }* %_21 to i8*, !dbg !2244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !2244
  br label %bb13, !dbg !2241
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nounwind
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h06aa32b083ec2802E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2245 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2249, metadata !DIExpression()), !dbg !2250
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2251
  br label %bb1, !dbg !2251

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*, !dbg !2251
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h261173f5f5c7c267E"(i8* %_2), !dbg !2252
  br label %bb2, !dbg !2252

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !2253
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5clone5Clone5clone17hcabb893763a9aadfE({}* nonnull align 1 %_1) unnamed_addr #0 !dbg !2254 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !2262, metadata !DIExpression()), !dbg !2265
  ret void, !dbg !2265
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2ba7a48a75249146E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 !dbg !2266 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2272, metadata !DIExpression()), !dbg !2273
  %0 = load i64, i64* %self, align 8, !dbg !2274
  ret i64 %0, !dbg !2275
}

; core::panic::panic_info::PanicInfo::internal_constructor
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5panic10panic_info9PanicInfo20internal_constructor17haab071d2c0fa51c2E(%"std::panic::PanicInfo"* noalias nocapture sret(%"std::panic::PanicInfo") dereferenceable(32) %0, i64* align 8 dereferenceable_or_null(48) %message, %"std::panic::Location"* align 8 dereferenceable(24) %location) unnamed_addr #0 !dbg !2276 {
start:
  %location.dbg.spill = alloca %"std::panic::Location"*, align 8
  %message.dbg.spill = alloca i64*, align 8
  store i64* %message, i64** %message.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %message.dbg.spill, metadata !2281, metadata !DIExpression()), !dbg !2283
  store %"std::panic::Location"* %location, %"std::panic::Location"** %location.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::panic::Location"** %location.dbg.spill, metadata !2282, metadata !DIExpression()), !dbg !2284
  %1 = bitcast %"std::panic::PanicInfo"* %0 to { {}*, [3 x i64]* }*, !dbg !2285
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0, !dbg !2285
  store {}* bitcast (<{ [0 x i8] }>* @alloc1791 to {}*), {}** %2, align 8, !dbg !2285
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1, !dbg !2285
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), [3 x i64]** %3, align 8, !dbg !2285
  %4 = getelementptr inbounds %"std::panic::PanicInfo", %"std::panic::PanicInfo"* %0, i32 0, i32 1, !dbg !2285
  store i64* %message, i64** %4, align 8, !dbg !2285
  %5 = getelementptr inbounds %"std::panic::PanicInfo", %"std::panic::PanicInfo"* %0, i32 0, i32 2, !dbg !2285
  store %"std::panic::Location"* %location, %"std::panic::Location"** %5, align 8, !dbg !2285
  ret void, !dbg !2286
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h234dbc8e2fe698e1E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2287 {
start:
  %self.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i64]* %self.0, [0 x i64]** %0, align 8
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %self.dbg.spill, metadata !2293, metadata !DIExpression()), !dbg !2294
; call core::slice::iter::Iter<T>::new
  %2 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h36de2283ee374d3bE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1), !dbg !2295
  %3 = extractvalue { i64*, i64* } %2, 0, !dbg !2295
  %4 = extractvalue { i64*, i64* } %2, 1, !dbg !2295
  br label %bb1, !dbg !2295

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0, !dbg !2296
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1, !dbg !2296
  ret { i64*, i64* } %6, !dbg !2296
}

; core::slice::<impl [T]>::swap
; Function Attrs: inlinehint nounwind
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17ha13932abe406860eE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %a, i64 %b) unnamed_addr #0 !dbg !2297 {
start:
  %pb.dbg.spill = alloca i64*, align 8
  %pa.dbg.spill = alloca i64*, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i64]* %self.0, [0 x i64]** %0, align 8
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %self.dbg.spill, metadata !2305, metadata !DIExpression()), !dbg !2312
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !2306, metadata !DIExpression()), !dbg !2313
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !2307, metadata !DIExpression()), !dbg !2314
  %_7 = icmp ult i64 %a, %self.1, !dbg !2315
  %2 = call i1 @llvm.expect.i1(i1 %_7, i1 true), !dbg !2315
  br i1 %2, label %bb1, label %panic, !dbg !2315

bb1:                                              ; preds = %start
  %pa = getelementptr inbounds [0 x i64], [0 x i64]* %self.0, i64 0, i64 %a, !dbg !2316
  store i64* %pa, i64** %pa.dbg.spill, align 8, !dbg !2316
  call void @llvm.dbg.declare(metadata i64** %pa.dbg.spill, metadata !2308, metadata !DIExpression()), !dbg !2317
  %_11 = icmp ult i64 %b, %self.1, !dbg !2318
  %3 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !2318
  br i1 %3, label %bb2, label %panic1, !dbg !2318

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %a, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1880 to %"std::panic::Location"*)), !dbg !2315
  unreachable, !dbg !2315

bb2:                                              ; preds = %bb1
  %pb = getelementptr inbounds [0 x i64], [0 x i64]* %self.0, i64 0, i64 %b, !dbg !2319
  store i64* %pb, i64** %pb.dbg.spill, align 8, !dbg !2319
  call void @llvm.dbg.declare(metadata i64** %pb.dbg.spill, metadata !2310, metadata !DIExpression()), !dbg !2320
; call core::ptr::swap
  call void @_ZN4core3ptr4swap17hfdc458cd1061b87dE(i64* %pa, i64* %pb), !dbg !2321
  br label %bb3, !dbg !2321

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %b, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1882 to %"std::panic::Location"*)), !dbg !2318
  unreachable, !dbg !2318

bb3:                                              ; preds = %bb2
  ret void, !dbg !2322
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nounwind
define i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hda4b4f83376568f3E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2323 {
start:
  %self.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i64]* %self.0, [0 x i64]** %0, align 8
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %self.dbg.spill, metadata !2327, metadata !DIExpression()), !dbg !2328
  %2 = bitcast [0 x i64]* %self.0 to i64*, !dbg !2329
  ret i64* %2, !dbg !2330
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i64]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hd104ccfc67221c9cE(i64* %data, i64 %len) unnamed_addr #0 !dbg !2331 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i64*, align 8
  store i64* %data, i64** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %data.dbg.spill, metadata !2337, metadata !DIExpression()), !dbg !2339
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2338, metadata !DIExpression()), !dbg !2340
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i64]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h882698a9b1f10e27E(i64* %data, i64 %len), !dbg !2341
  %_3.0 = extractvalue { [0 x i64]*, i64 } %0, 0, !dbg !2341
  %_3.1 = extractvalue { [0 x i64]*, i64 } %0, 1, !dbg !2341
  br label %bb1, !dbg !2341

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %_3.0, 0, !dbg !2342
  %2 = insertvalue { [0 x i64]*, i64 } %1, i64 %_3.1, 1, !dbg !2342
  ret { [0 x i64]*, i64 } %2, !dbg !2342
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i64]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h49db427d64a54585E(i64* %data, i64 %len) unnamed_addr #0 !dbg !2343 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i64*, align 8
  store i64* %data, i64** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %data.dbg.spill, metadata !2347, metadata !DIExpression()), !dbg !2349
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2348, metadata !DIExpression()), !dbg !2350
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i64]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h85f2168ac0038682E(i64* %data, i64 %len), !dbg !2351
  %_6.0 = extractvalue { [0 x i64]*, i64 } %0, 0, !dbg !2351
  %_6.1 = extractvalue { [0 x i64]*, i64 } %0, 1, !dbg !2351
  br label %bb1, !dbg !2351

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %_6.0, 0, !dbg !2352
  %2 = insertvalue { [0 x i64]*, i64 } %1, i64 %_6.1, 1, !dbg !2352
  ret { [0 x i64]*, i64 } %2, !dbg !2352
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nounwind
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h36de2283ee374d3bE"([0 x i64]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2353 {
start:
  %0 = alloca i64*, align 8
  %count.dbg.spill.i.i1 = alloca i64, align 8
  %self.dbg.spill.i.i2 = alloca i64*, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64*, align 8
  %1 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %ptr.dbg.spill = alloca i64*, align 8
  %slice.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %end = alloca i64*, align 8
  %2 = alloca { i64*, i64* }, align 8
  %3 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i64]* %slice.0, [0 x i64]** %3, align 8
  %4 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %slice.dbg.spill, metadata !2356, metadata !DIExpression()), !dbg !2361
  call void @llvm.dbg.declare(metadata i64** %end, metadata !2359, metadata !DIExpression()), !dbg !2362
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hda4b4f83376568f3E"([0 x i64]* nonnull align 8 %slice.0, i64 %slice.1), !dbg !2363
  store i64* %ptr, i64** %ptr.dbg.spill, align 8, !dbg !2363
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !2357, metadata !DIExpression()), !dbg !2364
  br label %bb1, !dbg !2363

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha99b5b7e9bafbc86E"(i64* %ptr), !dbg !2365
  br label %bb2, !dbg !2365

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true, !dbg !2366
  call void @llvm.assume(i1 %_5), !dbg !2367
  br label %bb3, !dbg !2367

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2368

bb4:                                              ; preds = %bb3
  %5 = icmp eq i64 8, 0, !dbg !2368
  br i1 %5, label %bb5, label %bb7, !dbg !2368

bb5:                                              ; preds = %bb4
  %_11 = bitcast i64* %ptr to i8*, !dbg !2369
  store i8* %_11, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !2370, metadata !DIExpression()), !dbg !2376
  store i64 %slice.1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2375, metadata !DIExpression()), !dbg !2378
  store i8* %_11, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !2379, metadata !DIExpression()), !dbg !2386
  store i64 %slice.1, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2385, metadata !DIExpression()), !dbg !2388
  %6 = getelementptr i8, i8* %_11, i64 %slice.1, !dbg !2389
  store i8* %6, i8** %1, align 8, !dbg !2389
  %7 = load i8*, i8** %1, align 8, !dbg !2389
  br label %bb6, !dbg !2369

bb7:                                              ; preds = %bb4
  store i64* %ptr, i64** %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i4, metadata !2390, metadata !DIExpression()), !dbg !2396
  store i64 %slice.1, i64* %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i3, metadata !2395, metadata !DIExpression()), !dbg !2398
  store i64* %ptr, i64** %self.dbg.spill.i.i2, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i.i2, metadata !2399, metadata !DIExpression()), !dbg !2405
  store i64 %slice.1, i64* %count.dbg.spill.i.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i1, metadata !2404, metadata !DIExpression()), !dbg !2407
  %8 = getelementptr inbounds i64, i64* %ptr, i64 %slice.1, !dbg !2408
  store i64* %8, i64** %0, align 8, !dbg !2408
  %9 = load i64*, i64** %0, align 8, !dbg !2408
  store i64* %9, i64** %end, align 8, !dbg !2409
  br label %bb8, !dbg !2409

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !2410

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h318bd0df0884951bE"(i64* %ptr), !dbg !2411
  br label %bb10, !dbg !2411

bb6:                                              ; preds = %bb5
  %10 = bitcast i8* %7 to i64*, !dbg !2369
  store i64* %10, i64** %end, align 8, !dbg !2369
  br label %bb9, !dbg !2410

bb10:                                             ; preds = %bb9
  %_21 = load i64*, i64** %end, align 8, !dbg !2412
  %11 = bitcast { i64*, i64* }* %2 to i64**, !dbg !2413
  store i64* %_18, i64** %11, align 8, !dbg !2413
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1, !dbg !2413
  store i64* %_21, i64** %12, align 8, !dbg !2413
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0, !dbg !2414
  %14 = load i64*, i64** %13, align 8, !dbg !2414, !nonnull !4
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1, !dbg !2414
  %16 = load i64*, i64** %15, align 8, !dbg !2414
  %17 = insertvalue { i64*, i64* } undef, i64* %14, 0, !dbg !2414
  %18 = insertvalue { i64*, i64* } %17, i64* %16, 1, !dbg !2414
  ret { i64*, i64* } %18, !dbg !2414
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h70c27a217761ca50E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2415 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i64]* %self.0, [0 x i64]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %self.dbg.spill, metadata !2422, metadata !DIExpression()), !dbg !2426
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2423, metadata !DIExpression()), !dbg !2427
; call <usize as core::slice::index::SliceIndex<[T]>>::index
  %3 = call align 8 dereferenceable(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h54ed96977b058a5cE"(i64 %index, [0 x i64]* nonnull align 8 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2428
  br label %bb1, !dbg !2428

bb1:                                              ; preds = %start
  ret i64* %3, !dbg !2429
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf1735b20386b3284E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2430 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i64]* %self.0, [0 x i64]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %self.dbg.spill, metadata !2435, metadata !DIExpression()), !dbg !2437
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2436, metadata !DIExpression()), !dbg !2438
; call <usize as core::slice::index::SliceIndex<[T]>>::index_mut
  %_4 = call align 8 dereferenceable(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa1078989bcca205E"(i64 %index, [0 x i64]* nonnull align 8 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2439
  br label %bb1, !dbg !2439

bb1:                                              ; preds = %start
  ret i64* %_4, !dbg !2440
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h22757971a0b2da31E"(%"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<usize, std::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 !dbg !2441 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2459, metadata !DIExpression()), !dbg !2463
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err.dbg.spill, i32 0, i32 0
  store i64 %err.0, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err.dbg.spill, i32 0, i32 1
  store i64 %err.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err.dbg.spill, metadata !2460, metadata !DIExpression()), !dbg !2464
  store i8 0, i8* %_7, align 1, !dbg !2465
  store i8 1, i8* %_7, align 1, !dbg !2465
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !2465
  %_3 = load i64, i64* %7, align 8, !dbg !2465, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2466

bb2:                                              ; preds = %start
  unreachable, !dbg !2465

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2467
  %8 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"*, !dbg !2468
  %9 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1, !dbg !2468
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !2468
  store i64 %err.0, i64* %10, align 8, !dbg !2468
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !2468
  store i64 %err.1, i64* %11, align 8, !dbg !2468
  %12 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2468
  store i64 1, i64* %12, align 8, !dbg !2468
  br label %bb4, !dbg !2469

bb3:                                              ; preds = %start
  %13 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2470
  %14 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %13, i32 0, i32 1, !dbg !2470
  %v = load i64, i64* %14, align 8, !dbg !2470
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2470
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2461, metadata !DIExpression()), !dbg !2471
  %15 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"*, !dbg !2472
  %16 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"* %15, i32 0, i32 1, !dbg !2472
  store i64 %v, i64* %16, align 8, !dbg !2472
  %17 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2472
  store i64 0, i64* %17, align 8, !dbg !2472
  br label %bb4, !dbg !2473

bb4:                                              ; preds = %bb1, %bb3
  %18 = load i8, i8* %_7, align 1, !dbg !2474, !range !978
  %19 = trunc i8 %18 to i1, !dbg !2474
  br i1 %19, label %bb6, label %bb5, !dbg !2474

bb5:                                              ; preds = %bb6, %bb4
  ret void, !dbg !2475

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2474
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h716f966699a133f9E"(i8* %0) unnamed_addr #0 !dbg !2476 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %err.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2493, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %err.dbg.spill, metadata !2494, metadata !DIExpression()), !dbg !2498
  store i8 0, i8* %_7, align 1, !dbg !2499
  store i8 1, i8* %_7, align 1, !dbg !2499
  %2 = bitcast i8** %self to {}**, !dbg !2499
  %3 = load {}*, {}** %2, align 8, !dbg !2499
  %4 = icmp eq {}* %3, null, !dbg !2499
  %_3 = select i1 %4, i64 0, i64 1, !dbg !2499
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2500

bb2:                                              ; preds = %start
  unreachable, !dbg !2499

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2501
  %5 = bitcast i8** %1 to %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"*, !dbg !2502
  %6 = bitcast %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"* %5 to %"std::alloc::AllocError"*, !dbg !2502
  %7 = bitcast i8** %1 to {}**, !dbg !2502
  store {}* null, {}** %7, align 8, !dbg !2502
  br label %bb4, !dbg !2503

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !2504, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2504
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2495, metadata !DIExpression()), !dbg !2505
  store i8* %v, i8** %1, align 8, !dbg !2506
  br label %bb4, !dbg !2507

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !dbg !2508, !range !978
  %9 = trunc i8 %8 to i1, !dbg !2508
  br i1 %9, label %bb6, label %bb5, !dbg !2508

bb5:                                              ; preds = %bb6, %bb4
  %10 = load i8*, i8** %1, align 8, !dbg !2509
  ret i8* %10, !dbg !2509

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2508
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hfdd160600b4f5af3E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2510 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2527, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %err.dbg.spill, metadata !2528, metadata !DIExpression()), !dbg !2532
  store i8 0, i8* %_7, align 1, !dbg !2533
  store i8 1, i8* %_7, align 1, !dbg !2533
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2533
  %_3 = load i64, i64* %5, align 8, !dbg !2533, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2534

bb2:                                              ; preds = %start
  unreachable, !dbg !2533

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2535
  %6 = bitcast { i64, i64 }* %2 to %"std::result::Result<usize, std::alloc::LayoutError>::Err"*, !dbg !2536
  %7 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Err", %"std::result::Result<usize, std::alloc::LayoutError>::Err"* %6, i32 0, i32 1, !dbg !2536
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !2536
  store i64 1, i64* %8, align 8, !dbg !2536
  br label %bb4, !dbg !2537

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2538
  %10 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %9, i32 0, i32 1, !dbg !2538
  %v = load i64, i64* %10, align 8, !dbg !2538
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2538
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2529, metadata !DIExpression()), !dbg !2539
  %11 = bitcast { i64, i64 }* %2 to %"std::result::Result<usize, std::alloc::LayoutError>::Ok"*, !dbg !2540
  %12 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Ok", %"std::result::Result<usize, std::alloc::LayoutError>::Ok"* %11, i32 0, i32 1, !dbg !2540
  store i64 %v, i64* %12, align 8, !dbg !2540
  %13 = bitcast { i64, i64 }* %2 to i64*, !dbg !2540
  store i64 0, i64* %13, align 8, !dbg !2540
  br label %bb4, !dbg !2541

bb4:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !dbg !2542, !range !978
  %15 = trunc i8 %14 to i1, !dbg !2542
  br i1 %15, label %bb6, label %bb5, !dbg !2542

bb5:                                              ; preds = %bb6, %bb4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2543
  %17 = load i64, i64* %16, align 8, !dbg !2543, !range !230
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2543
  %19 = load i64, i64* %18, align 8, !dbg !2543
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !2543
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !2543
  ret { i64, i64 } %21, !dbg !2543

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2542
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h5ec3511ca90332b3E"(i64 %0, i64 %1, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 !dbg !2544 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca i64*, align 8
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2552, metadata !DIExpression()), !dbg !2558
  store i64* %f, i64** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !2553, metadata !DIExpression()), !dbg !2559
  store i8 0, i8* %_8, align 1, !dbg !2560
  store i8 1, i8* %_8, align 1, !dbg !2560
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2560
  %_3 = load i64, i64* %5, align 8, !dbg !2560, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2561

bb2:                                              ; preds = %start
  unreachable, !dbg !2560

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !2562
  store i64 0, i64* %6, align 8, !dbg !2562
  br label %bb7, !dbg !2562

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2563
  %8 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %7, i32 0, i32 1, !dbg !2563
  %x = load i64, i64* %8, align 8, !dbg !2563
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !2563
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !2554, metadata !DIExpression()), !dbg !2564
  store i8 0, i8* %_8, align 1, !dbg !2565
  store i64 %x, i64* %_6, align 8, !dbg !2565
  %9 = load i64, i64* %_6, align 8, !dbg !2565
; call itertools::permutations::CompleteState::remaining::{{closure}}::{{closure}}
  %10 = call { i64, i64 } @"_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h74e25cc91fb07503E"(i64* align 8 dereferenceable(8) %f, i64 %9), !dbg !2565
  store { i64, i64 } %10, { i64, i64 }* %2, align 8, !dbg !2565
  br label %bb4, !dbg !2565

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !2566

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !dbg !2566, !range !978
  %12 = trunc i8 %11 to i1, !dbg !2566
  br i1 %12, label %bb6, label %bb5, !dbg !2566

bb5:                                              ; preds = %bb6, %bb7
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2567
  %14 = load i64, i64* %13, align 8, !dbg !2567, !range !230
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2567
  %16 = load i64, i64* %15, align 8, !dbg !2567
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !2567
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !2567
  ret { i64, i64 } %18, !dbg !2567

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2566
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17he53741757a10c680E"(i64 %0, i64 %1, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 !dbg !2568 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca i64*, align 8
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2575, metadata !DIExpression()), !dbg !2581
  store i64* %f, i64** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !2576, metadata !DIExpression()), !dbg !2582
  store i8 0, i8* %_8, align 1, !dbg !2583
  store i8 1, i8* %_8, align 1, !dbg !2583
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2583
  %_3 = load i64, i64* %5, align 8, !dbg !2583, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2584

bb2:                                              ; preds = %start
  unreachable, !dbg !2583

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !2585
  store i64 0, i64* %6, align 8, !dbg !2585
  br label %bb7, !dbg !2585

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2586
  %8 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %7, i32 0, i32 1, !dbg !2586
  %x = load i64, i64* %8, align 8, !dbg !2586
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !2586
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !2577, metadata !DIExpression()), !dbg !2587
  store i8 0, i8* %_8, align 1, !dbg !2588
  store i64 %x, i64* %_6, align 8, !dbg !2588
  %9 = load i64, i64* %_6, align 8, !dbg !2588
; call itertools::permutations::CompleteState::remaining::{{closure}}
  %10 = call { i64, i64 } @"_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$17h5eaa2b78323fef38E"(i64* align 8 dereferenceable(8) %f, i64 %9), !dbg !2588
  store { i64, i64 } %10, { i64, i64 }* %2, align 8, !dbg !2588
  br label %bb4, !dbg !2588

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !2589

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !dbg !2589, !range !978
  %12 = trunc i8 %11 to i1, !dbg !2589
  br i1 %12, label %bb6, label %bb5, !dbg !2589

bb5:                                              ; preds = %bb6, %bb7
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2590
  %14 = load i64, i64* %13, align 8, !dbg !2590, !range !230
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2590
  %16 = load i64, i64* %15, align 8, !dbg !2590
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !2590
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !2590
  ret { i64, i64 } %18, !dbg !2590

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2589
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd849ad9b75b5bafdE"(i64 %0, i64 %1, i64 %default) unnamed_addr #0 !dbg !2591 {
start:
  %x.dbg.spill = alloca i64, align 8
  %default.dbg.spill = alloca i64, align 8
  %_5 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2595, metadata !DIExpression()), !dbg !2599
  store i64 %default, i64* %default.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %default.dbg.spill, metadata !2596, metadata !DIExpression()), !dbg !2600
  store i8 0, i8* %_5, align 1, !dbg !2601
  store i8 1, i8* %_5, align 1, !dbg !2601
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2601
  %_3 = load i64, i64* %5, align 8, !dbg !2601, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2602

bb2:                                              ; preds = %start
  unreachable, !dbg !2601

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1, !dbg !2603
  store i64 %default, i64* %2, align 8, !dbg !2603
  br label %bb6, !dbg !2603

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2604
  %7 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %6, i32 0, i32 1, !dbg !2604
  %x = load i64, i64* %7, align 8, !dbg !2604
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !2604
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !2597, metadata !DIExpression()), !dbg !2605
  store i64 %x, i64* %2, align 8, !dbg !2606
  br label %bb6, !dbg !2607

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_5, align 1, !dbg !2607, !range !978
  %9 = trunc i8 %8 to i1, !dbg !2607
  br i1 %9, label %bb5, label %bb4, !dbg !2607

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i64, i64* %2, align 8, !dbg !2608
  ret i64 %10, !dbg !2608

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !2607
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h51d363fc12d341daE"(i64 %0, i64 %1, %"std::panic::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 !dbg !2609 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e = alloca %"std::alloc::LayoutError", align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2613, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e, metadata !2616, metadata !DIExpression()), !dbg !2619
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2620
  %6 = load i64, i64* %5, align 8, !dbg !2620
  %7 = icmp eq i64 %6, 0, !dbg !2620
  %_2 = select i1 %7, i64 1, i64 0, !dbg !2620
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2621

bb2:                                              ; preds = %start
  unreachable, !dbg !2620

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2622
  %t.0 = load i64, i64* %8, align 8, !dbg !2622
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2622
  %t.1 = load i64, i64* %9, align 8, !dbg !2622, !range !1146
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2622
  store i64 %t.0, i64* %10, align 8, !dbg !2622
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2622
  store i64 %t.1, i64* %11, align 8, !dbg !2622
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2614, metadata !DIExpression()), !dbg !2623
  %12 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2624
  %13 = insertvalue { i64, i64 } %12, i64 %t.1, 1, !dbg !2624
  ret { i64, i64 } %13, !dbg !2624

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::alloc::LayoutError"* %e to {}*, !dbg !2625
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1883 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*), %"std::panic::Location"* align 8 dereferenceable(24) %2), !dbg !2626
  unreachable, !dbg !2626
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0b9c678594b474d6E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 !dbg !2627 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"std::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !2635, metadata !DIExpression()), !dbg !2643
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !2636, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !2639, metadata !DIExpression()), !dbg !2645
  store i8 0, i8* %_11, align 1, !dbg !2646
  store i8 1, i8* %_11, align 1, !dbg !2646
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !2646
  %6 = load {}*, {}** %5, align 8, !dbg !2646
  %7 = icmp eq {}* %6, null, !dbg !2646
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2646
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2647

bb2:                                              ; preds = %start
  unreachable, !dbg !2646

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !2648
  %t.0 = load i8*, i8** %8, align 8, !dbg !2648, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2648
  %t.1 = load i64, i64* %9, align 8, !dbg !2648
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2648
  store i8* %t.0, i8** %10, align 8, !dbg !2648
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2648
  store i64 %t.1, i64* %11, align 8, !dbg !2648
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !2637, metadata !DIExpression()), !dbg !2649
  %12 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"*, !dbg !2650
  %13 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !2650
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !2650
  store i8* %t.0, i8** %14, align 8, !dbg !2650
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !2650
  store i64 %t.1, i64* %15, align 8, !dbg !2650
  %16 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !2650
  store i64 0, i64* %16, align 8, !dbg !2650
  br label %bb5, !dbg !2651

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2652
  %17 = bitcast { %"std::alloc::AllocError" }* %_9 to %"std::alloc::AllocError"*, !dbg !2652
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h0e6bdbc8b92c5b62E"(i64* align 8 dereferenceable(16) %op), !dbg !2652
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2652
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2652
  br label %bb4, !dbg !2652

bb4:                                              ; preds = %bb1
  %19 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !2653
  %20 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !2653
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2653
  store i64 %_7.0, i64* %21, align 8, !dbg !2653
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2653
  store i64 %_7.1, i64* %22, align 8, !dbg !2653
  %23 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !2653
  store i64 1, i64* %23, align 8, !dbg !2653
  br label %bb5, !dbg !2654

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2655, !range !978
  %25 = trunc i8 %24 to i1, !dbg !2655
  br i1 %25, label %bb7, label %bb6, !dbg !2655

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2656

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2655
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h366746563dca9873E"(%"std::result::Result<(), std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !2657 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %self, metadata !2676, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !2677, metadata !DIExpression()), !dbg !2686
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !2678, metadata !DIExpression()), !dbg !2687
  store i8 0, i8* %_11, align 1, !dbg !2688
  store i8 1, i8* %_11, align 1, !dbg !2688
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to i64*, !dbg !2688
  %_3 = load i64, i64* %1, align 8, !dbg !2688, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2689

bb2:                                              ; preds = %start
  unreachable, !dbg !2688

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok"*, !dbg !2690
  %3 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !2690
  %4 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2690
  store i64 0, i64* %4, align 8, !dbg !2690
  br label %bb5, !dbg !2691

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !2692
  %6 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %5, i32 0, i32 1, !dbg !2692
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !2692
  %e.0 = load i64, i64* %7, align 8, !dbg !2692
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !2692
  %e.1 = load i64, i64* %8, align 8, !dbg !2692
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2692
  store i64 %e.0, i64* %9, align 8, !dbg !2692
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2692
  store i64 %e.1, i64* %10, align 8, !dbg !2692
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2680, metadata !DIExpression()), !dbg !2693
  store i8 0, i8* %_11, align 1, !dbg !2694
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2694
  store i64 %e.0, i64* %11, align 8, !dbg !2694
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2694
  store i64 %e.1, i64* %12, align 8, !dbg !2694
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2694
  %14 = load i64, i64* %13, align 8, !dbg !2694
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2694
  %16 = load i64, i64* %15, align 8, !dbg !2694
; call alloc::raw_vec::handle_reserve::{{closure}}
  %17 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hbb27177d91402ad8E"(i64 %14, i64 %16), !dbg !2694
  %_7.0 = extractvalue { i64, i64 } %17, 0, !dbg !2694
  %_7.1 = extractvalue { i64, i64 } %17, 1, !dbg !2694
  br label %bb4, !dbg !2694

bb4:                                              ; preds = %bb1
  %18 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !2695
  %19 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %18, i32 0, i32 1, !dbg !2695
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !2695
  store i64 %_7.0, i64* %20, align 8, !dbg !2695
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !2695
  store i64 %_7.1, i64* %21, align 8, !dbg !2695
  %22 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2695
  store i64 1, i64* %22, align 8, !dbg !2695
  br label %bb5, !dbg !2696

bb5:                                              ; preds = %bb3, %bb4
  %23 = load i8, i8* %_11, align 1, !dbg !2697, !range !978
  %24 = trunc i8 %23 to i1, !dbg !2697
  br i1 %24, label %bb7, label %bb6, !dbg !2697

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2698

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2697
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h881173f80a821c84E"(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !2699 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"std::alloc::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2717, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !2718, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !2721, metadata !DIExpression()), !dbg !2727
  store i8 0, i8* %_11, align 1, !dbg !2728
  store i8 1, i8* %_11, align 1, !dbg !2728
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2728
  %6 = load i64, i64* %5, align 8, !dbg !2728
  %7 = icmp eq i64 %6, 0, !dbg !2728
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2728
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2729

bb2:                                              ; preds = %start
  unreachable, !dbg !2728

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2730
  %t.0 = load i64, i64* %8, align 8, !dbg !2730
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2730
  %t.1 = load i64, i64* %9, align 8, !dbg !2730, !range !1146
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2730
  store i64 %t.0, i64* %10, align 8, !dbg !2730
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2730
  store i64 %t.1, i64* %11, align 8, !dbg !2730
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2719, metadata !DIExpression()), !dbg !2731
  %12 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"*, !dbg !2732
  %13 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !2732
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2732
  store i64 %t.0, i64* %14, align 8, !dbg !2732
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2732
  store i64 %t.1, i64* %15, align 8, !dbg !2732
  %16 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2732
  store i64 0, i64* %16, align 8, !dbg !2732
  br label %bb5, !dbg !2733

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2734
  %17 = bitcast { %"std::alloc::LayoutError" }* %_9 to %"std::alloc::LayoutError"*, !dbg !2734
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h0908563c87a93969E"(), !dbg !2734
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2734
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2734
  br label %bb4, !dbg !2734

bb4:                                              ; preds = %bb1
  %19 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"*, !dbg !2735
  %20 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !2735
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2735
  store i64 %_7.0, i64* %21, align 8, !dbg !2735
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2735
  store i64 %_7.1, i64* %22, align 8, !dbg !2735
  %23 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2735
  store i64 1, i64* %23, align 8, !dbg !2735
  br label %bb5, !dbg !2736

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2737, !range !978
  %25 = trunc i8 %24 to i1, !dbg !2737
  br i1 %25, label %bb7, label %bb6, !dbg !2737

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2738

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2737
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f039a29a54e3f3aE"() unnamed_addr #1 !dbg !2739 {
start:
  %t.dbg.spill = alloca %"std::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %t.dbg.spill, metadata !2745, metadata !DIExpression()), !dbg !2748
  ret void, !dbg !2749
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8314695760a1c4e1E"() unnamed_addr #1 !dbg !2750 {
start:
  %t.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %t.dbg.spill, metadata !2754, metadata !DIExpression()), !dbg !2755
  ret void, !dbg !2756
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha071b62114951ebdE"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !2757 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2761, metadata !DIExpression()), !dbg !2764
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2765
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !2765
  ret { i64, i64 } %3, !dbg !2765
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nounwind
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h36c1fd4db3113d1aE"(i8* nonnull %self) unnamed_addr #1 !dbg !2766 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2769, metadata !DIExpression()), !dbg !2773
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9d543e1606bc68cdE"(i8* nonnull %self), !dbg !2774
  br label %bb1, !dbg !2774

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2775
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h43a66b6aa6574fabE"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2776 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2778, metadata !DIExpression()), !dbg !2782
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hdf481845201483dfE"(i64 %self.0, i64 %self.1), !dbg !2783
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !2783
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !2783
  br label %bb1, !dbg !2783

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2784
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !2784
  ret { i64, i64 } %6, !dbg !2784
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h89cc6c0df001aa04E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2785 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2790, metadata !DIExpression()), !dbg !2791
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hf2e09b6bf199bed4E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2792
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !2792
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !2792
  br label %bb1, !dbg !2792

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !2793
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !2793
  ret { i64, i64 } %4, !dbg !2793
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h55c4238cdfe60bb0E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 !dbg !2794 {
start:
  %capacity.dbg.spill = alloca i64, align 8
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !2799, metadata !DIExpression()), !dbg !2800
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h7d71278b8249aab3E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %capacity), !dbg !2801
  br label %bb1, !dbg !2801

bb1:                                              ; preds = %start
  ret void, !dbg !2802
}

; alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h3e9a89ae8e25e418E({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %increment) unnamed_addr #0 !dbg !2803 {
start:
  %increment.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !2809, metadata !DIExpression()), !dbg !2811
  store i64 %increment, i64* %increment.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %increment.dbg.spill, metadata !2810, metadata !DIExpression()), !dbg !2812
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !2813
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !2813
  %2 = load i64, i64* %1, align 8, !dbg !2813
  %3 = add i64 %2, %increment, !dbg !2813
  store i64 %3, i64* %0, align 8, !dbg !2813
  ret void, !dbg !2814
}

; alloc::vec::set_len_on_drop::SetLenOnDrop::new
; Function Attrs: inlinehint nounwind
define internal { i64*, i64 } @_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h94b8eb26438d6741E(i64* align 8 dereferenceable(8) %len) unnamed_addr #0 !dbg !2815 {
start:
  %len.dbg.spill = alloca i64*, align 8
  %0 = alloca { i64*, i64 }, align 8
  store i64* %len, i64** %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %len.dbg.spill, metadata !2819, metadata !DIExpression()), !dbg !2820
  %_2 = load i64, i64* %len, align 8, !dbg !2821
  %1 = bitcast { i64*, i64 }* %0 to i64**, !dbg !2822
  store i64* %len, i64** %1, align 8, !dbg !2822
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1, !dbg !2822
  store i64 %_2, i64* %2, align 8, !dbg !2822
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0, !dbg !2823
  %4 = load i64*, i64** %3, align 8, !dbg !2823, !nonnull !4
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1, !dbg !2823
  %6 = load i64, i64* %5, align 8, !dbg !2823
  %7 = insertvalue { i64*, i64 } undef, i64* %4, 0, !dbg !2823
  %8 = insertvalue { i64*, i64 } %7, i64 %6, 1, !dbg !2823
  ret { i64*, i64 } %8, !dbg !2823
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2824 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2829, metadata !DIExpression()), !dbg !2832
  %_2 = bitcast %"std::vec::Vec<usize>"* %self to { i64*, i64 }*, !dbg !2833
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i64* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h13132606554e097cE"({ i64*, i64 }* align 8 dereferenceable(16) %_2), !dbg !2833
  store i64* %ptr, i64** %ptr.dbg.spill, align 8, !dbg !2833
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !2830, metadata !DIExpression()), !dbg !2834
  br label %bb1, !dbg !2833

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1b9b0a36be9d5327E"(i64* %ptr), !dbg !2835
  br label %bb2, !dbg !2835

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true, !dbg !2836
  call void @llvm.assume(i1 %_4), !dbg !2837
  br label %bb3, !dbg !2837

bb3:                                              ; preds = %bb2
  ret i64* %ptr, !dbg !2838
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h7d71278b8249aab3E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 !dbg !2839 {
start:
  %alloc.dbg.spill = alloca %"std::alloc::Global", align 1
  %capacity.dbg.spill = alloca i64, align 8
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !2843, metadata !DIExpression()), !dbg !2845
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"* %alloc.dbg.spill, metadata !2844, metadata !DIExpression()), !dbg !2846
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h45a2e0de12086212E"(i64 %capacity), !dbg !2847
  %_3.0 = extractvalue { i64*, i64 } %1, 0, !dbg !2847
  %_3.1 = extractvalue { i64*, i64 } %1, 1, !dbg !2847
  br label %bb1, !dbg !2847

bb1:                                              ; preds = %start
  %2 = bitcast %"std::vec::Vec<usize>"* %0 to { i64*, i64 }*, !dbg !2848
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !2848
  store i64* %_3.0, i64** %3, align 8, !dbg !2848
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !2848
  store i64 %_3.1, i64* %4, align 8, !dbg !2848
  %5 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %0, i32 0, i32 1, !dbg !2848
  store i64 0, i64* %5, align 8, !dbg !2848
  ret void, !dbg !2849
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2850 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2854, metadata !DIExpression()), !dbg !2855
  %0 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2856
  %1 = load i64, i64* %0, align 8, !dbg !2856
  ret i64 %1, !dbg !2857
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hecc5dac4ff795d5eE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %value) unnamed_addr #0 !dbg !2858 {
start:
  %0 = alloca i64*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i64*, align 8
  %self.dbg.spill.i = alloca { i64*, i64 }*, align 8
  %1 = alloca i64, align 8
  %end.dbg.spill = alloca i64*, align 8
  %value.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2862, metadata !DIExpression()), !dbg !2866
  store i64 %value, i64* %value.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %value.dbg.spill, metadata !2863, metadata !DIExpression()), !dbg !2867
  %2 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2868
  %_4 = load i64, i64* %2, align 8, !dbg !2868
  %_6 = bitcast %"std::vec::Vec<usize>"* %self to { i64*, i64 }*, !dbg !2869
  store { i64*, i64 }* %_6, { i64*, i64 }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill.i, metadata !2870, metadata !DIExpression()), !dbg !2877
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1, !dbg !2879
  %4 = load i64, i64* %3, align 8, !dbg !2879
  store i64 %4, i64* %1, align 8, !dbg !2879
  %5 = load i64, i64* %1, align 8, !dbg !2880
  br label %bb1, !dbg !2869

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %5, !dbg !2868
  br i1 %_3, label %bb2, label %bb4, !dbg !2868

bb4:                                              ; preds = %bb3, %bb1
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !2881
  br label %bb5, !dbg !2881

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h8f7bc660772fd76eE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 1), !dbg !2882
  br label %bb3, !dbg !2882

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2883

bb5:                                              ; preds = %bb4
  %6 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2884
  %_12 = load i64, i64* %6, align 8, !dbg !2884
  store i64* %_10, i64** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i1, metadata !2885, metadata !DIExpression()), !dbg !2891
  store i64 %_12, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2890, metadata !DIExpression()), !dbg !2893
  store i64* %_10, i64** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i.i, metadata !2894, metadata !DIExpression()), !dbg !2900
  store i64 %_12, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2899, metadata !DIExpression()), !dbg !2902
  %7 = getelementptr inbounds i64, i64* %_10, i64 %_12, !dbg !2903
  store i64* %7, i64** %0, align 8, !dbg !2903
  %_3.i.i = load i64*, i64** %0, align 8, !dbg !2903
  store i64* %_3.i.i, i64** %end.dbg.spill, align 8, !dbg !2881
  call void @llvm.dbg.declare(metadata i64** %end.dbg.spill, metadata !2864, metadata !DIExpression()), !dbg !2904
  br label %bb6, !dbg !2881

bb6:                                              ; preds = %bb5
; call core::ptr::write
  call void @_ZN4core3ptr5write17h39b530a88072e8ebE(i64* %_3.i.i, i64 %value), !dbg !2905
  br label %bb7, !dbg !2905

bb7:                                              ; preds = %bb6
  %8 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2906
  %9 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2906
  %10 = load i64, i64* %9, align 8, !dbg !2906
  %11 = add i64 %10, 1, !dbg !2906
  store i64 %11, i64* %8, align 8, !dbg !2906
  ret void, !dbg !2907
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nounwind
define i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h394133c042df92d0E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2908 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2912, metadata !DIExpression()), !dbg !2915
  %_3 = bitcast %"std::vec::Vec<usize>"* %self to { i64*, i64 }*, !dbg !2916
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i64* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h13132606554e097cE"({ i64*, i64 }* align 8 dereferenceable(16) %_3), !dbg !2916
  store i64* %ptr, i64** %ptr.dbg.spill, align 8, !dbg !2916
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !2913, metadata !DIExpression()), !dbg !2917
  br label %bb1, !dbg !2916

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1b9b0a36be9d5327E"(i64* %ptr), !dbg !2918
  br label %bb2, !dbg !2918

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true, !dbg !2919
  call void @llvm.assume(i1 %_5), !dbg !2920
  br label %bb3, !dbg !2920

bb3:                                              ; preds = %bb2
  ret i64* %ptr, !dbg !2921
}

; alloc::vec::Vec<T,A>::remove
; Function Attrs: nounwind
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove17h33a39802b3674e5fE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 !dbg !2922 {
start:
  %1 = alloca i64*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64*, align 8
  %2 = alloca i64*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64*, align 8
  %ret.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i64*, align 8
  %len.dbg.spill = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2926, metadata !DIExpression()), !dbg !2934
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2927, metadata !DIExpression()), !dbg !2935
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !2936
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2936
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2928, metadata !DIExpression()), !dbg !2937
  br label %bb1, !dbg !2936

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %index, %len, !dbg !2938
  br i1 %_5, label %bb2, label %bb3, !dbg !2938

bb3:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !2939
  br label %bb4, !dbg !2939

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::remove::assert_failed
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17h875c6a4aba7c4543E"(i64 %index, i64 %len, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2940
  unreachable, !dbg !2940

bb4:                                              ; preds = %bb3
  store i64* %_11, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !2885, metadata !DIExpression()), !dbg !2941
  store i64 %index, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2890, metadata !DIExpression()), !dbg !2943
  store i64* %_11, i64** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i.i, metadata !2894, metadata !DIExpression()), !dbg !2944
  store i64 %index, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2899, metadata !DIExpression()), !dbg !2946
  %3 = getelementptr inbounds i64, i64* %_11, i64 %index, !dbg !2947
  store i64* %3, i64** %2, align 8, !dbg !2947
  %_3.i.i = load i64*, i64** %2, align 8, !dbg !2947
  store i64* %_3.i.i, i64** %ptr.dbg.spill, align 8, !dbg !2939
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !2932, metadata !DIExpression()), !dbg !2948
  br label %bb5, !dbg !2939

bb5:                                              ; preds = %bb4
; call core::ptr::read
  %_14 = call i64 @_ZN4core3ptr4read17hf728125a2e91769bE(i64* %_3.i.i), !dbg !2949
  br label %bb6, !dbg !2949

bb6:                                              ; preds = %bb5
  store i64 %_14, i64* %ret.dbg.spill, align 8, !dbg !2950
  call void @llvm.dbg.declare(metadata i64* %ret.dbg.spill, metadata !2930, metadata !DIExpression()), !dbg !2951
  store i64* %_3.i.i, i64** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i2, metadata !2894, metadata !DIExpression()), !dbg !2952
  store i64 1, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !2899, metadata !DIExpression()), !dbg !2954
  %4 = getelementptr inbounds i64, i64* %_3.i.i, i64 1, !dbg !2955
  store i64* %4, i64** %1, align 8, !dbg !2955
  %_3.i = load i64*, i64** %1, align 8, !dbg !2955
  br label %bb7, !dbg !2956

bb7:                                              ; preds = %bb6
  %_23 = sub i64 %len, %index, !dbg !2957
  %_22 = sub i64 %_23, 1, !dbg !2957
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17h2e5cb4dc4ce77089E(i64* %_3.i, i64* %_3.i.i, i64 %_22), !dbg !2958
  br label %bb8, !dbg !2958

bb8:                                              ; preds = %bb7
  %_28 = sub i64 %len, 1, !dbg !2959
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hc820c2ba1cf5c592E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %_28), !dbg !2960
  br label %bb9, !dbg !2960

bb9:                                              ; preds = %bb8
  ret i64 %_14, !dbg !2961
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h8f7bc660772fd76eE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 !dbg !2962 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2964, metadata !DIExpression()), !dbg !2966
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2965, metadata !DIExpression()), !dbg !2967
  %_4 = bitcast %"std::vec::Vec<usize>"* %self to { i64*, i64 }*, !dbg !2968
  %0 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2969
  %_5 = load i64, i64* %0, align 8, !dbg !2969
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h69745c6adc72171eE"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional), !dbg !2968
  br label %bb1, !dbg !2968

bb1:                                              ; preds = %start
  ret void, !dbg !2970
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hc820c2ba1cf5c592E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 !dbg !2971 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !2973, metadata !DIExpression()), !dbg !2975
  store i64 %new_len, i64* %new_len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !2974, metadata !DIExpression()), !dbg !2976
  %0 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !2977
  store i64 %new_len, i64* %0, align 8, !dbg !2977
  ret void, !dbg !2978
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h6941d27664ec522bE(i64 %0, i64 %1) unnamed_addr #0 !dbg !2979 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2984, metadata !DIExpression()), !dbg !2985
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2986
  br label %bb1, !dbg !2986

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2987
  br label %bb2, !dbg !2987

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4), !dbg !2988
  br label %bb3, !dbg !2988

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2989
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc5alloc17he898c0cdc28b7a78E(i64 %0, i64 %1) unnamed_addr #0 !dbg !2990 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2992, metadata !DIExpression()), !dbg !2993
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2994
  br label %bb1, !dbg !2994

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2995
  br label %bb2, !dbg !2995

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4), !dbg !2996
  br label %bb3, !dbg !2996

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2997
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc7de76357b8031baE(%"std::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2998 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3003, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3004, metadata !DIExpression()), !dbg !3017
  %5 = zext i1 %zeroed to i8
  store i8 %5, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !3005, metadata !DIExpression()), !dbg !3018
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !3008, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !3012, metadata !DIExpression()), !dbg !3020
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3021
  br label %bb1, !dbg !3021

bb1:                                              ; preds = %start
  %6 = icmp eq i64 %_4, 0, !dbg !3022
  br i1 %6, label %bb3, label %bb2, !dbg !3022

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h06aa32b083ec2802E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3023
  br label %bb4, !dbg !3023

bb2:                                              ; preds = %bb1
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !3024
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3006, metadata !DIExpression()), !dbg !3025
  br i1 %zeroed, label %bb6, label %bb8, !dbg !3026

bb8:                                              ; preds = %bb2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3027
  %_13.0 = load i64, i64* %7, align 8, !dbg !3027
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3027
  %_13.1 = load i64, i64* %8, align 8, !dbg !3027, !range !1146
; call alloc::alloc::alloc
  %9 = call i8* @_ZN5alloc5alloc5alloc17he898c0cdc28b7a78E(i64 %_13.0, i64 %_13.1), !dbg !3028
  store i8* %9, i8** %raw_ptr, align 8, !dbg !3028
  br label %bb9, !dbg !3028

bb6:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3029
  %_12.0 = load i64, i64* %10, align 8, !dbg !3029
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3029
  %_12.1 = load i64, i64* %11, align 8, !dbg !3029, !range !1146
; call alloc::alloc::alloc_zeroed
  %12 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h6941d27664ec522bE(i64 %_12.0, i64 %_12.1), !dbg !3030
  store i8* %12, i8** %raw_ptr, align 8, !dbg !3030
  br label %bb7, !dbg !3030

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !3031

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !3032
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17habe433947869e644E"(i8* %_18), !dbg !3033
  br label %bb11, !dbg !3033

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !3031

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h716f966699a133f9E"(i8* %_17), !dbg !3033
  br label %bb12, !dbg !3033

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %13 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6eef7ca3949bd8aE"(i8* %_16), !dbg !3033
  store i8* %13, i8** %_15, align 8, !dbg !3033
  br label %bb13, !dbg !3033

bb13:                                             ; preds = %bb12
  %14 = bitcast i8** %_15 to {}**, !dbg !3033
  %15 = load {}*, {}** %14, align 8, !dbg !3033
  %16 = icmp eq {}* %15, null, !dbg !3033
  %_20 = select i1 %16, i64 1, i64 0, !dbg !3033
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ], !dbg !3033

bb15:                                             ; preds = %bb13
  unreachable, !dbg !3033

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !dbg !3033, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !3033
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !3014, metadata !DIExpression()), !dbg !3034
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !3034
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3010, metadata !DIExpression()), !dbg !3035
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %17 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc0589c963be055f8E"(i8* nonnull %val, i64 %_4), !dbg !3036
  %_24.0 = extractvalue { i8*, i64 } %17, 0, !dbg !3036
  %_24.1 = extractvalue { i8*, i64 } %17, 1, !dbg !3036
  br label %bb18, !dbg !3036

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h54656286740a6161E"(), !dbg !3037
  store { i8*, i64 } %18, { i8*, i64 }* %2, align 8, !dbg !3037
  br label %bb17, !dbg !3037

bb17:                                             ; preds = %bb16
  br label %bb20, !dbg !3038

bb20:                                             ; preds = %bb19, %bb17
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3038
  %20 = load i8*, i8** %19, align 8, !dbg !3038
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3038
  %22 = load i64, i64* %21, align 8, !dbg !3038
  %23 = insertvalue { i8*, i64 } undef, i8* %20, 0, !dbg !3038
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1, !dbg !3038
  ret { i8*, i64 } %24, !dbg !3038

bb18:                                             ; preds = %bb14
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3039
  store i8* %_24.0, i8** %25, align 8, !dbg !3039
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3039
  store i64 %_24.1, i64* %26, align 8, !dbg !3039
  br label %bb19, !dbg !3040

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20, !dbg !3038

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %27 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc0589c963be055f8E"(i8* nonnull %_7, i64 0), !dbg !3041
  %_6.0 = extractvalue { i8*, i64 } %27, 0, !dbg !3041
  %_6.1 = extractvalue { i8*, i64 } %27, 1, !dbg !3041
  br label %bb5, !dbg !3041

bb5:                                              ; preds = %bb4
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3042
  store i8* %_6.0, i8** %28, align 8, !dbg !3042
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3042
  store i64 %_6.1, i64* %29, align 8, !dbg !3042
  br label %bb19, !dbg !3043
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hd0a0dbb0f0af1254E(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !3044 {
start:
  %count.dbg.spill.i7 = alloca i64, align 8
  %val.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i8 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill6 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill5 = alloca i64, align 8
  %ptr.dbg.spill3 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %old_size.dbg.spill2 = alloca i64, align 8
  %old_size.dbg.spill = alloca i64*, align 8
  %residual.dbg.spill1 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3048, metadata !DIExpression()), !dbg !3074
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3049, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3050, metadata !DIExpression()), !dbg !3076
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3051, metadata !DIExpression()), !dbg !3077
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !3052, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !3062, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill1, metadata !3070, metadata !DIExpression()), !dbg !3080
; call core::alloc::layout::Layout::size
  %11 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !3081
  store i64 %11, i64* %_6, align 8, !dbg !3081
  br label %bb1, !dbg !3081

bb1:                                              ; preds = %start
  %12 = load i64, i64* %_6, align 8, !dbg !3082
  %13 = icmp eq i64 %12, 0, !dbg !3082
  br i1 %13, label %bb2, label %bb4, !dbg !3082

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3083
  %_9.0 = load i64, i64* %14, align 8, !dbg !3083
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3083
  %_9.1 = load i64, i64* %15, align 8, !dbg !3083, !range !1146
; call alloc::alloc::Global::alloc_impl
  %16 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc7de76357b8031baE(%"std::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed), !dbg !3084
  store { i8*, i64 } %16, { i8*, i64 }* %5, align 8, !dbg !3084
  br label %bb3, !dbg !3084

bb4:                                              ; preds = %bb1
  store i64* %_6, i64** %old_size.dbg.spill, align 8, !dbg !3085
  call void @llvm.dbg.declare(metadata i64** %old_size.dbg.spill, metadata !3055, metadata !DIExpression()), !dbg !3086
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !3087
  br label %bb5, !dbg !3087

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !3088
  br label %bb6, !dbg !3088

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16, !dbg !3087
  br i1 %_13, label %bb7, label %bb8, !dbg !3087

bb8:                                              ; preds = %bb6
  %old_size4 = load i64, i64* %_6, align 8, !dbg !3089
  store i64 %old_size4, i64* %old_size.dbg.spill5, align 8, !dbg !3089
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill5, metadata !3066, metadata !DIExpression()), !dbg !3090
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3091
  %_56.0 = load i64, i64* %17, align 8, !dbg !3091
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3091
  %_56.1 = load i64, i64* %18, align 8, !dbg !3091, !range !1146
; call alloc::alloc::Global::alloc_impl
  %19 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc7de76357b8031baE(%"std::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed), !dbg !3092
  %_54.0 = extractvalue { i8*, i64 } %19, 0, !dbg !3092
  %_54.1 = extractvalue { i8*, i64 } %19, 1, !dbg !3092
  br label %bb26, !dbg !3092

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8, !dbg !3085
  store i64 %old_size, i64* %old_size.dbg.spill2, align 8, !dbg !3085
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill2, metadata !3053, metadata !DIExpression()), !dbg !3086
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !3093
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !3093
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !3056, metadata !DIExpression()), !dbg !3094
  br label %bb9, !dbg !3093

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !3095
  br label %bb10, !dbg !3095

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23, !dbg !3096
  call void @llvm.assume(i1 %_21), !dbg !3097
  br label %bb11, !dbg !3097

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E"(i8* nonnull %ptr), !dbg !3098
  br label %bb12, !dbg !3098

bb12:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3099
  %_28.0 = load i64, i64* %20, align 8, !dbg !3099
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3099
  %_28.1 = load i64, i64* %21, align 8, !dbg !3099, !range !1146
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h6917010272b404c6E(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size), !dbg !3100
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !3100
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !3058, metadata !DIExpression()), !dbg !3101
  br label %bb13, !dbg !3100

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17habe433947869e644E"(i8* %raw_ptr), !dbg !3102
  br label %bb14, !dbg !3102

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h716f966699a133f9E"(i8* %_33), !dbg !3102
  br label %bb15, !dbg !3102

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %22 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6eef7ca3949bd8aE"(i8* %_32), !dbg !3102
  store i8* %22, i8** %_31, align 8, !dbg !3102
  br label %bb16, !dbg !3102

bb16:                                             ; preds = %bb15
  %23 = bitcast i8** %_31 to {}**, !dbg !3102
  %24 = load {}*, {}** %23, align 8, !dbg !3102
  %25 = icmp eq {}* %24, null, !dbg !3102
  %_36 = select i1 %25, i64 1, i64 0, !dbg !3102
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !3102

bb18:                                             ; preds = %bb16
  unreachable, !dbg !3102

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !dbg !3102, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !3102
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !3064, metadata !DIExpression()), !dbg !3103
  store i8* %val, i8** %ptr.dbg.spill3, align 8, !dbg !3103
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill3, metadata !3060, metadata !DIExpression()), !dbg !3104
  br i1 %zeroed, label %bb21, label %bb24, !dbg !3105

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %26 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h54656286740a6161E"(), !dbg !3106
  store { i8*, i64 } %26, { i8*, i64 }* %5, align 8, !dbg !3106
  br label %bb20, !dbg !3106

bb20:                                             ; preds = %bb19
  br label %bb37, !dbg !3107

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38, !dbg !3109

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %27 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc0589c963be055f8E"(i8* nonnull %val, i64 %new_size), !dbg !3110
  %_48.0 = extractvalue { i8*, i64 } %27, 0, !dbg !3110
  %_48.1 = extractvalue { i8*, i64 } %27, 1, !dbg !3110
  br label %bb25, !dbg !3110

bb21:                                             ; preds = %bb17
  store i8* %raw_ptr, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !3111, metadata !DIExpression()), !dbg !3117
  store i64 %old_size, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3116, metadata !DIExpression()), !dbg !3119
  store i8* %raw_ptr, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !3120, metadata !DIExpression()), !dbg !3126
  store i64 %old_size, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !3125, metadata !DIExpression()), !dbg !3128
  %28 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size, !dbg !3129
  store i8* %28, i8** %4, align 8, !dbg !3129
  %_3.i.i = load i8*, i8** %4, align 8, !dbg !3129
  br label %bb22, !dbg !3130

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size, !dbg !3131
  store i8* %_3.i.i, i8** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i8, metadata !3132, metadata !DIExpression()) #12, !dbg !3137
  store i8 0, i8* %val.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill.i, metadata !3135, metadata !DIExpression()) #12, !dbg !3139
  store i64 %_45, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !3136, metadata !DIExpression()) #12, !dbg !3140
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h862ff44c68d1e80cE(i8* %_3.i.i, i8 0, i64 %_45) #12, !dbg !3141
  br label %bb23, !dbg !3130

bb23:                                             ; preds = %bb22
  br label %bb24, !dbg !3142

bb25:                                             ; preds = %bb24
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3143
  store i8* %_48.0, i8** %29, align 8, !dbg !3143
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3143
  store i64 %_48.1, i64* %30, align 8, !dbg !3143
  br label %bb36, !dbg !3144

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38, !dbg !3109

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %31 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he12c8b5904f92314E"(i8* %_54.0, i64 %_54.1), !dbg !3092
  store { i8*, i64 } %31, { i8*, i64 }* %_53, align 8, !dbg !3092
  br label %bb27, !dbg !3092

bb27:                                             ; preds = %bb26
  %32 = bitcast { i8*, i64 }* %_53 to {}**, !dbg !3092
  %33 = load {}*, {}** %32, align 8, !dbg !3092
  %34 = icmp eq {}* %33, null, !dbg !3092
  %_58 = select i1 %34, i64 1, i64 0, !dbg !3092
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ], !dbg !3092

bb29:                                             ; preds = %bb27
  unreachable, !dbg !3092

bb28:                                             ; preds = %bb27
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0, !dbg !3092
  %val.0 = load i8*, i8** %35, align 8, !dbg !3092, !nonnull !4
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1, !dbg !3092
  %val.1 = load i64, i64* %36, align 8, !dbg !3092
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 0, !dbg !3092
  store i8* %val.0, i8** %37, align 8, !dbg !3092
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 1, !dbg !3092
  store i64 %val.1, i64* %38, align 8, !dbg !3092
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill6, metadata !3072, metadata !DIExpression()), !dbg !3145
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !3145
  store i8* %val.0, i8** %39, align 8, !dbg !3145
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !3145
  store i64 %val.1, i64* %40, align 8, !dbg !3145
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !3068, metadata !DIExpression()), !dbg !3146
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E"(i8* nonnull %ptr), !dbg !3147
  br label %bb32, !dbg !3147

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h54656286740a6161E"(), !dbg !3148
  store { i8*, i64 } %41, { i8*, i64 }* %5, align 8, !dbg !3148
  br label %bb31, !dbg !3148

bb31:                                             ; preds = %bb30
  br label %bb37, !dbg !3107

bb38:                                             ; preds = %bb36, %bb37
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3109
  %43 = load i8*, i8** %42, align 8, !dbg !3109
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3109
  %45 = load i64, i64* %44, align 8, !dbg !3109
  %46 = insertvalue { i8*, i64 } undef, i8* %43, 0, !dbg !3109
  %47 = insertvalue { i8*, i64 } %46, i64 %45, 1, !dbg !3109
  ret { i8*, i64 } %47, !dbg !3109

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h9fe46e2f4b565a65E"(i8* nonnull %val.0, i64 %val.1), !dbg !3149
  br label %bb33, !dbg !3149

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h50123e3b718f0f56E(i8* %_64, i8* %_66, i64 %old_size4), !dbg !3150
  br label %bb34, !dbg !3150

bb34:                                             ; preds = %bb33
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3151
  %_72.0 = load i64, i64* %48, align 8, !dbg !3151
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3151
  %_72.1 = load i64, i64* %49, align 8, !dbg !3151, !range !1146
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hf78e0a3850d2b29bE"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1), !dbg !3152
  br label %bb35, !dbg !3152

bb35:                                             ; preds = %bb34
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3153
  store i8* %val.0, i8** %50, align 8, !dbg !3153
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3153
  store i64 %val.1, i64* %51, align 8, !dbg !3153
  br label %bb36, !dbg !3154

bb3:                                              ; preds = %bb2
  br label %bb36, !dbg !3155
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc5alloc7dealloc17h6444f098979c6df9E(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !3156 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3160, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3161, metadata !DIExpression()), !dbg !3163
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3164
  br label %bb1, !dbg !3164

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3165
  br label %bb2, !dbg !3165

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6), !dbg !3166
  br label %bb3, !dbg !3166

bb3:                                              ; preds = %bb2
  ret void, !dbg !3167
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc7realloc17h6917010272b404c6E(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 !dbg !3168 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3172, metadata !DIExpression()), !dbg !3175
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3173, metadata !DIExpression()), !dbg !3176
  store i64 %new_size, i64* %new_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !3174, metadata !DIExpression()), !dbg !3177
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3178
  br label %bb1, !dbg !3178

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3179
  br label %bb2, !dbg !3179

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size), !dbg !3180
  br label %bb3, !dbg !3180

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !3181
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec11alloc_guard17hb2453b78b4db6ba6E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 !dbg !3182 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %alloc_size, i64* %alloc_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %alloc_size.dbg.spill, metadata !3186, metadata !DIExpression()), !dbg !3187
  br i1 false, label %bb1, label %bb3, !dbg !3188

bb3:                                              ; preds = %start
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3189
  store i64 0, i64* %1, align 8, !dbg !3189
  br label %bb4, !dbg !3190

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !3191
  store i64 0, i64* %2, align 8, !dbg !3191
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0, !dbg !3191
  %4 = load i64, i64* %3, align 8, !dbg !3191
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !3191
  %6 = load i64, i64* %5, align 8, !dbg !3191
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h43a66b6aa6574fabE"(i64 %4, i64 %6), !dbg !3191
  %_3.0 = extractvalue { i64, i64 } %7, 0, !dbg !3191
  %_3.1 = extractvalue { i64, i64 } %7, 1, !dbg !3191
  br label %bb2, !dbg !3191

bb2:                                              ; preds = %bb1
  %8 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3192
  %9 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %8, i32 0, i32 1, !dbg !3192
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3192
  store i64 %_3.0, i64* %10, align 8, !dbg !3192
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3192
  store i64 %_3.1, i64* %11, align 8, !dbg !3192
  %12 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3192
  store i64 1, i64* %12, align 8, !dbg !3192
  br label %bb4, !dbg !3190

bb4:                                              ; preds = %bb3, %bb2
  ret void, !dbg !3193
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nounwind
define void @_ZN5alloc7raw_vec11finish_grow17h0ae43c3646423906E(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"std::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #3 !dbg !3194 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill4 = alloca { i64, i64 }, align 8
  %val.dbg.spill1 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_13 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>", align 8
  %_6 = alloca %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3215, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.declare(metadata %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory, metadata !3216, metadata !DIExpression()), !dbg !3242
  store %"std::alloc::Global"* %alloc, %"std::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %alloc.dbg.spill, metadata !3217, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3218, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !3226, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !3228, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3232, metadata !DIExpression()), !dbg !3247
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h881173f80a821c84E"(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1), !dbg !3248
  br label %bb1, !dbg !3248

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h67ec81356394838eE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>") dereferenceable(24) %_5, %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6), !dbg !3248
  br label %bb2, !dbg !3248

bb2:                                              ; preds = %bb1
  %3 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to i64*, !dbg !3248
  %_9 = load i64, i64* %3, align 8, !dbg !3248, !range !230
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !3248

bb4:                                              ; preds = %bb2
  unreachable, !dbg !3248

bb3:                                              ; preds = %bb2
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"*, !dbg !3248
  %5 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"* %4, i32 0, i32 1, !dbg !3248
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !3248
  %val.0 = load i64, i64* %6, align 8, !dbg !3248
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !3248
  %val.1 = load i64, i64* %7, align 8, !dbg !3248, !range !1146
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill1, i32 0, i32 0, !dbg !3248
  store i64 %val.0, i64* %8, align 8, !dbg !3248
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill1, i32 0, i32 1, !dbg !3248
  store i64 %val.1, i64* %9, align 8, !dbg !3248
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill1, metadata !3222, metadata !DIExpression()), !dbg !3249
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3249
  store i64 %val.0, i64* %10, align 8, !dbg !3249
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3249
  store i64 %val.1, i64* %11, align 8, !dbg !3249
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !3250
  br label %bb7, !dbg !3250

bb5:                                              ; preds = %bb2
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"*, !dbg !3251
  %13 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"* %12, i32 0, i32 1, !dbg !3251
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !3251
  %residual.0 = load i64, i64* %14, align 8, !dbg !3251
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !3251
  %residual.1 = load i64, i64* %15, align 8, !dbg !3251
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3251
  store i64 %residual.0, i64* %16, align 8, !dbg !3251
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3251
  store i64 %residual.1, i64* %17, align 8, !dbg !3251
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3220, metadata !DIExpression()), !dbg !3252
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbc8f0f0227d7fc3cE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1), !dbg !3253
  br label %bb6, !dbg !3253

bb6:                                              ; preds = %bb5
  br label %bb23, !dbg !3254

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24, !dbg !3256

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17hb2453b78b4db6ba6E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15), !dbg !3257
  br label %bb8, !dbg !3257

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0cdc81fb95297d26E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>") dereferenceable(24) %_13, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14), !dbg !3257
  br label %bb9, !dbg !3257

bb9:                                              ; preds = %bb8
  %18 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %_13 to i64*, !dbg !3257
  %_17 = load i64, i64* %18, align 8, !dbg !3257, !range !230
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ], !dbg !3257

bb11:                                             ; preds = %bb9
  unreachable, !dbg !3257

bb10:                                             ; preds = %bb9
  %19 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to {}**, !dbg !3258
  %20 = load {}*, {}** %19, align 8, !dbg !3258
  %21 = icmp eq {}* %20, null, !dbg !3258
  %_22 = select i1 %21, i64 0, i64 1, !dbg !3258
  %22 = icmp eq i64 %_22, 1, !dbg !3258
  br i1 %22, label %bb15, label %bb14, !dbg !3258

bb12:                                             ; preds = %bb9
  %23 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %_13 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"*, !dbg !3259
  %24 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"* %23, i32 0, i32 1, !dbg !3259
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !3259
  %residual.02 = load i64, i64* %25, align 8, !dbg !3259
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !3259
  %residual.13 = load i64, i64* %26, align 8, !dbg !3259
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill4, i32 0, i32 0, !dbg !3259
  store i64 %residual.02, i64* %27, align 8, !dbg !3259
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill4, i32 0, i32 1, !dbg !3259
  store i64 %residual.13, i64* %28, align 8, !dbg !3259
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill4, metadata !3224, metadata !DIExpression()), !dbg !3260
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h846f6cef6ac19211E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13), !dbg !3261
  br label %bb13, !dbg !3261

bb13:                                             ; preds = %bb12
  br label %bb23, !dbg !3262

bb24:                                             ; preds = %bb22, %bb23
  ret void, !dbg !3256

bb15:                                             ; preds = %bb10
  %29 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3264
  %30 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %29 to { i8*, { i64, i64 } }*, !dbg !3264
  %31 = bitcast { i8*, { i64, i64 } }* %30 to i8**, !dbg !3264
  %ptr = load i8*, i8** %31, align 8, !dbg !3264, !nonnull !4
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3264
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3230, metadata !DIExpression()), !dbg !3265
  %32 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3266
  %33 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %32 to { i8*, { i64, i64 } }*, !dbg !3266
  %34 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %33, i32 0, i32 1, !dbg !3266
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !3266
  %36 = load i64, i64* %35, align 8, !dbg !3266
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !3266
  %38 = load i64, i64* %37, align 8, !dbg !3266, !range !1146
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3266
  store i64 %36, i64* %39, align 8, !dbg !3266
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3266
  store i64 %38, i64* %40, align 8, !dbg !3266
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !3267
  br label %bb16, !dbg !3267

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3268
  %_39.0 = load i64, i64* %41, align 8, !dbg !3268
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3268
  %_39.1 = load i64, i64* %42, align 8, !dbg !3268, !range !1146
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %43 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8fbc4f21de7f507dE"(%"std::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1), !dbg !3269
  store { i8*, i64 } %43, { i8*, i64 }* %memory, align 8, !dbg !3269
  br label %bb20, !dbg !3269

bb20:                                             ; preds = %bb14
  br label %bb21, !dbg !3270

bb21:                                             ; preds = %bb19, %bb20
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !3271
  %_40.0 = load i8*, i8** %44, align 8, !dbg !3271
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !3271
  %_40.1 = load i64, i64* %45, align 8, !dbg !3271
  %46 = bitcast i64** %_41 to { i64, i64 }**, !dbg !3272
  store { i64, i64 }* %new_layout, { i64, i64 }** %46, align 8, !dbg !3272
  %47 = load i64*, i64** %_41, align 8, !dbg !3271, !nonnull !4
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0b9c678594b474d6E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %47), !dbg !3271
  br label %bb22, !dbg !3271

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !3273
  br label %bb17, !dbg !3273

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32, !dbg !3267
  call void @llvm.assume(i1 %_29), !dbg !3274
  br label %bb18, !dbg !3274

bb18:                                             ; preds = %bb17
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3275
  %_36.0 = load i64, i64* %48, align 8, !dbg !3275
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3275
  %_36.1 = load i64, i64* %49, align 8, !dbg !3275, !range !1146
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3276
  %_37.0 = load i64, i64* %50, align 8, !dbg !3276
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3276
  %_37.1 = load i64, i64* %51, align 8, !dbg !3276, !range !1146
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %52 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h6dd4a3efa918fe77E"(%"std::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1), !dbg !3277
  store { i8*, i64 } %52, { i8*, i64 }* %memory, align 8, !dbg !3277
  br label %bb19, !dbg !3277

bb19:                                             ; preds = %bb18
  br label %bb21, !dbg !3270

bb22:                                             ; preds = %bb21
  br label %bb24, !dbg !3256
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h0908563c87a93969E"() unnamed_addr #0 !dbg !3278 {
start:
  %_2.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !3282, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %_2.dbg.spill, metadata !3283, metadata !DIExpression()), !dbg !3285
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3286
  store i64 0, i64* %1, align 8, !dbg !3286
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3287
  %3 = load i64, i64* %2, align 8, !dbg !3287
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3287
  %5 = load i64, i64* %4, align 8, !dbg !3287
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !3287
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !3287
  ret { i64, i64 } %7, !dbg !3287
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h0e6bdbc8b92c5b62E"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 !dbg !3288 {
start:
  %_2.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_1.dbg.spill = alloca i64*, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = bitcast i64** %_1.dbg.spill to { i64, i64 }**
  %1 = load { i64, i64 }*, { i64, i64 }** %0, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !3292, metadata !DIExpression(DW_OP_deref)), !dbg !3294
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %_2.dbg.spill, metadata !3293, metadata !DIExpression()), !dbg !3295
  %2 = bitcast i64* %_1 to { i64, i64 }*, !dbg !3296
  %3 = bitcast i64* %_1 to { i64, i64 }*, !dbg !3296
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !3296
  %_4.0 = load i64, i64* %4, align 8, !dbg !3296
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3296
  %_4.1 = load i64, i64* %5, align 8, !dbg !3296, !range !1146
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3297
  store i64 %_4.0, i64* %6, align 8, !dbg !3297
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3297
  store i64 %_4.1, i64* %7, align 8, !dbg !3297
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3297
  %9 = load i64, i64* %8, align 8, !dbg !3297
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3297
  %11 = load i64, i64* %10, align 8, !dbg !3297
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h43a66b6aa6574fabE"(i64 %9, i64 %11), !dbg !3297
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !3297
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !3297
  br label %bb1, !dbg !3297

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !3298
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !3298
  ret { i64, i64 } %16, !dbg !3298
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec14handle_reserve17hab3947554fe20403E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #0 !dbg !3299 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_2 = alloca %"std::result::Result<(), std::collections::TryReserveErrorKind>", align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %result, metadata !3303, metadata !DIExpression()), !dbg !3306
  %0 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %_3 to i8*, !dbg !3307
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %result to i8*, !dbg !3307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !3307
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h366746563dca9873E"(%"std::result::Result<(), std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3), !dbg !3307
  br label %bb1, !dbg !3307

bb1:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to i64*, !dbg !3307
  %_6 = load i64, i64* %2, align 8, !dbg !3307, !range !230
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !3308

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !3307

bb2:                                              ; preds = %bb1
  ret void, !dbg !3309

bb3:                                              ; preds = %bb1
  %3 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !3307
  %4 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1, !dbg !3307
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !3307
  %6 = load i64, i64* %5, align 8, !dbg !3307
  %7 = icmp eq i64 %6, 0, !dbg !3307
  %_5 = select i1 %7, i64 0, i64 1, !dbg !3307
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !3308

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd70bf339531c8dfaE(), !dbg !3310
  unreachable, !dbg !3310

bb6:                                              ; preds = %bb3
  %8 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !3311
  %9 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1, !dbg !3311
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3311
  %layout.0 = load i64, i64* %10, align 8, !dbg !3311
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3311
  %layout.1 = load i64, i64* %11, align 8, !dbg !3311, !range !1146
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3311
  store i64 %layout.0, i64* %12, align 8, !dbg !3311
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3311
  store i64 %layout.1, i64* %13, align 8, !dbg !3311
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3304, metadata !DIExpression()), !dbg !3312
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17hc3aabe6032ee3c5aE(i64 %layout.0, i64 %layout.1), !dbg !3313
  unreachable, !dbg !3313
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hbb27177d91402ad8E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3314 {
start:
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !3318, metadata !DIExpression()), !dbg !3321
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h89cc6c0df001aa04E({ i64, i64 }* align 8 dereferenceable(16) %e), !dbg !3322
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !3322
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !3322
  br label %bb1, !dbg !3322

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !3323
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !3323
  ret { i64, i64 } %8, !dbg !3323
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nounwind
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h99993d77f2ba1ae7E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 !dbg !3324 {
start:
  %ptr.dbg.spill1 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %1 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"std::alloc::Global", align 1
  %init = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !3328, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.declare(metadata i8* %init, metadata !3329, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"* %alloc, metadata !3330, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3331, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !3335, metadata !DIExpression()), !dbg !3345
  br label %bb1, !dbg !3346

bb1:                                              ; preds = %start
  %3 = icmp eq i64 8, 0, !dbg !3346
  br i1 %3, label %bb2, label %bb4, !dbg !3346

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::new_in
  %4 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he457191606588f61E"(), !dbg !3347
  store { i64*, i64 } %4, { i64*, i64 }* %1, align 8, !dbg !3347
  br label %bb3, !dbg !3347

bb4:                                              ; preds = %bb1
; call core::alloc::layout::Layout::array
  %5 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h07662e3be769a547E(i64 %capacity), !dbg !3348
  store { i64, i64 } %5, { i64, i64 }* %_7, align 8, !dbg !3348
  br label %bb5, !dbg !3348

bb5:                                              ; preds = %bb4
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !3348
  %7 = load i64, i64* %6, align 8, !dbg !3348
  %8 = icmp eq i64 %7, 0, !dbg !3348
  %_9 = select i1 %8, i64 1, i64 0, !dbg !3348
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ], !dbg !3349

bb7:                                              ; preds = %bb5
  unreachable, !dbg !3348

bb8:                                              ; preds = %bb5
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !3350
  %layout.0 = load i64, i64* %9, align 8, !dbg !3350
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !3350
  %layout.1 = load i64, i64* %10, align 8, !dbg !3350, !range !1146
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3350
  store i64 %layout.0, i64* %11, align 8, !dbg !3350
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3350
  store i64 %layout.1, i64* %12, align 8, !dbg !3350
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3333, metadata !DIExpression()), !dbg !3351
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3352
  store i64 %layout.0, i64* %13, align 8, !dbg !3352
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3352
  store i64 %layout.1, i64* %14, align 8, !dbg !3352
; call core::alloc::layout::Layout::size
  %_12 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3353
  br label %bb9, !dbg !3353

bb6:                                              ; preds = %bb5
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd70bf339531c8dfaE(), !dbg !3354
  unreachable, !dbg !3354

bb9:                                              ; preds = %bb8
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17hb2453b78b4db6ba6E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12), !dbg !3355
  br label %bb10, !dbg !3355

bb10:                                             ; preds = %bb9
  %15 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %_11 to i64*, !dbg !3355
  %_14 = load i64, i64* %15, align 8, !dbg !3355, !range !230
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !3356

bb12:                                             ; preds = %bb10
  unreachable, !dbg !3355

bb13:                                             ; preds = %bb10
  %16 = load i8, i8* %init, align 1, !dbg !3357, !range !978
  %17 = trunc i8 %16 to i1, !dbg !3357
  %_16 = zext i1 %17 to i64, !dbg !3357
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !3358

bb11:                                             ; preds = %bb10
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd70bf339531c8dfaE(), !dbg !3359
  unreachable, !dbg !3359

bb15:                                             ; preds = %bb13
  unreachable, !dbg !3357

bb16:                                             ; preds = %bb13
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3360
  %_18.0 = load i64, i64* %18, align 8, !dbg !3360
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3360
  %_18.1 = load i64, i64* %19, align 8, !dbg !3360, !range !1146
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %20 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8fbc4f21de7f507dE"(%"std::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1), !dbg !3361
  store { i8*, i64 } %20, { i8*, i64 }* %result, align 8, !dbg !3361
  br label %bb17, !dbg !3361

bb14:                                             ; preds = %bb13
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3362
  %_20.0 = load i64, i64* %21, align 8, !dbg !3362
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3362
  %_20.1 = load i64, i64* %22, align 8, !dbg !3362, !range !1146
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %23 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hccc846e98126c2fbE"(%"std::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1), !dbg !3363
  store { i8*, i64 } %23, { i8*, i64 }* %result, align 8, !dbg !3363
  br label %bb18, !dbg !3363

bb18:                                             ; preds = %bb14
  br label %bb19, !dbg !3364

bb19:                                             ; preds = %bb17, %bb18
  %24 = bitcast { i8*, i64 }* %result to {}**, !dbg !3365
  %25 = load {}*, {}** %24, align 8, !dbg !3365
  %26 = icmp eq {}* %25, null, !dbg !3365
  %_22 = select i1 %26, i64 1, i64 0, !dbg !3365
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !3366

bb17:                                             ; preds = %bb16
  br label %bb19, !dbg !3367

bb21:                                             ; preds = %bb19
  unreachable, !dbg !3365

bb22:                                             ; preds = %bb19
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !3368
  %ptr.0 = load i8*, i8** %27, align 8, !dbg !3368, !nonnull !4
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !3368
  %ptr.1 = load i64, i64* %28, align 8, !dbg !3368
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !3368
  store i8* %ptr.0, i8** %29, align 8, !dbg !3368
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !3368
  store i64 %ptr.1, i64* %30, align 8, !dbg !3368
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3339, metadata !DIExpression()), !dbg !3369
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill1, i32 0, i32 0, !dbg !3370
  store i8* %ptr.0, i8** %31, align 8, !dbg !3370
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill1, i32 0, i32 1, !dbg !3370
  store i64 %ptr.1, i64* %32, align 8, !dbg !3370
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill1, metadata !3337, metadata !DIExpression()), !dbg !3371
; call core::ptr::non_null::NonNull<T>::cast
  %_27 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he238f352c767a682E"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !3372
  br label %bb23, !dbg !3372

bb20:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3373
  %_24.0 = load i64, i64* %33, align 8, !dbg !3373
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3373
  %_24.1 = load i64, i64* %34, align 8, !dbg !3373, !range !1146
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17hc3aabe6032ee3c5aE(i64 %_24.0, i64 %_24.1), !dbg !3374
  unreachable, !dbg !3374

bb23:                                             ; preds = %bb22
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %_27), !dbg !3372
  br label %bb24, !dbg !3372

bb24:                                             ; preds = %bb23
; call core::ptr::unique::Unique<T>::new_unchecked
  %_25 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbe85731dd4f93460E"(i64* %_26), !dbg !3375
  br label %bb25, !dbg !3375

bb25:                                             ; preds = %bb24
; call core::ptr::non_null::NonNull<[T]>::len
  %_30 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h697dd1e73004a5a0E"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !3376
  br label %bb26, !dbg !3376

bb26:                                             ; preds = %bb25
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h21f921f6a1851c49E"(i64 %_30), !dbg !3377
  br label %bb27, !dbg !3377

bb27:                                             ; preds = %bb26
  %35 = bitcast { i64*, i64 }* %1 to i64**, !dbg !3378
  store i64* %_25, i64** %35, align 8, !dbg !3378
  %36 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1, !dbg !3378
  store i64 %_29, i64* %36, align 8, !dbg !3378
  %37 = bitcast { i64*, i64 }* %1 to %"std::alloc::Global"*, !dbg !3378
  br label %bb28, !dbg !3379

bb28:                                             ; preds = %bb3, %bb27
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0, !dbg !3380
  %39 = load i64*, i64** %38, align 8, !dbg !3380, !nonnull !4
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1, !dbg !3380
  %41 = load i64, i64* %40, align 8, !dbg !3380
  %42 = insertvalue { i64*, i64 } undef, i64* %39, 0, !dbg !3380
  %43 = insertvalue { i64*, i64 } %42, i64 %41, 1, !dbg !3380
  ret { i64*, i64 } %43, !dbg !3380

bb3:                                              ; preds = %bb2
  br label %bb28, !dbg !3379
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nounwind
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hf6862b0aff723ea9E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !3381 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i = alloca { i64*, i64 }*, align 8
  %0 = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3385, metadata !DIExpression()), !dbg !3388
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3386, metadata !DIExpression()), !dbg !3389
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3387, metadata !DIExpression()), !dbg !3390
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill.i, metadata !2870, metadata !DIExpression()), !dbg !3391
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !3393
  %2 = load i64, i64* %1, align 8, !dbg !3393
  store i64 %2, i64* %0, align 8, !dbg !3393
  %3 = load i64, i64* %0, align 8, !dbg !3394
  br label %bb1, !dbg !3395

bb1:                                              ; preds = %start
  store i64 %3, i64* %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i1, metadata !2123, metadata !DIExpression()), !dbg !3396
  store i64 %len, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !2126, metadata !DIExpression()), !dbg !3398
  %4 = sub i64 %3, %len, !dbg !3399
  br label %bb2, !dbg !3395

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4, !dbg !3400
  ret i1 %5, !dbg !3401
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdb4c2006d2bda7d7E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !3402 {
start:
  %1 = alloca i64, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3406, metadata !DIExpression()), !dbg !3413
  br label %bb4, !dbg !3414

bb4:                                              ; preds = %start
  %2 = icmp eq i64 8, 0, !dbg !3414
  br i1 %2, label %bb1, label %bb2, !dbg !3414

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1, !dbg !3414
  br label %bb3, !dbg !3414

bb2:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !3415
  %_5 = load i64, i64* %3, align 8, !dbg !3415
  %_4 = icmp eq i64 %_5, 0, !dbg !3415
  %4 = zext i1 %_4 to i8, !dbg !3414
  store i8 %4, i8* %_2, align 1, !dbg !3414
  br label %bb3, !dbg !3414

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_2, align 1, !dbg !3414, !range !978
  %6 = trunc i8 %5 to i1, !dbg !3414
  br i1 %6, label %bb5, label %bb6, !dbg !3414

bb6:                                              ; preds = %bb3
  store i64 8, i64* %1, align 8, !dbg !3416
  %7 = load i64, i64* %1, align 8, !dbg !3416
  store i64 %7, i64* %align.dbg.spill, align 8, !dbg !3418
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !3407, metadata !DIExpression()), !dbg !3419
  br label %bb7, !dbg !3418

bb5:                                              ; preds = %bb3
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**, !dbg !3420
  store {}* null, {}** %8, align 8, !dbg !3420
  br label %bb12, !dbg !3421

bb12:                                             ; preds = %bb11, %bb5
  ret void, !dbg !3422

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !3423

bb8:                                              ; preds = %bb7
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !3424
  %_9 = load i64, i64* %9, align 8, !dbg !3424
  %size = mul i64 8, %_9, !dbg !3423
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !3423
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3409, metadata !DIExpression()), !dbg !3425
; call core::alloc::layout::Layout::from_size_align_unchecked
  %10 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3290f94581f3992eE(i64 %size, i64 %7), !dbg !3426
  %layout.0 = extractvalue { i64, i64 } %10, 0, !dbg !3426
  %layout.1 = extractvalue { i64, i64 } %10, 1, !dbg !3426
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3426
  store i64 %layout.0, i64* %11, align 8, !dbg !3426
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3426
  store i64 %layout.1, i64* %12, align 8, !dbg !3426
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3411, metadata !DIExpression()), !dbg !3427
  br label %bb9, !dbg !3426

bb9:                                              ; preds = %bb8
  %13 = bitcast { i64*, i64 }* %self to i64**, !dbg !3428
  %_16 = load i64*, i64** %13, align 8, !dbg !3428, !nonnull !4
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6839eb95853901f0E"(i64* nonnull %_16), !dbg !3428
  br label %bb10, !dbg !3428

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h36c1fd4db3113d1aE"(i8* nonnull %_15), !dbg !3428
  br label %bb11, !dbg !3428

bb11:                                             ; preds = %bb10
  %14 = bitcast { i8*, { i64, i64 } }* %_13 to i8**, !dbg !3429
  store i8* %_14, i8** %14, align 8, !dbg !3429
  %15 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1, !dbg !3429
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !3429
  store i64 %layout.0, i64* %16, align 8, !dbg !3429
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !3429
  store i64 %layout.1, i64* %17, align 8, !dbg !3429
  %18 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3430
  %19 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %18 to { i8*, { i64, i64 } }*, !dbg !3430
  %20 = bitcast { i8*, { i64, i64 } }* %19 to i8*, !dbg !3430
  %21 = bitcast { i8*, { i64, i64 } }* %_13 to i8*, !dbg !3430
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !3430
  br label %bb12, !dbg !3421
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h229ddff007f56f34E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !3431 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill6 = alloca { i8*, i64 }, align 8
  %residual.dbg.spill5 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill2 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_30 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %_28 = alloca %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>", align 8
  %_27 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"std::result::Result<usize, std::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3436, metadata !DIExpression()), !dbg !3457
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3437, metadata !DIExpression()), !dbg !3458
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3438, metadata !DIExpression()), !dbg !3459
  br label %bb1, !dbg !3460

bb1:                                              ; preds = %start
  %1 = icmp eq i64 8, 0, !dbg !3460
  br i1 %1, label %bb2, label %bb4, !dbg !3460

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3461
  store i64 0, i64* %2, align 8, !dbg !3461
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3461
  %4 = load i64, i64* %3, align 8, !dbg !3461
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3461
  %6 = load i64, i64* %5, align 8, !dbg !3461
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h43a66b6aa6574fabE"(i64 %4, i64 %6), !dbg !3461
  %_5.0 = extractvalue { i64, i64 } %7, 0, !dbg !3461
  %_5.1 = extractvalue { i64, i64 } %7, 1, !dbg !3461
  br label %bb3, !dbg !3461

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hdc59359d34489ae8E"(i64 %len, i64 %additional), !dbg !3462
  %_10.0 = extractvalue { i64, i64 } %8, 0, !dbg !3462
  %_10.1 = extractvalue { i64, i64 } %8, 1, !dbg !3462
  br label %bb5, !dbg !3462

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3463
  store i64 0, i64* %9, align 8, !dbg !3463
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !3462
  %11 = load i64, i64* %10, align 8, !dbg !3462
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !3462
  %13 = load i64, i64* %12, align 8, !dbg !3462
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h22757971a0b2da31E"(%"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<usize, std::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13), !dbg !3462
  br label %bb6, !dbg !3462

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd052563c46ed1ac7E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9), !dbg !3462
  br label %bb7, !dbg !3462

bb7:                                              ; preds = %bb6
  %14 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !3462
  %_14 = load i64, i64* %14, align 8, !dbg !3462, !range !230
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !3462

bb9:                                              ; preds = %bb7
  unreachable, !dbg !3462

bb8:                                              ; preds = %bb7
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !3462
  %16 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1, !dbg !3462
  %val = load i64, i64* %16, align 8, !dbg !3462
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !3462
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !3443, metadata !DIExpression()), !dbg !3464
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !3464
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !3439, metadata !DIExpression()), !dbg !3465
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !3466
  %_20 = load i64, i64* %17, align 8, !dbg !3466
  %_19 = mul i64 %_20, 2, !dbg !3466
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h7229c2c0330f0f9fE(i64 %_19, i64 %val), !dbg !3467
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !3467
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !3445, metadata !DIExpression()), !dbg !3468
  br label %bb12, !dbg !3467

bb10:                                             ; preds = %bb7
  %18 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !3469
  %19 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1, !dbg !3469
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !3469
  %residual.0 = load i64, i64* %20, align 8, !dbg !3469
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !3469
  %residual.1 = load i64, i64* %21, align 8, !dbg !3469
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !3469
  store i64 %residual.0, i64* %22, align 8, !dbg !3469
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !3469
  store i64 %residual.1, i64* %23, align 8, !dbg !3469
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3441, metadata !DIExpression()), !dbg !3470
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2b2e804e1b0a951aE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1), !dbg !3471
  br label %bb11, !dbg !3471

bb11:                                             ; preds = %bb10
  br label %bb23, !dbg !3472

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24, !dbg !3472

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h7229c2c0330f0f9fE(i64 4, i64 %cap), !dbg !3474
  store i64 %cap1, i64* %cap.dbg.spill2, align 8, !dbg !3474
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill2, metadata !3447, metadata !DIExpression()), !dbg !3475
  br label %bb13, !dbg !3474

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %24 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h07662e3be769a547E(i64 %cap1), !dbg !3476
  %new_layout.0 = extractvalue { i64, i64 } %24, 0, !dbg !3476
  %new_layout.1 = extractvalue { i64, i64 } %24, 1, !dbg !3476
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !3476
  store i64 %new_layout.0, i64* %25, align 8, !dbg !3476
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !3476
  store i64 %new_layout.1, i64* %26, align 8, !dbg !3476
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3449, metadata !DIExpression()), !dbg !3477
  br label %bb14, !dbg !3476

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdb4c2006d2bda7d7E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self), !dbg !3478
  br label %bb15, !dbg !3478

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"std::alloc::Global"*, !dbg !3479
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h0ae43c3646423906E(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"std::alloc::Global"* nonnull align 1 %_33), !dbg !3480
  br label %bb16, !dbg !3480

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h82d443200786b337E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>") dereferenceable(24) %_27, %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28), !dbg !3480
  br label %bb17, !dbg !3480

bb17:                                             ; preds = %bb16
  %27 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to i64*, !dbg !3480
  %_34 = load i64, i64* %27, align 8, !dbg !3480, !range !230
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ], !dbg !3480

bb19:                                             ; preds = %bb17
  unreachable, !dbg !3480

bb18:                                             ; preds = %bb17
  %28 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"*, !dbg !3480
  %29 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"* %28, i32 0, i32 1, !dbg !3480
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %29, i32 0, i32 0, !dbg !3480
  %val.0 = load i8*, i8** %30, align 8, !dbg !3480, !nonnull !4
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %29, i32 0, i32 1, !dbg !3480
  %val.1 = load i64, i64* %31, align 8, !dbg !3480
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 0, !dbg !3480
  store i8* %val.0, i8** %32, align 8, !dbg !3480
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 1, !dbg !3480
  store i64 %val.1, i64* %33, align 8, !dbg !3480
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill6, metadata !3455, metadata !DIExpression()), !dbg !3481
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !3481
  store i8* %val.0, i8** %34, align 8, !dbg !3481
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !3481
  store i64 %val.1, i64* %35, align 8, !dbg !3481
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3451, metadata !DIExpression()), !dbg !3482
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hd887f89df130dd91E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1), !dbg !3483
  br label %bb22, !dbg !3483

bb20:                                             ; preds = %bb17
  %36 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !3484
  %37 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"* %36, i32 0, i32 1, !dbg !3484
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i32 0, i32 0, !dbg !3484
  %residual.03 = load i64, i64* %38, align 8, !dbg !3484
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i32 0, i32 1, !dbg !3484
  %residual.14 = load i64, i64* %39, align 8, !dbg !3484
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill5, i32 0, i32 0, !dbg !3484
  store i64 %residual.03, i64* %40, align 8, !dbg !3484
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill5, i32 0, i32 1, !dbg !3484
  store i64 %residual.14, i64* %41, align 8, !dbg !3484
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill5, metadata !3453, metadata !DIExpression()), !dbg !3485
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17haaf5fd1809fd2271E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.03, i64 %residual.14), !dbg !3486
  br label %bb21, !dbg !3486

bb21:                                             ; preds = %bb20
  br label %bb23, !dbg !3487

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void, !dbg !3489

bb22:                                             ; preds = %bb18
  %42 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3490
  store i64 0, i64* %42, align 8, !dbg !3490
  br label %bb24, !dbg !3489

bb3:                                              ; preds = %bb2
  %43 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3491
  %44 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %43, i32 0, i32 1, !dbg !3491
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 0, !dbg !3491
  store i64 %_5.0, i64* %45, align 8, !dbg !3491
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 1, !dbg !3491
  store i64 %_5.1, i64* %46, align 8, !dbg !3491
  %47 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !3491
  store i64 1, i64* %47, align 8, !dbg !3491
  br label %bb24, !dbg !3472
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nounwind
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h45a2e0de12086212E"(i64 %capacity) unnamed_addr #0 !dbg !3492 {
start:
  %alloc.dbg.spill = alloca %"std::alloc::Global", align 1
  %capacity.dbg.spill = alloca i64, align 8
  %_4 = alloca i8, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !3496, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"* %alloc.dbg.spill, metadata !3497, metadata !DIExpression()), !dbg !3499
  store i8 0, i8* %_4, align 1, !dbg !3500
  %0 = load i8, i8* %_4, align 1, !dbg !3501, !range !978
  %1 = trunc i8 %0 to i1, !dbg !3501
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h99993d77f2ba1ae7E"(i64 %capacity, i1 zeroext %1), !dbg !3501
  %3 = extractvalue { i64*, i64 } %2, 0, !dbg !3501
  %4 = extractvalue { i64*, i64 } %2, 1, !dbg !3501
  br label %bb1, !dbg !3501

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64 } undef, i64* %3, 0, !dbg !3502
  %6 = insertvalue { i64*, i64 } %5, i64 %4, 1, !dbg !3502
  ret { i64*, i64 } %6, !dbg !3502
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nounwind
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h21f921f6a1851c49E"(i64 %excess) unnamed_addr #1 !dbg !3503 {
start:
  %excess.dbg.spill = alloca i64, align 8
  store i64 %excess, i64* %excess.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %excess.dbg.spill, metadata !3507, metadata !DIExpression()), !dbg !3515
  br label %bb1, !dbg !3516

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 8, 0, !dbg !3517
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !3517
  br i1 %0, label %panic, label %bb2, !dbg !3517

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 8, !dbg !3517
  ret i64 %1, !dbg !3518

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.4 to [0 x i8]*), i64 25, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1888 to %"std::panic::Location"*)), !dbg !3517
  unreachable, !dbg !3517
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nounwind
define i64* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h13132606554e097cE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3519 {
start:
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3523, metadata !DIExpression()), !dbg !3524
  %0 = bitcast { i64*, i64 }* %self to i64**, !dbg !3525
  %_2 = load i64*, i64** %0, align 8, !dbg !3525, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h205c4e675a273432E"(i64* nonnull %_2), !dbg !3525
  br label %bb1, !dbg !3525

bb1:                                              ; preds = %start
  ret i64* %1, !dbg !3526
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nounwind
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he457191606588f61E"() unnamed_addr #1 !dbg !3527 {
start:
  %alloc.dbg.spill = alloca %"std::alloc::Global", align 1
  %0 = alloca { i64*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"* %alloc.dbg.spill, metadata !3531, metadata !DIExpression()), !dbg !3532
; call core::ptr::unique::Unique<T>::dangling
  %_2 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he48c5ab346c0a3a6E"(), !dbg !3533
  br label %bb1, !dbg !3533

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i64 }* %0 to i64**, !dbg !3534
  store i64* %_2, i64** %1, align 8, !dbg !3534
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1, !dbg !3534
  store i64 0, i64* %2, align 8, !dbg !3534
  %3 = bitcast { i64*, i64 }* %0 to %"std::alloc::Global"*, !dbg !3534
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0, !dbg !3535
  %5 = load i64*, i64** %4, align 8, !dbg !3535, !nonnull !4
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1, !dbg !3535
  %7 = load i64, i64* %6, align 8, !dbg !3535
  %8 = insertvalue { i64*, i64 } undef, i64* %5, 0, !dbg !3535
  %9 = insertvalue { i64*, i64 } %8, i64 %7, 1, !dbg !3535
  ret { i64*, i64 } %9, !dbg !3535
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h69745c6adc72171eE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !3536 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3540, metadata !DIExpression()), !dbg !3543
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3541, metadata !DIExpression()), !dbg !3544
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3542, metadata !DIExpression()), !dbg !3545
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hf6862b0aff723ea9E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional), !dbg !3546
  br label %bb1, !dbg !3546

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !3546

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3547

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hbb478000ac5cb532E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional), !dbg !3548
  br label %bb3, !dbg !3548

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3549
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hbb478000ac5cb532E"({ i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !3550 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i64*, i64 }*, align 8
  %_5 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  store { i64*, i64 }* %slf, { i64*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %slf.dbg.spill, metadata !3554, metadata !DIExpression()), !dbg !3557
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3555, metadata !DIExpression()), !dbg !3558
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3556, metadata !DIExpression()), !dbg !3559
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h229ddff007f56f34E"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_5, { i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional), !dbg !3560
  br label %bb1, !dbg !3560

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17hab3947554fe20403E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5), !dbg !3561
  br label %bb2, !dbg !3561

bb2:                                              ; preds = %bb1
  ret void, !dbg !3562
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hd887f89df130dd91E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3563 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3567, metadata !DIExpression()), !dbg !3569
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !3568, metadata !DIExpression()), !dbg !3570
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he238f352c767a682E"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !3571
  br label %bb1, !dbg !3571

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %_5), !dbg !3571
  br label %bb2, !dbg !3571

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbe85731dd4f93460E"(i64* %_4), !dbg !3572
  br label %bb3, !dbg !3572

bb3:                                              ; preds = %bb2
  %2 = bitcast { i64*, i64 }* %self to i64**, !dbg !3573
  store i64* %_3, i64** %2, align 8, !dbg !3573
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h697dd1e73004a5a0E"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !3574
  br label %bb4, !dbg !3574

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h21f921f6a1851c49E"(i64 %_8), !dbg !3575
  br label %bb5, !dbg !3575

bb5:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !3576
  store i64 %_7, i64* %3, align 8, !dbg !3576
  ret void, !dbg !3577
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h63785f047cdcae07E"(i64* nonnull %self.0, i64* %self.1) unnamed_addr #0 !dbg !3578 {
start:
  %self.dbg.spill = alloca { i64*, i64* }, align 8
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64* %self.0, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %1, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill, metadata !3585, metadata !DIExpression()), !dbg !3586
  %2 = insertvalue { i64*, i64* } undef, i64* %self.0, 0, !dbg !3587
  %3 = insertvalue { i64*, i64* } %2, i64* %self.1, 1, !dbg !3587
  ret { i64*, i64* } %3, !dbg !3587
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbb24107ab6b8587dE"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !3588 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !3592, metadata !DIExpression()), !dbg !3594
  %2 = insertvalue { i64, i64 } undef, i64 %self.0, 0, !dbg !3595
  %3 = insertvalue { i64, i64 } %2, i64 %self.1, 1, !dbg !3595
  ret { i64, i64 } %3, !dbg !3595
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc37f2d173a4bfddfE"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !3596 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !3600, metadata !DIExpression()), !dbg !3602
  %2 = insertvalue { i64, i64 } undef, i64 %self.0, 0, !dbg !3603
  %3 = insertvalue { i64, i64 } %2, i64 %self.1, 1, !dbg !3603
  ret { i64, i64 } %3, !dbg !3603
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcf5e199d13ae9153E"(%"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture sret(%"std::iter::Enumerate<std::slice::Iter<usize>>") dereferenceable(24) %0, %"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3604 {
start:
  call void @llvm.dbg.declare(metadata %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self, metadata !3608, metadata !DIExpression()), !dbg !3611
  %1 = bitcast %"std::iter::Enumerate<std::slice::Iter<usize>>"* %0 to i8*, !dbg !3612
  %2 = bitcast %"std::iter::Enumerate<std::slice::Iter<usize>>"* %self to i8*, !dbg !3612
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !3612
  ret void, !dbg !3613
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nounwind
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hf78e0a3850d2b29bE"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !3614 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3619, metadata !DIExpression()), !dbg !3622
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3620, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3621, metadata !DIExpression()), !dbg !3624
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h09575e2345050632E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !3625
  br label %bb1, !dbg !3625

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0, !dbg !3625
  br i1 %4, label %bb5, label %bb2, !dbg !3625

bb5:                                              ; preds = %bb1
  br label %bb6, !dbg !3626

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E"(i8* nonnull %ptr), !dbg !3627
  br label %bb3, !dbg !3627

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3628
  %_8.0 = load i64, i64* %5, align 8, !dbg !3628
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3628
  %_8.1 = load i64, i64* %6, align 8, !dbg !3628, !range !1146
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h6444f098979c6df9E(i8* %_6, i64 %_8.0, i64 %_8.1), !dbg !3629
  br label %bb4, !dbg !3629

bb4:                                              ; preds = %bb3
  br label %bb6, !dbg !3626

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !3630
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hccc846e98126c2fbE"(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !3631 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3635, metadata !DIExpression()), !dbg !3637
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3636, metadata !DIExpression()), !dbg !3638
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc7de76357b8031baE(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !3639
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3639
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3639
  br label %bb1, !dbg !3639

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3640
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3640
  ret { i8*, i64 } %6, !dbg !3640
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h6dd4a3efa918fe77E"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !3641 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3645, metadata !DIExpression()), !dbg !3649
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3646, metadata !DIExpression()), !dbg !3650
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !3647, metadata !DIExpression()), !dbg !3651
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3648, metadata !DIExpression()), !dbg !3652
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hd0a0dbb0f0af1254E(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !3653
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !3653
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !3653
  br label %bb1, !dbg !3653

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !3654
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !3654
  ret { i8*, i64 } %8, !dbg !3654
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8fbc4f21de7f507dE"(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !3655 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3657, metadata !DIExpression()), !dbg !3659
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3658, metadata !DIExpression()), !dbg !3660
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hc7de76357b8031baE(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !3661
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3661
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3661
  br label %bb1, !dbg !3661

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3662
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3662
  ret { i8*, i64 } %6, !dbg !3662
}

; <alloc::vec::Vec<T,A> as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h988cd1f8f8335c60E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3663 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !3668, metadata !DIExpression()), !dbg !3670
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !3669, metadata !DIExpression()), !dbg !3671
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i64]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h46cbd80f125d07adE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !3672
  %_5.0 = extractvalue { [0 x i64]*, i64 } %0, 0, !dbg !3672
  %_5.1 = extractvalue { [0 x i64]*, i64 } %0, 1, !dbg !3672
  br label %bb1, !dbg !3672

bb1:                                              ; preds = %start
; call <[T] as core::fmt::Debug>::fmt
  %1 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hca135c73f9bafa40E"([0 x i64]* nonnull align 8 %_5.0, i64 %_5.1, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !3673
  br label %bb2, !dbg !3673

bb2:                                              ; preds = %bb1
  ret i1 %1, !dbg !3674
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17ha1a3819df367fc22E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3675 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3678, metadata !DIExpression()), !dbg !3679
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !3679
  %1 = load i64, i64* %0, align 8, !dbg !3679
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3679
  %3 = load i64, i64* %2, align 8, !dbg !3679, !range !1146
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !3680
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !3680
  ret { i64, i64 } %5, !dbg !3680
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc777ebcdf3ffdf11E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !3681 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !3686, metadata !DIExpression()), !dbg !3687
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !3688
  br label %bb1, !dbg !3688

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !3689
  %_5 = load i64, i64* %0, align 8, !dbg !3689
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i64]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h85f2168ac0038682E(i64* %_3, i64 %_5), !dbg !3690
  %_2.0 = extractvalue { [0 x i64]*, i64 } %1, 0, !dbg !3690
  %_2.1 = extractvalue { [0 x i64]*, i64 } %1, 1, !dbg !3690
  br label %bb2, !dbg !3690

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !3691

bb3:                                              ; preds = %bb2
  ret void, !dbg !3692
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nounwind
define { [0 x i64]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h46cbd80f125d07adE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !3693 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !3698, metadata !DIExpression()), !dbg !3699
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h394133c042df92d0E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !3700
  br label %bb1, !dbg !3700

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !3701
  %_4 = load i64, i64* %0, align 8, !dbg !3701
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x i64]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hd104ccfc67221c9cE(i64* %_2, i64 %_4), !dbg !3702
  %2 = extractvalue { [0 x i64]*, i64 } %1, 0, !dbg !3702
  %3 = extractvalue { [0 x i64]*, i64 } %1, 1, !dbg !3702
  br label %bb2, !dbg !3702

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %2, 0, !dbg !3703
  %5 = insertvalue { [0 x i64]*, i64 } %4, i64 %3, 1, !dbg !3703
  ret { [0 x i64]*, i64 } %5, !dbg !3703
}

; <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nounwind
define { [0 x i64]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h850991fc5bbc9917E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !3704 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !3709, metadata !DIExpression()), !dbg !3710
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_5 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !3711
  br label %bb1, !dbg !3711

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !3712
  %_7 = load i64, i64* %0, align 8, !dbg !3712
; call core::slice::raw::from_raw_parts_mut
  %1 = call { [0 x i64]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h49db427d64a54585E(i64* %_5, i64 %_7), !dbg !3713
  %_4.0 = extractvalue { [0 x i64]*, i64 } %1, 0, !dbg !3713
  %_4.1 = extractvalue { [0 x i64]*, i64 } %1, 1, !dbg !3713
  br label %bb2, !dbg !3713

bb2:                                              ; preds = %bb1
  %2 = insertvalue { [0 x i64]*, i64 } undef, [0 x i64]* %_4.0, 0, !dbg !3714
  %3 = insertvalue { [0 x i64]*, i64 } %2, i64 %_4.1, 1, !dbg !3714
  ret { [0 x i64]*, i64 } %3, !dbg !3714
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h53e0639504ab69baE"(i64* align 8 dereferenceable_or_null(8) %0) unnamed_addr #0 !dbg !3715 {
start:
  %v.dbg.spill = alloca i64*, align 8
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  call void @llvm.dbg.declare(metadata i64** %self, metadata !3747, metadata !DIExpression()), !dbg !3750
  %2 = bitcast i64** %self to {}**, !dbg !3751
  %3 = load {}*, {}** %2, align 8, !dbg !3751
  %4 = icmp eq {}* %3, null, !dbg !3751
  %_2 = select i1 %4, i64 0, i64 1, !dbg !3751
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3752

bb2:                                              ; preds = %start
  unreachable, !dbg !3751

bb1:                                              ; preds = %start
  %5 = bitcast i64** %1 to {}**, !dbg !3753
  store {}* null, {}** %5, align 8, !dbg !3753
  br label %bb4, !dbg !3754

bb3:                                              ; preds = %start
  %v = load i64*, i64** %self, align 8, !dbg !3755, !nonnull !4
  store i64* %v, i64** %v.dbg.spill, align 8, !dbg !3755
  call void @llvm.dbg.declare(metadata i64** %v.dbg.spill, metadata !3748, metadata !DIExpression()), !dbg !3756
  store i64* %v, i64** %1, align 8, !dbg !3757
  br label %bb4, !dbg !3758

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i64*, i64** %1, align 8, !dbg !3759
  ret i64* %6, !dbg !3759
}

; <usize as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h54ed96977b058a5cE"(i64 %self, [0 x i64]* nonnull align 8 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !3760 {
start:
  %slice.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3765, metadata !DIExpression()), !dbg !3767
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i64]* %slice.0, [0 x i64]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %slice.dbg.spill, metadata !3766, metadata !DIExpression()), !dbg !3768
  %_5 = icmp ult i64 %self, %slice.1, !dbg !3769
  %3 = call i1 @llvm.expect.i1(i1 %_5, i1 true), !dbg !3769
  br i1 %3, label %bb1, label %panic, !dbg !3769

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds [0 x i64], [0 x i64]* %slice.0, i64 0, i64 %self, !dbg !3770
  ret i64* %4, !dbg !3771

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %self, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !3769
  unreachable, !dbg !3769
}

; <usize as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa1078989bcca205E"(i64 %self, [0 x i64]* nonnull align 8 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !3772 {
start:
  %slice.dbg.spill = alloca { [0 x i64]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3776, metadata !DIExpression()), !dbg !3778
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i64]* %slice.0, [0 x i64]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i64]*, i64 }* %slice.dbg.spill, metadata !3777, metadata !DIExpression()), !dbg !3779
  %_7 = icmp ult i64 %self, %slice.1, !dbg !3780
  %3 = call i1 @llvm.expect.i1(i1 %_7, i1 true), !dbg !3780
  br i1 %3, label %bb1, label %panic, !dbg !3780

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds [0 x i64], [0 x i64]* %slice.0, i64 0, i64 %self, !dbg !3781
  ret i64* %_4, !dbg !3782

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %self, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !3780
  unreachable, !dbg !3780
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h110a0acc4e3d2603E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !3783 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !3788, metadata !DIExpression()), !dbg !3792
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdb4c2006d2bda7d7E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self), !dbg !3793
  br label %bb1, !dbg !3793

bb1:                                              ; preds = %start
  %0 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to {}**, !dbg !3794
  %1 = load {}*, {}** %0, align 8, !dbg !3794
  %2 = icmp eq {}* %1, null, !dbg !3794
  %_4 = select i1 %2, i64 0, i64 1, !dbg !3794
  %3 = icmp eq i64 %_4, 1, !dbg !3794
  br i1 %3, label %bb2, label %bb4, !dbg !3794

bb2:                                              ; preds = %bb1
  %4 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3795
  %5 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !3795
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !3795
  %ptr = load i8*, i8** %6, align 8, !dbg !3795, !nonnull !4
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3795
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3789, metadata !DIExpression()), !dbg !3796
  %7 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !3797
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !3797
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !3797
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3797
  %layout.0 = load i64, i64* %10, align 8, !dbg !3797
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3797
  %layout.1 = load i64, i64* %11, align 8, !dbg !3797, !range !1146
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3797
  store i64 %layout.0, i64* %12, align 8, !dbg !3797
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3797
  store i64 %layout.1, i64* %13, align 8, !dbg !3797
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3791, metadata !DIExpression()), !dbg !3798
  %_7 = bitcast { i64*, i64 }* %self to %"std::alloc::Global"*, !dbg !3799
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hf78e0a3850d2b29bE"(%"std::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1), !dbg !3799
  br label %bb3, !dbg !3799

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3800

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3801
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hf2e09b6bf199bed4E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3802 {
start:
  %__self_1.dbg.spill = alloca {}*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3808, metadata !DIExpression()), !dbg !3812
  %1 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3812
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8, !dbg !3812
  %2 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3812
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !dbg !3812, !nonnull !4
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3812
  %5 = load i64, i64* %4, align 8, !dbg !3812
  %6 = icmp eq i64 %5, 0, !dbg !3812
  %_4 = select i1 %6, i64 0, i64 1, !dbg !3812
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3812

bb2:                                              ; preds = %start
  unreachable, !dbg !3812

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3812
  store i64 0, i64* %7, align 8, !dbg !3812
  br label %bb6, !dbg !3812

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3813
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !dbg !3813, !nonnull !4
  store { i64, i64 }* %__self_0, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !3813
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !3809, metadata !DIExpression()), !dbg !3814
  %9 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3815
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !dbg !3815, !nonnull !4
  %__self_1 = bitcast { i64, i64 }* %10 to {}*, !dbg !3815
  store {}* %__self_1, {}** %__self_1.dbg.spill, align 8, !dbg !3815
  call void @llvm.dbg.declare(metadata {}** %__self_1.dbg.spill, metadata !3811, metadata !DIExpression()), !dbg !3816
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17ha1a3819df367fc22E"({ i64, i64 }* align 8 dereferenceable(16) %__self_0), !dbg !3814
  %_7.0 = extractvalue { i64, i64 } %11, 0, !dbg !3814
  %_7.1 = extractvalue { i64, i64 } %11, 1, !dbg !3814
  br label %bb4, !dbg !3814

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17hcabb893763a9aadfE({}* nonnull align 1 %__self_1), !dbg !3816
  br label %bb5, !dbg !3816

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3817
  store i64 %_7.0, i64* %12, align 8, !dbg !3817
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3817
  store i64 %_7.1, i64* %13, align 8, !dbg !3817
  br label %bb6, !dbg !3818

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3819
  %15 = load i64, i64* %14, align 8, !dbg !3819
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3819
  %17 = load i64, i64* %16, align 8, !dbg !3819
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !3819
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !3819
  ret { i64, i64 } %19, !dbg !3819
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h065c552dba6da9e3E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>") dereferenceable(24) %0, %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3820 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %v = alloca { { i64, i64 }, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self, metadata !3841, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.declare(metadata { { i64, i64 }, i64 }* %v, metadata !3842, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !3844, metadata !DIExpression()), !dbg !3848
  %1 = getelementptr inbounds %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self, i32 0, i32 1, !dbg !3849
  %2 = load i64, i64* %1, align 8, !dbg !3849
  %3 = icmp eq i64 %2, 0, !dbg !3849
  %_2 = select i1 %3, i64 1, i64 0, !dbg !3849
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3850

bb2:                                              ; preds = %start
  unreachable, !dbg !3849

bb3:                                              ; preds = %start
  %4 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"*, !dbg !3851
  %5 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"* %4 to { { i64, i64 }, i64 }*, !dbg !3851
  %6 = bitcast { { i64, i64 }, i64 }* %v to i8*, !dbg !3851
  %7 = bitcast { { i64, i64 }, i64 }* %5 to i8*, !dbg !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !3851
  %8 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !3852
  %9 = bitcast { { i64, i64 }, i64 }* %v to i8*, !dbg !3852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !3852
  %10 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"*, !dbg !3853
  %11 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"* %10 to { { i64, i64 }, i64 }*, !dbg !3853
  %12 = bitcast { { i64, i64 }, i64 }* %11 to i8*, !dbg !3853
  %13 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !3853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3853
  br label %bb4, !dbg !3854

bb1:                                              ; preds = %start
  %14 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %_6 to %"std::alloc::LayoutError"*, !dbg !3855
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break"*, !dbg !3856
  %16 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break"* %15 to %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"*, !dbg !3856
  %17 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0, i32 0, i32 1, !dbg !3856
  store i64 0, i64* %17, align 8, !dbg !3856
  br label %bb4, !dbg !3857

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3858
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0cdc81fb95297d26E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>") dereferenceable(24) %0, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3859 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %self, metadata !3878, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !3879, metadata !DIExpression()), !dbg !3884
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to i64*, !dbg !3885
  %_2 = load i64, i64* %1, align 8, !dbg !3885, !range !230
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3886

bb2:                                              ; preds = %start
  unreachable, !dbg !3885

bb3:                                              ; preds = %start
  %2 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue"*, !dbg !3887
  %3 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1, !dbg !3887
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to i64*, !dbg !3887
  store i64 0, i64* %4, align 8, !dbg !3887
  br label %bb4, !dbg !3888

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3889
  %6 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %5, i32 0, i32 1, !dbg !3889
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !3889
  %e.0 = load i64, i64* %7, align 8, !dbg !3889
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !3889
  %e.1 = load i64, i64* %8, align 8, !dbg !3889
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3889
  store i64 %e.0, i64* %9, align 8, !dbg !3889
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3889
  store i64 %e.1, i64* %10, align 8, !dbg !3889
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3881, metadata !DIExpression()), !dbg !3890
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3891
  store i64 %e.0, i64* %11, align 8, !dbg !3891
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3891
  store i64 %e.1, i64* %12, align 8, !dbg !3891
  %13 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"*, !dbg !3892
  %14 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"* %13, i32 0, i32 1, !dbg !3892
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3892
  %16 = load i64, i64* %15, align 8, !dbg !3892
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3892
  %18 = load i64, i64* %17, align 8, !dbg !3892
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3892
  store i64 %16, i64* %19, align 8, !dbg !3892
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3892
  store i64 %18, i64* %20, align 8, !dbg !3892
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to i64*, !dbg !3892
  store i64 1, i64* %21, align 8, !dbg !3892
  br label %bb4, !dbg !3893

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3894
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3ecc933418ec8cf1E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3895 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !3913, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !3916, metadata !DIExpression()), !dbg !3919
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !3920
  %_2 = load i64, i64* %5, align 8, !dbg !3920, !range !230
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3921

bb2:                                              ; preds = %start
  unreachable, !dbg !3920

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"std::result::Result<usize, std::alloc::LayoutError>::Ok"*, !dbg !3922
  %7 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Ok", %"std::result::Result<usize, std::alloc::LayoutError>::Ok"* %6, i32 0, i32 1, !dbg !3922
  %v = load i64, i64* %7, align 8, !dbg !3922
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3922
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3914, metadata !DIExpression()), !dbg !3923
  %8 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"*, !dbg !3924
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"* %8, i32 0, i32 1, !dbg !3924
  store i64 %v, i64* %9, align 8, !dbg !3924
  %10 = bitcast { i64, i64 }* %2 to i64*, !dbg !3924
  store i64 0, i64* %10, align 8, !dbg !3924
  br label %bb4, !dbg !3925

bb1:                                              ; preds = %start
  %11 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %_6 to %"std::alloc::LayoutError"*, !dbg !3926
  %12 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break"*, !dbg !3927
  %13 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break"* %12, i32 0, i32 1, !dbg !3927
  %14 = bitcast { i64, i64 }* %2 to i64*, !dbg !3927
  store i64 1, i64* %14, align 8, !dbg !3927
  br label %bb4, !dbg !3928

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3929
  %16 = load i64, i64* %15, align 8, !dbg !3929, !range !230
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3929
  %18 = load i64, i64* %17, align 8, !dbg !3929
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0, !dbg !3929
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !3929
  ret { i64, i64 } %20, !dbg !3929
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h67ec81356394838eE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>") dereferenceable(24) %0, %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3930 {
start:
  %v.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self, metadata !3949, metadata !DIExpression()), !dbg !3954
  %1 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3955
  %_2 = load i64, i64* %1, align 8, !dbg !3955, !range !230
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3956

bb2:                                              ; preds = %start
  unreachable, !dbg !3955

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"*, !dbg !3957
  %3 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !3957
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !3957
  %v.0 = load i64, i64* %4, align 8, !dbg !3957
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3957
  %v.1 = load i64, i64* %5, align 8, !dbg !3957, !range !1146
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3957
  store i64 %v.0, i64* %6, align 8, !dbg !3957
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3957
  store i64 %v.1, i64* %7, align 8, !dbg !3957
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill, metadata !3950, metadata !DIExpression()), !dbg !3958
  %8 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"*, !dbg !3959
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"* %8, i32 0, i32 1, !dbg !3959
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3959
  store i64 %v.0, i64* %10, align 8, !dbg !3959
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3959
  store i64 %v.1, i64* %11, align 8, !dbg !3959
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to i64*, !dbg !3959
  store i64 0, i64* %12, align 8, !dbg !3959
  br label %bb4, !dbg !3960

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"*, !dbg !3961
  %14 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"* %13, i32 0, i32 1, !dbg !3961
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3961
  %e.0 = load i64, i64* %15, align 8, !dbg !3961
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3961
  %e.1 = load i64, i64* %16, align 8, !dbg !3961
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3961
  store i64 %e.0, i64* %17, align 8, !dbg !3961
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3961
  store i64 %e.1, i64* %18, align 8, !dbg !3961
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3952, metadata !DIExpression()), !dbg !3962
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3963
  store i64 %e.0, i64* %19, align 8, !dbg !3963
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3963
  store i64 %e.1, i64* %20, align 8, !dbg !3963
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"*, !dbg !3964
  %22 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"* %21, i32 0, i32 1, !dbg !3964
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3964
  %24 = load i64, i64* %23, align 8, !dbg !3964
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3964
  %26 = load i64, i64* %25, align 8, !dbg !3964
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !3964
  store i64 %24, i64* %27, align 8, !dbg !3964
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !3964
  store i64 %26, i64* %28, align 8, !dbg !3964
  %29 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to i64*, !dbg !3964
  store i64 1, i64* %29, align 8, !dbg !3964
  br label %bb4, !dbg !3965

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3966
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h82d443200786b337E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>") dereferenceable(24) %0, %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3967 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self, metadata !3985, metadata !DIExpression()), !dbg !3990
  %1 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to i64*, !dbg !3991
  %_2 = load i64, i64* %1, align 8, !dbg !3991, !range !230
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3992

bb2:                                              ; preds = %start
  unreachable, !dbg !3991

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"*, !dbg !3993
  %3 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"* %2, i32 0, i32 1, !dbg !3993
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3993
  %v.0 = load i8*, i8** %4, align 8, !dbg !3993, !nonnull !4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3993
  %v.1 = load i64, i64* %5, align 8, !dbg !3993
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3993
  store i8* %v.0, i8** %6, align 8, !dbg !3993
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3993
  store i64 %v.1, i64* %7, align 8, !dbg !3993
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !3986, metadata !DIExpression()), !dbg !3994
  %8 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"*, !dbg !3995
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"* %8, i32 0, i32 1, !dbg !3995
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !3995
  store i8* %v.0, i8** %10, align 8, !dbg !3995
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !3995
  store i64 %v.1, i64* %11, align 8, !dbg !3995
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to i64*, !dbg !3995
  store i64 0, i64* %12, align 8, !dbg !3995
  br label %bb4, !dbg !3996

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !3997
  %14 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %13, i32 0, i32 1, !dbg !3997
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3997
  %e.0 = load i64, i64* %15, align 8, !dbg !3997
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3997
  %e.1 = load i64, i64* %16, align 8, !dbg !3997
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3997
  store i64 %e.0, i64* %17, align 8, !dbg !3997
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3997
  store i64 %e.1, i64* %18, align 8, !dbg !3997
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3988, metadata !DIExpression()), !dbg !3998
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3999
  store i64 %e.0, i64* %19, align 8, !dbg !3999
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3999
  store i64 %e.1, i64* %20, align 8, !dbg !3999
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !4000
  %22 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"* %21, i32 0, i32 1, !dbg !4000
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4000
  %24 = load i64, i64* %23, align 8, !dbg !4000
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4000
  %26 = load i64, i64* %25, align 8, !dbg !4000
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !4000
  store i64 %24, i64* %27, align 8, !dbg !4000
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !4000
  store i64 %26, i64* %28, align 8, !dbg !4000
  %29 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to i64*, !dbg !4000
  store i64 1, i64* %29, align 8, !dbg !4000
  br label %bb4, !dbg !4001

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !4002
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd052563c46ed1ac7E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !4003 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self, metadata !4020, metadata !DIExpression()), !dbg !4025
  %1 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to i64*, !dbg !4026
  %_2 = load i64, i64* %1, align 8, !dbg !4026, !range !230
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4027

bb2:                                              ; preds = %start
  unreachable, !dbg !4026

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"*, !dbg !4028
  %3 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !4028
  %v = load i64, i64* %3, align 8, !dbg !4028
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !4028
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !4021, metadata !DIExpression()), !dbg !4029
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4030
  %5 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1, !dbg !4030
  store i64 %v, i64* %5, align 8, !dbg !4030
  %6 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to i64*, !dbg !4030
  store i64 0, i64* %6, align 8, !dbg !4030
  br label %bb4, !dbg !4031

bb1:                                              ; preds = %start
  %7 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"*, !dbg !4032
  %8 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1, !dbg !4032
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0, !dbg !4032
  %e.0 = load i64, i64* %9, align 8, !dbg !4032
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1, !dbg !4032
  %e.1 = load i64, i64* %10, align 8, !dbg !4032
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4032
  store i64 %e.0, i64* %11, align 8, !dbg !4032
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4032
  store i64 %e.1, i64* %12, align 8, !dbg !4032
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4023, metadata !DIExpression()), !dbg !4033
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4034
  store i64 %e.0, i64* %13, align 8, !dbg !4034
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4034
  store i64 %e.1, i64* %14, align 8, !dbg !4034
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4035
  %16 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"* %15, i32 0, i32 1, !dbg !4035
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4035
  %18 = load i64, i64* %17, align 8, !dbg !4035
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4035
  %20 = load i64, i64* %19, align 8, !dbg !4035
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !4035
  store i64 %18, i64* %21, align 8, !dbg !4035
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !4035
  store i64 %20, i64* %22, align 8, !dbg !4035
  %23 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to i64*, !dbg !4035
  store i64 1, i64* %23, align 8, !dbg !4035
  br label %bb4, !dbg !4036

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !4037
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he12c8b5904f92314E"(i8* %0, i64 %1) unnamed_addr #0 !dbg !4038 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !4056, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !4059, metadata !DIExpression()), !dbg !4062
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !4063
  %6 = load {}*, {}** %5, align 8, !dbg !4063
  %7 = icmp eq {}* %6, null, !dbg !4063
  %_2 = select i1 %7, i64 1, i64 0, !dbg !4063
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4064

bb2:                                              ; preds = %start
  unreachable, !dbg !4063

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !4065
  %v.0 = load i8*, i8** %8, align 8, !dbg !4065, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !4065
  %v.1 = load i64, i64* %9, align 8, !dbg !4065
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !4065
  store i8* %v.0, i8** %10, align 8, !dbg !4065
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !4065
  store i64 %v.1, i64* %11, align 8, !dbg !4065
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !4057, metadata !DIExpression()), !dbg !4066
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !4067
  store i8* %v.0, i8** %12, align 8, !dbg !4067
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !4067
  store i64 %v.1, i64* %13, align 8, !dbg !4067
  br label %bb4, !dbg !4068

bb1:                                              ; preds = %start
  %14 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %_6 to %"std::alloc::AllocError"*, !dbg !4069
  %15 = bitcast { i8*, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !4070
  %16 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break"* %15 to %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"*, !dbg !4070
  %17 = bitcast { i8*, i64 }* %2 to {}**, !dbg !4070
  store {}* null, {}** %17, align 8, !dbg !4070
  br label %bb4, !dbg !4071

bb4:                                              ; preds = %bb3, %bb1
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !4072
  %19 = load i8*, i8** %18, align 8, !dbg !4072
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !4072
  %21 = load i64, i64* %20, align 8, !dbg !4072
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0, !dbg !4072
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1, !dbg !4072
  ret { i8*, i64 } %23, !dbg !4072
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6eef7ca3949bd8aE"(i8* %0) unnamed_addr #0 !dbg !4073 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !4091, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !4094, metadata !DIExpression()), !dbg !4097
  %2 = bitcast i8** %self to {}**, !dbg !4098
  %3 = load {}*, {}** %2, align 8, !dbg !4098
  %4 = icmp eq {}* %3, null, !dbg !4098
  %_2 = select i1 %4, i64 1, i64 0, !dbg !4098
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4099

bb2:                                              ; preds = %start
  unreachable, !dbg !4098

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !4100, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !4100
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !4092, metadata !DIExpression()), !dbg !4101
  store i8* %v, i8** %1, align 8, !dbg !4102
  br label %bb4, !dbg !4103

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %_6 to %"std::alloc::AllocError"*, !dbg !4104
  %6 = bitcast i8** %1 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break"*, !dbg !4105
  %7 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break"* %6 to %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"*, !dbg !4105
  %8 = bitcast i8** %1 to {}**, !dbg !4105
  store {}* null, {}** %8, align 8, !dbg !4105
  br label %bb4, !dbg !4106

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8, !dbg !4107
  ret i8* %9, !dbg !4107
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h86fdf4e92a23c4c2E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !4108 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !4113, metadata !DIExpression()), !dbg !4116
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !4114, metadata !DIExpression()), !dbg !4117
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { [0 x i64]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h46cbd80f125d07adE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !4118
  %_5.0 = extractvalue { [0 x i64]*, i64 } %1, 0, !dbg !4118
  %_5.1 = extractvalue { [0 x i64]*, i64 } %1, 1, !dbg !4118
  br label %bb1, !dbg !4118

bb1:                                              ; preds = %start
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %2 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h70c27a217761ca50E"([0 x i64]* nonnull align 8 %_5.0, i64 %_5.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !4119
  br label %bb2, !dbg !4119

bb2:                                              ; preds = %bb1
  ret i64* %2, !dbg !4120
}

; <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nounwind
define internal void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha5f8fbfab3675821E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !4121 {
start:
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !4126, metadata !DIExpression()), !dbg !4127
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !4128
  %_2 = load i64, i64* %0, align 8, !dbg !4128
  %1 = bitcast { i64*, i64 }* %self to i64**, !dbg !4129
  %2 = load i64*, i64** %1, align 8, !dbg !4129, !nonnull !4
  store i64 %_2, i64* %2, align 8, !dbg !4129
  ret void, !dbg !4130
}

; <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17h50fbdcb1a730885fE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !4131 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !4136, metadata !DIExpression()), !dbg !4138
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !4137, metadata !DIExpression()), !dbg !4139
; call <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %1 = call { [0 x i64]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h850991fc5bbc9917E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !4140
  %_7.0 = extractvalue { [0 x i64]*, i64 } %1, 0, !dbg !4140
  %_7.1 = extractvalue { [0 x i64]*, i64 } %1, 1, !dbg !4140
  br label %bb1, !dbg !4140

bb1:                                              ; preds = %start
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %_4 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf1735b20386b3284E"([0 x i64]* nonnull align 8 %_7.0, i64 %_7.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !4141
  br label %bb2, !dbg !4141

bb2:                                              ; preds = %bb1
  ret i64* %_4, !dbg !4142
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define { i64, i64* } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hbb5d4cabaf1a504dE"() unnamed_addr #0 !dbg !4143 {
start:
  %residual.dbg.spill = alloca %"std::option::Option<std::convert::Infallible>::None", align 1
  %0 = alloca { i64, i64* }, align 8
  call void @llvm.dbg.declare(metadata %"std::option::Option<std::convert::Infallible>::None"* %residual.dbg.spill, metadata !4148, metadata !DIExpression()), !dbg !4149
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !4150
  %2 = bitcast i64** %1 to {}**, !dbg !4150
  store {}* null, {}** %2, align 8, !dbg !4150
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !4151
  %4 = load i64, i64* %3, align 8, !dbg !4151
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !4151
  %6 = load i64*, i64** %5, align 8, !dbg !4151
  %7 = insertvalue { i64, i64* } undef, i64 %4, 0, !dbg !4151
  %8 = insertvalue { i64, i64* } %7, i64* %6, 1, !dbg !4151
  ret { i64, i64* } %8, !dbg !4151
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h12317ff84a91bd31E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !4152 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4155, metadata !DIExpression()), !dbg !4156
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !4157
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !4158
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h6ae0d9c40d77ba84E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4), !dbg !4157
  br label %bb1, !dbg !4157

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !4157

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !4159
  store i64 0, i64* %1, align 8, !dbg !4159
  br label %bb7, !dbg !4160

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !4161
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2ba7a48a75249146E"(i64* align 8 dereferenceable(8) %_7), !dbg !4161
  br label %bb3, !dbg !4161

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17he9d3b7f063022099E"(i64 %_6, i64 1), !dbg !4162
  br label %bb4, !dbg !4162

bb4:                                              ; preds = %bb3
  br label %bb8, !dbg !4163

bb8:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !4163
  store i64 %_5, i64* %2, align 8, !dbg !4163
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !4164
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2ba7a48a75249146E"(i64* align 8 dereferenceable(8) %_9), !dbg !4164
  br label %bb5, !dbg !4164

bb5:                                              ; preds = %bb8
  %3 = bitcast { i64, i64 }* %0 to %"std::option::Option<usize>::Some"*, !dbg !4165
  %4 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %3, i32 0, i32 1, !dbg !4165
  store i64 %_8, i64* %4, align 8, !dbg !4165
  %5 = bitcast { i64, i64 }* %0 to i64*, !dbg !4165
  store i64 1, i64* %5, align 8, !dbg !4165
  br label %bb7, !dbg !4160

bb7:                                              ; preds = %bb6, %bb5
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4166
  %7 = load i64, i64* %6, align 8, !dbg !4166, !range !230
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4166
  %9 = load i64, i64* %8, align 8, !dbg !4166
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0, !dbg !4166
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !4166
  ret { i64, i64 } %11, !dbg !4166
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd3bca098422bb437E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !4167 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4169, metadata !DIExpression()), !dbg !4172
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !4173
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !4174
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h6ae0d9c40d77ba84E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4), !dbg !4173
  br label %bb1, !dbg !4173

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !4173

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !4175
  store i64 0, i64* %1, align 8, !dbg !4175
  br label %bb7, !dbg !4176

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !4177
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2ba7a48a75249146E"(i64* align 8 dereferenceable(8) %_7), !dbg !4177
  br label %bb3, !dbg !4177

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h5d754a3b500a5147E"(i64 %_6, i64 1), !dbg !4178
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !4178
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4170, metadata !DIExpression()), !dbg !4179
  br label %bb4, !dbg !4178

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !4180
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17hf0f2ad2ef3fbe0a5E(i64* align 8 dereferenceable(8) %_10, i64 %n), !dbg !4181
  br label %bb5, !dbg !4181

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"std::option::Option<usize>::Some"*, !dbg !4182
  %3 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %2, i32 0, i32 1, !dbg !4182
  store i64 %_8, i64* %3, align 8, !dbg !4182
  %4 = bitcast { i64, i64 }* %0 to i64*, !dbg !4182
  store i64 1, i64* %4, align 8, !dbg !4182
  br label %bb7, !dbg !4176

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4183
  %6 = load i64, i64* %5, align 8, !dbg !4183, !range !230
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4183
  %8 = load i64, i64* %7, align 8, !dbg !4183
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !4183
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !4183
  ret { i64, i64 } %10, !dbg !4183
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable_or_null(8) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb7a26fabf560e407E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !4184 {
start:
  %0 = alloca i64*, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca i64*, align 8
  %old.dbg.spill.i = alloca i64*, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca { i64*, i64* }*, align 8
  %1 = alloca i64*, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %2 = alloca i64*, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !4191, metadata !DIExpression()), !dbg !4192
  %3 = bitcast { i64*, i64* }* %self to i64**, !dbg !4193
  %_6 = load i64*, i64** %3, align 8, !dbg !4193, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %_6), !dbg !4193
  br label %bb1, !dbg !4193

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1b9b0a36be9d5327E"(i64* %_5), !dbg !4193
  br label %bb2, !dbg !4193

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true, !dbg !4194
  call void @llvm.assume(i1 %_3), !dbg !4195
  br label %bb3, !dbg !4195

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !4196

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 8, 0, !dbg !4196
  br i1 %4, label %bb8, label %bb5, !dbg !4196

bb8:                                              ; preds = %bb4
  br label %bb9, !dbg !4197

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !4198
  %_11 = load i64*, i64** %5, align 8, !dbg !4198
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha99b5b7e9bafbc86E"(i64* %_11), !dbg !4198
  br label %bb6, !dbg !4198

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true, !dbg !4199
  call void @llvm.assume(i1 %_9), !dbg !4200
  br label %bb7, !dbg !4200

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !4197

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i64*, i64* }* %self to i64**, !dbg !4201
  %_15 = load i64*, i64** %6, align 8, !dbg !4201, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %_15), !dbg !4201
  br label %bb10, !dbg !4201

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !4201
  %_16 = load i64*, i64** %7, align 8, !dbg !4201
  %_12 = icmp eq i64* %_14, %_16, !dbg !4201
  br i1 %_12, label %bb11, label %bb12, !dbg !4201

bb12:                                             ; preds = %bb10
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill.i, metadata !4202, metadata !DIExpression()) #12, !dbg !4210
  store i64 1, i64* %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill.i, metadata !4207, metadata !DIExpression()) #12, !dbg !4212
  %8 = bitcast { i64*, i64* }* %self to i64**, !dbg !4213
  %_12.i = load i64*, i64** %8, align 8, !dbg !4213, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %_12.i) #12, !dbg !4213
  store i64* %old.i, i64** %old.dbg.spill.i, align 8, !dbg !4213
  call void @llvm.dbg.declare(metadata i64** %old.dbg.spill.i, metadata !4208, metadata !DIExpression()) #12, !dbg !4214
  %9 = bitcast { i64*, i64* }* %self to i64**, !dbg !4215
  %_16.i = load i64*, i64** %9, align 8, !dbg !4215, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E"(i64* nonnull %_16.i) #12, !dbg !4215
  store i64* %_15.i, i64** %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i2.i, metadata !2894, metadata !DIExpression()) #12, !dbg !4216
  store i64 1, i64* %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1.i, metadata !2899, metadata !DIExpression()) #12, !dbg !4218
  %10 = getelementptr inbounds i64, i64* %_15.i, i64 1, !dbg !4219
  store i64* %10, i64** %0, align 8, !dbg !4219
  %_3.i.i = load i64*, i64** %0, align 8, !dbg !4219
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h318bd0df0884951bE"(i64* %_3.i.i) #12, !dbg !4220
  %11 = bitcast { i64*, i64* }* %self to i64**, !dbg !4221
  store i64* %_13.i, i64** %11, align 8, !dbg !4221
  store i64* %old.i, i64** %1, align 8, !dbg !4222
  %12 = load i64*, i64** %1, align 8, !dbg !4223
  br label %bb13, !dbg !4224

bb11:                                             ; preds = %bb10
  %13 = bitcast i64** %2 to {}**, !dbg !4225
  store {}* null, {}** %13, align 8, !dbg !4225
  br label %bb14, !dbg !4226

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i64*, i64** %2, align 8, !dbg !4227
  ret i64* %14, !dbg !4227

bb13:                                             ; preds = %bb12
  store i64* %12, i64** %2, align 8, !dbg !4228
  br label %bb14, !dbg !4226
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nounwind
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h8c5a26dccc21557eE"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %iter.0, i64 %iter.1) unnamed_addr #0 !dbg !4229 {
start:
  %iter.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter.dbg.spill, metadata !4232, metadata !DIExpression()), !dbg !4233
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc37f2d173a4bfddfE"(i64 %iter.0, i64 %iter.1), !dbg !4234
  %_2.0 = extractvalue { i64, i64 } %3, 0, !dbg !4234
  %_2.1 = extractvalue { i64, i64 } %3, 1, !dbg !4234
  br label %bb1, !dbg !4234

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h523f95f18044ec97E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %_2.0, i64 %_2.1), !dbg !4235
  br label %bb2, !dbg !4235

bb2:                                              ; preds = %bb1
  ret void, !dbg !4236
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nounwind
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17he381db13525916a3E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %iter.0, i64 %iter.1) unnamed_addr #0 !dbg !4237 {
start:
  %iter.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter.dbg.spill, metadata !4239, metadata !DIExpression()), !dbg !4240
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbb24107ab6b8587dE"(i64 %iter.0, i64 %iter.1), !dbg !4241
  %_2.0 = extractvalue { i64, i64 } %3, 0, !dbg !4241
  %_2.1 = extractvalue { i64, i64 } %3, 1, !dbg !4241
  br label %bb1, !dbg !4241

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h0032758469ac5cafE"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %_2.0, i64 %_2.1), !dbg !4242
  br label %bb2, !dbg !4242

bb2:                                              ; preds = %bb1
  ret void, !dbg !4243
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nounwind
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h384af5a6d3d098cfE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %0, i64 %1) unnamed_addr #1 !dbg !4244 {
start:
  %2 = alloca i64*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64*, align 8
  %local_len.dbg.spill = alloca { i64*, i64 }, align 8
  %ptr.dbg.spill = alloca i64*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %low.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %_27 = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]", align 8
  %_5 = alloca { i64, { i64, i64 } }, align 8
  %high = alloca { i64, i64 }, align 8
  %iterator = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !4249, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iterator, metadata !4250, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.declare(metadata { i64, i64 }* %high, metadata !4253, metadata !DIExpression()), !dbg !4281
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18fe86b74cb9542cE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_5, { i64, i64 }* align 8 dereferenceable(16) %iterator), !dbg !4282
  br label %bb1, !dbg !4282

bb1:                                              ; preds = %start
  %5 = bitcast { i64, { i64, i64 } }* %_5 to i64*, !dbg !4283
  %low = load i64, i64* %5, align 8, !dbg !4283
  store i64 %low, i64* %low.dbg.spill, align 8, !dbg !4283
  call void @llvm.dbg.declare(metadata i64* %low.dbg.spill, metadata !4251, metadata !DIExpression()), !dbg !4284
  %6 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_5, i32 0, i32 1, !dbg !4285
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !4285
  %8 = load i64, i64* %7, align 8, !dbg !4285, !range !230
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !4285
  %10 = load i64, i64* %9, align 8, !dbg !4285
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %high, i32 0, i32 0, !dbg !4285
  store i64 %8, i64* %11, align 8, !dbg !4285
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %high, i32 0, i32 1, !dbg !4285
  store i64 %10, i64* %12, align 8, !dbg !4285
  %13 = bitcast { i64, i64 }* %high to i64*, !dbg !4286
  %_7 = load i64, i64* %13, align 8, !dbg !4286, !range !230
  %14 = icmp eq i64 %_7, 1, !dbg !4286
  br i1 %14, label %bb2, label %bb9, !dbg !4286

bb2:                                              ; preds = %bb1
  %15 = bitcast { i64, i64 }* %high to %"std::option::Option<usize>::Some"*, !dbg !4287
  %16 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %15, i32 0, i32 1, !dbg !4287
  %additional = load i64, i64* %16, align 8, !dbg !4287
  store i64 %additional, i64* %additional.dbg.spill, align 8, !dbg !4287
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4254, metadata !DIExpression()), !dbg !4288
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h8f7bc660772fd76eE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %additional), !dbg !4289
  br label %bb3, !dbg !4289

bb9:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1892 to [0 x i8]*), i64 17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1891 to %"std::panic::Location"*)), !dbg !4290
  unreachable, !dbg !4290

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_18 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !4291
  br label %bb4, !dbg !4291

bb4:                                              ; preds = %bb3
; call alloc::vec::Vec<T,A>::len
  %_20 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !4292
  br label %bb5, !dbg !4292

bb5:                                              ; preds = %bb4
  store i64* %_18, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !2885, metadata !DIExpression()), !dbg !4293
  store i64 %_20, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2890, metadata !DIExpression()), !dbg !4295
  store i64* %_18, i64** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i.i, metadata !2894, metadata !DIExpression()), !dbg !4296
  store i64 %_20, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2899, metadata !DIExpression()), !dbg !4298
  %17 = getelementptr inbounds i64, i64* %_18, i64 %_20, !dbg !4299
  store i64* %17, i64** %2, align 8, !dbg !4299
  %_3.i.i = load i64*, i64** %2, align 8, !dbg !4299
  store i64* %_3.i.i, i64** %ptr.dbg.spill, align 8, !dbg !4291
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !4274, metadata !DIExpression()), !dbg !4300
  br label %bb6, !dbg !4291

bb6:                                              ; preds = %bb5
  %_24 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !4301
; call alloc::vec::set_len_on_drop::SetLenOnDrop::new
  %18 = call { i64*, i64 } @_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h94b8eb26438d6741E(i64* align 8 dereferenceable(8) %_24), !dbg !4302
  %local_len.0 = extractvalue { i64*, i64 } %18, 0, !dbg !4302
  %local_len.1 = extractvalue { i64*, i64 } %18, 1, !dbg !4302
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len.dbg.spill, i32 0, i32 0, !dbg !4302
  store i64* %local_len.0, i64** %19, align 8, !dbg !4302
  %20 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len.dbg.spill, i32 0, i32 1, !dbg !4302
  store i64 %local_len.1, i64* %20, align 8, !dbg !4302
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %local_len.dbg.spill, metadata !4276, metadata !DIExpression()), !dbg !4303
  br label %bb7, !dbg !4302

bb7:                                              ; preds = %bb6
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0, !dbg !4304
  %_26.0 = load i64, i64* %21, align 8, !dbg !4304
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1, !dbg !4304
  %_26.1 = load i64, i64* %22, align 8, !dbg !4304
  %23 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_27 to i64**, !dbg !4305
  store i64* %_3.i.i, i64** %23, align 8, !dbg !4305
  %24 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_27, i32 0, i32 1, !dbg !4305
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %24, i32 0, i32 0, !dbg !4305
  store i64* %local_len.0, i64** %25, align 8, !dbg !4305
  %26 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %24, i32 0, i32 1, !dbg !4305
  store i64 %local_len.1, i64* %26, align 8, !dbg !4305
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h26800b288d2fb69dE(i64 %_26.0, i64 %_26.1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %_27), !dbg !4304
  br label %bb8, !dbg !4304

bb8:                                              ; preds = %bb7
  ret void, !dbg !4306
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nounwind
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hc93b117c5de546beE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %0, i64 %1) unnamed_addr #1 !dbg !4307 {
start:
  %2 = alloca i64*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64*, align 8
  %local_len.dbg.spill = alloca { i64*, i64 }, align 8
  %ptr.dbg.spill = alloca i64*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %low.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %_27 = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]", align 8
  %_5 = alloca { i64, { i64, i64 } }, align 8
  %high = alloca { i64, i64 }, align 8
  %iterator = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::vec::Vec<usize>"* %self, %"std::vec::Vec<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %self.dbg.spill, metadata !4311, metadata !DIExpression()), !dbg !4336
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iterator, metadata !4312, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.declare(metadata { i64, i64 }* %high, metadata !4315, metadata !DIExpression()), !dbg !4338
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
  call void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17hdd5a7ccf0a5ee504E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_5, { i64, i64 }* align 8 dereferenceable(16) %iterator), !dbg !4339
  br label %bb1, !dbg !4339

bb1:                                              ; preds = %start
  %5 = bitcast { i64, { i64, i64 } }* %_5 to i64*, !dbg !4340
  %low = load i64, i64* %5, align 8, !dbg !4340
  store i64 %low, i64* %low.dbg.spill, align 8, !dbg !4340
  call void @llvm.dbg.declare(metadata i64* %low.dbg.spill, metadata !4313, metadata !DIExpression()), !dbg !4341
  %6 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_5, i32 0, i32 1, !dbg !4342
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !4342
  %8 = load i64, i64* %7, align 8, !dbg !4342, !range !230
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !4342
  %10 = load i64, i64* %9, align 8, !dbg !4342
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %high, i32 0, i32 0, !dbg !4342
  store i64 %8, i64* %11, align 8, !dbg !4342
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %high, i32 0, i32 1, !dbg !4342
  store i64 %10, i64* %12, align 8, !dbg !4342
  %13 = bitcast { i64, i64 }* %high to i64*, !dbg !4343
  %_7 = load i64, i64* %13, align 8, !dbg !4343, !range !230
  %14 = icmp eq i64 %_7, 1, !dbg !4343
  br i1 %14, label %bb2, label %bb9, !dbg !4343

bb2:                                              ; preds = %bb1
  %15 = bitcast { i64, i64 }* %high to %"std::option::Option<usize>::Some"*, !dbg !4344
  %16 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %15, i32 0, i32 1, !dbg !4344
  %additional = load i64, i64* %16, align 8, !dbg !4344
  store i64 %additional, i64* %additional.dbg.spill, align 8, !dbg !4344
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4316, metadata !DIExpression()), !dbg !4345
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h8f7bc660772fd76eE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self, i64 %additional), !dbg !4346
  br label %bb3, !dbg !4346

bb9:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1892 to [0 x i8]*), i64 17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1891 to %"std::panic::Location"*)), !dbg !4347
  unreachable, !dbg !4347

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_18 = call i64* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !4348
  br label %bb4, !dbg !4348

bb4:                                              ; preds = %bb3
; call alloc::vec::Vec<T,A>::len
  %_20 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %self), !dbg !4349
  br label %bb5, !dbg !4349

bb5:                                              ; preds = %bb4
  store i64* %_18, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !2885, metadata !DIExpression()), !dbg !4350
  store i64 %_20, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2890, metadata !DIExpression()), !dbg !4352
  store i64* %_18, i64** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i.i, metadata !2894, metadata !DIExpression()), !dbg !4353
  store i64 %_20, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2899, metadata !DIExpression()), !dbg !4355
  %17 = getelementptr inbounds i64, i64* %_18, i64 %_20, !dbg !4356
  store i64* %17, i64** %2, align 8, !dbg !4356
  %_3.i.i = load i64*, i64** %2, align 8, !dbg !4356
  store i64* %_3.i.i, i64** %ptr.dbg.spill, align 8, !dbg !4348
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !4331, metadata !DIExpression()), !dbg !4357
  br label %bb6, !dbg !4348

bb6:                                              ; preds = %bb5
  %_24 = getelementptr inbounds %"std::vec::Vec<usize>", %"std::vec::Vec<usize>"* %self, i32 0, i32 1, !dbg !4358
; call alloc::vec::set_len_on_drop::SetLenOnDrop::new
  %18 = call { i64*, i64 } @_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h94b8eb26438d6741E(i64* align 8 dereferenceable(8) %_24), !dbg !4359
  %local_len.0 = extractvalue { i64*, i64 } %18, 0, !dbg !4359
  %local_len.1 = extractvalue { i64*, i64 } %18, 1, !dbg !4359
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len.dbg.spill, i32 0, i32 0, !dbg !4359
  store i64* %local_len.0, i64** %19, align 8, !dbg !4359
  %20 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len.dbg.spill, i32 0, i32 1, !dbg !4359
  store i64 %local_len.1, i64* %20, align 8, !dbg !4359
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %local_len.dbg.spill, metadata !4333, metadata !DIExpression()), !dbg !4360
  br label %bb7, !dbg !4359

bb7:                                              ; preds = %bb6
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 0, !dbg !4361
  %_26.0 = load i64, i64* %21, align 8, !dbg !4361
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator, i32 0, i32 1, !dbg !4361
  %_26.1 = load i64, i64* %22, align 8, !dbg !4361
  %23 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_27 to i64**, !dbg !4362
  store i64* %_3.i.i, i64** %23, align 8, !dbg !4362
  %24 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_27, i32 0, i32 1, !dbg !4362
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %24, i32 0, i32 0, !dbg !4362
  store i64* %local_len.0, i64** %25, align 8, !dbg !4362
  %26 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %24, i32 0, i32 1, !dbg !4362
  store i64 %local_len.1, i64* %26, align 8, !dbg !4362
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h0104e08a74c2bf75E(i64 %_26.0, i64 %_26.1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* noalias nocapture dereferenceable(24) %_27), !dbg !4361
  br label %bb8, !dbg !4361

bb8:                                              ; preds = %bb7
  ret void, !dbg !4363
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend::{{closure}}
; Function Attrs: inlinehint nounwind
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend28_$u7b$$u7b$closure$u7d$$u7d$17h1f4afca403b92a5dE"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* align 8 dereferenceable(24) %_1, i64 %element) unnamed_addr #0 !dbg !4364 {
start:
  %0 = alloca i64*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64*, align 8
  %element.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, align 8
  store %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8
  %1 = load %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %2 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %1 to i64**
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, metadata !4370, metadata !DIExpression(DW_OP_deref)), !dbg !4372
  %3 = load %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"*, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %4 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %3, i32 0, i32 1
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, metadata !4371, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8)), !dbg !4373
  store i64 %element, i64* %element.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %element.dbg.spill, metadata !4369, metadata !DIExpression()), !dbg !4374
  %5 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1 to i64**, !dbg !4375
  %_4 = load i64*, i64** %5, align 8, !dbg !4375
; call core::ptr::write
  call void @_ZN4core3ptr5write17h39b530a88072e8ebE(i64* %_4, i64 %element), !dbg !4376
  br label %bb1, !dbg !4376

bb1:                                              ; preds = %start
  %6 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1 to i64**, !dbg !4377
  %_7 = load i64*, i64** %6, align 8, !dbg !4377
  store i64* %_7, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !2894, metadata !DIExpression()), !dbg !4378
  store i64 1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2899, metadata !DIExpression()), !dbg !4380
  %7 = getelementptr inbounds i64, i64* %_7, i64 1, !dbg !4381
  store i64* %7, i64** %0, align 8, !dbg !4381
  %_3.i = load i64*, i64** %0, align 8, !dbg !4381
  br label %bb2, !dbg !4377

bb2:                                              ; preds = %bb1
  %8 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1 to i64**, !dbg !4382
  store i64* %_3.i, i64** %8, align 8, !dbg !4382
  %_9 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]"* %_1, i32 0, i32 1, !dbg !4383
; call alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len
  call void @_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h3e9a89ae8e25e418E({ i64*, i64 }* align 8 dereferenceable(16) %_9, i64 1), !dbg !4383
  br label %bb3, !dbg !4383

bb3:                                              ; preds = %bb2
  ret void, !dbg !4384
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend::{{closure}}
; Function Attrs: inlinehint nounwind
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend28_$u7b$$u7b$closure$u7d$$u7d$17hbd2720235c2ff086E"(%"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* align 8 dereferenceable(24) %_1, i64 %element) unnamed_addr #0 !dbg !4385 {
start:
  %0 = alloca i64*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64*, align 8
  %element.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, align 8
  store %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8
  %1 = load %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %2 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %1 to i64**
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, metadata !4391, metadata !DIExpression(DW_OP_deref)), !dbg !4393
  %3 = load %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"*, %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %4 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %3, i32 0, i32 1
  call void @llvm.dbg.declare(metadata %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"** %_1.dbg.spill, metadata !4392, metadata !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8)), !dbg !4394
  store i64 %element, i64* %element.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %element.dbg.spill, metadata !4390, metadata !DIExpression()), !dbg !4395
  %5 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1 to i64**, !dbg !4396
  %_4 = load i64*, i64** %5, align 8, !dbg !4396
; call core::ptr::write
  call void @_ZN4core3ptr5write17h39b530a88072e8ebE(i64* %_4, i64 %element), !dbg !4397
  br label %bb1, !dbg !4397

bb1:                                              ; preds = %start
  %6 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1 to i64**, !dbg !4398
  %_7 = load i64*, i64** %6, align 8, !dbg !4398
  store i64* %_7, i64** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i, metadata !2894, metadata !DIExpression()), !dbg !4399
  store i64 1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2899, metadata !DIExpression()), !dbg !4401
  %7 = getelementptr inbounds i64, i64* %_7, i64 1, !dbg !4402
  store i64* %7, i64** %0, align 8, !dbg !4402
  %_3.i = load i64*, i64** %0, align 8, !dbg !4402
  br label %bb2, !dbg !4398

bb2:                                              ; preds = %bb1
  %8 = bitcast %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1 to i64**, !dbg !4403
  store i64* %_3.i, i64** %8, align 8, !dbg !4403
  %_9 = getelementptr inbounds %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]", %"[closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::ops::Range<usize>>>::spec_extend::{closure#0}]"* %_1, i32 0, i32 1, !dbg !4404
; call alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len
  call void @_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h3e9a89ae8e25e418E({ i64*, i64 }* align 8 dereferenceable(16) %_9, i64 1), !dbg !4404
  br label %bb3, !dbg !4404

bb3:                                              ; preds = %bb2
  ret void, !dbg !4405
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nounwind
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h0032758469ac5cafE"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %iterator.0, i64 %iterator.1) unnamed_addr #1 !dbg !4406 {
start:
  %iterator.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator.dbg.spill, i32 0, i32 0
  store i64 %iterator.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator.dbg.spill, i32 0, i32 1
  store i64 %iterator.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iterator.dbg.spill, metadata !4411, metadata !DIExpression()), !dbg !4412
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h1209d306fa6dbda7E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %iterator.0, i64 %iterator.1), !dbg !4413
  br label %bb1, !dbg !4413

bb1:                                              ; preds = %start
  ret void, !dbg !4414
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nounwind
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h523f95f18044ec97E"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %iterator.0, i64 %iterator.1) unnamed_addr #1 !dbg !4415 {
start:
  %iterator.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator.dbg.spill, i32 0, i32 0
  store i64 %iterator.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iterator.dbg.spill, i32 0, i32 1
  store i64 %iterator.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iterator.dbg.spill, metadata !4417, metadata !DIExpression()), !dbg !4418
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h71c6e51a3a8030ffE"(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %0, i64 %iterator.0, i64 %iterator.1), !dbg !4419
  br label %bb1, !dbg !4419

bb1:                                              ; preds = %start
  ret void, !dbg !4420
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nounwind
define void @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h3c12418a31000f3cE"(i64 %self.0, i64 %self.1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #1 !dbg !4421 {
start:
  %init.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]", align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !4426, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.declare(metadata {}* %init.dbg.spill, metadata !4427, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.declare(metadata %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %f, metadata !4428, metadata !DIExpression()), !dbg !4433
  %2 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %_6 to i8*, !dbg !4434
  %3 = bitcast %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* %f to i8*, !dbg !4434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !4434
; call core::iter::traits::double_ended::DoubleEndedIterator::rfold
  call void @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfold17h94d6b93561bea54fE(i64 %self.0, i64 %self.1, %"[closure@std::iter::Iterator::for_each::call<usize, [closure@<std::vec::Vec<usize> as std::vec::spec_extend::SpecExtend<usize, std::iter::Rev<std::ops::Range<usize>>>>::spec_extend::{closure#0}]>::{closure#0}]"* noalias nocapture dereferenceable(24) %_6), !dbg !4435
  br label %bb1, !dbg !4435

bb1:                                              ; preds = %start
  ret void, !dbg !4436
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbb390563d53103dcE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !4437 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4442, metadata !DIExpression()), !dbg !4443
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %0 = call { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h4db9249addc4e14cE"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !4444
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !4444
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !4444
  br label %bb1, !dbg !4444

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !4445
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !4445
  ret { i64, i64 } %4, !dbg !4445
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define void @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18fe86b74cb9542cE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !4446 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4451, metadata !DIExpression()), !dbg !4452
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
  call void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17hdd5a7ccf0a5ee504E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self), !dbg !4453
  br label %bb1, !dbg !4453

bb1:                                              ; preds = %start
  ret void, !dbg !4454
}

; <itertools::permutations::Permutations<I> as core::iter::traits::iterator::Iterator>::count::from_complete
; Function Attrs: nounwind
define i64 @"_ZN105_$LT$itertools..permutations..Permutations$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count13from_complete17h765e2b8e3e0ab1caE"(%"permutations::CompleteState"* noalias nocapture dereferenceable(56) %complete_state) unnamed_addr #1 !dbg !4455 {
start:
  %count.dbg.spill = alloca i64, align 8
  %_2 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"* %complete_state, metadata !4462, metadata !DIExpression()), !dbg !4465
; call itertools::permutations::CompleteState::remaining
  %0 = call { i64, i64 } @_ZN9itertools12permutations13CompleteState9remaining17h539d98e43185ef11E(%"permutations::CompleteState"* align 8 dereferenceable(56) %complete_state), !dbg !4466
  store { i64, i64 } %0, { i64, i64 }* %_2, align 8, !dbg !4466
  br label %bb1, !dbg !4466

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_2 to i64*, !dbg !4466
  %_4 = load i64, i64* %1, align 8, !dbg !4466, !range !230
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !4467

bb3:                                              ; preds = %bb1
  unreachable, !dbg !4466

bb4:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %_2 to %"permutations::CompleteStateRemaining::Known"*, !dbg !4468
  %3 = getelementptr inbounds %"permutations::CompleteStateRemaining::Known", %"permutations::CompleteStateRemaining::Known"* %2, i32 0, i32 1, !dbg !4468
  %count = load i64, i64* %3, align 8, !dbg !4468
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !4468
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4463, metadata !DIExpression()), !dbg !4469
; call core::ptr::drop_in_place<itertools::permutations::CompleteState>
  call void @"_ZN4core3ptr59drop_in_place$LT$itertools..permutations..CompleteState$GT$17h85244e3766564339E"(%"permutations::CompleteState"* %complete_state), !dbg !4470
  br label %bb5, !dbg !4470

bb2:                                              ; preds = %bb1
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb30a5c1f168cf260E([0 x i8]* nonnull align 1 bitcast (<{ [38 x i8] }>* @alloc1893 to [0 x i8]*), i64 38, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1895 to %"std::panic::Location"*)), !dbg !4471
  unreachable, !dbg !4471

bb5:                                              ; preds = %bb4
  ret i64 %count, !dbg !4472
}

; itertools::permutations::CompleteState::advance
; Function Attrs: nounwind
define void @_ZN9itertools12permutations13CompleteState7advance17ha0f1ae3f40041a8dE(%"permutations::CompleteState"* align 8 dereferenceable(56) %self) unnamed_addr #1 !dbg !4473 {
start:
  %k.dbg.spill9 = alloca i64, align 8
  %n.dbg.spill7 = alloca i64, align 8
  %to_push.dbg.spill = alloca i64, align 8
  %swap_index.dbg.spill = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %__next.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %k.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %cycles.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %indices.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %self.dbg.spill = alloca %"permutations::CompleteState"*, align 8
  %_31 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_27 = alloca { i64, i64 }, align 8
  %_18 = alloca %"std::vec::Vec<usize>", align 8
  %_17 = alloca %"std::vec::Vec<usize>", align 8
  %_11 = alloca { i64, i64 }, align 8
  %cycles = alloca %"std::vec::Vec<usize>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %indices = alloca %"std::vec::Vec<usize>", align 8
  %_2 = alloca %"permutations::CompleteState", align 8
  store %"permutations::CompleteState"* %self, %"permutations::CompleteState"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"** %self.dbg.spill, metadata !4478, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"* %indices, metadata !4482, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"* %cycles, metadata !4484, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !4493, metadata !DIExpression()), !dbg !4508
  %0 = bitcast %"permutations::CompleteState"* %self to i64*, !dbg !4509
  %_3 = load i64, i64* %0, align 8, !dbg !4509, !range !230
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4510

bb2:                                              ; preds = %start
  unreachable, !dbg !4509

bb3:                                              ; preds = %start
  %1 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Start"*, !dbg !4511
  %2 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %1, i32 0, i32 1, !dbg !4511
  %n6 = load i64, i64* %2, align 8, !dbg !4511
  store i64 %n6, i64* %n.dbg.spill7, align 8, !dbg !4511
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill7, metadata !4479, metadata !DIExpression()), !dbg !4512
  %3 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Start"*, !dbg !4513
  %4 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %3, i32 0, i32 2, !dbg !4513
  %k8 = load i64, i64* %4, align 8, !dbg !4513
  store i64 %k8, i64* %k.dbg.spill9, align 8, !dbg !4513
  call void @llvm.dbg.declare(metadata i64* %k.dbg.spill9, metadata !4481, metadata !DIExpression()), !dbg !4514
  %5 = bitcast { i64, i64 }* %_7 to i64*, !dbg !4515
  store i64 0, i64* %5, align 8, !dbg !4515
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4515
  store i64 %n6, i64* %6, align 8, !dbg !4515
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !4515
  %8 = load i64, i64* %7, align 8, !dbg !4515
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4515
  %10 = load i64, i64* %9, align 8, !dbg !4515
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h5a26c930e6531310E(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %indices, i64 %8, i64 %10), !dbg !4515
  br label %bb4, !dbg !4515

bb1:                                              ; preds = %start
  %11 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Ongoing"*, !dbg !4516
  %indices1 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %11, i32 0, i32 1, !dbg !4516
  store %"std::vec::Vec<usize>"* %indices1, %"std::vec::Vec<usize>"** %indices.dbg.spill, align 8, !dbg !4516
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %indices.dbg.spill, metadata !4486, metadata !DIExpression()), !dbg !4517
  %12 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Ongoing"*, !dbg !4518
  %cycles2 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %12, i32 0, i32 2, !dbg !4518
  store %"std::vec::Vec<usize>"* %cycles2, %"std::vec::Vec<usize>"** %cycles.dbg.spill, align 8, !dbg !4518
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %cycles.dbg.spill, metadata !4488, metadata !DIExpression()), !dbg !4519
; call alloc::vec::Vec<T,A>::len
  %n = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %indices1), !dbg !4520
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !4520
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4489, metadata !DIExpression()), !dbg !4521
  br label %bb8, !dbg !4520

bb8:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::len
  %k = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %cycles2), !dbg !4522
  store i64 %k, i64* %k.dbg.spill, align 8, !dbg !4522
  call void @llvm.dbg.declare(metadata i64* %k.dbg.spill, metadata !4491, metadata !DIExpression()), !dbg !4523
  br label %bb9, !dbg !4522

bb9:                                              ; preds = %bb8
  %13 = bitcast { i64, i64 }* %_27 to i64*, !dbg !4524
  store i64 0, i64* %13, align 8, !dbg !4524
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_27, i32 0, i32 1, !dbg !4524
  store i64 %k, i64* %14, align 8, !dbg !4524
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_27, i32 0, i32 0, !dbg !4524
  %16 = load i64, i64* %15, align 8, !dbg !4524
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_27, i32 0, i32 1, !dbg !4524
  %18 = load i64, i64* %17, align 8, !dbg !4524
; call core::iter::traits::iterator::Iterator::rev
  %19 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17he0cc0d0348a7af5dE(i64 %16, i64 %18), !dbg !4524
  %_26.0 = extractvalue { i64, i64 } %19, 0, !dbg !4524
  %_26.1 = extractvalue { i64, i64 } %19, 1, !dbg !4524
  br label %bb10, !dbg !4524

bb10:                                             ; preds = %bb9
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbb24107ab6b8587dE"(i64 %_26.0, i64 %_26.1), !dbg !4524
  %_25.0 = extractvalue { i64, i64 } %20, 0, !dbg !4524
  %_25.1 = extractvalue { i64, i64 } %20, 1, !dbg !4524
  br label %bb11, !dbg !4524

bb11:                                             ; preds = %bb10
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !4524
  store i64 %_25.0, i64* %21, align 8, !dbg !4524
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !4524
  store i64 %_25.1, i64* %22, align 8, !dbg !4524
  br label %bb12, !dbg !4525

bb12:                                             ; preds = %bb22, %bb11
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %23 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbb390563d53103dcE"({ i64, i64 }* align 8 dereferenceable(16) %iter), !dbg !4526
  store { i64, i64 } %23, { i64, i64 }* %_31, align 8, !dbg !4526
  br label %bb13, !dbg !4526

bb13:                                             ; preds = %bb12
  %24 = bitcast { i64, i64 }* %_31 to i64*, !dbg !4526
  %_34 = load i64, i64* %24, align 8, !dbg !4526, !range !230
  switch i64 %_34, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ], !dbg !4526

bb15:                                             ; preds = %bb13
  unreachable, !dbg !4526

bb14:                                             ; preds = %bb13
  %25 = bitcast %"permutations::CompleteState"* %_2 to %"permutations::CompleteState::Start"*, !dbg !4527
  %26 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %25, i32 0, i32 1, !dbg !4527
  store i64 %n, i64* %26, align 8, !dbg !4527
  %27 = bitcast %"permutations::CompleteState"* %_2 to %"permutations::CompleteState::Start"*, !dbg !4527
  %28 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %27, i32 0, i32 2, !dbg !4527
  store i64 %k, i64* %28, align 8, !dbg !4527
  %29 = bitcast %"permutations::CompleteState"* %_2 to i64*, !dbg !4527
  store i64 0, i64* %29, align 8, !dbg !4527
  br label %bb30, !dbg !4528

bb16:                                             ; preds = %bb13
  %30 = bitcast { i64, i64 }* %_31 to %"std::option::Option<usize>::Some"*, !dbg !4529
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !4529
  %val = load i64, i64* %31, align 8, !dbg !4529
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4529
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4497, metadata !DIExpression()), !dbg !4530
  store i64 %val, i64* %__next.dbg.spill, align 8, !dbg !4530
  call void @llvm.dbg.declare(metadata i64* %__next.dbg.spill, metadata !4495, metadata !DIExpression()), !dbg !4526
  store i64 %val, i64* %i.dbg.spill, align 8, !dbg !4526
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !4499, metadata !DIExpression()), !dbg !4531
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_39 = call align 8 dereferenceable(8) i64* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h86fdf4e92a23c4c2E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %cycles2, i64 %val, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1897 to %"std::panic::Location"*)), !dbg !4532
  br label %bb17, !dbg !4532

bb17:                                             ; preds = %bb16
  %_38 = load i64, i64* %_39, align 8, !dbg !4532
  %32 = icmp eq i64 %_38, 0, !dbg !4532
  br i1 %32, label %bb18, label %bb23, !dbg !4532

bb18:                                             ; preds = %bb17
  %33 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %n, i64 %val), !dbg !4533
  %_45.0 = extractvalue { i64, i1 } %33, 0, !dbg !4533
  %_45.1 = extractvalue { i64, i1 } %33, 1, !dbg !4533
  %34 = call i1 @llvm.expect.i1(i1 %_45.1, i1 false), !dbg !4533
  br i1 %34, label %panic4, label %bb19, !dbg !4533

bb23:                                             ; preds = %bb17
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_59 = call align 8 dereferenceable(8) i64* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h86fdf4e92a23c4c2E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %cycles2, i64 %val, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1899 to %"std::panic::Location"*)), !dbg !4534
  br label %bb24, !dbg !4534

bb24:                                             ; preds = %bb23
  %_58 = load i64, i64* %_59, align 8, !dbg !4534
  %35 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %n, i64 %_58), !dbg !4535
  %_62.0 = extractvalue { i64, i1 } %35, 0, !dbg !4535
  %_62.1 = extractvalue { i64, i1 } %35, 1, !dbg !4535
  %36 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false), !dbg !4535
  br i1 %36, label %panic, label %bb25, !dbg !4535

bb25:                                             ; preds = %bb24
  store i64 %_62.0, i64* %swap_index.dbg.spill, align 8, !dbg !4535
  call void @llvm.dbg.declare(metadata i64* %swap_index.dbg.spill, metadata !4503, metadata !DIExpression()), !dbg !4536
; call <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %37 = call { [0 x i64]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h850991fc5bbc9917E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %indices1), !dbg !4537
  %_65.0 = extractvalue { [0 x i64]*, i64 } %37, 0, !dbg !4537
  %_65.1 = extractvalue { [0 x i64]*, i64 } %37, 1, !dbg !4537
  br label %bb26, !dbg !4537

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1901 to %"std::panic::Location"*)), !dbg !4535
  unreachable, !dbg !4535

bb26:                                             ; preds = %bb25
; call core::slice::<impl [T]>::swap
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17ha13932abe406860eE"([0 x i64]* nonnull align 8 %_65.0, i64 %_65.1, i64 %val, i64 %_62.0), !dbg !4537
  br label %bb27, !dbg !4537

bb27:                                             ; preds = %bb26
; call <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
  %_69 = call align 8 dereferenceable(8) i64* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17h50fbdcb1a730885fE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %cycles2, i64 %val, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1903 to %"std::panic::Location"*)), !dbg !4538
  br label %bb28, !dbg !4538

bb28:                                             ; preds = %bb27
  %38 = load i64, i64* %_69, align 8, !dbg !4538
  %39 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %38, i64 1), !dbg !4538
  %_72.0 = extractvalue { i64, i1 } %39, 0, !dbg !4538
  %_72.1 = extractvalue { i64, i1 } %39, 1, !dbg !4538
  %40 = call i1 @llvm.expect.i1(i1 %_72.1, i1 false), !dbg !4538
  br i1 %40, label %panic3, label %bb29, !dbg !4538

bb29:                                             ; preds = %bb28
  store i64 %_72.0, i64* %_69, align 8, !dbg !4538
  br label %bb31, !dbg !4539

panic3:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1903 to %"std::panic::Location"*)), !dbg !4538
  unreachable, !dbg !4538

bb31:                                             ; preds = %bb32, %bb29
  ret void, !dbg !4539

bb19:                                             ; preds = %bb18
  %41 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_45.0, i64 1), !dbg !4533
  %_46.0 = extractvalue { i64, i1 } %41, 0, !dbg !4533
  %_46.1 = extractvalue { i64, i1 } %41, 1, !dbg !4533
  %42 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false), !dbg !4533
  br i1 %42, label %panic5, label %bb20, !dbg !4533

panic4:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1905 to %"std::panic::Location"*)), !dbg !4533
  unreachable, !dbg !4533

bb20:                                             ; preds = %bb19
; call <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
  %_47 = call align 8 dereferenceable(8) i64* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17h50fbdcb1a730885fE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %cycles2, i64 %val, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1907 to %"std::panic::Location"*)), !dbg !4540
  br label %bb21, !dbg !4540

panic5:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1905 to %"std::panic::Location"*)), !dbg !4533
  unreachable, !dbg !4533

bb21:                                             ; preds = %bb20
  store i64 %_46.0, i64* %_47, align 8, !dbg !4540
; call alloc::vec::Vec<T,A>::remove
  %to_push = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove17h33a39802b3674e5fE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %indices1, i64 %val, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1909 to %"std::panic::Location"*)), !dbg !4541
  store i64 %to_push, i64* %to_push.dbg.spill, align 8, !dbg !4541
  call void @llvm.dbg.declare(metadata i64* %to_push.dbg.spill, metadata !4501, metadata !DIExpression()), !dbg !4542
  br label %bb22, !dbg !4541

bb22:                                             ; preds = %bb21
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hecc5dac4ff795d5eE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %indices1, i64 %to_push), !dbg !4543
  br label %bb12, !dbg !4543

bb30:                                             ; preds = %bb7, %bb14
; call core::ptr::drop_in_place<itertools::permutations::CompleteState>
  call void @"_ZN4core3ptr59drop_in_place$LT$itertools..permutations..CompleteState$GT$17h85244e3766564339E"(%"permutations::CompleteState"* %self), !dbg !4544
  br label %bb32, !dbg !4544

bb4:                                              ; preds = %bb3
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %n6, i64 %k8), !dbg !4545
  %_15.0 = extractvalue { i64, i1 } %43, 0, !dbg !4545
  %_15.1 = extractvalue { i64, i1 } %43, 1, !dbg !4545
  %44 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !4545
  br i1 %44, label %panic10, label %bb5, !dbg !4545

bb5:                                              ; preds = %bb4
  %45 = bitcast { i64, i64 }* %_11 to i64*, !dbg !4546
  store i64 %_15.0, i64* %45, align 8, !dbg !4546
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !4546
  store i64 %n6, i64* %46, align 8, !dbg !4546
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !4546
  %48 = load i64, i64* %47, align 8, !dbg !4546
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !4546
  %50 = load i64, i64* %49, align 8, !dbg !4546
; call core::iter::traits::iterator::Iterator::rev
  %51 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17he0cc0d0348a7af5dE(i64 %48, i64 %50), !dbg !4546
  %_10.0 = extractvalue { i64, i64 } %51, 0, !dbg !4546
  %_10.1 = extractvalue { i64, i64 } %51, 1, !dbg !4546
  br label %bb6, !dbg !4546

panic10:                                          ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1911 to %"std::panic::Location"*)), !dbg !4545
  unreachable, !dbg !4545

bb6:                                              ; preds = %bb5
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17hfcb59dd665720e82E(%"std::vec::Vec<usize>"* noalias nocapture sret(%"std::vec::Vec<usize>") dereferenceable(24) %cycles, i64 %_10.0, i64 %_10.1), !dbg !4546
  br label %bb7, !dbg !4546

bb7:                                              ; preds = %bb6
  %52 = bitcast %"std::vec::Vec<usize>"* %_17 to i8*, !dbg !4547
  %53 = bitcast %"std::vec::Vec<usize>"* %cycles to i8*, !dbg !4547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false), !dbg !4547
  %54 = bitcast %"std::vec::Vec<usize>"* %_18 to i8*, !dbg !4548
  %55 = bitcast %"std::vec::Vec<usize>"* %indices to i8*, !dbg !4548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false), !dbg !4548
  %56 = bitcast %"permutations::CompleteState"* %_2 to %"permutations::CompleteState::Ongoing"*, !dbg !4549
  %57 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %56, i32 0, i32 1, !dbg !4549
  %58 = bitcast %"std::vec::Vec<usize>"* %57 to i8*, !dbg !4549
  %59 = bitcast %"std::vec::Vec<usize>"* %_18 to i8*, !dbg !4549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false), !dbg !4549
  %60 = bitcast %"permutations::CompleteState"* %_2 to %"permutations::CompleteState::Ongoing"*, !dbg !4549
  %61 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %60, i32 0, i32 2, !dbg !4549
  %62 = bitcast %"std::vec::Vec<usize>"* %61 to i8*, !dbg !4549
  %63 = bitcast %"std::vec::Vec<usize>"* %_17 to i8*, !dbg !4549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false), !dbg !4549
  %64 = bitcast %"permutations::CompleteState"* %_2 to i64*, !dbg !4549
  store i64 1, i64* %64, align 8, !dbg !4549
  br label %bb30, !dbg !4550

bb32:                                             ; preds = %bb30
  %65 = bitcast %"permutations::CompleteState"* %self to i8*, !dbg !4544
  %66 = bitcast %"permutations::CompleteState"* %_2 to i8*, !dbg !4544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 56, i1 false), !dbg !4544
  br label %bb31, !dbg !4539
}

; itertools::permutations::CompleteState::remaining
; Function Attrs: nounwind
define { i64, i64 } @_ZN9itertools12permutations13CompleteState9remaining17h539d98e43185ef11E(%"permutations::CompleteState"* align 8 dereferenceable(56) %self) unnamed_addr #1 !dbg !4551 {
start:
  %count.dbg.spill7 = alloca i64, align 8
  %k.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %radix.dbg.spill = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %__next.dbg.spill = alloca { i64, i64* }, align 8
  %val.dbg.spill = alloca { i64, i64* }, align 8
  %cycles.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %indices.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %self.dbg.spill = alloca %"permutations::CompleteState"*, align 8
  %_52 = alloca i64*, align 8
  %next_count = alloca { i64, i64 }, align 8
  %c = alloca i64, align 8
  %_35 = alloca { i64, i64* }, align 8
  %iter = alloca %"std::iter::Enumerate<std::slice::Iter<usize>>", align 8
  %_28 = alloca %"std::iter::Enumerate<std::slice::Iter<usize>>", align 8
  %_27 = alloca %"std::iter::Enumerate<std::slice::Iter<usize>>", align 8
  %count1 = alloca i64, align 8
  %_19 = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %count = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store %"permutations::CompleteState"* %self, %"permutations::CompleteState"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"** %self.dbg.spill, metadata !4565, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata { i64, i64 }* %count, metadata !4569, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata i64* %count1, metadata !4576, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.declare(metadata %"std::iter::Enumerate<std::slice::Iter<usize>>"* %iter, metadata !4578, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata i64* %c, metadata !4586, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.declare(metadata { i64, i64 }* %next_count, metadata !4589, metadata !DIExpression()), !dbg !4598
  %1 = bitcast %"permutations::CompleteState"* %self to i64*, !dbg !4599
  %_2 = load i64, i64* %1, align 8, !dbg !4599, !range !230
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4600

bb2:                                              ; preds = %start
  unreachable, !dbg !4599

bb3:                                              ; preds = %start
  %2 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Start"*, !dbg !4601
  %3 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %2, i32 0, i32 1, !dbg !4601
  %n = load i64, i64* %3, align 8, !dbg !4601
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !4601
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4566, metadata !DIExpression()), !dbg !4602
  %4 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Start"*, !dbg !4603
  %5 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %4, i32 0, i32 2, !dbg !4603
  %k = load i64, i64* %5, align 8, !dbg !4603
  store i64 %k, i64* %k.dbg.spill, align 8, !dbg !4603
  call void @llvm.dbg.declare(metadata i64* %k.dbg.spill, metadata !4568, metadata !DIExpression()), !dbg !4604
  %_5 = icmp ult i64 %n, %k, !dbg !4605
  br i1 %_5, label %bb4, label %bb5, !dbg !4605

bb1:                                              ; preds = %start
  %6 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Ongoing"*, !dbg !4606
  %indices = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %6, i32 0, i32 1, !dbg !4606
  store %"std::vec::Vec<usize>"* %indices, %"std::vec::Vec<usize>"** %indices.dbg.spill, align 8, !dbg !4606
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %indices.dbg.spill, metadata !4573, metadata !DIExpression()), !dbg !4607
  %7 = bitcast %"permutations::CompleteState"* %self to %"permutations::CompleteState::Ongoing"*, !dbg !4608
  %cycles = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %7, i32 0, i32 2, !dbg !4608
  store %"std::vec::Vec<usize>"* %cycles, %"std::vec::Vec<usize>"** %cycles.dbg.spill, align 8, !dbg !4608
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %cycles.dbg.spill, metadata !4575, metadata !DIExpression()), !dbg !4609
  store i64 0, i64* %count1, align 8, !dbg !4610
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %8 = call { [0 x i64]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h46cbd80f125d07adE"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %cycles), !dbg !4611
  %_31.0 = extractvalue { [0 x i64]*, i64 } %8, 0, !dbg !4611
  %_31.1 = extractvalue { [0 x i64]*, i64 } %8, 1, !dbg !4611
  br label %bb13, !dbg !4611

bb13:                                             ; preds = %bb1
; call core::slice::<impl [T]>::iter
  %9 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h234dbc8e2fe698e1E"([0 x i64]* nonnull align 8 %_31.0, i64 %_31.1), !dbg !4611
  %_29.0 = extractvalue { i64*, i64* } %9, 0, !dbg !4611
  %_29.1 = extractvalue { i64*, i64* } %9, 1, !dbg !4611
  br label %bb14, !dbg !4611

bb14:                                             ; preds = %bb13
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h16d57dbee5ed8c1dE(%"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture sret(%"std::iter::Enumerate<std::slice::Iter<usize>>") dereferenceable(24) %_28, i64* nonnull %_29.0, i64* %_29.1), !dbg !4611
  br label %bb15, !dbg !4611

bb15:                                             ; preds = %bb14
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcf5e199d13ae9153E"(%"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture sret(%"std::iter::Enumerate<std::slice::Iter<usize>>") dereferenceable(24) %_27, %"std::iter::Enumerate<std::slice::Iter<usize>>"* noalias nocapture dereferenceable(24) %_28), !dbg !4611
  br label %bb16, !dbg !4611

bb16:                                             ; preds = %bb15
  %10 = bitcast %"std::iter::Enumerate<std::slice::Iter<usize>>"* %iter to i8*, !dbg !4611
  %11 = bitcast %"std::iter::Enumerate<std::slice::Iter<usize>>"* %_27 to i8*, !dbg !4611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !4611
  br label %bb17, !dbg !4612

bb17:                                             ; preds = %bb28, %bb16
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc51ddd6826cf0fbaE"(%"std::iter::Enumerate<std::slice::Iter<usize>>"* align 8 dereferenceable(24) %iter), !dbg !4613
  store { i64, i64* } %12, { i64, i64* }* %_35, align 8, !dbg !4613
  br label %bb18, !dbg !4613

bb18:                                             ; preds = %bb17
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_35, i32 0, i32 1, !dbg !4613
  %14 = bitcast i64** %13 to {}**, !dbg !4613
  %15 = load {}*, {}** %14, align 8, !dbg !4613
  %16 = icmp eq {}* %15, null, !dbg !4613
  %_38 = select i1 %16, i64 0, i64 1, !dbg !4613
  switch i64 %_38, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !4613

bb20:                                             ; preds = %bb18
  unreachable, !dbg !4613

bb19:                                             ; preds = %bb18
  %_57 = load i64, i64* %count1, align 8, !dbg !4614
  %17 = bitcast { i64, i64 }* %0 to %"permutations::CompleteStateRemaining::Known"*, !dbg !4615
  %18 = getelementptr inbounds %"permutations::CompleteStateRemaining::Known", %"permutations::CompleteStateRemaining::Known"* %17, i32 0, i32 1, !dbg !4615
  store i64 %_57, i64* %18, align 8, !dbg !4615
  %19 = bitcast { i64, i64 }* %0 to i64*, !dbg !4615
  store i64 0, i64* %19, align 8, !dbg !4615
  br label %bb29, !dbg !4616

bb21:                                             ; preds = %bb18
  %20 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_35, i32 0, i32 0, !dbg !4617
  %val.0 = load i64, i64* %20, align 8, !dbg !4617
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_35, i32 0, i32 1, !dbg !4617
  %val.1 = load i64*, i64** %21, align 8, !dbg !4617, !nonnull !4
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %val.dbg.spill, i32 0, i32 0, !dbg !4617
  store i64 %val.0, i64* %22, align 8, !dbg !4617
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %val.dbg.spill, i32 0, i32 1, !dbg !4617
  store i64* %val.1, i64** %23, align 8, !dbg !4617
  call void @llvm.dbg.declare(metadata { i64, i64* }* %val.dbg.spill, metadata !4582, metadata !DIExpression()), !dbg !4618
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %__next.dbg.spill, i32 0, i32 0, !dbg !4618
  store i64 %val.0, i64* %24, align 8, !dbg !4618
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %__next.dbg.spill, i32 0, i32 1, !dbg !4618
  store i64* %val.1, i64** %25, align 8, !dbg !4618
  call void @llvm.dbg.declare(metadata { i64, i64* }* %__next.dbg.spill, metadata !4580, metadata !DIExpression()), !dbg !4613
  %26 = load i64, i64* %val.1, align 8, !dbg !4619
  store i64 %26, i64* %c, align 8, !dbg !4619
  store i64 %val.0, i64* %i.dbg.spill, align 8, !dbg !4620
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !4584, metadata !DIExpression()), !dbg !4621
; call alloc::vec::Vec<T,A>::len
  %_44 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E"(%"std::vec::Vec<usize>"* align 8 dereferenceable(24) %indices), !dbg !4622
  br label %bb22, !dbg !4622

bb22:                                             ; preds = %bb21
  %27 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_44, i64 %val.0), !dbg !4622
  %_47.0 = extractvalue { i64, i1 } %27, 0, !dbg !4622
  %_47.1 = extractvalue { i64, i1 } %27, 1, !dbg !4622
  %28 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !4622
  br i1 %28, label %panic, label %bb23, !dbg !4622

bb23:                                             ; preds = %bb22
  store i64 %_47.0, i64* %radix.dbg.spill, align 8, !dbg !4622
  call void @llvm.dbg.declare(metadata i64* %radix.dbg.spill, metadata !4587, metadata !DIExpression()), !dbg !4623
  %_50 = load i64, i64* %count1, align 8, !dbg !4624
; call core::num::<impl usize>::checked_mul
  %29 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfc8edd9d59d78604E"(i64 %_50, i64 %_47.0), !dbg !4624
  %_49.0 = extractvalue { i64, i64 } %29, 0, !dbg !4624
  %_49.1 = extractvalue { i64, i64 } %29, 1, !dbg !4624
  br label %bb24, !dbg !4624

panic:                                            ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1913 to %"std::panic::Location"*)), !dbg !4622
  unreachable, !dbg !4622

bb24:                                             ; preds = %bb23
  store i64* %c, i64** %_52, align 8, !dbg !4625
  %30 = load i64*, i64** %_52, align 8, !dbg !4624, !nonnull !4
; call core::option::Option<T>::and_then
  %31 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17he53741757a10c680E"(i64 %_49.0, i64 %_49.1, i64* align 8 dereferenceable(8) %30), !dbg !4624
  store { i64, i64 } %31, { i64, i64 }* %next_count, align 8, !dbg !4624
  br label %bb25, !dbg !4624

bb25:                                             ; preds = %bb24
  %32 = bitcast { i64, i64 }* %next_count to i64*, !dbg !4626
  %_55 = load i64, i64* %32, align 8, !dbg !4626, !range !230
  switch i64 %_55, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !4627

bb27:                                             ; preds = %bb25
  unreachable, !dbg !4626

bb26:                                             ; preds = %bb25
  %33 = bitcast { i64, i64 }* %0 to i64*, !dbg !4628
  store i64 1, i64* %33, align 8, !dbg !4628
  br label %bb29, !dbg !4629

bb28:                                             ; preds = %bb25
  %34 = bitcast { i64, i64 }* %next_count to %"std::option::Option<usize>::Some"*, !dbg !4631
  %35 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %34, i32 0, i32 1, !dbg !4631
  %count2 = load i64, i64* %35, align 8, !dbg !4631
  store i64 %count2, i64* %count.dbg.spill, align 8, !dbg !4631
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4591, metadata !DIExpression()), !dbg !4632
  store i64 %count2, i64* %count1, align 8, !dbg !4633
  br label %bb17, !dbg !4612

bb29:                                             ; preds = %bb10, %bb12, %bb4, %bb19, %bb26
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4616
  %37 = load i64, i64* %36, align 8, !dbg !4616, !range !230
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4616
  %39 = load i64, i64* %38, align 8, !dbg !4616
  %40 = insertvalue { i64, i64 } undef, i64 %37, 0, !dbg !4616
  %41 = insertvalue { i64, i64 } %40, i64 %39, 1, !dbg !4616
  ret { i64, i64 } %41, !dbg !4616

bb5:                                              ; preds = %bb3
  %42 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %n, i64 %k), !dbg !4634
  %_14.0 = extractvalue { i64, i1 } %42, 0, !dbg !4634
  %_14.1 = extractvalue { i64, i1 } %42, 1, !dbg !4634
  %43 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !4634
  br i1 %43, label %panic3, label %bb6, !dbg !4634

bb4:                                              ; preds = %bb3
  %44 = bitcast { i64, i64 }* %0 to %"permutations::CompleteStateRemaining::Known"*, !dbg !4635
  %45 = getelementptr inbounds %"permutations::CompleteStateRemaining::Known", %"permutations::CompleteStateRemaining::Known"* %44, i32 0, i32 1, !dbg !4635
  store i64 0, i64* %45, align 8, !dbg !4635
  %46 = bitcast { i64, i64 }* %0 to i64*, !dbg !4635
  store i64 0, i64* %46, align 8, !dbg !4635
  br label %bb29, !dbg !4629

bb6:                                              ; preds = %bb5
  %47 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_14.0, i64 1), !dbg !4634
  %_15.0 = extractvalue { i64, i1 } %47, 0, !dbg !4634
  %_15.1 = extractvalue { i64, i1 } %47, 1, !dbg !4634
  %48 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !4634
  br i1 %48, label %panic4, label %bb7, !dbg !4634

panic3:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1915 to %"std::panic::Location"*)), !dbg !4634
  unreachable, !dbg !4634

bb7:                                              ; preds = %bb6
  %49 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %n, i64 1), !dbg !4636
  %_18.0 = extractvalue { i64, i1 } %49, 0, !dbg !4636
  %_18.1 = extractvalue { i64, i1 } %49, 1, !dbg !4636
  %50 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !4636
  br i1 %50, label %panic5, label %bb8, !dbg !4636

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1915 to %"std::panic::Location"*)), !dbg !4634
  unreachable, !dbg !4634

bb8:                                              ; preds = %bb7
  %51 = bitcast { i64, i64 }* %_9 to i64*, !dbg !4637
  store i64 %_15.0, i64* %51, align 8, !dbg !4637
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !4637
  store i64 %_18.0, i64* %52, align 8, !dbg !4637
  %53 = bitcast { i64, i64 }* %_19 to %"std::option::Option<usize>::Some"*, !dbg !4638
  %54 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %53, i32 0, i32 1, !dbg !4638
  store i64 1, i64* %54, align 8, !dbg !4638
  %55 = bitcast { i64, i64 }* %_19 to i64*, !dbg !4638
  store i64 1, i64* %55, align 8, !dbg !4638
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !4637
  %57 = load i64, i64* %56, align 8, !dbg !4637
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !4637
  %59 = load i64, i64* %58, align 8, !dbg !4637
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 0, !dbg !4637
  %61 = load i64, i64* %60, align 8, !dbg !4637, !range !230
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 1, !dbg !4637
  %63 = load i64, i64* %62, align 8, !dbg !4637
; call core::iter::traits::iterator::Iterator::fold
  %64 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator4fold17h06f585ccccddf3c3E(i64 %57, i64 %59, i64 %61, i64 %63), !dbg !4637
  store { i64, i64 } %64, { i64, i64 }* %count, align 8, !dbg !4637
  br label %bb9, !dbg !4637

panic5:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1917 to %"std::panic::Location"*)), !dbg !4636
  unreachable, !dbg !4636

bb9:                                              ; preds = %bb8
  %65 = bitcast { i64, i64 }* %count to i64*, !dbg !4639
  %_21 = load i64, i64* %65, align 8, !dbg !4639, !range !230
  switch i64 %_21, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ], !dbg !4640

bb11:                                             ; preds = %bb9
  unreachable, !dbg !4639

bb10:                                             ; preds = %bb9
  %66 = bitcast { i64, i64 }* %0 to i64*, !dbg !4641
  store i64 1, i64* %66, align 8, !dbg !4641
  br label %bb29, !dbg !4641

bb12:                                             ; preds = %bb9
  %67 = bitcast { i64, i64 }* %count to %"std::option::Option<usize>::Some"*, !dbg !4642
  %68 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %67, i32 0, i32 1, !dbg !4642
  %count6 = load i64, i64* %68, align 8, !dbg !4642
  store i64 %count6, i64* %count.dbg.spill7, align 8, !dbg !4642
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !4571, metadata !DIExpression()), !dbg !4643
  %69 = bitcast { i64, i64 }* %0 to %"permutations::CompleteStateRemaining::Known"*, !dbg !4644
  %70 = getelementptr inbounds %"permutations::CompleteStateRemaining::Known", %"permutations::CompleteStateRemaining::Known"* %69, i32 0, i32 1, !dbg !4644
  store i64 %count6, i64* %70, align 8, !dbg !4644
  %71 = bitcast { i64, i64 }* %0 to i64*, !dbg !4644
  store i64 0, i64* %71, align 8, !dbg !4644
  br label %bb29, !dbg !4645
}

; itertools::permutations::CompleteState::remaining::{{closure}}::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h74e25cc91fb07503E"(i64* align 8 dereferenceable(8) %_1, i64 %acc) unnamed_addr #0 !dbg !4646 {
start:
  %acc.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !4651, metadata !DIExpression(DW_OP_deref)), !dbg !4652
  store i64 %acc, i64* %acc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %acc.dbg.spill, metadata !4650, metadata !DIExpression()), !dbg !4653
  %_4 = load i64, i64* %_1, align 8, !dbg !4654
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfc8edd9d59d78604E"(i64 %acc, i64 %_4), !dbg !4655
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !4655
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !4655
  br label %bb1, !dbg !4655

bb1:                                              ; preds = %start
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !4656
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !4656
  ret { i64, i64 } %5, !dbg !4656
}

; itertools::permutations::CompleteState::remaining::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$17hb67bd229eb5fa747E"(%"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"* nonnull align 1 %_1, i64 %acc.0, i64 %acc.1, i64 %0) unnamed_addr #0 !dbg !4657 {
start:
  %acc.dbg.spill = alloca { i64, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"*, align 8
  %_5 = alloca i64*, align 8
  %i = alloca i64, align 8
  store i64 %0, i64* %i, align 8
  store %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"* %_1, %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs:253:77: 255:18]"** %_1.dbg.spill, metadata !4664, metadata !DIExpression()), !dbg !4665
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %acc.dbg.spill, i32 0, i32 0
  store i64 %acc.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %acc.dbg.spill, i32 0, i32 1
  store i64 %acc.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %acc.dbg.spill, metadata !4662, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4663, metadata !DIExpression()), !dbg !4667
  store i64* %i, i64** %_5, align 8, !dbg !4668
  %3 = load i64*, i64** %_5, align 8, !dbg !4669, !nonnull !4
; call core::option::Option<T>::and_then
  %4 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h5ec3511ca90332b3E"(i64 %acc.0, i64 %acc.1, i64* align 8 dereferenceable(8) %3), !dbg !4669
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !4669
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !4669
  br label %bb1, !dbg !4669

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !4670
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !4670
  ret { i64, i64 } %8, !dbg !4670
}

; itertools::permutations::CompleteState::remaining::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$17h5eaa2b78323fef38E"(i64* align 8 dereferenceable(8) %_1, i64 %count) unnamed_addr #0 !dbg !4671 {
start:
  %count.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !4676, metadata !DIExpression(DW_OP_deref)), !dbg !4677
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4675, metadata !DIExpression()), !dbg !4678
  %_4 = load i64, i64* %_1, align 8, !dbg !4679
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hdc59359d34489ae8E"(i64 %count, i64 %_4), !dbg !4680
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !4680
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !4680
  br label %bb1, !dbg !4680

bb1:                                              ; preds = %start
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !4681
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !4681
  ret { i64, i64 } %5, !dbg !4681
}

; <itertools::adaptors::coalesce::DedupEq as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN75_$LT$itertools..adaptors..coalesce..DedupEq$u20$as$u20$core..fmt..Debug$GT$3fmt17h610de8b47af7f87cE"(%"adaptors::coalesce::DedupEq"* nonnull align 1 %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4682 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"adaptors::coalesce::DedupEq"*, align 8
  %_4 = alloca %"std::fmt::DebugTuple", align 8
  store %"adaptors::coalesce::DedupEq"* %self, %"adaptors::coalesce::DedupEq"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"adaptors::coalesce::DedupEq"** %self.dbg.spill, metadata !4692, metadata !DIExpression()), !dbg !4703
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4693, metadata !DIExpression()), !dbg !4703
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1918 to [0 x i8]*), i64 7), !dbg !4703
  br label %bb1, !dbg !4703

bb1:                                              ; preds = %start
  store %"std::fmt::DebugTuple"* %_4, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4703
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4694, metadata !DIExpression()), !dbg !4704
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_4), !dbg !4704
  br label %bb2, !dbg !4704

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !4705
}

; <itertools::adaptors::multi_product::MultiProductIterState as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN94_$LT$itertools..adaptors..multi_product..MultiProductIterState$u20$as$u20$core..fmt..Debug$GT$3fmt17h99481a852b99f818E"(i8* align 1 dereferenceable(1) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4706 {
start:
  %debug_trait_builder.dbg.spill1 = alloca %"std::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0.dbg.spill = alloca i8*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_25 = alloca i8*, align 8
  %_14 = alloca %"std::fmt::DebugStruct", align 8
  %_7 = alloca %"std::fmt::DebugTuple", align 8
  %_3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4725, metadata !DIExpression()), !dbg !4740
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4726, metadata !DIExpression()), !dbg !4740
  store i8* %self, i8** %_3, align 8, !dbg !4740
  %2 = load i8*, i8** %_3, align 8, !dbg !4740, !nonnull !4
  %3 = load i8, i8* %2, align 1, !dbg !4740, !range !4741
  %4 = sub i8 %3, 2, !dbg !4740
  %5 = icmp eq i8 %4, 0, !dbg !4740
  %_5 = select i1 %5, i64 0, i64 1, !dbg !4740
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4740

bb2:                                              ; preds = %start
  unreachable, !dbg !4740

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_7, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1924 to [0 x i8]*), i64 11), !dbg !4740
  br label %bb4, !dbg !4740

bb1:                                              ; preds = %start
  %__self_0 = load i8*, i8** %_3, align 8, !dbg !4742, !nonnull !4
  store i8* %__self_0, i8** %__self_0.dbg.spill, align 8, !dbg !4742
  call void @llvm.dbg.declare(metadata i8** %__self_0.dbg.spill, metadata !4729, metadata !DIExpression()), !dbg !4743
; call core::fmt::Formatter::debug_struct
  %6 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1919 to [0 x i8]*), i64 7), !dbg !4744
  store i128 %6, i128* %0, align 8, !dbg !4744
  %7 = bitcast %"std::fmt::DebugStruct"* %_14 to i8*, !dbg !4744
  %8 = bitcast i128* %0 to i8*, !dbg !4744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false), !dbg !4744
  br label %bb5, !dbg !4744

bb5:                                              ; preds = %bb1
  store %"std::fmt::DebugStruct"* %_14, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !4744
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !4731, metadata !DIExpression()), !dbg !4745
  store i8* %__self_0, i8** %_25, align 8, !dbg !4746
  %_22.0 = bitcast i8** %_25 to {}*, !dbg !4746
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_14, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc1920 to [0 x i8]*), i64 13, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*)), !dbg !4747
  br label %bb6, !dbg !4747

bb6:                                              ; preds = %bb5
; call core::fmt::builders::DebugStruct::finish
  %9 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_14), !dbg !4747
  %10 = zext i1 %9 to i8, !dbg !4747
  store i8 %10, i8* %1, align 1, !dbg !4747
  br label %bb7, !dbg !4747

bb7:                                              ; preds = %bb4, %bb6
  %11 = load i8, i8* %1, align 1, !dbg !4748, !range !978
  %12 = trunc i8 %11 to i1, !dbg !4748
  ret i1 %12, !dbg !4748

bb4:                                              ; preds = %bb3
  store %"std::fmt::DebugTuple"* %_7, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, align 8, !dbg !4740
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, metadata !4727, metadata !DIExpression()), !dbg !4749
; call core::fmt::builders::DebugTuple::finish
  %13 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_7), !dbg !4749
  %14 = zext i1 %13 to i8, !dbg !4749
  store i8 %14, i8* %1, align 1, !dbg !4749
  br label %bb7, !dbg !4749
}

; <itertools::adaptors::MergeLte as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN66_$LT$itertools..adaptors..MergeLte$u20$as$u20$core..fmt..Debug$GT$3fmt17hd4e54d3313e2d5b0E"(%"adaptors::MergeLte"* nonnull align 1 %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4750 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"adaptors::MergeLte"*, align 8
  %_4 = alloca %"std::fmt::DebugTuple", align 8
  store %"adaptors::MergeLte"* %self, %"adaptors::MergeLte"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"adaptors::MergeLte"** %self.dbg.spill, metadata !4758, metadata !DIExpression()), !dbg !4762
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4759, metadata !DIExpression()), !dbg !4762
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1925 to [0 x i8]*), i64 8), !dbg !4762
  br label %bb1, !dbg !4762

bb1:                                              ; preds = %start
  store %"std::fmt::DebugTuple"* %_4, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4762
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4760, metadata !DIExpression()), !dbg !4763
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_4), !dbg !4763
  br label %bb2, !dbg !4763

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !4764
}

; <itertools::groupbylazy::ChunkIndex as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN71_$LT$itertools..groupbylazy..ChunkIndex$u20$as$u20$core..fmt..Debug$GT$3fmt17hf8c108500e70bd3fE"(%"groupbylazy::ChunkIndex"* align 8 dereferenceable(24) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4765 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0_2.dbg.spill = alloca i64*, align 8
  %__self_0_1.dbg.spill = alloca i64*, align 8
  %__self_0_0.dbg.spill = alloca i64*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"groupbylazy::ChunkIndex"*, align 8
  %_34 = alloca i64*, align 8
  %_26 = alloca i64*, align 8
  %_18 = alloca i64*, align 8
  %_7 = alloca %"std::fmt::DebugStruct", align 8
  store %"groupbylazy::ChunkIndex"* %self, %"groupbylazy::ChunkIndex"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"groupbylazy::ChunkIndex"** %self.dbg.spill, metadata !4778, metadata !DIExpression()), !dbg !4787
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4779, metadata !DIExpression()), !dbg !4787
  %__self_0_0 = bitcast %"groupbylazy::ChunkIndex"* %self to i64*, !dbg !4788
  store i64* %__self_0_0, i64** %__self_0_0.dbg.spill, align 8, !dbg !4788
  call void @llvm.dbg.declare(metadata i64** %__self_0_0.dbg.spill, metadata !4780, metadata !DIExpression()), !dbg !4789
  %__self_0_1 = getelementptr inbounds %"groupbylazy::ChunkIndex", %"groupbylazy::ChunkIndex"* %self, i32 0, i32 1, !dbg !4790
  store i64* %__self_0_1, i64** %__self_0_1.dbg.spill, align 8, !dbg !4790
  call void @llvm.dbg.declare(metadata i64** %__self_0_1.dbg.spill, metadata !4782, metadata !DIExpression()), !dbg !4791
  %__self_0_2 = getelementptr inbounds %"groupbylazy::ChunkIndex", %"groupbylazy::ChunkIndex"* %self, i32 0, i32 2, !dbg !4792
  store i64* %__self_0_2, i64** %__self_0_2.dbg.spill, align 8, !dbg !4792
  call void @llvm.dbg.declare(metadata i64** %__self_0_2.dbg.spill, metadata !4783, metadata !DIExpression()), !dbg !4793
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1926 to [0 x i8]*), i64 10), !dbg !4794
  store i128 %1, i128* %0, align 8, !dbg !4794
  %2 = bitcast %"std::fmt::DebugStruct"* %_7 to i8*, !dbg !4794
  %3 = bitcast i128* %0 to i8*, !dbg !4794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !4794
  br label %bb1, !dbg !4794

bb1:                                              ; preds = %start
  store %"std::fmt::DebugStruct"* %_7, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !4794
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !4784, metadata !DIExpression()), !dbg !4795
  store i64* %__self_0_0, i64** %_18, align 8, !dbg !4796
  %_15.0 = bitcast i64** %_18 to {}*, !dbg !4796
; call core::fmt::builders::DebugStruct::field
  %_11 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1927 to [0 x i8]*), i64 4, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4797
  br label %bb2, !dbg !4797

bb2:                                              ; preds = %bb1
  store i64* %__self_0_1, i64** %_26, align 8, !dbg !4798
  %_23.0 = bitcast i64** %_26 to {}*, !dbg !4798
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1928 to [0 x i8]*), i64 5, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4797
  br label %bb3, !dbg !4797

bb3:                                              ; preds = %bb2
  store i64* %__self_0_2, i64** %_34, align 8, !dbg !4799
  %_31.0 = bitcast i64** %_34 to {}*, !dbg !4799
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1929 to [0 x i8]*), i64 3, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4797
  br label %bb4, !dbg !4797

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7), !dbg !4797
  br label %bb5, !dbg !4797

bb5:                                              ; preds = %bb4
  ret i1 %4, !dbg !4800
}

; <itertools::kmerge_impl::KMergeByLt as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN71_$LT$itertools..kmerge_impl..KMergeByLt$u20$as$u20$core..fmt..Debug$GT$3fmt17h22767f63915318a8E"(%"kmerge_impl::KMergeByLt"* nonnull align 1 %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4801 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"kmerge_impl::KMergeByLt"*, align 8
  %_4 = alloca %"std::fmt::DebugTuple", align 8
  store %"kmerge_impl::KMergeByLt"* %self, %"kmerge_impl::KMergeByLt"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"kmerge_impl::KMergeByLt"** %self.dbg.spill, metadata !4810, metadata !DIExpression()), !dbg !4814
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4811, metadata !DIExpression()), !dbg !4814
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1930 to [0 x i8]*), i64 10), !dbg !4814
  br label %bb1, !dbg !4814

bb1:                                              ; preds = %start
  store %"std::fmt::DebugTuple"* %_4, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4814
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4812, metadata !DIExpression()), !dbg !4815
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_4), !dbg !4815
  br label %bb2, !dbg !4815

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !4816
}

; <itertools::permutations::PermutationState as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN78_$LT$itertools..permutations..PermutationState$u20$as$u20$core..fmt..Debug$GT$3fmt17h7b0ab50a0a2c174fE"(%"permutations::PermutationState"* align 8 dereferenceable(64) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4817 {
start:
  %debug_trait_builder.dbg.spill7 = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0.dbg.spill6 = alloca i64*, align 8
  %debug_trait_builder.dbg.spill4 = alloca %"std::fmt::DebugStruct"*, align 8
  %1 = alloca i128, align 8
  %__self_1.dbg.spill = alloca i64*, align 8
  %__self_0.dbg.spill3 = alloca i64*, align 8
  %debug_trait_builder.dbg.spill1 = alloca %"std::fmt::DebugTuple"*, align 8
  %__self_0.dbg.spill = alloca %"permutations::CompleteState"*, align 8
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"permutations::PermutationState"*, align 8
  %_59 = alloca %"std::fmt::DebugTuple", align 8
  %_56 = alloca %"permutations::CompleteState"*, align 8
  %_47 = alloca %"std::fmt::DebugTuple", align 8
  %_43 = alloca i64*, align 8
  %_35 = alloca i64*, align 8
  %_24 = alloca %"std::fmt::DebugStruct", align 8
  %_19 = alloca i64*, align 8
  %_8 = alloca %"std::fmt::DebugStruct", align 8
  %_3 = alloca i64*, align 8
  %2 = alloca i8, align 1
  store %"permutations::PermutationState"* %self, %"permutations::PermutationState"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::PermutationState"** %self.dbg.spill, metadata !4842, metadata !DIExpression()), !dbg !4861
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4843, metadata !DIExpression()), !dbg !4861
  %3 = bitcast i64** %_3 to %"permutations::PermutationState"**, !dbg !4861
  store %"permutations::PermutationState"* %self, %"permutations::PermutationState"** %3, align 8, !dbg !4861
  %4 = bitcast i64** %_3 to %"permutations::PermutationState"**, !dbg !4861
  %5 = load %"permutations::PermutationState"*, %"permutations::PermutationState"** %4, align 8, !dbg !4861, !nonnull !4
  %6 = bitcast %"permutations::PermutationState"* %5 to i64*, !dbg !4861
  %_5 = load i64, i64* %6, align 8, !dbg !4861, !range !4862
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb10
    i64 3, label %bb1
  ], !dbg !4861

bb2:                                              ; preds = %start
  unreachable, !dbg !4861

bb3:                                              ; preds = %start
  %7 = bitcast i64** %_3 to %"permutations::PermutationState"**, !dbg !4863
  %8 = load %"permutations::PermutationState"*, %"permutations::PermutationState"** %7, align 8, !dbg !4863, !nonnull !4
  %9 = bitcast %"permutations::PermutationState"* %8 to %"permutations::PermutationState::StartUnknownLen"*, !dbg !4863
  %__self_05 = getelementptr inbounds %"permutations::PermutationState::StartUnknownLen", %"permutations::PermutationState::StartUnknownLen"* %9, i32 0, i32 1, !dbg !4863
  store i64* %__self_05, i64** %__self_0.dbg.spill6, align 8, !dbg !4863
  call void @llvm.dbg.declare(metadata i64** %__self_0.dbg.spill6, metadata !4844, metadata !DIExpression()), !dbg !4864
; call core::fmt::Formatter::debug_struct
  %10 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1939 to [0 x i8]*), i64 15), !dbg !4865
  store i128 %10, i128* %0, align 8, !dbg !4865
  %11 = bitcast %"std::fmt::DebugStruct"* %_8 to i8*, !dbg !4865
  %12 = bitcast i128* %0 to i8*, !dbg !4865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false), !dbg !4865
  br label %bb4, !dbg !4865

bb6:                                              ; preds = %start
  %13 = bitcast i64** %_3 to %"permutations::PermutationState"**, !dbg !4866
  %14 = load %"permutations::PermutationState"*, %"permutations::PermutationState"** %13, align 8, !dbg !4866, !nonnull !4
  %15 = bitcast %"permutations::PermutationState"* %14 to %"permutations::PermutationState::OngoingUnknownLen"*, !dbg !4866
  %__self_02 = getelementptr inbounds %"permutations::PermutationState::OngoingUnknownLen", %"permutations::PermutationState::OngoingUnknownLen"* %15, i32 0, i32 1, !dbg !4866
  store i64* %__self_02, i64** %__self_0.dbg.spill3, align 8, !dbg !4866
  call void @llvm.dbg.declare(metadata i64** %__self_0.dbg.spill3, metadata !4849, metadata !DIExpression()), !dbg !4867
  %16 = bitcast i64** %_3 to %"permutations::PermutationState"**, !dbg !4868
  %17 = load %"permutations::PermutationState"*, %"permutations::PermutationState"** %16, align 8, !dbg !4868, !nonnull !4
  %18 = bitcast %"permutations::PermutationState"* %17 to %"permutations::PermutationState::OngoingUnknownLen"*, !dbg !4868
  %__self_1 = getelementptr inbounds %"permutations::PermutationState::OngoingUnknownLen", %"permutations::PermutationState::OngoingUnknownLen"* %18, i32 0, i32 2, !dbg !4868
  store i64* %__self_1, i64** %__self_1.dbg.spill, align 8, !dbg !4868
  call void @llvm.dbg.declare(metadata i64** %__self_1.dbg.spill, metadata !4851, metadata !DIExpression()), !dbg !4869
; call core::fmt::Formatter::debug_struct
  %19 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1936 to [0 x i8]*), i64 17), !dbg !4870
  store i128 %19, i128* %1, align 8, !dbg !4870
  %20 = bitcast %"std::fmt::DebugStruct"* %_24 to i8*, !dbg !4870
  %21 = bitcast i128* %1 to i8*, !dbg !4870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !4870
  br label %bb7, !dbg !4870

bb10:                                             ; preds = %start
  %22 = bitcast i64** %_3 to %"permutations::PermutationState"**, !dbg !4871
  %23 = load %"permutations::PermutationState"*, %"permutations::PermutationState"** %22, align 8, !dbg !4871, !nonnull !4
  %24 = bitcast %"permutations::PermutationState"* %23 to %"permutations::PermutationState::Complete"*, !dbg !4871
  %__self_0 = getelementptr inbounds %"permutations::PermutationState::Complete", %"permutations::PermutationState::Complete"* %24, i32 0, i32 1, !dbg !4871
  store %"permutations::CompleteState"* %__self_0, %"permutations::CompleteState"** %__self_0.dbg.spill, align 8, !dbg !4871
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"** %__self_0.dbg.spill, metadata !4855, metadata !DIExpression()), !dbg !4872
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_47, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1932 to [0 x i8]*), i64 8), !dbg !4873
  br label %bb11, !dbg !4873

bb1:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_59, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1931 to [0 x i8]*), i64 5), !dbg !4861
  br label %bb13, !dbg !4861

bb13:                                             ; preds = %bb1
  store %"std::fmt::DebugTuple"* %_59, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4861
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4859, metadata !DIExpression()), !dbg !4874
; call core::fmt::builders::DebugTuple::finish
  %25 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_59), !dbg !4874
  %26 = zext i1 %25 to i8, !dbg !4874
  store i8 %26, i8* %2, align 1, !dbg !4874
  br label %bb14, !dbg !4874

bb14:                                             ; preds = %bb5, %bb9, %bb12, %bb13
  %27 = load i8, i8* %2, align 1, !dbg !4875, !range !978
  %28 = trunc i8 %27 to i1, !dbg !4875
  ret i1 %28, !dbg !4875

bb11:                                             ; preds = %bb10
  store %"std::fmt::DebugTuple"* %_47, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, align 8, !dbg !4873
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, metadata !4857, metadata !DIExpression()), !dbg !4876
  store %"permutations::CompleteState"* %__self_0, %"permutations::CompleteState"** %_56, align 8, !dbg !4877
  %_53.0 = bitcast %"permutations::CompleteState"** %_56 to {}*, !dbg !4877
; call core::fmt::builders::DebugTuple::field
  %_51 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_47, {}* nonnull align 1 %_53.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*)), !dbg !4876
  br label %bb12, !dbg !4876

bb12:                                             ; preds = %bb11
; call core::fmt::builders::DebugTuple::finish
  %29 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_47), !dbg !4876
  %30 = zext i1 %29 to i8, !dbg !4876
  store i8 %30, i8* %2, align 1, !dbg !4876
  br label %bb14, !dbg !4876

bb7:                                              ; preds = %bb6
  store %"std::fmt::DebugStruct"* %_24, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill4, align 8, !dbg !4870
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill4, metadata !4852, metadata !DIExpression()), !dbg !4878
  store i64* %__self_02, i64** %_35, align 8, !dbg !4879
  %_32.0 = bitcast i64** %_35 to {}*, !dbg !4879
; call core::fmt::builders::DebugStruct::field
  %_28 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_24, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1949 to [0 x i8]*), i64 1, {}* nonnull align 1 %_32.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4880
  br label %bb8, !dbg !4880

bb8:                                              ; preds = %bb7
  store i64* %__self_1, i64** %_43, align 8, !dbg !4881
  %_40.0 = bitcast i64** %_43 to {}*, !dbg !4881
; call core::fmt::builders::DebugStruct::field
  %_36 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_24, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1938 to [0 x i8]*), i64 5, {}* nonnull align 1 %_40.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4880
  br label %bb9, !dbg !4880

bb9:                                              ; preds = %bb8
; call core::fmt::builders::DebugStruct::finish
  %31 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_24), !dbg !4880
  %32 = zext i1 %31 to i8, !dbg !4880
  store i8 %32, i8* %2, align 1, !dbg !4880
  br label %bb14, !dbg !4880

bb4:                                              ; preds = %bb3
  store %"std::fmt::DebugStruct"* %_8, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill7, align 8, !dbg !4865
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill7, metadata !4846, metadata !DIExpression()), !dbg !4882
  store i64* %__self_05, i64** %_19, align 8, !dbg !4883
  %_16.0 = bitcast i64** %_19 to {}*, !dbg !4883
; call core::fmt::builders::DebugStruct::field
  %_12 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1949 to [0 x i8]*), i64 1, {}* nonnull align 1 %_16.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4884
  br label %bb5, !dbg !4884

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugStruct::finish
  %33 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_8), !dbg !4884
  %34 = zext i1 %33 to i8, !dbg !4884
  store i8 %34, i8* %2, align 1, !dbg !4884
  br label %bb14, !dbg !4884
}

; <itertools::permutations::CompleteState as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN75_$LT$itertools..permutations..CompleteState$u20$as$u20$core..fmt..Debug$GT$3fmt17h095a9a725735a5baE"(%"permutations::CompleteState"* align 8 dereferenceable(56) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4885 {
start:
  %debug_trait_builder.dbg.spill5 = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_1.dbg.spill4 = alloca i64*, align 8
  %__self_0.dbg.spill2 = alloca i64*, align 8
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugStruct"*, align 8
  %1 = alloca i128, align 8
  %__self_1.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %__self_0.dbg.spill = alloca %"std::vec::Vec<usize>"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"permutations::CompleteState"*, align 8
  %_52 = alloca %"std::vec::Vec<usize>"*, align 8
  %_44 = alloca %"std::vec::Vec<usize>"*, align 8
  %_33 = alloca %"std::fmt::DebugStruct", align 8
  %_28 = alloca i64*, align 8
  %_20 = alloca i64*, align 8
  %_9 = alloca %"std::fmt::DebugStruct", align 8
  %_3 = alloca i64*, align 8
  %2 = alloca i8, align 1
  store %"permutations::CompleteState"* %self, %"permutations::CompleteState"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"permutations::CompleteState"** %self.dbg.spill, metadata !4890, metadata !DIExpression()), !dbg !4904
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4891, metadata !DIExpression()), !dbg !4904
  %3 = bitcast i64** %_3 to %"permutations::CompleteState"**, !dbg !4904
  store %"permutations::CompleteState"* %self, %"permutations::CompleteState"** %3, align 8, !dbg !4904
  %4 = bitcast i64** %_3 to %"permutations::CompleteState"**, !dbg !4904
  %5 = load %"permutations::CompleteState"*, %"permutations::CompleteState"** %4, align 8, !dbg !4904, !nonnull !4
  %6 = bitcast %"permutations::CompleteState"* %5 to i64*, !dbg !4904
  %_5 = load i64, i64* %6, align 8, !dbg !4904, !range !230
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !4904

bb2:                                              ; preds = %start
  unreachable, !dbg !4904

bb3:                                              ; preds = %start
  %7 = bitcast i64** %_3 to %"permutations::CompleteState"**, !dbg !4905
  %8 = load %"permutations::CompleteState"*, %"permutations::CompleteState"** %7, align 8, !dbg !4905, !nonnull !4
  %9 = bitcast %"permutations::CompleteState"* %8 to %"permutations::CompleteState::Start"*, !dbg !4905
  %__self_01 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %9, i32 0, i32 1, !dbg !4905
  store i64* %__self_01, i64** %__self_0.dbg.spill2, align 8, !dbg !4905
  call void @llvm.dbg.declare(metadata i64** %__self_0.dbg.spill2, metadata !4892, metadata !DIExpression()), !dbg !4906
  %10 = bitcast i64** %_3 to %"permutations::CompleteState"**, !dbg !4907
  %11 = load %"permutations::CompleteState"*, %"permutations::CompleteState"** %10, align 8, !dbg !4907, !nonnull !4
  %12 = bitcast %"permutations::CompleteState"* %11 to %"permutations::CompleteState::Start"*, !dbg !4907
  %__self_13 = getelementptr inbounds %"permutations::CompleteState::Start", %"permutations::CompleteState::Start"* %12, i32 0, i32 2, !dbg !4907
  store i64* %__self_13, i64** %__self_1.dbg.spill4, align 8, !dbg !4907
  call void @llvm.dbg.declare(metadata i64** %__self_1.dbg.spill4, metadata !4894, metadata !DIExpression()), !dbg !4908
; call core::fmt::Formatter::debug_struct
  %13 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1947 to [0 x i8]*), i64 5), !dbg !4909
  store i128 %13, i128* %0, align 8, !dbg !4909
  %14 = bitcast %"std::fmt::DebugStruct"* %_9 to i8*, !dbg !4909
  %15 = bitcast i128* %0 to i8*, !dbg !4909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false), !dbg !4909
  br label %bb4, !dbg !4909

bb1:                                              ; preds = %start
  %16 = bitcast i64** %_3 to %"permutations::CompleteState"**, !dbg !4910
  %17 = load %"permutations::CompleteState"*, %"permutations::CompleteState"** %16, align 8, !dbg !4910, !nonnull !4
  %18 = bitcast %"permutations::CompleteState"* %17 to %"permutations::CompleteState::Ongoing"*, !dbg !4910
  %__self_0 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %18, i32 0, i32 1, !dbg !4910
  store %"std::vec::Vec<usize>"* %__self_0, %"std::vec::Vec<usize>"** %__self_0.dbg.spill, align 8, !dbg !4910
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %__self_0.dbg.spill, metadata !4898, metadata !DIExpression()), !dbg !4911
  %19 = bitcast i64** %_3 to %"permutations::CompleteState"**, !dbg !4912
  %20 = load %"permutations::CompleteState"*, %"permutations::CompleteState"** %19, align 8, !dbg !4912, !nonnull !4
  %21 = bitcast %"permutations::CompleteState"* %20 to %"permutations::CompleteState::Ongoing"*, !dbg !4912
  %__self_1 = getelementptr inbounds %"permutations::CompleteState::Ongoing", %"permutations::CompleteState::Ongoing"* %21, i32 0, i32 2, !dbg !4912
  store %"std::vec::Vec<usize>"* %__self_1, %"std::vec::Vec<usize>"** %__self_1.dbg.spill, align 8, !dbg !4912
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<usize>"** %__self_1.dbg.spill, metadata !4900, metadata !DIExpression()), !dbg !4913
; call core::fmt::Formatter::debug_struct
  %22 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1941 to [0 x i8]*), i64 7), !dbg !4914
  store i128 %22, i128* %1, align 8, !dbg !4914
  %23 = bitcast %"std::fmt::DebugStruct"* %_33 to i8*, !dbg !4914
  %24 = bitcast i128* %1 to i8*, !dbg !4914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !4914
  br label %bb7, !dbg !4914

bb7:                                              ; preds = %bb1
  store %"std::fmt::DebugStruct"* %_33, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !4914
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !4901, metadata !DIExpression()), !dbg !4915
  store %"std::vec::Vec<usize>"* %__self_0, %"std::vec::Vec<usize>"** %_44, align 8, !dbg !4916
  %_41.0 = bitcast %"std::vec::Vec<usize>"** %_44 to {}*, !dbg !4916
; call core::fmt::builders::DebugStruct::field
  %_37 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_33, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1942 to [0 x i8]*), i64 7, {}* nonnull align 1 %_41.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*)), !dbg !4917
  br label %bb8, !dbg !4917

bb8:                                              ; preds = %bb7
  store %"std::vec::Vec<usize>"* %__self_1, %"std::vec::Vec<usize>"** %_52, align 8, !dbg !4918
  %_49.0 = bitcast %"std::vec::Vec<usize>"** %_52 to {}*, !dbg !4918
; call core::fmt::builders::DebugStruct::field
  %_45 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_33, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1946 to [0 x i8]*), i64 6, {}* nonnull align 1 %_49.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*)), !dbg !4917
  br label %bb9, !dbg !4917

bb9:                                              ; preds = %bb8
; call core::fmt::builders::DebugStruct::finish
  %25 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_33), !dbg !4917
  %26 = zext i1 %25 to i8, !dbg !4917
  store i8 %26, i8* %2, align 1, !dbg !4917
  br label %bb10, !dbg !4917

bb10:                                             ; preds = %bb6, %bb9
  %27 = load i8, i8* %2, align 1, !dbg !4919, !range !978
  %28 = trunc i8 %27 to i1, !dbg !4919
  ret i1 %28, !dbg !4919

bb4:                                              ; preds = %bb3
  store %"std::fmt::DebugStruct"* %_9, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill5, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill5, metadata !4895, metadata !DIExpression()), !dbg !4920
  store i64* %__self_01, i64** %_20, align 8, !dbg !4921
  %_17.0 = bitcast i64** %_20 to {}*, !dbg !4921
; call core::fmt::builders::DebugStruct::field
  %_13 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_9, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1948 to [0 x i8]*), i64 1, {}* nonnull align 1 %_17.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4922
  br label %bb5, !dbg !4922

bb5:                                              ; preds = %bb4
  store i64* %__self_13, i64** %_28, align 8, !dbg !4923
  %_25.0 = bitcast i64** %_28 to {}*, !dbg !4923
; call core::fmt::builders::DebugStruct::field
  %_21 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_9, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1949 to [0 x i8]*), i64 1, {}* nonnull align 1 %_25.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*)), !dbg !4922
  br label %bb6, !dbg !4922

bb6:                                              ; preds = %bb5
; call core::fmt::builders::DebugStruct::finish
  %29 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_9), !dbg !4922
  %30 = zext i1 %29 to i8, !dbg !4922
  store i8 %30, i8* %2, align 1, !dbg !4922
  br label %bb10, !dbg !4922
}

; <itertools::duplicates_impl::private::ById as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN78_$LT$itertools..duplicates_impl..private..ById$u20$as$u20$core..fmt..Debug$GT$3fmt17h92b401dec2386badE"(%"duplicates_impl::private::ById"* nonnull align 1 %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !4924 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"duplicates_impl::private::ById"*, align 8
  %_4 = alloca %"std::fmt::DebugTuple", align 8
  store %"duplicates_impl::private::ById"* %self, %"duplicates_impl::private::ById"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"duplicates_impl::private::ById"** %self.dbg.spill, metadata !4934, metadata !DIExpression()), !dbg !4938
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !4935, metadata !DIExpression()), !dbg !4938
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1950 to [0 x i8]*), i64 4), !dbg !4938
  br label %bb1, !dbg !4938

bb1:                                              ; preds = %start
  store %"std::fmt::DebugTuple"* %_4, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !4938
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !4936, metadata !DIExpression()), !dbg !4939
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_4), !dbg !4939
  br label %bb2, !dbg !4939

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !4940
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #6

; core::panicking::panic
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #2

; core::panic::location::Location::caller
; Function Attrs: nounwind
declare align 8 dereferenceable(24) %"std::panic::Location"* @_ZN4core5panic8location8Location6caller17hfb9b9b4fd18ca0bcE(%"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #1

; std::sys::sbf::panic
; Function Attrs: noreturn nounwind
declare void @_ZN3std3sys3sbf5panic17h2f31c33434634037E(%"std::panic::PanicInfo"* align 8 dereferenceable(32)) unnamed_addr #7

; <bool as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h8cd87f7769d26608E"(i8* align 1 dereferenceable(1), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nounwind
declare i128 @_ZN4core3fmt9Formatter10debug_list17h22148c574c853296E(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; core::fmt::builders::DebugList::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h572d0b3c8b47cacfE(%"std::fmt::DebugList"* align 8 dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h1a12a50969152654E"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h571918675fe47debE"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: nounwind
declare align 8 dereferenceable(16) %"std::fmt::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h923aa4cd010173edE(%"std::fmt::DebugList"* align 8 dereferenceable(16), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #2

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdaf89633c8bfad9eE"(%"std::alloc::LayoutError"* nonnull align 1, %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #2

; alloc::vec::Vec<T,A>::remove::assert_failed
; Function Attrs: cold noinline noreturn nounwind
declare void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17h875c6a4aba7c4543E"(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #1

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind
declare void @_ZN5alloc5alloc18handle_alloc_error17hc3aabe6032ee3c5aE(i64, i64) unnamed_addr #11

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nounwind
declare void @_ZN5alloc7raw_vec17capacity_overflow17hd70bf339531c8dfaE() unnamed_addr #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #5

; core::fmt::Formatter::debug_tuple
; Function Attrs: nounwind
declare void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24), %"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nounwind
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nounwind
declare align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nounwind
declare align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

attributes #0 = { inlinehint nounwind "target-cpu"="generic" }
attributes #1 = { nounwind "target-cpu"="generic" }
attributes #2 = { cold noinline noreturn nounwind "target-cpu"="generic" }
attributes #3 = { noinline nounwind "target-cpu"="generic" }
attributes #4 = { cold nounwind "target-cpu"="generic" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { nofree nosync nounwind readnone willreturn }
attributes #7 = { noreturn nounwind "target-cpu"="generic" }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { cold noreturn nounwind "target-cpu"="generic" }
attributes #12 = { nounwind }

!llvm.module.flags = !{!80, !81}
!llvm.dbg.cu = !{!82}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !5, identifier: "vtable")
!4 = !{}
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!6 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !10, identifier: "vtable")
!10 = !DICompositeType(tag: DW_TAG_structure_type, name: "NoPayload", scope: !11, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "62c95ed097f3a273d24d56b8c417dfd8")
!11 = !DINamespace(name: "internal_constructor", scope: !12)
!12 = !DINamespace(name: "{impl#0}", scope: !13)
!13 = !DINamespace(name: "panic_info", scope: !14)
!14 = !DINamespace(name: "panic", scope: !15)
!15 = !DINamespace(name: "core", scope: null)
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !18, isLocal: true, isDefinition: true)
!18 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !19, identifier: "vtable")
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !20, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "c8afcc2f0bb79091714124bea5024341")
!20 = !DINamespace(name: "layout", scope: !21)
!21 = !DINamespace(name: "alloc", scope: !15)
!22 = !DIGlobalVariableExpression(var: !23, expr: !DIExpression())
!23 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !24, isLocal: true, isDefinition: true)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !25, identifier: "vtable")
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!26 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !29, isLocal: true, isDefinition: true)
!29 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !30, identifier: "vtable")
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&CompleteState", baseType: !31, size: 64, align: 64, dwarfAddressSpace: 0)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "CompleteState", scope: !32, file: !2, size: 448, align: 64, elements: !34, identifier: "4a198141a85363f16e47d0b20808eb64")
!32 = !DINamespace(name: "permutations", scope: !33)
!33 = !DINamespace(name: "itertools", scope: null)
!34 = !{!35}
!35 = !DICompositeType(tag: DW_TAG_variant_part, scope: !32, file: !2, size: 448, align: 64, elements: !36, templateParams: !4, identifier: "4a198141a85363f16e47d0b20808eb64_variant_part", discriminator: !74)
!36 = !{!37, !42}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "Start", scope: !35, file: !2, baseType: !38, size: 448, align: 64, extraData: i64 0)
!38 = !DICompositeType(tag: DW_TAG_structure_type, name: "Start", scope: !31, file: !2, size: 448, align: 64, elements: !39, templateParams: !4, identifier: "4a198141a85363f16e47d0b20808eb64::Start")
!39 = !{!40, !41}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !38, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !38, file: !2, baseType: !6, size: 64, align: 64, offset: 128)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "Ongoing", scope: !35, file: !2, baseType: !43, size: 448, align: 64, extraData: i64 1)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ongoing", scope: !31, file: !2, size: 448, align: 64, elements: !44, templateParams: !4, identifier: "4a198141a85363f16e47d0b20808eb64::Ongoing")
!44 = !{!45, !73}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !43, file: !2, baseType: !46, size: 192, align: 64, offset: 64)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<usize, alloc::alloc::Global>", scope: !47, file: !2, size: 192, align: 64, elements: !49, templateParams: !70, identifier: "11c428f49e1d8c99398164090355713d")
!47 = !DINamespace(name: "vec", scope: !48)
!48 = !DINamespace(name: "alloc", scope: null)
!49 = !{!50, !72}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !46, file: !2, baseType: !51, size: 128, align: 64)
!51 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<usize, alloc::alloc::Global>", scope: !52, file: !2, size: 128, align: 64, elements: !53, templateParams: !70, identifier: "a444b1270e63a6e2b91c4d7a81e6fa49")
!52 = !DINamespace(name: "raw_vec", scope: !48)
!53 = !{!54, !66, !67}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !51, file: !2, baseType: !55, size: 64, align: 64)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<usize>", scope: !56, file: !2, size: 64, align: 64, elements: !58, templateParams: !64, identifier: "476c138ce3807d4e6743821f441d0b5")
!56 = !DINamespace(name: "unique", scope: !57)
!57 = !DINamespace(name: "ptr", scope: !15)
!58 = !{!59, !61}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !55, file: !2, baseType: !60, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !55, file: !2, baseType: !62, align: 8)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<usize>", scope: !63, file: !2, align: 8, elements: !4, templateParams: !64, identifier: "dffd5a6784ee6f3292da6b2bf2e3fafd")
!63 = !DINamespace(name: "marker", scope: !15)
!64 = !{!65}
!65 = !DITemplateTypeParameter(name: "T", type: !6)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !51, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !51, file: !2, baseType: !68, align: 8)
!68 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !69, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "9d0734f8822fbd33e4e561ab380af08d")
!69 = !DINamespace(name: "alloc", scope: !48)
!70 = !{!65, !71}
!71 = !DITemplateTypeParameter(name: "A", type: !68)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !46, file: !2, baseType: !6, size: 64, align: 64, offset: 128)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !43, file: !2, baseType: !46, size: 192, align: 64, offset: 256)
!74 = !DIDerivedType(tag: DW_TAG_member, scope: !32, file: !2, baseType: !75, size: 64, align: 64, flags: DIFlagArtificial)
!75 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !78, isLocal: true, isDefinition: true)
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !79, identifier: "vtable")
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Vec<usize, alloc::alloc::Global>", baseType: !46, size: 64, align: 64, dwarfAddressSpace: 0)
!80 = !{i32 7, !"PIC Level", i32 2}
!81 = !{i32 2, !"Debug Info Version", i32 3}
!82 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !83, producer: "clang LLVM (rustc version 1.56.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !84, globals: !117)
!83 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/lib.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3")
!84 = !{!85, !95, !100, !107, !113}
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !86, file: !2, baseType: !89, size: 8, align: 8, flags: DIFlagEnumClass, elements: !90)
!86 = !DINamespace(name: "v1", scope: !87)
!87 = !DINamespace(name: "rt", scope: !88)
!88 = !DINamespace(name: "fmt", scope: !15)
!89 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "Left", value: 0)
!92 = !DIEnumerator(name: "Right", value: 1)
!93 = !DIEnumerator(name: "Center", value: 2)
!94 = !DIEnumerator(name: "Unknown", value: 3)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Result", scope: !96, file: !2, baseType: !89, size: 8, align: 8, flags: DIFlagEnumClass, elements: !97)
!96 = !DINamespace(name: "result", scope: !15)
!97 = !{!98, !99}
!98 = !DIEnumerator(name: "Ok", value: 0)
!99 = !DIEnumerator(name: "Err", value: 1)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !101, file: !2, baseType: !102, size: 8, align: 8, flags: DIFlagEnumClass, elements: !103)
!101 = !DINamespace(name: "cmp", scope: !15)
!102 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "Less", value: -1)
!105 = !DIEnumerator(name: "Equal", value: 0)
!106 = !DIEnumerator(name: "Greater", value: 1)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !108, file: !2, baseType: !89, size: 8, align: 8, flags: DIFlagEnumClass, elements: !109)
!108 = !DINamespace(name: "panicking", scope: !15)
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "Eq", value: 0)
!111 = !DIEnumerator(name: "Ne", value: 1)
!112 = !DIEnumerator(name: "Match", value: 2)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !52, file: !2, baseType: !89, size: 8, align: 8, flags: DIFlagEnumClass, elements: !114)
!114 = !{!115, !116}
!115 = !DIEnumerator(name: "Uninitialized", value: 0)
!116 = !DIEnumerator(name: "Zeroed", value: 1)
!117 = !{!0, !7, !16, !22, !27, !76}
!118 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<usize>>", linkageName: "_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc51ddd6826cf0fbaE", scope: !120, file: !119, line: 45, type: !124, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !163, retainedNodes: !165)
!119 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/enumerate.rs", directory: "", checksumkind: CSK_MD5, checksum: "9c34b678724f0d255a70ef8e29773480")
!120 = !DINamespace(name: "{impl#1}", scope: !121)
!121 = !DINamespace(name: "enumerate", scope: !122)
!122 = !DINamespace(name: "adapters", scope: !123)
!123 = !DINamespace(name: "iter", scope: !15)
!124 = !DISubroutineType(types: !125)
!125 = !{!126, !144}
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, &usize)>", scope: !127, file: !2, size: 128, align: 64, elements: !128, identifier: "186eafc52cb21f12b0cb0e45f249beb9")
!127 = !DINamespace(name: "option", scope: !15)
!128 = !{!129}
!129 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 128, align: 64, elements: !130, templateParams: !133, identifier: "186eafc52cb21f12b0cb0e45f249beb9_variant_part", discriminator: !143)
!130 = !{!131, !139}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !129, file: !2, baseType: !132, size: 128, align: 64, extraData: i64 0)
!132 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !126, file: !2, size: 128, align: 64, elements: !4, templateParams: !133, identifier: "186eafc52cb21f12b0cb0e45f249beb9::None")
!133 = !{!134}
!134 = !DITemplateTypeParameter(name: "T", type: !135)
!135 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, &usize)", file: !2, size: 128, align: 64, elements: !136, templateParams: !4, identifier: "e192fcff75856b17cb6d0e4f66a06cbf")
!136 = !{!137, !138}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !135, file: !2, baseType: !6, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !135, file: !2, baseType: !5, size: 64, align: 64, offset: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !129, file: !2, baseType: !140, size: 128, align: 64)
!140 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !126, file: !2, size: 128, align: 64, elements: !141, templateParams: !133, identifier: "186eafc52cb21f12b0cb0e45f249beb9::Some")
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !140, file: !2, baseType: !135, size: 128, align: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, scope: !127, file: !2, baseType: !75, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Enumerate<core::slice::iter::Iter<usize>>", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "Enumerate<core::slice::iter::Iter<usize>>", scope: !121, file: !2, size: 192, align: 64, elements: !146, templateParams: !163, identifier: "4d4d4c95f6261468f374dab758c978a4")
!146 = !{!147, !162}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !145, file: !2, baseType: !148, size: 128, align: 64)
!148 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<usize>", scope: !149, file: !2, size: 128, align: 64, elements: !151, templateParams: !64, identifier: "59cf271f9749c32524d521ad441ce90c")
!149 = !DINamespace(name: "iter", scope: !150)
!150 = !DINamespace(name: "slice", scope: !15)
!151 = !{!152, !157, !158}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !148, file: !2, baseType: !153, size: 64, align: 64)
!153 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<usize>", scope: !154, file: !2, size: 64, align: 64, elements: !155, templateParams: !64, identifier: "45922692738cf2dd854689e6a4b3fabf")
!154 = !DINamespace(name: "non_null", scope: !57)
!155 = !{!156}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !153, file: !2, baseType: !60, size: 64, align: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !148, file: !2, baseType: !60, size: 64, align: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !148, file: !2, baseType: !159, align: 8)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&usize>", scope: !63, file: !2, align: 8, elements: !4, templateParams: !160, identifier: "d3a568886d759d121c4ec4f9a60d0732")
!160 = !{!161}
!161 = !DITemplateTypeParameter(name: "T", type: !5)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !145, file: !2, baseType: !6, size: 64, align: 64, offset: 128)
!163 = !{!164}
!164 = !DITemplateTypeParameter(name: "I", type: !148)
!165 = !{!166, !167, !169, !183, !185}
!166 = !DILocalVariable(name: "self", arg: 1, scope: !118, file: !119, line: 45, type: !144)
!167 = !DILocalVariable(name: "a", scope: !168, file: !119, line: 46, type: !5, align: 8)
!168 = distinct !DILexicalBlock(scope: !118, file: !119, line: 46, column: 9)
!169 = !DILocalVariable(name: "residual", scope: !170, file: !119, line: 46, type: !171, align: 1)
!170 = distinct !DILexicalBlock(scope: !118, file: !119, line: 46, column: 33)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !127, file: !2, align: 8, elements: !172, identifier: "69e681f2568c3113446c36892492605a")
!172 = !{!173}
!173 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, align: 8, elements: !174, templateParams: !177, identifier: "69e681f2568c3113446c36892492605a_variant_part")
!174 = !{!175}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !173, file: !2, baseType: !176, align: 8)
!176 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !171, file: !2, align: 8, elements: !4, templateParams: !177, identifier: "69e681f2568c3113446c36892492605a::None")
!177 = !{!178}
!178 = !DITemplateTypeParameter(name: "T", type: !179)
!179 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !180, file: !2, align: 8, elements: !181, identifier: "866eee8446b1bfa4f6d9cf9584e40412")
!180 = !DINamespace(name: "convert", scope: !15)
!181 = !{!182}
!182 = !DICompositeType(tag: DW_TAG_variant_part, scope: !180, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "866eee8446b1bfa4f6d9cf9584e40412_variant_part")
!183 = !DILocalVariable(name: "val", scope: !184, file: !119, line: 46, type: !5, align: 8)
!184 = distinct !DILexicalBlock(scope: !118, file: !119, line: 46, column: 17)
!185 = !DILocalVariable(name: "i", scope: !186, file: !119, line: 47, type: !6, align: 8)
!186 = distinct !DILexicalBlock(scope: !168, file: !119, line: 47, column: 9)
!187 = !DILocation(line: 45, column: 13, scope: !118)
!188 = !DILocation(line: 46, column: 33, scope: !170)
!189 = !DILocation(line: 46, column: 17, scope: !118)
!190 = !DILocation(line: 46, column: 17, scope: !184)
!191 = !DILocation(line: 46, column: 13, scope: !168)
!192 = !DILocation(line: 47, column: 17, scope: !168)
!193 = !DILocation(line: 47, column: 13, scope: !186)
!194 = !DILocation(line: 48, column: 9, scope: !186)
!195 = !DILocation(line: 46, column: 17, scope: !170)
!196 = !DILocation(line: 50, column: 6, scope: !118)
!197 = !DILocation(line: 49, column: 14, scope: !186)
!198 = !DILocation(line: 49, column: 9, scope: !186)
!199 = distinct !DISubprogram(name: "from_iter<usize, core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h1209d306fa6dbda7E", scope: !201, file: !200, line: 46, type: !203, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !225, retainedNodes: !219)
!200 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/spec_from_iter_nested.rs", directory: "", checksumkind: CSK_MD5, checksum: "b9f4cb0793ee7a006aefab09de489883")
!201 = !DINamespace(name: "{impl#1}", scope: !202)
!202 = !DINamespace(name: "spec_from_iter_nested", scope: !47)
!203 = !DISubroutineType(types: !204)
!204 = !{!46, !205}
!205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !206, file: !2, size: 128, align: 64, elements: !207, templateParams: !217, identifier: "69fca2fa8ff1e8b25111a4d594bc7d05")
!206 = !DINamespace(name: "rev", scope: !122)
!207 = !{!208}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !205, file: !2, baseType: !209, size: 128, align: 64)
!209 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !210, file: !2, size: 128, align: 64, elements: !212, templateParams: !215, identifier: "519e5ef7586dbc9eb7e108f1b1bab509")
!210 = !DINamespace(name: "range", scope: !211)
!211 = !DINamespace(name: "ops", scope: !15)
!212 = !{!213, !214}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !209, file: !2, baseType: !6, size: 64, align: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !209, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!215 = !{!216}
!216 = !DITemplateTypeParameter(name: "Idx", type: !6)
!217 = !{!218}
!218 = !DITemplateTypeParameter(name: "T", type: !209)
!219 = !{!220, !221, !223}
!220 = !DILocalVariable(name: "iterator", arg: 1, scope: !199, file: !200, line: 46, type: !205)
!221 = !DILocalVariable(name: "vector", scope: !222, file: !200, line: 47, type: !46, align: 8)
!222 = distinct !DILexicalBlock(scope: !199, file: !200, line: 47, column: 9)
!223 = !DILocalVariable(name: "upper", scope: !224, file: !200, line: 48, type: !6, align: 8)
!224 = distinct !DILexicalBlock(scope: !199, file: !200, line: 48, column: 13)
!225 = !{!65, !226}
!226 = !DITemplateTypeParameter(name: "I", type: !205)
!227 = !DILocation(line: 47, column: 13, scope: !222)
!228 = !DILocation(line: 46, column: 18, scope: !199)
!229 = !DILocation(line: 47, column: 32, scope: !199)
!230 = !{i64 0, i64 2}
!231 = !DILocation(line: 47, column: 26, scope: !199)
!232 = !DILocation(line: 48, column: 22, scope: !199)
!233 = !DILocation(line: 48, column: 22, scope: !224)
!234 = !DILocation(line: 48, column: 33, scope: !224)
!235 = !DILocation(line: 53, column: 18, scope: !199)
!236 = !DILocation(line: 56, column: 28, scope: !222)
!237 = !DILocation(line: 56, column: 9, scope: !222)
!238 = !DILocation(line: 58, column: 6, scope: !199)
!239 = distinct !DISubprogram(name: "from_iter<usize, core::ops::range::Range<usize>>", linkageName: "_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h71c6e51a3a8030ffE", scope: !201, file: !200, line: 46, type: !240, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !248, retainedNodes: !242)
!240 = !DISubroutineType(types: !241)
!241 = !{!46, !209}
!242 = !{!243, !244, !246}
!243 = !DILocalVariable(name: "iterator", arg: 1, scope: !239, file: !200, line: 46, type: !209)
!244 = !DILocalVariable(name: "vector", scope: !245, file: !200, line: 47, type: !46, align: 8)
!245 = distinct !DILexicalBlock(scope: !239, file: !200, line: 47, column: 9)
!246 = !DILocalVariable(name: "upper", scope: !247, file: !200, line: 48, type: !6, align: 8)
!247 = distinct !DILexicalBlock(scope: !239, file: !200, line: 48, column: 13)
!248 = !{!65, !249}
!249 = !DITemplateTypeParameter(name: "I", type: !209)
!250 = !DILocation(line: 47, column: 13, scope: !245)
!251 = !DILocation(line: 46, column: 18, scope: !239)
!252 = !DILocation(line: 47, column: 32, scope: !239)
!253 = !DILocation(line: 47, column: 26, scope: !239)
!254 = !DILocation(line: 48, column: 22, scope: !239)
!255 = !DILocation(line: 48, column: 22, scope: !247)
!256 = !DILocation(line: 48, column: 33, scope: !247)
!257 = !DILocation(line: 53, column: 18, scope: !239)
!258 = !DILocation(line: 56, column: 28, scope: !245)
!259 = !DILocation(line: 56, column: 9, scope: !245)
!260 = !DILocation(line: 58, column: 6, scope: !239)
!261 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9d543e1606bc68cdE", scope: !263, file: !262, line: 690, type: !264, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !277)
!262 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "c5d45e507157c14ac9b8f7e5ac0abc2b")
!263 = !DINamespace(name: "{impl#16}", scope: !154)
!264 = !DISubroutineType(types: !265)
!265 = !{!266, !272}
!266 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !154, file: !2, size: 64, align: 64, elements: !267, templateParams: !270, identifier: "406fec2678b8bb45d8db3433ccc0ff79")
!267 = !{!268}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !266, file: !2, baseType: !269, size: 64, align: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!270 = !{!271}
!271 = !DITemplateTypeParameter(name: "T", type: !89)
!272 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !56, file: !2, size: 64, align: 64, elements: !273, templateParams: !270, identifier: "76ad11c5918345b022d81965d637386")
!273 = !{!274, !275}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !272, file: !2, baseType: !269, size: 64, align: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !272, file: !2, baseType: !276, align: 8)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !63, file: !2, align: 8, elements: !4, templateParams: !270, identifier: "d9180f7e28d2761ea11f32bda27bf4b6")
!277 = !{!278}
!278 = !DILocalVariable(name: "unique", arg: 1, scope: !261, file: !262, line: 690, type: !272)
!279 = !DILocation(line: 690, column: 13, scope: !261)
!280 = !DILocation(line: 693, column: 41, scope: !261)
!281 = !DILocation(line: 693, column: 18, scope: !261)
!282 = !DILocation(line: 694, column: 6, scope: !261)
!283 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hdf481845201483dfE", scope: !285, file: !284, line: 115, type: !287, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !314)
!284 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "f520a3b301bedb9c22ac84264ef5f708")
!285 = !DINamespace(name: "{impl#1}", scope: !286)
!286 = !DINamespace(name: "collections", scope: !48)
!287 = !DISubroutineType(types: !288)
!288 = !{!289, !292}
!289 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !286, file: !2, size: 128, align: 64, elements: !290, templateParams: !4, identifier: "fff28d7e14cf4bf06ade0fa062373aa3")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !289, file: !2, baseType: !292, size: 128, align: 64)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !286, file: !2, size: 128, align: 64, elements: !293, identifier: "858354db2cd943328b0f424df687c6a6")
!293 = !{!294}
!294 = !DICompositeType(tag: DW_TAG_variant_part, scope: !286, file: !2, size: 128, align: 64, elements: !295, templateParams: !4, identifier: "858354db2cd943328b0f424df687c6a6_variant_part", discriminator: !313)
!295 = !{!296, !298}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !294, file: !2, baseType: !297, size: 128, align: 64, extraData: i64 0)
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !292, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "858354db2cd943328b0f424df687c6a6::CapacityOverflow")
!298 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !294, file: !2, baseType: !299, size: 128, align: 64)
!299 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !292, file: !2, size: 128, align: 64, elements: !300, templateParams: !4, identifier: "858354db2cd943328b0f424df687c6a6::AllocError")
!300 = !{!301, !311}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !299, file: !2, baseType: !302, size: 128, align: 64)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !20, file: !2, size: 128, align: 64, elements: !303, templateParams: !4, identifier: "f69d3395c48d400fe21824ae0e4df080")
!303 = !{!304, !305}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "size_", scope: !302, file: !2, baseType: !6, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "align_", scope: !302, file: !2, baseType: !306, size: 64, align: 64, offset: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !307, file: !2, size: 64, align: 64, elements: !309, templateParams: !4, identifier: "21623c21723d1648102501c4f9f9b08d")
!307 = !DINamespace(name: "nonzero", scope: !308)
!308 = !DINamespace(name: "num", scope: !15)
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !306, file: !2, baseType: !6, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !299, file: !2, baseType: !312, align: 8)
!312 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, scope: !286, file: !2, baseType: !75, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!314 = !{!315}
!315 = !DILocalVariable(name: "kind", arg: 1, scope: !283, file: !284, line: 115, type: !292)
!316 = !DILocation(line: 115, column: 13, scope: !283)
!317 = !DILocation(line: 116, column: 9, scope: !283)
!318 = !DILocation(line: 117, column: 6, scope: !283)
!319 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2b2e804e1b0a951aE", scope: !321, file: !320, line: 1913, type: !322, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !354, retainedNodes: !350)
!320 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "f73030f150a3926f0f5a346ed13cef73")
!321 = !DINamespace(name: "{impl#37}", scope: !96)
!322 = !DISubroutineType(types: !323)
!323 = !{!324, !340}
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !96, file: !2, size: 192, align: 64, elements: !325, identifier: "92d66547c3ce619914559dc39cba3e1d")
!325 = !{!326}
!326 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 192, align: 64, elements: !327, templateParams: !332, identifier: "92d66547c3ce619914559dc39cba3e1d_variant_part", discriminator: !339)
!327 = !{!328, !335}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !326, file: !2, baseType: !329, size: 192, align: 64, extraData: i64 0)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !324, file: !2, size: 192, align: 64, elements: !330, templateParams: !332, identifier: "92d66547c3ce619914559dc39cba3e1d::Ok")
!330 = !{!331}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !329, file: !2, baseType: !312, align: 8, offset: 64)
!332 = !{!333, !334}
!333 = !DITemplateTypeParameter(name: "T", type: !312)
!334 = !DITemplateTypeParameter(name: "E", type: !289)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !326, file: !2, baseType: !336, size: 192, align: 64, extraData: i64 1)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !324, file: !2, size: 192, align: 64, elements: !337, templateParams: !332, identifier: "92d66547c3ce619914559dc39cba3e1d::Err")
!337 = !{!338}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !336, file: !2, baseType: !289, size: 128, align: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, scope: !96, file: !2, baseType: !75, size: 64, align: 64, flags: DIFlagArtificial)
!340 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !96, file: !2, size: 128, align: 64, elements: !341, identifier: "5586c31d357d0a8a8f41d564473a9cbf")
!341 = !{!342}
!342 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 128, align: 64, elements: !343, templateParams: !348, identifier: "5586c31d357d0a8a8f41d564473a9cbf_variant_part")
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !342, file: !2, baseType: !345, size: 128, align: 64)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !340, file: !2, size: 128, align: 64, elements: !346, templateParams: !348, identifier: "5586c31d357d0a8a8f41d564473a9cbf::Err")
!346 = !{!347}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !345, file: !2, baseType: !292, size: 128, align: 64)
!348 = !{!178, !349}
!349 = !DITemplateTypeParameter(name: "E", type: !292)
!350 = !{!351, !352}
!351 = !DILocalVariable(name: "residual", arg: 1, scope: !319, file: !320, line: 1913, type: !340)
!352 = !DILocalVariable(name: "e", scope: !353, file: !320, line: 1915, type: !292, align: 8)
!353 = distinct !DILexicalBlock(scope: !319, file: !320, line: 1915, column: 13)
!354 = !{!333, !349, !355}
!355 = !DITemplateTypeParameter(name: "F", type: !289)
!356 = !DILocation(line: 1913, column: 22, scope: !319)
!357 = !DILocation(line: 1915, column: 17, scope: !319)
!358 = !DILocation(line: 1915, column: 17, scope: !353)
!359 = !DILocation(line: 1915, column: 27, scope: !353)
!360 = !DILocation(line: 1915, column: 23, scope: !353)
!361 = !DILocation(line: 1917, column: 6, scope: !319)
!362 = distinct !DISubprogram(name: "from_residual<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h46a049a9bc5611d6E", scope: !321, file: !320, line: 1913, type: !363, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !398, retainedNodes: !394)
!363 = !DISubroutineType(types: !364)
!364 = !{!365, !385}
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", scope: !96, file: !2, size: 192, align: 64, elements: !366, identifier: "f1386a55091ece7d92996439741f9fac")
!366 = !{!367}
!367 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 192, align: 64, elements: !368, templateParams: !377, identifier: "f1386a55091ece7d92996439741f9fac_variant_part", discriminator: !384)
!368 = !{!369, !380}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !367, file: !2, baseType: !370, size: 192, align: 64)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !365, file: !2, size: 192, align: 64, elements: !371, templateParams: !377, identifier: "f1386a55091ece7d92996439741f9fac::Ok")
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !370, file: !2, baseType: !373, size: 192, align: 64)
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::alloc::layout::Layout, usize)", file: !2, size: 192, align: 64, elements: !374, templateParams: !4, identifier: "67f85d36b181012f3a00f61c3a83b547")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !373, file: !2, baseType: !302, size: 128, align: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !373, file: !2, baseType: !6, size: 64, align: 64, offset: 128)
!377 = !{!378, !379}
!378 = !DITemplateTypeParameter(name: "T", type: !373)
!379 = !DITemplateTypeParameter(name: "E", type: !19)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !367, file: !2, baseType: !381, size: 192, align: 64, extraData: i64 0)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !365, file: !2, size: 192, align: 64, elements: !382, templateParams: !377, identifier: "f1386a55091ece7d92996439741f9fac::Err")
!382 = !{!383}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !381, file: !2, baseType: !19, align: 8)
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !96, file: !2, baseType: !75, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !96, file: !2, align: 8, elements: !386, identifier: "70f8e6db75b3986e768f049f32b98569")
!386 = !{!387}
!387 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, align: 8, elements: !388, templateParams: !393, identifier: "70f8e6db75b3986e768f049f32b98569_variant_part")
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !387, file: !2, baseType: !390, align: 8)
!390 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !385, file: !2, align: 8, elements: !391, templateParams: !393, identifier: "70f8e6db75b3986e768f049f32b98569::Err")
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !390, file: !2, baseType: !19, align: 8)
!393 = !{!178, !379}
!394 = !{!395, !396}
!395 = !DILocalVariable(name: "residual", arg: 1, scope: !362, file: !320, line: 1913, type: !385)
!396 = !DILocalVariable(name: "e", scope: !397, file: !320, line: 1915, type: !19, align: 1)
!397 = distinct !DILexicalBlock(scope: !362, file: !320, line: 1915, column: 13)
!398 = !{!378, !379, !399}
!399 = !DITemplateTypeParameter(name: "F", type: !19)
!400 = !DILocation(line: 1913, column: 22, scope: !362)
!401 = !DILocation(line: 1915, column: 17, scope: !397)
!402 = !DILocation(line: 1915, column: 27, scope: !397)
!403 = !DILocation(line: 1915, column: 23, scope: !397)
!404 = !DILocation(line: 1917, column: 6, scope: !362)
!405 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h54656286740a6161E", scope: !321, file: !320, line: 1913, type: !406, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !449, retainedNodes: !445)
!406 = !DISubroutineType(types: !407)
!407 = !{!408, !436}
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !96, file: !2, size: 128, align: 64, elements: !409, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a")
!409 = !{!410}
!410 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 128, align: 64, elements: !411, templateParams: !428, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a_variant_part", discriminator: !339)
!411 = !{!412, !432}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !410, file: !2, baseType: !413, size: 128, align: 64)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !408, file: !2, size: 128, align: 64, elements: !414, templateParams: !428, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a::Ok")
!414 = !{!415}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !413, file: !2, baseType: !416, size: 128, align: 64)
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !154, file: !2, size: 128, align: 64, elements: !417, templateParams: !423, identifier: "7a9278b7166ad75b206b800760749ea")
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !416, file: !2, baseType: !419, size: 128, align: 64)
!419 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !420, templateParams: !4, identifier: "f5bc56280f62752aca6114f169d6965e")
!420 = !{!421, !422}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !419, file: !2, baseType: !269, size: 64, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !419, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!423 = !{!424}
!424 = !DITemplateTypeParameter(name: "T", type: !425)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, align: 8, elements: !426)
!426 = !{!427}
!427 = !DISubrange(count: -1, lowerBound: 0)
!428 = !{!429, !430}
!429 = !DITemplateTypeParameter(name: "T", type: !416)
!430 = !DITemplateTypeParameter(name: "E", type: !431)
!431 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !21, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "76621f17fc0738bb8f0dd793239190c0")
!432 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !410, file: !2, baseType: !433, size: 128, align: 64, extraData: i64 0)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !408, file: !2, size: 128, align: 64, elements: !434, templateParams: !428, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a::Err")
!434 = !{!435}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !433, file: !2, baseType: !431, align: 8)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !96, file: !2, align: 8, elements: !437, identifier: "51cf100009ff4ba85432fdae9dd67163")
!437 = !{!438}
!438 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, align: 8, elements: !439, templateParams: !444, identifier: "51cf100009ff4ba85432fdae9dd67163_variant_part")
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !438, file: !2, baseType: !441, align: 8)
!441 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !436, file: !2, align: 8, elements: !442, templateParams: !444, identifier: "51cf100009ff4ba85432fdae9dd67163::Err")
!442 = !{!443}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !441, file: !2, baseType: !431, align: 8)
!444 = !{!178, !430}
!445 = !{!446, !447}
!446 = !DILocalVariable(name: "residual", arg: 1, scope: !405, file: !320, line: 1913, type: !436)
!447 = !DILocalVariable(name: "e", scope: !448, file: !320, line: 1915, type: !431, align: 1)
!448 = distinct !DILexicalBlock(scope: !405, file: !320, line: 1915, column: 13)
!449 = !{!429, !430, !450}
!450 = !DITemplateTypeParameter(name: "F", type: !431)
!451 = !DILocation(line: 1913, column: 22, scope: !405)
!452 = !DILocation(line: 1915, column: 17, scope: !448)
!453 = !DILocation(line: 1915, column: 27, scope: !448)
!454 = !DILocation(line: 1915, column: 23, scope: !448)
!455 = !DILocation(line: 1917, column: 6, scope: !405)
!456 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h846f6cef6ac19211E", scope: !321, file: !320, line: 1913, type: !457, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !485, retainedNodes: !481)
!457 = !DISubroutineType(types: !458)
!458 = !{!459, !472}
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !96, file: !2, size: 192, align: 64, elements: !460, identifier: "3049717e39425364a41f3b8d31cb2182")
!460 = !{!461}
!461 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 192, align: 64, elements: !462, templateParams: !467, identifier: "3049717e39425364a41f3b8d31cb2182_variant_part", discriminator: !339)
!462 = !{!463, !468}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !461, file: !2, baseType: !464, size: 192, align: 64, extraData: i64 0)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !459, file: !2, size: 192, align: 64, elements: !465, templateParams: !467, identifier: "3049717e39425364a41f3b8d31cb2182::Ok")
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !464, file: !2, baseType: !416, size: 128, align: 64, offset: 64)
!467 = !{!429, !334}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !461, file: !2, baseType: !469, size: 192, align: 64, extraData: i64 1)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !459, file: !2, size: 192, align: 64, elements: !470, templateParams: !467, identifier: "3049717e39425364a41f3b8d31cb2182::Err")
!470 = !{!471}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !469, file: !2, baseType: !289, size: 128, align: 64, offset: 64)
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !96, file: !2, size: 128, align: 64, elements: !473, identifier: "9b65f6c8cba79f65480ffc68695af4b1")
!473 = !{!474}
!474 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 128, align: 64, elements: !475, templateParams: !480, identifier: "9b65f6c8cba79f65480ffc68695af4b1_variant_part")
!475 = !{!476}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !474, file: !2, baseType: !477, size: 128, align: 64)
!477 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !472, file: !2, size: 128, align: 64, elements: !478, templateParams: !480, identifier: "9b65f6c8cba79f65480ffc68695af4b1::Err")
!478 = !{!479}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !477, file: !2, baseType: !289, size: 128, align: 64)
!480 = !{!178, !334}
!481 = !{!482, !483}
!482 = !DILocalVariable(name: "residual", arg: 1, scope: !456, file: !320, line: 1913, type: !472)
!483 = !DILocalVariable(name: "e", scope: !484, file: !320, line: 1915, type: !289, align: 8)
!484 = distinct !DILexicalBlock(scope: !456, file: !320, line: 1915, column: 13)
!485 = !{!429, !334, !355}
!486 = !DILocation(line: 1913, column: 22, scope: !456)
!487 = !DILocation(line: 1915, column: 17, scope: !456)
!488 = !DILocation(line: 1915, column: 17, scope: !484)
!489 = !DILocation(line: 1915, column: 27, scope: !484)
!490 = !DILocation(line: 1915, column: 23, scope: !484)
!491 = !DILocation(line: 1917, column: 6, scope: !456)
!492 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17haaf5fd1809fd2271E", scope: !321, file: !320, line: 1913, type: !493, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !499, retainedNodes: !495)
!493 = !DISubroutineType(types: !494)
!494 = !{!324, !472}
!495 = !{!496, !497}
!496 = !DILocalVariable(name: "residual", arg: 1, scope: !492, file: !320, line: 1913, type: !472)
!497 = !DILocalVariable(name: "e", scope: !498, file: !320, line: 1915, type: !289, align: 8)
!498 = distinct !DILexicalBlock(scope: !492, file: !320, line: 1915, column: 13)
!499 = !{!333, !334, !355}
!500 = !DILocation(line: 1913, column: 22, scope: !492)
!501 = !DILocation(line: 1915, column: 17, scope: !492)
!502 = !DILocation(line: 1915, column: 17, scope: !498)
!503 = !DILocation(line: 1915, column: 27, scope: !498)
!504 = !DILocation(line: 1915, column: 23, scope: !498)
!505 = !DILocation(line: 1917, column: 6, scope: !492)
!506 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbc8f0f0227d7fc3cE", scope: !321, file: !320, line: 1913, type: !507, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !513, retainedNodes: !509)
!507 = !DISubroutineType(types: !508)
!508 = !{!459, !340}
!509 = !{!510, !511}
!510 = !DILocalVariable(name: "residual", arg: 1, scope: !506, file: !320, line: 1913, type: !340)
!511 = !DILocalVariable(name: "e", scope: !512, file: !320, line: 1915, type: !292, align: 8)
!512 = distinct !DILexicalBlock(scope: !506, file: !320, line: 1915, column: 13)
!513 = !{!429, !349, !355}
!514 = !DILocation(line: 1913, column: 22, scope: !506)
!515 = !DILocation(line: 1915, column: 17, scope: !506)
!516 = !DILocation(line: 1915, column: 17, scope: !512)
!517 = !DILocation(line: 1915, column: 27, scope: !512)
!518 = !DILocation(line: 1915, column: 23, scope: !512)
!519 = !DILocation(line: 1917, column: 6, scope: !506)
!520 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd470ea46d1981105E", scope: !321, file: !320, line: 1913, type: !521, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !541, retainedNodes: !537)
!521 = !DISubroutineType(types: !522)
!522 = !{!523, !385}
!523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !96, file: !2, size: 128, align: 64, elements: !524, identifier: "fe29df956a262954e135d4a574f5da26")
!524 = !{!525}
!525 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 128, align: 64, elements: !526, templateParams: !531, identifier: "fe29df956a262954e135d4a574f5da26_variant_part", discriminator: !384)
!526 = !{!527, !533}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !525, file: !2, baseType: !528, size: 128, align: 64)
!528 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !523, file: !2, size: 128, align: 64, elements: !529, templateParams: !531, identifier: "fe29df956a262954e135d4a574f5da26::Ok")
!529 = !{!530}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !528, file: !2, baseType: !302, size: 128, align: 64)
!531 = !{!532, !379}
!532 = !DITemplateTypeParameter(name: "T", type: !302)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !525, file: !2, baseType: !534, size: 128, align: 64, extraData: i64 0)
!534 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !523, file: !2, size: 128, align: 64, elements: !535, templateParams: !531, identifier: "fe29df956a262954e135d4a574f5da26::Err")
!535 = !{!536}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !534, file: !2, baseType: !19, align: 8)
!537 = !{!538, !539}
!538 = !DILocalVariable(name: "residual", arg: 1, scope: !520, file: !320, line: 1913, type: !385)
!539 = !DILocalVariable(name: "e", scope: !540, file: !320, line: 1915, type: !19, align: 1)
!540 = distinct !DILexicalBlock(scope: !520, file: !320, line: 1915, column: 13)
!541 = !{!532, !379, !399}
!542 = !DILocation(line: 1913, column: 22, scope: !520)
!543 = !DILocation(line: 1915, column: 17, scope: !540)
!544 = !DILocation(line: 1915, column: 27, scope: !540)
!545 = !DILocation(line: 1915, column: 23, scope: !540)
!546 = !DILocation(line: 1917, column: 6, scope: !520)
!547 = distinct !DISubprogram(name: "type_id<core::panic::panic_info::{impl#0}::internal_constructor::NoPayload>", linkageName: "_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h5b46453aad772686E", scope: !549, file: !548, line: 133, type: !551, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !559, retainedNodes: !557)
!548 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/any.rs", directory: "", checksumkind: CSK_MD5, checksum: "2c8dba47a5060f511f627cde0934be05")
!549 = !DINamespace(name: "{impl#0}", scope: !550)
!550 = !DINamespace(name: "any", scope: !15)
!551 = !DISubroutineType(types: !552)
!552 = !{!553, !556}
!553 = !DICompositeType(tag: DW_TAG_structure_type, name: "TypeId", scope: !550, file: !2, size: 64, align: 64, elements: !554, templateParams: !4, identifier: "c41d611025883ac3518ca2acbe7522f7")
!554 = !{!555}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !553, file: !2, baseType: !75, size: 64, align: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&NoPayload", baseType: !10, size: 64, align: 64, dwarfAddressSpace: 0)
!557 = !{!558}
!558 = !DILocalVariable(name: "self", arg: 1, scope: !547, file: !548, line: 133, type: !556)
!559 = !{!560}
!560 = !DITemplateTypeParameter(name: "T", type: !10)
!561 = !DILocation(line: 133, column: 16, scope: !547)
!562 = !DILocation(line: 134, column: 9, scope: !547)
!563 = !DILocation(line: 135, column: 6, scope: !547)
!564 = distinct !DISubprogram(name: "begin_panic<&str>", linkageName: "_ZN3std9panicking11begin_panic17hb30a5c1f168cf260E", scope: !566, file: !565, line: 790, type: !568, scopeLine: 790, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !705, retainedNodes: !582)
!565 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/std/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "9a21f51a0de463767e90eea7a94f5329")
!566 = !DINamespace(name: "panicking", scope: !567)
!567 = !DINamespace(name: "std", scope: null)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !570, !574}
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !571, templateParams: !4, identifier: "7ef2a91eecc7bcf4b4aaea2dbce79437")
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !570, file: !2, baseType: !269, size: 64, align: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !570, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Location", baseType: !575, size: 64, align: 64, dwarfAddressSpace: 0)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !576, file: !2, size: 192, align: 64, elements: !577, templateParams: !4, identifier: "9f9749776572719cc82f4bbe4f5eb8d")
!576 = !DINamespace(name: "location", scope: !14)
!577 = !{!578, !579, !581}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !575, file: !2, baseType: !570, size: 128, align: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !575, file: !2, baseType: !580, size: 32, align: 32, offset: 128)
!580 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !575, file: !2, baseType: !580, size: 32, align: 32, offset: 160)
!582 = !{!583, !584}
!583 = !DILocalVariable(name: "_msg", arg: 1, scope: !564, file: !565, line: 790, type: !570)
!584 = !DILocalVariable(name: "info", scope: !585, file: !565, line: 791, type: !586, align: 8)
!585 = distinct !DILexicalBlock(scope: !564, file: !565, line: 791, column: 5)
!586 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicInfo", scope: !13, file: !2, size: 256, align: 64, elements: !587, templateParams: !4, identifier: "4a04907f18776341a0ae17404e205d06")
!587 = !{!588, !598, !704}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !586, file: !2, baseType: !589, size: 128, align: 64)
!589 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !590, templateParams: !4, identifier: "383db8294e4b3ea47f6b628b3841b65c")
!590 = !{!591, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !589, file: !2, baseType: !592, size: 64, align: 64, flags: DIFlagArtificial)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !589, file: !2, baseType: !594, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !595, size: 64, align: 64, dwarfAddressSpace: 0)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 192, align: 64, elements: !596)
!596 = !{!597}
!597 = !DISubrange(count: 3, lowerBound: 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !586, file: !2, baseType: !599, size: 64, align: 64, offset: 128)
!599 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&core::fmt::Arguments>", scope: !127, file: !2, size: 64, align: 64, elements: !600, identifier: "5f11674a8ad885214fc20997bca247b8")
!600 = !{!601}
!601 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 64, align: 64, elements: !602, templateParams: !605, identifier: "5f11674a8ad885214fc20997bca247b8_variant_part", discriminator: !661)
!602 = !{!603, !700}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !601, file: !2, baseType: !604, size: 64, align: 64, extraData: i64 0)
!604 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !599, file: !2, size: 64, align: 64, elements: !4, templateParams: !605, identifier: "5f11674a8ad885214fc20997bca247b8::None")
!605 = !{!606}
!606 = !DITemplateTypeParameter(name: "T", type: !607)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Arguments", baseType: !608, size: 64, align: 64, dwarfAddressSpace: 0)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !88, file: !2, size: 384, align: 64, elements: !609, templateParams: !4, identifier: "503d474dbdb4b9bdcb6335aff8fef947")
!609 = !{!610, !616, !662}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !608, file: !2, baseType: !611, size: 128, align: 64)
!611 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !612, templateParams: !4, identifier: "e5181a2ba73cefd2b9372dc5646453a9")
!612 = !{!613, !615}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !611, file: !2, baseType: !614, size: 64, align: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !570, size: 64, align: 64, dwarfAddressSpace: 0)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !611, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !608, file: !2, baseType: !617, size: 128, align: 64, offset: 128)
!617 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !127, file: !2, size: 128, align: 64, elements: !618, identifier: "397a0ac37bf3530f2da349092773bdb1")
!618 = !{!619}
!619 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 128, align: 64, elements: !620, templateParams: !623, identifier: "397a0ac37bf3530f2da349092773bdb1_variant_part", discriminator: !661)
!620 = !{!621, !657}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !619, file: !2, baseType: !622, size: 128, align: 64, extraData: i64 0)
!622 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !617, file: !2, size: 128, align: 64, elements: !4, templateParams: !623, identifier: "397a0ac37bf3530f2da349092773bdb1::None")
!623 = !{!624}
!624 = !DITemplateTypeParameter(name: "T", type: !625)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !626, templateParams: !4, identifier: "c45b2a5be65217bea740b1a64f131289")
!626 = !{!627, !656}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !625, file: !2, baseType: !628, size: 64, align: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const Argument", baseType: !629, size: 64, align: 64, dwarfAddressSpace: 0)
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !86, file: !2, size: 448, align: 64, elements: !630, templateParams: !4, identifier: "be1a2a63eebf5bd46c1acffa2dd6e315")
!630 = !{!631, !632}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !629, file: !2, baseType: !6, size: 64, align: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !629, file: !2, baseType: !633, size: 384, align: 64, offset: 64)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !86, file: !2, size: 384, align: 64, elements: !634, templateParams: !4, identifier: "69ce227e4aab17788d1c0f03469b02a7")
!634 = !{!635, !637, !638, !639, !655}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !633, file: !2, baseType: !636, size: 32, align: 32, offset: 256)
!636 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_unsigned_char)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !633, file: !2, baseType: !85, size: 8, align: 8, offset: 320)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !633, file: !2, baseType: !580, size: 32, align: 32, offset: 288)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !633, file: !2, baseType: !640, size: 128, align: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !86, file: !2, size: 128, align: 64, elements: !641, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e")
!641 = !{!642}
!642 = !DICompositeType(tag: DW_TAG_variant_part, scope: !86, file: !2, size: 128, align: 64, elements: !643, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e_variant_part", discriminator: !654)
!643 = !{!644, !648, !652}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !642, file: !2, baseType: !645, size: 128, align: 64, extraData: i64 0)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !640, file: !2, size: 128, align: 64, elements: !646, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e::Is")
!646 = !{!647}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !645, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !642, file: !2, baseType: !649, size: 128, align: 64, extraData: i64 1)
!649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !640, file: !2, size: 128, align: 64, elements: !650, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e::Param")
!650 = !{!651}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !649, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !642, file: !2, baseType: !653, size: 128, align: 64, extraData: i64 2)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !640, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "8d4678e8b2f8b7aec73eabb6bdd8f01e::Implied")
!654 = !DIDerivedType(tag: DW_TAG_member, scope: !86, file: !2, baseType: !75, size: 64, align: 64, flags: DIFlagArtificial)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !633, file: !2, baseType: !640, size: 128, align: 64, offset: 128)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !625, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !619, file: !2, baseType: !658, size: 128, align: 64)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !617, file: !2, size: 128, align: 64, elements: !659, templateParams: !623, identifier: "397a0ac37bf3530f2da349092773bdb1::Some")
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !658, file: !2, baseType: !625, size: 128, align: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, scope: !127, file: !2, baseType: !75, size: 64, align: 64, flags: DIFlagArtificial)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !608, file: !2, baseType: !663, size: 128, align: 64, offset: 256)
!663 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !664, templateParams: !4, identifier: "afd1d87e15705e622b365ca1c27d8ada")
!664 = !{!665, !699}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !663, file: !2, baseType: !666, size: 64, align: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ArgumentV1", baseType: !667, size: 64, align: 64, dwarfAddressSpace: 0)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !88, file: !2, size: 128, align: 64, elements: !668, templateParams: !4, identifier: "899142106ae236a2208250e894c2e1f5")
!668 = !{!669, !672}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !667, file: !2, baseType: !670, size: 64, align: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Opaque", baseType: !671, size: 64, align: 64, dwarfAddressSpace: 0)
!671 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", file: !2, align: 8, elements: !4, identifier: "877e2849686608d7fea70d5469669ca4")
!672 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !667, file: !2, baseType: !673, size: 64, align: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !674, size: 64, align: 64, dwarfAddressSpace: 0)
!674 = !DISubroutineType(types: !675)
!675 = !{!95, !670, !676}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Formatter", baseType: !677, size: 64, align: 64, dwarfAddressSpace: 0)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !88, file: !2, size: 512, align: 64, elements: !678, templateParams: !4, identifier: "37f4daa474efe0abec93026f6af11d04")
!678 = !{!679, !680, !681, !682, !693, !694}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !677, file: !2, baseType: !580, size: 32, align: 32, offset: 384)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !677, file: !2, baseType: !636, size: 32, align: 32, offset: 416)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !677, file: !2, baseType: !85, size: 8, align: 8, offset: 448)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !677, file: !2, baseType: !683, size: 128, align: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !127, file: !2, size: 128, align: 64, elements: !684, identifier: "4849786e80860f5416c4c6b259f5a683")
!684 = !{!685}
!685 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 128, align: 64, elements: !686, templateParams: !64, identifier: "4849786e80860f5416c4c6b259f5a683_variant_part", discriminator: !661)
!686 = !{!687, !689}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !685, file: !2, baseType: !688, size: 128, align: 64, extraData: i64 0)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !683, file: !2, size: 128, align: 64, elements: !4, templateParams: !64, identifier: "4849786e80860f5416c4c6b259f5a683::None")
!689 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !685, file: !2, baseType: !690, size: 128, align: 64, extraData: i64 1)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !683, file: !2, size: 128, align: 64, elements: !691, templateParams: !64, identifier: "4849786e80860f5416c4c6b259f5a683::Some")
!691 = !{!692}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !690, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !677, file: !2, baseType: !683, size: 128, align: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !677, file: !2, baseType: !695, size: 128, align: 64, offset: 256)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !696, templateParams: !4, identifier: "ab0a0458a7bfc4114bcaaa179b3e8910")
!696 = !{!697, !698}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !695, file: !2, baseType: !592, size: 64, align: 64, flags: DIFlagArtificial)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !695, file: !2, baseType: !594, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !663, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !601, file: !2, baseType: !701, size: 64, align: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !599, file: !2, size: 64, align: 64, elements: !702, templateParams: !605, identifier: "5f11674a8ad885214fc20997bca247b8::Some")
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !701, file: !2, baseType: !607, size: 64, align: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !586, file: !2, baseType: !574, size: 64, align: 64, offset: 192)
!705 = !{!706}
!706 = !DITemplateTypeParameter(name: "M", type: !570)
!707 = !DILocation(line: 790, column: 35, scope: !564)
!708 = !DILocation(line: 791, column: 9, scope: !585)
!709 = !DILocation(line: 792, column: 9, scope: !564)
!710 = !DILocation(line: 793, column: 9, scope: !564)
!711 = !DILocation(line: 791, column: 16, scope: !564)
!712 = !DILocation(line: 795, column: 5, scope: !585)
!713 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h17b2a9106e96f249E", scope: !715, file: !714, line: 2117, type: !716, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !718)
!714 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "fc8dfb4543b7986b6225b25d4f76a5ce")
!715 = !DINamespace(name: "{impl#13}", scope: !88)
!716 = !DISubroutineType(types: !717)
!717 = !{!95, !25, !676}
!718 = !{!719, !720}
!719 = !DILocalVariable(name: "self", arg: 1, scope: !713, file: !714, line: 2117, type: !25)
!720 = !DILocalVariable(name: "f", arg: 2, scope: !713, file: !714, line: 2117, type: !676)
!721 = !DILocation(line: 2117, column: 12, scope: !713)
!722 = !DILocation(line: 2117, column: 19, scope: !713)
!723 = !DILocation(line: 2118, column: 9, scope: !713)
!724 = !DILocation(line: 2119, column: 6, scope: !713)
!725 = distinct !DISubprogram(name: "fmt<itertools::permutations::CompleteState>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6bad0aac058f314eE", scope: !726, file: !714, line: 2088, type: !727, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !733, retainedNodes: !730)
!726 = !DINamespace(name: "{impl#51}", scope: !88)
!727 = !DISubroutineType(types: !728)
!728 = !{!95, !729, !676}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&CompleteState", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!730 = !{!731, !732}
!731 = !DILocalVariable(name: "self", arg: 1, scope: !725, file: !714, line: 2088, type: !729)
!732 = !DILocalVariable(name: "f", arg: 2, scope: !725, file: !714, line: 2088, type: !676)
!733 = !{!734}
!734 = !DITemplateTypeParameter(name: "T", type: !31)
!735 = !DILocation(line: 2088, column: 20, scope: !725)
!736 = !DILocation(line: 2088, column: 27, scope: !725)
!737 = !DILocation(line: 2088, column: 71, scope: !725)
!738 = !DILocation(line: 2088, column: 62, scope: !725)
!739 = !DILocation(line: 2088, column: 84, scope: !725)
!740 = distinct !DISubprogram(name: "fmt<usize>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7e1dba77163ed755E", scope: !726, file: !714, line: 2088, type: !741, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !744)
!741 = !DISubroutineType(types: !742)
!742 = !{!95, !743, !676}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&usize", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!744 = !{!745, !746}
!745 = !DILocalVariable(name: "self", arg: 1, scope: !740, file: !714, line: 2088, type: !743)
!746 = !DILocalVariable(name: "f", arg: 2, scope: !740, file: !714, line: 2088, type: !676)
!747 = !DILocation(line: 2088, column: 20, scope: !740)
!748 = !DILocation(line: 2088, column: 27, scope: !740)
!749 = !DILocation(line: 2088, column: 71, scope: !740)
!750 = !DILocation(line: 2088, column: 62, scope: !740)
!751 = !DILocation(line: 2088, column: 84, scope: !740)
!752 = distinct !DISubprogram(name: "fmt<alloc::vec::Vec<usize, alloc::alloc::Global>>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc8f0fbfac000d4b1E", scope: !726, file: !714, line: 2088, type: !753, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !759, retainedNodes: !756)
!753 = !DISubroutineType(types: !754)
!754 = !{!95, !755, !676}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&Vec<usize, alloc::alloc::Global>", baseType: !79, size: 64, align: 64, dwarfAddressSpace: 0)
!756 = !{!757, !758}
!757 = !DILocalVariable(name: "self", arg: 1, scope: !752, file: !714, line: 2088, type: !755)
!758 = !DILocalVariable(name: "f", arg: 2, scope: !752, file: !714, line: 2088, type: !676)
!759 = !{!760}
!760 = !DITemplateTypeParameter(name: "T", type: !46)
!761 = !DILocation(line: 2088, column: 20, scope: !752)
!762 = !DILocation(line: 2088, column: 27, scope: !752)
!763 = !DILocation(line: 2088, column: 71, scope: !752)
!764 = !DILocation(line: 2088, column: 62, scope: !752)
!765 = !DILocation(line: 2088, column: 84, scope: !752)
!766 = distinct !DISubprogram(name: "fmt<bool>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd17644f68d686941E", scope: !726, file: !714, line: 2088, type: !767, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !773, retainedNodes: !770)
!767 = !DISubroutineType(types: !768)
!768 = !{!95, !769, !676}
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bool", baseType: !25, size: 64, align: 64, dwarfAddressSpace: 0)
!770 = !{!771, !772}
!771 = !DILocalVariable(name: "self", arg: 1, scope: !766, file: !714, line: 2088, type: !769)
!772 = !DILocalVariable(name: "f", arg: 2, scope: !766, file: !714, line: 2088, type: !676)
!773 = !{!774}
!774 = !DITemplateTypeParameter(name: "T", type: !26)
!775 = !DILocation(line: 2088, column: 20, scope: !766)
!776 = !DILocation(line: 2088, column: 27, scope: !766)
!777 = !DILocation(line: 2088, column: 71, scope: !766)
!778 = !DILocation(line: 2088, column: 62, scope: !766)
!779 = !DILocation(line: 2088, column: 84, scope: !766)
!780 = distinct !DISubprogram(name: "fmt<usize>", linkageName: "_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hca135c73f9bafa40E", scope: !781, file: !714, line: 2284, type: !782, scopeLine: 2284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !788)
!781 = !DINamespace(name: "{impl#25}", scope: !88)
!782 = !DISubroutineType(types: !783)
!783 = !{!95, !784, !676}
!784 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[usize]", file: !2, size: 128, align: 64, elements: !785, templateParams: !4, identifier: "9be4f5e4fbfbd2b5b45da638e0e8878f")
!785 = !{!786, !787}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !784, file: !2, baseType: !60, size: 64, align: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !784, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!788 = !{!789, !790}
!789 = !DILocalVariable(name: "self", arg: 1, scope: !780, file: !714, line: 2284, type: !784)
!790 = !DILocalVariable(name: "f", arg: 2, scope: !780, file: !714, line: 2284, type: !676)
!791 = !DILocation(line: 2284, column: 12, scope: !780)
!792 = !DILocation(line: 2284, column: 19, scope: !780)
!793 = !DILocation(line: 2285, column: 9, scope: !780)
!794 = !DILocation(line: 2285, column: 32, scope: !780)
!795 = !DILocation(line: 2286, column: 6, scope: !780)
!796 = distinct !DISubprogram(name: "steps_between", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hc037fed79425c43cE", scope: !798, file: !797, line: 242, type: !800, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !802)
!797 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd2120efb48f64c11ba5a73ce3f093f0")
!798 = !DINamespace(name: "{impl#37}", scope: !799)
!799 = !DINamespace(name: "range", scope: !123)
!800 = !DISubroutineType(types: !801)
!801 = !{!683, !5, !5}
!802 = !{!803, !804}
!803 = !DILocalVariable(name: "start", arg: 1, scope: !796, file: !797, line: 242, type: !5)
!804 = !DILocalVariable(name: "end", arg: 2, scope: !796, file: !797, line: 242, type: !5)
!805 = !DILocation(line: 242, column: 34, scope: !796)
!806 = !DILocation(line: 242, column: 48, scope: !796)
!807 = !DILocation(line: 243, column: 24, scope: !796)
!808 = !DILocation(line: 243, column: 34, scope: !796)
!809 = !DILocation(line: 247, column: 25, scope: !796)
!810 = !DILocation(line: 243, column: 21, scope: !796)
!811 = !DILocation(line: 245, column: 31, scope: !796)
!812 = !DILocation(line: 245, column: 38, scope: !796)
!813 = !DILocation(line: 245, column: 30, scope: !796)
!814 = !DILocation(line: 245, column: 25, scope: !796)
!815 = !DILocation(line: 249, column: 18, scope: !796)
!816 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h5d754a3b500a5147E", scope: !798, file: !797, line: 189, type: !817, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !819)
!817 = !DISubroutineType(types: !818)
!818 = !{!6, !6, !6}
!819 = !{!820, !821}
!820 = !DILocalVariable(name: "start", arg: 1, scope: !816, file: !797, line: 189, type: !6)
!821 = !DILocalVariable(name: "n", arg: 2, scope: !816, file: !797, line: 189, type: !6)
!822 = !DILocation(line: 189, column: 37, scope: !816)
!823 = !DILocation(line: 189, column: 50, scope: !816)
!824 = !DILocalVariable(name: "self", arg: 1, scope: !825, file: !826, line: 439, type: !6)
!825 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h43dd9e37f0475724E", scope: !827, file: !826, line: 439, type: !817, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !828)
!826 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "8bd5648afa999a95525abfd2832ef4ce")
!827 = !DINamespace(name: "{impl#11}", scope: !308)
!828 = !{!824, !829}
!829 = !DILocalVariable(name: "rhs", arg: 2, scope: !825, file: !826, line: 439, type: !6)
!830 = !DILocation(line: 439, column: 43, scope: !825, inlinedAt: !831)
!831 = distinct !DILocation(line: 191, column: 22, scope: !816)
!832 = !DILocation(line: 439, column: 49, scope: !825, inlinedAt: !831)
!833 = !DILocation(line: 442, column: 22, scope: !825, inlinedAt: !831)
!834 = !DILocation(line: 191, column: 22, scope: !816)
!835 = !DILocation(line: 192, column: 10, scope: !816)
!836 = distinct !DISubprogram(name: "backward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17he9d3b7f063022099E", scope: !798, file: !797, line: 195, type: !817, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !837)
!837 = !{!838, !839}
!838 = !DILocalVariable(name: "start", arg: 1, scope: !836, file: !797, line: 195, type: !6)
!839 = !DILocalVariable(name: "n", arg: 2, scope: !836, file: !797, line: 195, type: !6)
!840 = !DILocation(line: 195, column: 38, scope: !836)
!841 = !DILocation(line: 195, column: 51, scope: !836)
!842 = !DILocalVariable(name: "self", arg: 1, scope: !843, file: !826, line: 485, type: !6)
!843 = distinct !DISubprogram(name: "unchecked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17hc90b09ef4a0a24d8E", scope: !827, file: !826, line: 485, type: !817, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !844)
!844 = !{!842, !845}
!845 = !DILocalVariable(name: "rhs", arg: 2, scope: !843, file: !826, line: 485, type: !6)
!846 = !DILocation(line: 485, column: 43, scope: !843, inlinedAt: !847)
!847 = distinct !DILocation(line: 197, column: 22, scope: !836)
!848 = !DILocation(line: 485, column: 49, scope: !843, inlinedAt: !847)
!849 = !DILocation(line: 488, column: 22, scope: !843, inlinedAt: !847)
!850 = !DILocation(line: 197, column: 22, scope: !836)
!851 = !DILocation(line: 198, column: 10, scope: !836)
!852 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17h862ff44c68d1e80cE", scope: !854, file: !853, line: 2215, type: !855, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !857)
!853 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "1be464bbefb5340012936033e0ffb61a")
!854 = !DINamespace(name: "intrinsics", scope: !15)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !592, !89, !6}
!857 = !{!858, !859, !860}
!858 = !DILocalVariable(name: "dst", arg: 1, scope: !852, file: !853, line: 2215, type: !592)
!859 = !DILocalVariable(name: "val", arg: 2, scope: !852, file: !853, line: 2215, type: !89)
!860 = !DILocalVariable(name: "count", arg: 3, scope: !852, file: !853, line: 2215, type: !6)
!861 = !DILocation(line: 2215, column: 30, scope: !852)
!862 = !DILocation(line: 2215, column: 43, scope: !852)
!863 = !DILocation(line: 2215, column: 52, scope: !852)
!864 = !DILocation(line: 2223, column: 14, scope: !852)
!865 = !DILocation(line: 2224, column: 2, scope: !852)
!866 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h50123e3b718f0f56E", scope: !854, file: !853, line: 2040, type: !867, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !869)
!867 = !DISubroutineType(types: !868)
!868 = !{null, !269, !592, !6}
!869 = !{!870, !871, !872}
!870 = !DILocalVariable(name: "src", arg: 1, scope: !866, file: !853, line: 2040, type: !269)
!871 = !DILocalVariable(name: "dst", arg: 2, scope: !866, file: !853, line: 2040, type: !592)
!872 = !DILocalVariable(name: "count", arg: 3, scope: !866, file: !853, line: 2040, type: !6)
!873 = !DILocation(line: 2040, column: 44, scope: !866)
!874 = !DILocation(line: 2040, column: 59, scope: !866)
!875 = !DILocation(line: 2040, column: 72, scope: !866)
!876 = !DILocation(line: 2058, column: 14, scope: !866)
!877 = !DILocation(line: 2059, column: 2, scope: !866)
!878 = distinct !DISubprogram(name: "copy_nonoverlapping<usize>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h8075118644eaa71bE", scope: !854, file: !853, line: 2040, type: !879, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !882)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !60, !881, !6}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!882 = !{!883, !884, !885}
!883 = !DILocalVariable(name: "src", arg: 1, scope: !878, file: !853, line: 2040, type: !60)
!884 = !DILocalVariable(name: "dst", arg: 2, scope: !878, file: !853, line: 2040, type: !881)
!885 = !DILocalVariable(name: "count", arg: 3, scope: !878, file: !853, line: 2040, type: !6)
!886 = !DILocation(line: 2040, column: 44, scope: !878)
!887 = !DILocation(line: 2040, column: 59, scope: !878)
!888 = !DILocation(line: 2040, column: 72, scope: !878)
!889 = !DILocation(line: 2058, column: 14, scope: !878)
!890 = !DILocation(line: 2059, column: 2, scope: !878)
!891 = distinct !DISubprogram(name: "copy<usize>", linkageName: "_ZN4core10intrinsics4copy17h2e5cb4dc4ce77089E", scope: !854, file: !853, line: 2125, type: !879, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !892)
!892 = !{!893, !894, !895}
!893 = !DILocalVariable(name: "src", arg: 1, scope: !891, file: !853, line: 2125, type: !60)
!894 = !DILocalVariable(name: "dst", arg: 2, scope: !891, file: !853, line: 2125, type: !881)
!895 = !DILocalVariable(name: "count", arg: 3, scope: !891, file: !853, line: 2125, type: !6)
!896 = !DILocation(line: 2125, column: 29, scope: !891)
!897 = !DILocation(line: 2125, column: 44, scope: !891)
!898 = !DILocation(line: 2125, column: 57, scope: !891)
!899 = !DILocation(line: 2138, column: 14, scope: !891)
!900 = !DILocation(line: 2139, column: 2, scope: !891)
!901 = distinct !DISubprogram(name: "of<core::panic::panic_info::{impl#0}::internal_constructor::NoPayload>", linkageName: "_ZN4core3any6TypeId2of17h5eb98d3fdc8425cbE", scope: !553, file: !548, line: 463, type: !902, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !559, retainedNodes: !4)
!902 = !DISubroutineType(types: !903)
!903 = !{!553}
!904 = !DILocation(line: 464, column: 21, scope: !901)
!905 = !DILocation(line: 464, column: 9, scope: !901)
!906 = !DILocation(line: 465, column: 6, scope: !901)
!907 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h05a5e76f805268beE", scope: !909, file: !908, line: 763, type: !817, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !913, retainedNodes: !910)
!908 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fdac3f6fbed09f2cfeccffe125b9a60")
!909 = !DINamespace(name: "Ord", scope: !101)
!910 = !{!911, !912}
!911 = !DILocalVariable(name: "self", arg: 1, scope: !907, file: !908, line: 763, type: !6)
!912 = !DILocalVariable(name: "other", arg: 2, scope: !907, file: !908, line: 763, type: !6)
!913 = !{!914}
!914 = !DITemplateTypeParameter(name: "Self", type: !6)
!915 = !DILocation(line: 763, column: 12, scope: !907)
!916 = !DILocation(line: 763, column: 18, scope: !907)
!917 = !DILocation(line: 767, column: 9, scope: !907)
!918 = !DILocation(line: 768, column: 6, scope: !907)
!919 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h7229c2c0330f0f9fE", scope: !101, file: !908, line: 1183, type: !817, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !920)
!920 = !{!921, !922}
!921 = !DILocalVariable(name: "v1", arg: 1, scope: !919, file: !908, line: 1183, type: !6)
!922 = !DILocalVariable(name: "v2", arg: 2, scope: !919, file: !908, line: 1183, type: !6)
!923 = !DILocation(line: 1183, column: 20, scope: !919)
!924 = !DILocation(line: 1183, column: 27, scope: !919)
!925 = !DILocation(line: 1184, column: 5, scope: !919)
!926 = !DILocation(line: 1185, column: 2, scope: !919)
!927 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h7b4cf76b9cdd1ba0E", scope: !928, file: !908, line: 1334, type: !930, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !932)
!928 = !DINamespace(name: "{impl#55}", scope: !929)
!929 = !DINamespace(name: "impls", scope: !101)
!930 = !DISubroutineType(types: !931)
!931 = !{!100, !5, !5}
!932 = !{!933, !934}
!933 = !DILocalVariable(name: "self", arg: 1, scope: !927, file: !908, line: 1334, type: !5)
!934 = !DILocalVariable(name: "other", arg: 2, scope: !927, file: !908, line: 1334, type: !5)
!935 = !DILocation(line: 1334, column: 24, scope: !927)
!936 = !DILocation(line: 1334, column: 31, scope: !927)
!937 = !DILocation(line: 1337, column: 24, scope: !927)
!938 = !DILocation(line: 1337, column: 32, scope: !927)
!939 = !DILocation(line: 1338, column: 29, scope: !927)
!940 = !DILocation(line: 1338, column: 38, scope: !927)
!941 = !DILocation(line: 1337, column: 41, scope: !927)
!942 = !DILocation(line: 1337, column: 21, scope: !927)
!943 = !DILocation(line: 1340, column: 18, scope: !927)
!944 = !{i8 -1, i8 2}
!945 = !DILocation(line: 1339, column: 28, scope: !927)
!946 = !DILocation(line: 1338, column: 26, scope: !927)
!947 = !DILocation(line: 1338, column: 47, scope: !927)
!948 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h6ae0d9c40d77ba84E", scope: !949, file: !908, line: 1322, type: !950, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !952)
!949 = !DINamespace(name: "{impl#54}", scope: !929)
!950 = !DISubroutineType(types: !951)
!951 = !{!26, !5, !5}
!952 = !{!953, !954}
!953 = !DILocalVariable(name: "self", arg: 1, scope: !948, file: !908, line: 1322, type: !5)
!954 = !DILocalVariable(name: "other", arg: 2, scope: !948, file: !908, line: 1322, type: !5)
!955 = !DILocation(line: 1322, column: 23, scope: !948)
!956 = !DILocation(line: 1322, column: 30, scope: !948)
!957 = !DILocation(line: 1322, column: 52, scope: !948)
!958 = !DILocation(line: 1322, column: 62, scope: !948)
!959 = !DILocation(line: 1322, column: 72, scope: !948)
!960 = distinct !DISubprogram(name: "max_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6max_by17h3eafb6250fdad636E", scope: !101, file: !908, line: 1202, type: !961, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !968, retainedNodes: !964)
!961 = !DISubroutineType(types: !962)
!962 = !{!6, !6, !6, !963}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &usize) -> core::cmp::Ordering", baseType: !930, align: 8, dwarfAddressSpace: 0)
!964 = !{!965, !966, !967}
!965 = !DILocalVariable(name: "v1", arg: 1, scope: !960, file: !908, line: 1202, type: !6)
!966 = !DILocalVariable(name: "v2", arg: 2, scope: !960, file: !908, line: 1202, type: !6)
!967 = !DILocalVariable(name: "compare", arg: 3, scope: !960, file: !908, line: 1202, type: !963)
!968 = !{!65, !969}
!969 = !DITemplateTypeParameter(name: "F", type: !963)
!970 = !DILocation(line: 1202, column: 49, scope: !960)
!971 = !DILocation(line: 1202, column: 56, scope: !960)
!972 = !DILocation(line: 1202, column: 63, scope: !960)
!973 = !DILocation(line: 1203, column: 11, scope: !960)
!974 = !DILocation(line: 1203, column: 5, scope: !960)
!975 = !DILocation(line: 1204, column: 45, scope: !960)
!976 = !DILocation(line: 1205, column: 30, scope: !960)
!977 = !DILocation(line: 1207, column: 1, scope: !960)
!978 = !{i8 0, i8 2}
!979 = !DILocation(line: 1207, column: 2, scope: !960)
!980 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h6b45b358b6a786f6E", scope: !982, file: !981, line: 185, type: !984, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !986)
!981 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6524fcfb870cfd6b104419b40f655d55")
!982 = !DINamespace(name: "{impl#89}", scope: !983)
!983 = !DINamespace(name: "num", scope: !88)
!984 = !DISubroutineType(types: !985)
!985 = !{!95, !5, !676}
!986 = !{!987, !988}
!987 = !DILocalVariable(name: "self", arg: 1, scope: !980, file: !981, line: 185, type: !5)
!988 = !DILocalVariable(name: "f", arg: 2, scope: !980, file: !981, line: 185, type: !676)
!989 = !DILocation(line: 185, column: 20, scope: !980)
!990 = !DILocation(line: 185, column: 27, scope: !980)
!991 = !DILocation(line: 186, column: 20, scope: !980)
!992 = !DILocation(line: 188, column: 27, scope: !980)
!993 = !DILocation(line: 187, column: 21, scope: !980)
!994 = !DILocation(line: 186, column: 17, scope: !980)
!995 = !DILocation(line: 193, column: 14, scope: !980)
!996 = !DILocation(line: 191, column: 21, scope: !980)
!997 = !DILocation(line: 189, column: 21, scope: !980)
!998 = !DILocation(line: 188, column: 24, scope: !980)
!999 = distinct !DISubprogram(name: "entries<&usize, core::slice::iter::Iter<usize>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h53af767265d751b6E", scope: !1001, file: !1000, line: 637, type: !1010, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1024, retainedNodes: !1013)
!1000 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccba0def80bfd3481ec1750203b83b2f")
!1001 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !1002, file: !2, size: 128, align: 64, elements: !1003, templateParams: !4, identifier: "f50f191a0bf48eccfd8015488398efb9")
!1002 = !DINamespace(name: "builders", scope: !88)
!1003 = !{!1004}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1001, file: !2, baseType: !1005, size: 128, align: 64)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !1002, file: !2, size: 128, align: 64, elements: !1006, templateParams: !4, identifier: "14f25b9996e59cdb4c0252e138d871b3")
!1006 = !{!1007, !1008, !1009}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !1005, file: !2, baseType: !676, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1005, file: !2, baseType: !95, size: 8, align: 8, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !1005, file: !2, baseType: !26, size: 8, align: 8, offset: 72)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!1012, !1012, !148}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugList", baseType: !1001, size: 64, align: 64, dwarfAddressSpace: 0)
!1013 = !{!1014, !1015, !1016, !1018, !1020, !1022}
!1014 = !DILocalVariable(name: "self", arg: 1, scope: !999, file: !1000, line: 637, type: !1012)
!1015 = !DILocalVariable(name: "entries", arg: 2, scope: !999, file: !1000, line: 637, type: !148)
!1016 = !DILocalVariable(name: "iter", scope: !1017, file: !1000, line: 642, type: !148, align: 8)
!1017 = distinct !DILexicalBlock(scope: !999, file: !1000, line: 642, column: 9)
!1018 = !DILocalVariable(name: "__next", scope: !1019, file: !1000, line: 642, type: !5, align: 8)
!1019 = distinct !DILexicalBlock(scope: !1017, file: !1000, line: 642, column: 22)
!1020 = !DILocalVariable(name: "val", scope: !1021, file: !1000, line: 642, type: !5, align: 8)
!1021 = distinct !DILexicalBlock(scope: !1019, file: !1000, line: 642, column: 13)
!1022 = !DILocalVariable(name: "entry", scope: !1023, file: !1000, line: 642, type: !5, align: 8)
!1023 = distinct !DILexicalBlock(scope: !1019, file: !1000, line: 642, column: 22)
!1024 = !{!1025, !164}
!1025 = !DITemplateTypeParameter(name: "D", type: !5)
!1026 = !DILocation(line: 637, column: 26, scope: !999)
!1027 = !DILocation(line: 637, column: 37, scope: !999)
!1028 = !DILocation(line: 642, column: 22, scope: !1017)
!1029 = !DILocation(line: 642, column: 13, scope: !1023)
!1030 = !DILocation(line: 642, column: 22, scope: !999)
!1031 = !DILocation(line: 642, column: 9, scope: !1017)
!1032 = !DILocation(line: 642, column: 22, scope: !1019)
!1033 = !DILocation(line: 644, column: 9, scope: !999)
!1034 = !DILocation(line: 642, column: 13, scope: !1019)
!1035 = !DILocation(line: 642, column: 13, scope: !1021)
!1036 = !DILocation(line: 643, column: 24, scope: !1023)
!1037 = !DILocation(line: 643, column: 13, scope: !1023)
!1038 = !DILocation(line: 644, column: 9, scope: !1019)
!1039 = !DILocation(line: 646, column: 6, scope: !999)
!1040 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17hf0f2ad2ef3fbe0a5E", scope: !1042, file: !1041, line: 823, type: !1043, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1046)
!1041 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "00a9ca3300eee460d5c61559b280a726")
!1042 = !DINamespace(name: "mem", scope: !15)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!6, !1045, !6}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!1046 = !{!1047, !1048, !1049}
!1047 = !DILocalVariable(name: "dest", arg: 1, scope: !1040, file: !1041, line: 823, type: !1045)
!1048 = !DILocalVariable(name: "src", arg: 2, scope: !1040, file: !1041, line: 823, type: !6)
!1049 = !DILocalVariable(name: "result", scope: !1050, file: !1041, line: 828, type: !6, align: 8)
!1050 = distinct !DILexicalBlock(scope: !1040, file: !1041, line: 828, column: 9)
!1051 = !DILocation(line: 823, column: 25, scope: !1040)
!1052 = !DILocation(line: 823, column: 39, scope: !1040)
!1053 = !DILocation(line: 828, column: 22, scope: !1040)
!1054 = !DILocation(line: 828, column: 13, scope: !1050)
!1055 = !DILocation(line: 829, column: 9, scope: !1050)
!1056 = !DILocation(line: 832, column: 2, scope: !1040)
!1057 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hdc59359d34489ae8E", scope: !827, file: !826, line: 415, type: !1058, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !1060)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!683, !6, !6}
!1060 = !{!1061, !1062, !1063, !1065}
!1061 = !DILocalVariable(name: "self", arg: 1, scope: !1057, file: !826, line: 415, type: !6)
!1062 = !DILocalVariable(name: "rhs", arg: 2, scope: !1057, file: !826, line: 415, type: !6)
!1063 = !DILocalVariable(name: "a", scope: !1064, file: !826, line: 416, type: !6, align: 8)
!1064 = distinct !DILexicalBlock(scope: !1057, file: !826, line: 416, column: 13)
!1065 = !DILocalVariable(name: "b", scope: !1064, file: !826, line: 416, type: !26, align: 1)
!1066 = !DILocation(line: 415, column: 34, scope: !1057)
!1067 = !DILocation(line: 415, column: 40, scope: !1057)
!1068 = !DILocalVariable(name: "self", arg: 1, scope: !1069, file: !826, line: 1406, type: !6)
!1069 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h203f0c510338852cE", scope: !827, file: !826, line: 1406, type: !1070, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !1076)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!1072, !6, !6}
!1072 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1073, templateParams: !4, identifier: "532fa6618cdb3964411c84139beb9950")
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1072, file: !2, baseType: !6, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1072, file: !2, baseType: !26, size: 8, align: 8, offset: 64)
!1076 = !{!1068, !1077, !1078, !1080}
!1077 = !DILocalVariable(name: "rhs", arg: 2, scope: !1069, file: !826, line: 1406, type: !6)
!1078 = !DILocalVariable(name: "a", scope: !1079, file: !826, line: 1407, type: !75, align: 8)
!1079 = distinct !DILexicalBlock(scope: !1069, file: !826, line: 1407, column: 13)
!1080 = !DILocalVariable(name: "b", scope: !1079, file: !826, line: 1407, type: !26, align: 1)
!1081 = !DILocation(line: 1406, column: 38, scope: !1069, inlinedAt: !1082)
!1082 = distinct !DILocation(line: 416, column: 26, scope: !1057)
!1083 = !DILocation(line: 1406, column: 44, scope: !1069, inlinedAt: !1082)
!1084 = !DILocation(line: 1407, column: 26, scope: !1069, inlinedAt: !1082)
!1085 = !DILocation(line: 1407, column: 18, scope: !1069, inlinedAt: !1082)
!1086 = !DILocation(line: 1407, column: 18, scope: !1079, inlinedAt: !1082)
!1087 = !DILocation(line: 1407, column: 21, scope: !1069, inlinedAt: !1082)
!1088 = !DILocation(line: 1407, column: 21, scope: !1079, inlinedAt: !1082)
!1089 = !DILocation(line: 1408, column: 13, scope: !1079, inlinedAt: !1082)
!1090 = !DILocation(line: 1409, column: 10, scope: !1069, inlinedAt: !1082)
!1091 = !DILocation(line: 416, column: 26, scope: !1057)
!1092 = !DILocation(line: 416, column: 18, scope: !1057)
!1093 = !DILocation(line: 416, column: 18, scope: !1064)
!1094 = !DILocation(line: 416, column: 21, scope: !1057)
!1095 = !DILocation(line: 416, column: 21, scope: !1064)
!1096 = !DILocation(line: 417, column: 16, scope: !1064)
!1097 = !DILocation(line: 417, column: 42, scope: !1064)
!1098 = !DILocation(line: 417, column: 13, scope: !1064)
!1099 = !DILocation(line: 417, column: 30, scope: !1064)
!1100 = !DILocation(line: 418, column: 10, scope: !1057)
!1101 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfc8edd9d59d78604E", scope: !827, file: !826, line: 507, type: !1058, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !1102)
!1102 = !{!1103, !1104, !1105, !1107}
!1103 = !DILocalVariable(name: "self", arg: 1, scope: !1101, file: !826, line: 507, type: !6)
!1104 = !DILocalVariable(name: "rhs", arg: 2, scope: !1101, file: !826, line: 507, type: !6)
!1105 = !DILocalVariable(name: "a", scope: !1106, file: !826, line: 508, type: !6, align: 8)
!1106 = distinct !DILexicalBlock(scope: !1101, file: !826, line: 508, column: 13)
!1107 = !DILocalVariable(name: "b", scope: !1106, file: !826, line: 508, type: !26, align: 1)
!1108 = !DILocation(line: 507, column: 34, scope: !1101)
!1109 = !DILocation(line: 507, column: 40, scope: !1101)
!1110 = !DILocalVariable(name: "self", arg: 1, scope: !1111, file: !826, line: 1518, type: !6)
!1111 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h597ee499af793895E", scope: !827, file: !826, line: 1518, type: !1070, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !1112)
!1112 = !{!1110, !1113, !1114, !1116}
!1113 = !DILocalVariable(name: "rhs", arg: 2, scope: !1111, file: !826, line: 1518, type: !6)
!1114 = !DILocalVariable(name: "a", scope: !1115, file: !826, line: 1519, type: !75, align: 8)
!1115 = distinct !DILexicalBlock(scope: !1111, file: !826, line: 1519, column: 13)
!1116 = !DILocalVariable(name: "b", scope: !1115, file: !826, line: 1519, type: !26, align: 1)
!1117 = !DILocation(line: 1518, column: 38, scope: !1111, inlinedAt: !1118)
!1118 = distinct !DILocation(line: 508, column: 26, scope: !1101)
!1119 = !DILocation(line: 1518, column: 44, scope: !1111, inlinedAt: !1118)
!1120 = !DILocation(line: 1519, column: 26, scope: !1111, inlinedAt: !1118)
!1121 = !DILocation(line: 1519, column: 18, scope: !1111, inlinedAt: !1118)
!1122 = !DILocation(line: 1519, column: 18, scope: !1115, inlinedAt: !1118)
!1123 = !DILocation(line: 1519, column: 21, scope: !1111, inlinedAt: !1118)
!1124 = !DILocation(line: 1519, column: 21, scope: !1115, inlinedAt: !1118)
!1125 = !DILocation(line: 1520, column: 13, scope: !1115, inlinedAt: !1118)
!1126 = !DILocation(line: 1521, column: 10, scope: !1111, inlinedAt: !1118)
!1127 = !DILocation(line: 508, column: 26, scope: !1101)
!1128 = !DILocation(line: 508, column: 18, scope: !1101)
!1129 = !DILocation(line: 508, column: 18, scope: !1106)
!1130 = !DILocation(line: 508, column: 21, scope: !1101)
!1131 = !DILocation(line: 508, column: 21, scope: !1106)
!1132 = !DILocation(line: 509, column: 16, scope: !1106)
!1133 = !DILocation(line: 509, column: 42, scope: !1106)
!1134 = !DILocation(line: 509, column: 13, scope: !1106)
!1135 = !DILocation(line: 509, column: 30, scope: !1106)
!1136 = !DILocation(line: 510, column: 10, scope: !1101)
!1137 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd982396593d5f84eE", scope: !306, file: !1138, line: 54, type: !1139, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !1141)
!1138 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "07b0126d41e0d52cc6d98b96652bf4bd")
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!306, !6}
!1141 = !{!1142}
!1142 = !DILocalVariable(name: "n", arg: 1, scope: !1137, file: !1138, line: 54, type: !6)
!1143 = !DILocation(line: 54, column: 51, scope: !1137)
!1144 = !DILocation(line: 56, column: 30, scope: !1137)
!1145 = !DILocation(line: 57, column: 18, scope: !1137)
!1146 = !{i64 1, i64 0}
!1147 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17hab7a81ef096fdfa4E", scope: !306, file: !1138, line: 76, type: !1148, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !1150)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!6, !306}
!1150 = !{!1151}
!1151 = !DILocalVariable(name: "self", arg: 1, scope: !1147, file: !1138, line: 76, type: !306)
!1152 = !DILocation(line: 76, column: 34, scope: !1147)
!1153 = !DILocation(line: 78, column: 18, scope: !1147)
!1154 = distinct !DISubprogram(name: "call_once<fn(&usize, &usize) -> core::cmp::Ordering, (&usize, &usize)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h5d757a63dc0c0a58E", scope: !1156, file: !1155, line: 227, type: !1158, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1167, retainedNodes: !1160)
!1155 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "1a40c014f8a7b8b7cd612b461a47e902")
!1156 = !DINamespace(name: "FnOnce", scope: !1157)
!1157 = !DINamespace(name: "function", scope: !211)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!100, !963, !5, !5}
!1160 = !{!1161, !1162}
!1161 = !DILocalVariable(arg: 1, scope: !1154, file: !1155, line: 227, type: !963)
!1162 = !DILocalVariable(arg: 2, scope: !1154, file: !1155, line: 227, type: !1163)
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 128, align: 64, elements: !1164, templateParams: !4, identifier: "4bc227a7fa9c3d458d76f51eddc3e0bc")
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1163, file: !2, baseType: !5, size: 64, align: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1163, file: !2, baseType: !5, size: 64, align: 64, offset: 64)
!1167 = !{!1168, !1169}
!1168 = !DITemplateTypeParameter(name: "Self", type: !963)
!1169 = !DITemplateTypeParameter(name: "Args", type: !1163)
!1170 = !DILocation(line: 227, column: 5, scope: !1154)
!1171 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core3ptr198drop_in_place$LT$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..ops..range..Range$LT$usize$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2810211a64a47804E", scope: !57, file: !1172, line: 188, type: !1173, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1190, retainedNodes: !1188)
!1172 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "207736266ff0d04d675044b37a0a2de6")
!1173 = !DISubroutineType(types: !1174)
!1174 = !{null, !1175}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut {closure#0}", baseType: !1176, size: 64, align: 64, dwarfAddressSpace: 0)
!1176 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !1177, file: !2, size: 192, align: 64, elements: !1180, templateParams: !4, identifier: "5f20e302883c33a3dcdb90c62f499f19")
!1177 = !DINamespace(name: "spec_extend", scope: !1178)
!1178 = !DINamespace(name: "{impl#1}", scope: !1179)
!1179 = !DINamespace(name: "spec_extend", scope: !47)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1176, file: !2, baseType: !881, size: 64, align: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "local_len", scope: !1176, file: !2, baseType: !1183, size: 128, align: 64, offset: 64)
!1183 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !1184, file: !2, size: 128, align: 64, elements: !1185, templateParams: !4, identifier: "60cd495ccd28d054b31bcc0f1bbc0816")
!1184 = !DINamespace(name: "set_len_on_drop", scope: !47)
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1183, file: !2, baseType: !1045, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "local_len", scope: !1183, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!1188 = !{!1189}
!1189 = !DILocalVariable(arg: 1, scope: !1171, file: !1172, line: 188, type: !1175)
!1190 = !{!1191}
!1191 = !DITemplateTypeParameter(name: "T", type: !1176)
!1192 = !DILocation(line: 188, column: 1, scope: !1171)
!1193 = distinct !DISubprogram(name: "slice_from_raw_parts<usize>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h882698a9b1f10e27E", scope: !57, file: !1172, line: 257, type: !1194, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1200)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!1196, !60, !6}
!1196 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [usize]", file: !2, size: 128, align: 64, elements: !1197, templateParams: !4, identifier: "1c4c4d3ba5dae6c2c5caae8bdb6a77e4")
!1197 = !{!1198, !1199}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1196, file: !2, baseType: !60, size: 64, align: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1196, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!1200 = !{!1201, !1202}
!1201 = !DILocalVariable(name: "data", arg: 1, scope: !1193, file: !1172, line: 257, type: !60)
!1202 = !DILocalVariable(name: "len", arg: 2, scope: !1193, file: !1172, line: 257, type: !6)
!1203 = !DILocation(line: 257, column: 38, scope: !1193)
!1204 = !DILocation(line: 257, column: 54, scope: !1193)
!1205 = !DILocation(line: 258, column: 20, scope: !1193)
!1206 = !DILocation(line: 258, column: 5, scope: !1193)
!1207 = !DILocation(line: 259, column: 2, scope: !1193)
!1208 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core3ptr236drop_in_place$LT$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..iter..adapters..rev..Rev$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb67f0149e9143ffcE", scope: !57, file: !1172, line: 188, type: !1209, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1218, retainedNodes: !1216)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !1211}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut {closure#0}", baseType: !1212, size: 64, align: 64, dwarfAddressSpace: 0)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !1177, file: !2, size: 192, align: 64, elements: !1213, templateParams: !4, identifier: "6a5080f9b2a756d2814f264e435c9c4e")
!1213 = !{!1214, !1215}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1212, file: !2, baseType: !881, size: 64, align: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "local_len", scope: !1212, file: !2, baseType: !1183, size: 128, align: 64, offset: 64)
!1216 = !{!1217}
!1217 = !DILocalVariable(arg: 1, scope: !1208, file: !1172, line: 188, type: !1211)
!1218 = !{!1219}
!1219 = !DITemplateTypeParameter(name: "T", type: !1212)
!1220 = !DILocation(line: 188, column: 1, scope: !1208)
!1221 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<usize>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h85f2168ac0038682E", scope: !57, file: !1172, line: 289, type: !1222, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1228)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!1224, !881, !6}
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [usize]", file: !2, size: 128, align: 64, elements: !1225, templateParams: !4, identifier: "f0213eef732a3d63de23ec214d359ec0")
!1225 = !{!1226, !1227}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1224, file: !2, baseType: !60, size: 64, align: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1224, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!1228 = !{!1229, !1230}
!1229 = !DILocalVariable(name: "data", arg: 1, scope: !1221, file: !1172, line: 289, type: !881)
!1230 = !DILocalVariable(name: "len", arg: 2, scope: !1221, file: !1172, line: 289, type: !6)
!1231 = !DILocation(line: 289, column: 42, scope: !1221)
!1232 = !DILocation(line: 289, column: 56, scope: !1221)
!1233 = !DILocalVariable(name: "self", arg: 1, scope: !1234, file: !1235, line: 46, type: !881)
!1234 = distinct !DISubprogram(name: "cast<usize, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h1ac2109e562fbc8dE", scope: !1236, file: !1235, line: 46, type: !1238, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1242, retainedNodes: !1241)
!1235 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "dc9433fa5edb0740532b3ed97e3aaa10")
!1236 = !DINamespace(name: "{impl#0}", scope: !1237)
!1237 = !DINamespace(name: "mut_ptr", scope: !57)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!1240, !881}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!1241 = !{!1233}
!1242 = !{!65, !1243}
!1243 = !DITemplateTypeParameter(name: "U", type: !312)
!1244 = !DILocation(line: 46, column: 26, scope: !1234, inlinedAt: !1245)
!1245 = distinct !DILocation(line: 290, column: 24, scope: !1221)
!1246 = !DILocation(line: 47, column: 9, scope: !1234, inlinedAt: !1245)
!1247 = !DILocation(line: 290, column: 24, scope: !1221)
!1248 = !DILocation(line: 290, column: 5, scope: !1221)
!1249 = !DILocation(line: 291, column: 2, scope: !1221)
!1250 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hbb899ff8d8b31deaE", scope: !57, file: !1172, line: 289, type: !1251, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1257)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!1253, !592, !6}
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !1254, templateParams: !4, identifier: "5196b2ee1fdbf734c7f3a78e14d50170")
!1254 = !{!1255, !1256}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1253, file: !2, baseType: !269, size: 64, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1253, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!1257 = !{!1258, !1259}
!1258 = !DILocalVariable(name: "data", arg: 1, scope: !1250, file: !1172, line: 289, type: !592)
!1259 = !DILocalVariable(name: "len", arg: 2, scope: !1250, file: !1172, line: 289, type: !6)
!1260 = !DILocation(line: 289, column: 42, scope: !1250)
!1261 = !DILocation(line: 289, column: 56, scope: !1250)
!1262 = !DILocalVariable(name: "self", arg: 1, scope: !1263, file: !1235, line: 46, type: !592)
!1263 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hecb760ac05a52ef9E", scope: !1236, file: !1235, line: 46, type: !1264, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1267, retainedNodes: !1266)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!1240, !592}
!1266 = !{!1262}
!1267 = !{!271, !1243}
!1268 = !DILocation(line: 46, column: 26, scope: !1263, inlinedAt: !1269)
!1269 = distinct !DILocation(line: 290, column: 24, scope: !1250)
!1270 = !DILocation(line: 47, column: 9, scope: !1263, inlinedAt: !1269)
!1271 = !DILocation(line: 290, column: 24, scope: !1250)
!1272 = !DILocation(line: 290, column: 5, scope: !1250)
!1273 = !DILocation(line: 291, column: 2, scope: !1250)
!1274 = distinct !DISubprogram(name: "drop_in_place<core::iter::traits::iterator::Iterator::for_each::call::{closure#0}>", linkageName: "_ZN4core3ptr297drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$usize$C$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..ops..range..Range$LT$usize$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2af6467216b7d63eE", scope: !57, file: !1172, line: 188, type: !1275, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1288, retainedNodes: !1286)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{null, !1277}
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut {closure#0}", baseType: !1278, size: 64, align: 64, dwarfAddressSpace: 0)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !1279, file: !2, size: 192, align: 64, elements: !1284, templateParams: !4, identifier: "2657c22e3fb801ffdeaa8ce072095581")
!1279 = !DINamespace(name: "call", scope: !1280)
!1280 = !DINamespace(name: "for_each", scope: !1281)
!1281 = !DINamespace(name: "Iterator", scope: !1282)
!1282 = !DINamespace(name: "iterator", scope: !1283)
!1283 = !DINamespace(name: "traits", scope: !123)
!1284 = !{!1285}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1278, file: !2, baseType: !1176, size: 192, align: 64)
!1286 = !{!1287}
!1287 = !DILocalVariable(arg: 1, scope: !1274, file: !1172, line: 188, type: !1277)
!1288 = !{!1289}
!1289 = !DITemplateTypeParameter(name: "T", type: !1278)
!1290 = !DILocation(line: 188, column: 1, scope: !1274)
!1291 = distinct !DISubprogram(name: "drop_in_place<&bool>", linkageName: "_ZN4core3ptr29drop_in_place$LT$$RF$bool$GT$17h6d5de9abef6c9f09E", scope: !57, file: !1172, line: 188, type: !1292, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1297, retainedNodes: !1295)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1294}
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &bool", baseType: !25, size: 64, align: 64, dwarfAddressSpace: 0)
!1295 = !{!1296}
!1296 = !DILocalVariable(arg: 1, scope: !1291, file: !1172, line: 188, type: !1294)
!1297 = !{!1298}
!1298 = !DITemplateTypeParameter(name: "T", type: !25)
!1299 = !DILocation(line: 188, column: 1, scope: !1291)
!1300 = distinct !DISubprogram(name: "drop_in_place<&usize>", linkageName: "_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h827b1345bfae1883E", scope: !57, file: !1172, line: 188, type: !1301, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !160, retainedNodes: !1304)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{null, !1303}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &usize", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!1304 = !{!1305}
!1305 = !DILocalVariable(arg: 1, scope: !1300, file: !1172, line: 188, type: !1303)
!1306 = !DILocation(line: 188, column: 1, scope: !1300)
!1307 = distinct !DISubprogram(name: "drop_in_place<core::iter::traits::iterator::Iterator::for_each::call::{closure#0}>", linkageName: "_ZN4core3ptr335drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$usize$C$$LT$alloc..vec..Vec$LT$usize$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$usize$C$core..iter..adapters..rev..Rev$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$$GT$..spec_extend..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hede8acf3d6b2d9f0E", scope: !57, file: !1172, line: 188, type: !1308, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1316, retainedNodes: !1314)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1310}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut {closure#0}", baseType: !1311, size: 64, align: 64, dwarfAddressSpace: 0)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !1279, file: !2, size: 192, align: 64, elements: !1312, templateParams: !4, identifier: "7e9055db54ed74b86e27f3c6a29aeaa8")
!1312 = !{!1313}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1311, file: !2, baseType: !1212, size: 192, align: 64)
!1314 = !{!1315}
!1315 = !DILocalVariable(arg: 1, scope: !1307, file: !1172, line: 188, type: !1310)
!1316 = !{!1317}
!1317 = !DITemplateTypeParameter(name: "T", type: !1311)
!1318 = !DILocation(line: 188, column: 1, scope: !1307)
!1319 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<usize, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr49drop_in_place$LT$alloc..vec..Vec$LT$usize$GT$$GT$17h1cff5daf5d0325b6E", scope: !57, file: !1172, line: 188, type: !1320, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !759, retainedNodes: !1323)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{null, !1322}
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut Vec<usize, alloc::alloc::Global>", baseType: !46, size: 64, align: 64, dwarfAddressSpace: 0)
!1323 = !{!1324}
!1324 = !DILocalVariable(arg: 1, scope: !1319, file: !1172, line: 188, type: !1322)
!1325 = !DILocation(line: 188, column: 1, scope: !1319)
!1326 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17hf728125a2e91769bE", scope: !57, file: !1172, line: 683, type: !1327, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1329)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!6, !60}
!1329 = !{!1330, !1331}
!1330 = !DILocalVariable(name: "src", arg: 1, scope: !1326, file: !1172, line: 683, type: !60)
!1331 = !DILocalVariable(name: "tmp", scope: !1332, file: !1172, line: 691, type: !1333, align: 8)
!1332 = distinct !DILexicalBlock(scope: !1326, file: !1172, line: 691, column: 5)
!1333 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !1334, file: !2, size: 64, align: 64, elements: !1335, templateParams: !64, identifier: "53219206c498ff1ad550afa82181887e")
!1334 = !DINamespace(name: "maybe_uninit", scope: !1042)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1333, file: !2, baseType: !312, align: 8)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1333, file: !2, baseType: !1338, size: 64, align: 64)
!1338 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !1339, file: !2, size: 64, align: 64, elements: !1340, templateParams: !64, identifier: "7866e6546e0053923cc5f9692f9b936")
!1339 = !DINamespace(name: "manually_drop", scope: !1042)
!1340 = !{!1341}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1338, file: !2, baseType: !6, size: 64, align: 64)
!1342 = !DILocation(line: 683, column: 29, scope: !1326)
!1343 = !DILocation(line: 691, column: 9, scope: !1332)
!1344 = !DILocation(line: 318, column: 9, scope: !1345, inlinedAt: !1349)
!1345 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h26f68235772556c9E", scope: !1333, file: !1346, line: 317, type: !1347, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4)
!1346 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3671e1e568ab64028d26b6a3f5dc301")
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!1333}
!1349 = distinct !DILocation(line: 691, column: 19, scope: !1326)
!1350 = !DILocation(line: 319, column: 6, scope: !1345, inlinedAt: !1349)
!1351 = !DILocation(line: 691, column: 19, scope: !1326)
!1352 = !DILocalVariable(name: "self", arg: 1, scope: !1353, file: !1346, line: 568, type: !1356)
!1353 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h40b47d0bf75bd6feE", scope: !1333, file: !1346, line: 568, type: !1354, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1357)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!881, !1356}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut MaybeUninit<usize>", baseType: !1333, size: 64, align: 64, dwarfAddressSpace: 0)
!1357 = !{!1352}
!1358 = !DILocation(line: 568, column: 29, scope: !1353, inlinedAt: !1359)
!1359 = distinct !DILocation(line: 699, column: 34, scope: !1332)
!1360 = !DILocation(line: 699, column: 34, scope: !1332)
!1361 = !DILocation(line: 699, column: 9, scope: !1332)
!1362 = !DILocation(line: 700, column: 9, scope: !1332)
!1363 = !DILocalVariable(name: "self", arg: 1, scope: !1364, file: !1346, line: 623, type: !1333)
!1364 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hcd02e7ac675d38f1E", scope: !1333, file: !1346, line: 623, type: !1365, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1367)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!6, !1333, !574}
!1367 = !{!1363}
!1368 = !DILocation(line: 623, column: 37, scope: !1364, inlinedAt: !1369)
!1369 = distinct !DILocation(line: 700, column: 9, scope: !1332)
!1370 = !DILocalVariable(name: "slot", arg: 1, scope: !1371, file: !1372, line: 87, type: !1338)
!1371 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h04bbd0624e84e3a8E", scope: !1338, file: !1372, line: 87, type: !1373, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1375)
!1372 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "1ebb77b55900bbb941b074f7b36dbdc1")
!1373 = !DISubroutineType(types: !1374)
!1374 = !{!6, !1338}
!1375 = !{!1370}
!1376 = !DILocation(line: 87, column: 29, scope: !1371, inlinedAt: !1377)
!1377 = distinct !DILocation(line: 628, column: 13, scope: !1364, inlinedAt: !1369)
!1378 = !DILocation(line: 702, column: 2, scope: !1326)
!1379 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core3ptr4swap17hfdc458cd1061b87dE", scope: !57, file: !1172, line: 361, type: !1380, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1382)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{null, !881, !881}
!1382 = !{!1383, !1384, !1385}
!1383 = !DILocalVariable(name: "x", arg: 1, scope: !1379, file: !1172, line: 361, type: !881)
!1384 = !DILocalVariable(name: "y", arg: 2, scope: !1379, file: !1172, line: 361, type: !881)
!1385 = !DILocalVariable(name: "tmp", scope: !1386, file: !1172, line: 364, type: !1333, align: 8)
!1386 = distinct !DILexicalBlock(scope: !1379, file: !1172, line: 364, column: 5)
!1387 = !DILocation(line: 361, column: 29, scope: !1379)
!1388 = !DILocation(line: 361, column: 40, scope: !1379)
!1389 = !DILocation(line: 364, column: 9, scope: !1386)
!1390 = !DILocation(line: 318, column: 9, scope: !1345, inlinedAt: !1391)
!1391 = distinct !DILocation(line: 364, column: 19, scope: !1379)
!1392 = !DILocation(line: 319, column: 6, scope: !1345, inlinedAt: !1391)
!1393 = !DILocation(line: 364, column: 19, scope: !1379)
!1394 = !DILocation(line: 568, column: 29, scope: !1353, inlinedAt: !1395)
!1395 = distinct !DILocation(line: 372, column: 32, scope: !1386)
!1396 = !DILocation(line: 372, column: 32, scope: !1386)
!1397 = !DILocation(line: 372, column: 9, scope: !1386)
!1398 = !DILocation(line: 373, column: 9, scope: !1386)
!1399 = !DILocalVariable(name: "self", arg: 1, scope: !1400, file: !1346, line: 529, type: !1403)
!1400 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hcc327050dd73d4dbE", scope: !1333, file: !1346, line: 529, type: !1401, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1404)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!60, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&MaybeUninit<usize>", baseType: !1333, size: 64, align: 64, dwarfAddressSpace: 0)
!1404 = !{!1399}
!1405 = !DILocation(line: 529, column: 25, scope: !1400, inlinedAt: !1406)
!1406 = distinct !DILocation(line: 374, column: 29, scope: !1386)
!1407 = !DILocation(line: 374, column: 29, scope: !1386)
!1408 = !DILocation(line: 374, column: 9, scope: !1386)
!1409 = !DILocation(line: 376, column: 2, scope: !1379)
!1410 = distinct !DISubprogram(name: "drop_in_place<&alloc::vec::Vec<usize, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$$RF$alloc..vec..Vec$LT$usize$GT$$GT$17he73327f1f580cc8aE", scope: !57, file: !1172, line: 188, type: !1411, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1416, retainedNodes: !1414)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !1413}
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &Vec<usize, alloc::alloc::Global>", baseType: !79, size: 64, align: 64, dwarfAddressSpace: 0)
!1414 = !{!1415}
!1415 = !DILocalVariable(arg: 1, scope: !1410, file: !1172, line: 188, type: !1413)
!1416 = !{!1417}
!1417 = !DITemplateTypeParameter(name: "T", type: !79)
!1418 = !DILocation(line: 188, column: 1, scope: !1410)
!1419 = distinct !DISubprogram(name: "drop_in_place<core::alloc::layout::LayoutError>", linkageName: "_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17hf913786a589be1ceE", scope: !57, file: !1172, line: 188, type: !1420, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1425, retainedNodes: !1423)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{null, !1422}
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut LayoutError", baseType: !19, size: 64, align: 64, dwarfAddressSpace: 0)
!1423 = !{!1424}
!1424 = !DILocalVariable(arg: 1, scope: !1419, file: !1172, line: 188, type: !1422)
!1425 = !{!1426}
!1426 = !DITemplateTypeParameter(name: "T", type: !19)
!1427 = !DILocation(line: 188, column: 1, scope: !1419)
!1428 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<usize, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr56drop_in_place$LT$alloc..raw_vec..RawVec$LT$usize$GT$$GT$17h4a51cf27f05cf454E", scope: !57, file: !1172, line: 188, type: !1429, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1434, retainedNodes: !1432)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1431}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut RawVec<usize, alloc::alloc::Global>", baseType: !51, size: 64, align: 64, dwarfAddressSpace: 0)
!1432 = !{!1433}
!1433 = !DILocalVariable(arg: 1, scope: !1428, file: !1172, line: 188, type: !1431)
!1434 = !{!1435}
!1435 = !DITemplateTypeParameter(name: "T", type: !51)
!1436 = !DILocation(line: 188, column: 1, scope: !1428)
!1437 = distinct !DISubprogram(name: "drop_in_place<itertools::permutations::CompleteState>", linkageName: "_ZN4core3ptr59drop_in_place$LT$itertools..permutations..CompleteState$GT$17h85244e3766564339E", scope: !57, file: !1172, line: 188, type: !1438, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !733, retainedNodes: !1441)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{null, !1440}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut CompleteState", baseType: !31, size: 64, align: 64, dwarfAddressSpace: 0)
!1441 = !{!1442}
!1442 = !DILocalVariable(arg: 1, scope: !1437, file: !1172, line: 188, type: !1440)
!1443 = !DILocation(line: 188, column: 1, scope: !1437)
!1444 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17h39b530a88072e8ebE", scope: !57, file: !1172, line: 878, type: !1445, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1447)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{null, !881, !6}
!1447 = !{!1448, !1449}
!1448 = !DILocalVariable(name: "dst", arg: 1, scope: !1444, file: !1172, line: 878, type: !881)
!1449 = !DILocalVariable(name: "src", arg: 2, scope: !1444, file: !1172, line: 878, type: !6)
!1450 = !DILocation(line: 878, column: 30, scope: !1444)
!1451 = !DILocation(line: 878, column: 43, scope: !1444)
!1452 = !DILocation(line: 890, column: 9, scope: !1444)
!1453 = !DILocation(line: 893, column: 2, scope: !1444)
!1454 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>", linkageName: "_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hc58a6fbc99c5a688E", scope: !57, file: !1172, line: 188, type: !1455, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1460, retainedNodes: !1458)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{null, !1457}
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut SetLenOnDrop", baseType: !1183, size: 64, align: 64, dwarfAddressSpace: 0)
!1458 = !{!1459}
!1459 = !DILocalVariable(arg: 1, scope: !1454, file: !1172, line: 188, type: !1457)
!1460 = !{!1461}
!1461 = !DITemplateTypeParameter(name: "T", type: !1183)
!1462 = !DILocation(line: 188, column: 1, scope: !1454)
!1463 = distinct !DISubprogram(name: "drop_in_place<&itertools::permutations::CompleteState>", linkageName: "_ZN4core3ptr63drop_in_place$LT$$RF$itertools..permutations..CompleteState$GT$17h06fc7b877ec335c6E", scope: !57, file: !1172, line: 188, type: !1464, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1469, retainedNodes: !1467)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{null, !1466}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &CompleteState", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!1467 = !{!1468}
!1468 = !DILocalVariable(arg: 1, scope: !1463, file: !1172, line: 188, type: !1466)
!1469 = !{!1470}
!1470 = !DITemplateTypeParameter(name: "T", type: !30)
!1471 = !DILocation(line: 188, column: 1, scope: !1463)
!1472 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6911255c7520caf0E", scope: !272, file: !1473, line: 87, type: !1474, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1476)
!1473 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "a83acd9c3d0e6cc1331d6a0f78f4f2e9")
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!272, !592}
!1476 = !{!1477}
!1477 = !DILocalVariable(name: "ptr", arg: 1, scope: !1472, file: !1473, line: 87, type: !592)
!1478 = !DILocation(line: 87, column: 39, scope: !1472)
!1479 = !DILocation(line: 89, column: 18, scope: !1472)
!1480 = !DILocation(line: 90, column: 6, scope: !1472)
!1481 = distinct !DISubprogram(name: "new_unchecked<usize>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbe85731dd4f93460E", scope: !55, file: !1473, line: 87, type: !1482, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1484)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!55, !881}
!1484 = !{!1485}
!1485 = !DILocalVariable(name: "ptr", arg: 1, scope: !1481, file: !1473, line: 87, type: !881)
!1486 = !DILocation(line: 87, column: 39, scope: !1481)
!1487 = !DILocation(line: 89, column: 18, scope: !1481)
!1488 = !DILocation(line: 90, column: 6, scope: !1481)
!1489 = distinct !DISubprogram(name: "cast<usize, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6839eb95853901f0E", scope: !55, file: !1473, line: 135, type: !1490, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1494, retainedNodes: !1492)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!272, !55}
!1492 = !{!1493}
!1493 = !DILocalVariable(name: "self", arg: 1, scope: !1489, file: !1473, line: 135, type: !55)
!1494 = !{!65, !1495}
!1495 = !DITemplateTypeParameter(name: "U", type: !89)
!1496 = !DILocation(line: 135, column: 26, scope: !1489)
!1497 = !DILocation(line: 139, column: 40, scope: !1489)
!1498 = !DILocation(line: 139, column: 18, scope: !1489)
!1499 = !DILocation(line: 140, column: 6, scope: !1489)
!1500 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h205c4e675a273432E", scope: !55, file: !1473, line: 105, type: !1501, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1503)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!881, !55}
!1503 = !{!1504}
!1504 = !DILocalVariable(name: "self", arg: 1, scope: !1500, file: !1473, line: 105, type: !55)
!1505 = !DILocation(line: 105, column: 25, scope: !1500)
!1506 = !DILocation(line: 107, column: 6, scope: !1500)
!1507 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17had4afa70e4d11c21E", scope: !272, file: !1473, line: 105, type: !1508, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1510)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!592, !272}
!1510 = !{!1511}
!1511 = !DILocalVariable(name: "self", arg: 1, scope: !1507, file: !1473, line: 105, type: !272)
!1512 = !DILocation(line: 105, column: 25, scope: !1507)
!1513 = !DILocation(line: 107, column: 6, scope: !1507)
!1514 = distinct !DISubprogram(name: "dangling<usize>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17he48c5ab346c0a3a6E", scope: !55, file: !1473, line: 72, type: !1515, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!55}
!1517 = !DILocation(line: 448, column: 5, scope: !1518, inlinedAt: !1521)
!1518 = distinct !DISubprogram(name: "align_of<usize>", linkageName: "_ZN4core3mem8align_of17he4923b77d8baa4efE", scope: !1042, file: !1041, line: 447, type: !1519, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!6}
!1521 = distinct !DILocation(line: 75, column: 40, scope: !1514)
!1522 = !DILocation(line: 75, column: 40, scope: !1514)
!1523 = !DILocation(line: 75, column: 18, scope: !1514)
!1524 = !DILocation(line: 76, column: 6, scope: !1514)
!1525 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h3468ef122634fdd5E", scope: !1236, file: !1235, line: 433, type: !1526, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1528)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!26, !592, !592}
!1528 = !{!1529, !1530}
!1529 = !DILocalVariable(name: "self", arg: 1, scope: !1525, file: !1235, line: 433, type: !592)
!1530 = !DILocalVariable(name: "other", arg: 2, scope: !1525, file: !1235, line: 433, type: !592)
!1531 = !DILocation(line: 433, column: 32, scope: !1525)
!1532 = !DILocation(line: 433, column: 38, scope: !1525)
!1533 = !DILocation(line: 437, column: 9, scope: !1525)
!1534 = !DILocation(line: 438, column: 6, scope: !1525)
!1535 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0a1ac1189ec0120dE", scope: !1236, file: !1235, line: 36, type: !1536, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1538)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!26, !592}
!1538 = !{!1539}
!1539 = !DILocalVariable(name: "self", arg: 1, scope: !1535, file: !1235, line: 36, type: !592)
!1540 = !DILocation(line: 36, column: 26, scope: !1535)
!1541 = !DILocation(line: 39, column: 41, scope: !1535)
!1542 = !DILocation(line: 39, column: 9, scope: !1535)
!1543 = !DILocation(line: 40, column: 6, scope: !1535)
!1544 = distinct !DISubprogram(name: "is_null<usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1b9b0a36be9d5327E", scope: !1236, file: !1235, line: 36, type: !1545, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1547)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!26, !881}
!1547 = !{!1548}
!1548 = !DILocalVariable(name: "self", arg: 1, scope: !1544, file: !1235, line: 36, type: !881)
!1549 = !DILocation(line: 36, column: 26, scope: !1544)
!1550 = !DILocation(line: 39, column: 9, scope: !1544)
!1551 = !DILocation(line: 39, column: 41, scope: !1544)
!1552 = !DILocation(line: 40, column: 6, scope: !1544)
!1553 = distinct !DISubprogram(name: "drop_in_place<core::panic::panic_info::{impl#0}::internal_constructor::NoPayload>", linkageName: "_ZN4core3ptr88drop_in_place$LT$core..panic..panic_info..PanicInfo..internal_constructor..NoPayload$GT$17hd8a79b41633b8d7eE", scope: !57, file: !1172, line: 188, type: !1554, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !559, retainedNodes: !1557)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{null, !1556}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut NoPayload", baseType: !10, size: 64, align: 64, dwarfAddressSpace: 0)
!1557 = !{!1558}
!1558 = !DILocalVariable(arg: 1, scope: !1553, file: !1172, line: 188, type: !1556)
!1559 = !DILocation(line: 188, column: 1, scope: !1553)
!1560 = distinct !DISubprogram(name: "from_raw_parts<[usize]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4b62744334efbe6aE", scope: !1562, file: !1561, line: 110, type: !1563, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1569, retainedNodes: !1566)
!1561 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1c0696840ef99c8132b364245b959d8b")
!1562 = !DINamespace(name: "metadata", scope: !57)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!1196, !1565, !6}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!1566 = !{!1567, !1568}
!1567 = !DILocalVariable(name: "data_address", arg: 1, scope: !1560, file: !1561, line: 111, type: !1565)
!1568 = !DILocalVariable(name: "metadata", arg: 2, scope: !1560, file: !1561, line: 112, type: !6)
!1569 = !{!1570}
!1570 = !DITemplateTypeParameter(name: "T", type: !1571)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, align: 64, elements: !426)
!1572 = !DILocation(line: 111, column: 5, scope: !1560)
!1573 = !DILocation(line: 112, column: 5, scope: !1560)
!1574 = !DILocation(line: 117, column: 36, scope: !1560)
!1575 = !DILocation(line: 117, column: 14, scope: !1560)
!1576 = !DILocation(line: 118, column: 2, scope: !1560)
!1577 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h8e26d0e54a1de4cfE", scope: !1562, file: !1561, line: 127, type: !1578, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !423, retainedNodes: !1580)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!1253, !1240, !6}
!1580 = !{!1581, !1582}
!1581 = !DILocalVariable(name: "data_address", arg: 1, scope: !1577, file: !1561, line: 128, type: !1240)
!1582 = !DILocalVariable(name: "metadata", arg: 2, scope: !1577, file: !1561, line: 129, type: !6)
!1583 = !DILocation(line: 128, column: 5, scope: !1577)
!1584 = !DILocation(line: 129, column: 5, scope: !1577)
!1585 = !DILocation(line: 134, column: 36, scope: !1577)
!1586 = !DILocation(line: 134, column: 14, scope: !1577)
!1587 = !DILocation(line: 135, column: 2, scope: !1577)
!1588 = distinct !DISubprogram(name: "from_raw_parts_mut<[usize]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he15f99523fc081e7E", scope: !1562, file: !1561, line: 127, type: !1589, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1569, retainedNodes: !1591)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!1224, !1240, !6}
!1591 = !{!1592, !1593}
!1592 = !DILocalVariable(name: "data_address", arg: 1, scope: !1588, file: !1561, line: 128, type: !1240)
!1593 = !DILocalVariable(name: "metadata", arg: 2, scope: !1588, file: !1561, line: 129, type: !6)
!1594 = !DILocation(line: 128, column: 5, scope: !1588)
!1595 = !DILocation(line: 129, column: 5, scope: !1588)
!1596 = !DILocation(line: 134, column: 36, scope: !1588)
!1597 = !DILocation(line: 134, column: 14, scope: !1588)
!1598 = !DILocation(line: 135, column: 2, scope: !1588)
!1599 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17hafda8c3dc7d0bb07E", scope: !1562, file: !1561, line: 93, type: !1600, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !423, retainedNodes: !1602)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!6, !419}
!1602 = !{!1603}
!1603 = !DILocalVariable(name: "ptr", arg: 1, scope: !1599, file: !1561, line: 93, type: !419)
!1604 = !DILocation(line: 93, column: 34, scope: !1599)
!1605 = !DILocation(line: 97, column: 14, scope: !1599)
!1606 = !DILocation(line: 98, column: 2, scope: !1599)
!1607 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h261173f5f5c7c267E", scope: !266, file: !262, line: 189, type: !1608, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1610)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!266, !592}
!1610 = !{!1611}
!1611 = !DILocalVariable(name: "ptr", arg: 1, scope: !1607, file: !262, line: 189, type: !592)
!1612 = !DILocation(line: 189, column: 39, scope: !1607)
!1613 = !DILocation(line: 191, column: 18, scope: !1607)
!1614 = !DILocation(line: 192, column: 6, scope: !1607)
!1615 = distinct !DISubprogram(name: "new_unchecked<usize>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h318bd0df0884951bE", scope: !153, file: !262, line: 189, type: !1616, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1618)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!153, !881}
!1618 = !{!1619}
!1619 = !DILocalVariable(name: "ptr", arg: 1, scope: !1615, file: !262, line: 189, type: !881)
!1620 = !DILocation(line: 189, column: 39, scope: !1615)
!1621 = !DILocation(line: 191, column: 18, scope: !1615)
!1622 = !DILocation(line: 192, column: 6, scope: !1615)
!1623 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c2c825d058e5188E", scope: !416, file: !262, line: 189, type: !1624, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !423, retainedNodes: !1626)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!416, !1253}
!1626 = !{!1627}
!1627 = !DILocalVariable(name: "ptr", arg: 1, scope: !1623, file: !262, line: 189, type: !1253)
!1628 = !DILocation(line: 189, column: 39, scope: !1623)
!1629 = !DILocation(line: 191, column: 18, scope: !1623)
!1630 = !DILocation(line: 192, column: 6, scope: !1623)
!1631 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17habe433947869e644E", scope: !266, file: !262, line: 210, type: !1632, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1646)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!1634, !592}
!1634 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !127, file: !2, size: 64, align: 64, elements: !1635, identifier: "1b292be2cef1955b53655c8f22aaab74")
!1635 = !{!1636}
!1636 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 64, align: 64, elements: !1637, templateParams: !1640, identifier: "1b292be2cef1955b53655c8f22aaab74_variant_part", discriminator: !661)
!1637 = !{!1638, !1642}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1636, file: !2, baseType: !1639, size: 64, align: 64, extraData: i64 0)
!1639 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1634, file: !2, size: 64, align: 64, elements: !4, templateParams: !1640, identifier: "1b292be2cef1955b53655c8f22aaab74::None")
!1640 = !{!1641}
!1641 = !DITemplateTypeParameter(name: "T", type: !266)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1636, file: !2, baseType: !1643, size: 64, align: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1634, file: !2, size: 64, align: 64, elements: !1644, templateParams: !1640, identifier: "1b292be2cef1955b53655c8f22aaab74::Some")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1643, file: !2, baseType: !266, size: 64, align: 64)
!1646 = !{!1647}
!1647 = !DILocalVariable(name: "ptr", arg: 1, scope: !1631, file: !262, line: 210, type: !592)
!1648 = !DILocation(line: 210, column: 16, scope: !1631)
!1649 = !DILocation(line: 211, column: 13, scope: !1631)
!1650 = !DILocation(line: 211, column: 12, scope: !1631)
!1651 = !DILocation(line: 215, column: 13, scope: !1631)
!1652 = !DILocation(line: 211, column: 9, scope: !1631)
!1653 = !DILocation(line: 213, column: 27, scope: !1631)
!1654 = !DILocation(line: 213, column: 13, scope: !1631)
!1655 = !DILocation(line: 217, column: 6, scope: !1631)
!1656 = distinct !DISubprogram(name: "cast<[u8], usize>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he238f352c767a682E", scope: !416, file: !262, line: 385, type: !1657, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1661, retainedNodes: !1659)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!153, !416}
!1659 = !{!1660}
!1660 = !DILocalVariable(name: "self", arg: 1, scope: !1656, file: !262, line: 385, type: !416)
!1661 = !{!424, !1662}
!1662 = !DITemplateTypeParameter(name: "U", type: !6)
!1663 = !DILocation(line: 385, column: 26, scope: !1656)
!1664 = !DILocation(line: 387, column: 41, scope: !1656)
!1665 = !DILocation(line: 387, column: 18, scope: !1656)
!1666 = !DILocation(line: 388, column: 6, scope: !1656)
!1667 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2bde3515d86c9c10E", scope: !153, file: !262, line: 268, type: !1668, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1670)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!881, !153}
!1670 = !{!1671}
!1671 = !DILocalVariable(name: "self", arg: 1, scope: !1667, file: !262, line: 268, type: !153)
!1672 = !DILocation(line: 268, column: 25, scope: !1667)
!1673 = !DILocation(line: 270, column: 6, scope: !1667)
!1674 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h756879bbfceb50a7E", scope: !266, file: !262, line: 268, type: !1675, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1677)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!592, !266}
!1677 = !{!1678}
!1678 = !DILocalVariable(name: "self", arg: 1, scope: !1674, file: !262, line: 268, type: !266)
!1679 = !DILocation(line: 268, column: 25, scope: !1674)
!1680 = !DILocation(line: 270, column: 6, scope: !1674)
!1681 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc04cde3ef68de4e4E", scope: !416, file: !262, line: 268, type: !1682, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !423, retainedNodes: !1684)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!1253, !416}
!1684 = !{!1685}
!1685 = !DILocalVariable(name: "self", arg: 1, scope: !1681, file: !262, line: 268, type: !416)
!1686 = !DILocation(line: 268, column: 25, scope: !1681)
!1687 = !DILocation(line: 269, column: 9, scope: !1681)
!1688 = !DILocation(line: 270, column: 6, scope: !1681)
!1689 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h9fe46e2f4b565a65E", scope: !416, file: !262, line: 479, type: !1690, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1692)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!592, !416}
!1692 = !{!1693}
!1693 = !DILocalVariable(name: "self", arg: 1, scope: !1689, file: !262, line: 479, type: !416)
!1694 = !DILocation(line: 479, column: 29, scope: !1689)
!1695 = !DILocation(line: 480, column: 9, scope: !1689)
!1696 = !DILocation(line: 481, column: 6, scope: !1689)
!1697 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hb505f6203ea22404E", scope: !416, file: !262, line: 460, type: !1698, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1700)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!266, !416}
!1700 = !{!1701}
!1701 = !DILocalVariable(name: "self", arg: 1, scope: !1697, file: !262, line: 460, type: !416)
!1702 = !DILocation(line: 460, column: 34, scope: !1697)
!1703 = !DILocation(line: 462, column: 41, scope: !1697)
!1704 = !DILocalVariable(name: "self", arg: 1, scope: !1705, file: !1235, line: 1197, type: !1253)
!1705 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hf0affc0cd66cc81dE", scope: !1706, file: !1235, line: 1197, type: !1707, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1709)
!1706 = !DINamespace(name: "{impl#1}", scope: !1237)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!592, !1253}
!1709 = !{!1704}
!1710 = !DILocation(line: 1197, column: 29, scope: !1705, inlinedAt: !1711)
!1711 = distinct !DILocation(line: 462, column: 41, scope: !1697)
!1712 = !DILocation(line: 1198, column: 9, scope: !1705, inlinedAt: !1711)
!1713 = !DILocation(line: 462, column: 18, scope: !1697)
!1714 = !DILocation(line: 463, column: 6, scope: !1697)
!1715 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hc0589c963be055f8E", scope: !416, file: !262, line: 418, type: !1716, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1718)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!416, !266, !6}
!1718 = !{!1719, !1720}
!1719 = !DILocalVariable(name: "data", arg: 1, scope: !1715, file: !262, line: 418, type: !266)
!1720 = !DILocalVariable(name: "len", arg: 2, scope: !1715, file: !262, line: 418, type: !6)
!1721 = !DILocation(line: 418, column: 39, scope: !1715)
!1722 = !DILocation(line: 418, column: 57, scope: !1715)
!1723 = !DILocation(line: 420, column: 70, scope: !1715)
!1724 = !DILocation(line: 420, column: 38, scope: !1715)
!1725 = !DILocation(line: 420, column: 18, scope: !1715)
!1726 = !DILocation(line: 421, column: 6, scope: !1715)
!1727 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h697dd1e73004a5a0E", scope: !416, file: !262, line: 442, type: !1728, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1730)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!6, !416}
!1730 = !{!1731}
!1731 = !DILocalVariable(name: "self", arg: 1, scope: !1727, file: !262, line: 442, type: !416)
!1732 = !DILocation(line: 442, column: 22, scope: !1727)
!1733 = !DILocation(line: 443, column: 9, scope: !1727)
!1734 = !DILocalVariable(name: "self", arg: 1, scope: !1735, file: !1235, line: 1177, type: !1253)
!1735 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17hf8f509c1556fc89bE", scope: !1706, file: !1235, line: 1177, type: !1736, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1738)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!6, !1253}
!1738 = !{!1734}
!1739 = !DILocation(line: 1177, column: 22, scope: !1735, inlinedAt: !1740)
!1740 = distinct !DILocation(line: 443, column: 9, scope: !1727)
!1741 = !DILocation(line: 1178, column: 9, scope: !1735, inlinedAt: !1740)
!1742 = !DILocation(line: 444, column: 6, scope: !1727)
!1743 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h10a9963373449480E", scope: !1745, file: !1744, line: 418, type: !1747, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !1749)
!1744 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3efc72e5c37c5202bb58c77289e8c38")
!1745 = !DINamespace(name: "{impl#0}", scope: !1746)
!1746 = !DINamespace(name: "const_ptr", scope: !57)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!26, !269, !269}
!1749 = !{!1750, !1751}
!1750 = !DILocalVariable(name: "self", arg: 1, scope: !1743, file: !1744, line: 418, type: !269)
!1751 = !DILocalVariable(name: "other", arg: 2, scope: !1743, file: !1744, line: 418, type: !269)
!1752 = !DILocation(line: 418, column: 32, scope: !1743)
!1753 = !DILocation(line: 418, column: 38, scope: !1743)
!1754 = !DILocation(line: 422, column: 9, scope: !1743)
!1755 = !DILocation(line: 423, column: 6, scope: !1743)
!1756 = distinct !DISubprogram(name: "cast<usize, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8d2d45fc177d8777E", scope: !1745, file: !1744, line: 47, type: !1757, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1242, retainedNodes: !1759)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!1565, !60}
!1759 = !{!1760}
!1760 = !DILocalVariable(name: "self", arg: 1, scope: !1756, file: !1744, line: 47, type: !60)
!1761 = !DILocation(line: 47, column: 26, scope: !1756)
!1762 = !DILocation(line: 48, column: 9, scope: !1756)
!1763 = !DILocation(line: 49, column: 6, scope: !1756)
!1764 = distinct !DISubprogram(name: "is_null<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha99b5b7e9bafbc86E", scope: !1745, file: !1744, line: 37, type: !1765, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !1767)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!26, !60}
!1767 = !{!1768}
!1768 = !DILocalVariable(name: "self", arg: 1, scope: !1764, file: !1744, line: 37, type: !60)
!1769 = !DILocation(line: 37, column: 26, scope: !1764)
!1770 = !DILocation(line: 40, column: 9, scope: !1764)
!1771 = !DILocation(line: 40, column: 43, scope: !1764)
!1772 = !DILocation(line: 41, column: 6, scope: !1764)
!1773 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hafa76b4b20914880E", scope: !1774, file: !797, line: 641, type: !1775, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1780, retainedNodes: !1778)
!1774 = !DINamespace(name: "{impl#3}", scope: !799)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!683, !1777}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Range<usize>", baseType: !209, size: 64, align: 64, dwarfAddressSpace: 0)
!1778 = !{!1779}
!1779 = !DILocalVariable(name: "self", arg: 1, scope: !1773, file: !797, line: 641, type: !1777)
!1780 = !{!1781}
!1781 = !DITemplateTypeParameter(name: "A", type: !6)
!1782 = !DILocation(line: 641, column: 13, scope: !1773)
!1783 = !DILocation(line: 642, column: 9, scope: !1773)
!1784 = !DILocation(line: 643, column: 6, scope: !1773)
!1785 = distinct !DISubprogram(name: "size_hint<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17hdd5a7ccf0a5ee504E", scope: !1774, file: !797, line: 646, type: !1786, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1780, retainedNodes: !1793)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!1788, !1792}
!1788 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !1789, templateParams: !4, identifier: "2c591a652793c3427965aa09ecad855d")
!1789 = !{!1790, !1791}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1788, file: !2, baseType: !6, size: 64, align: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1788, file: !2, baseType: !683, size: 128, align: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Range<usize>", baseType: !209, size: 64, align: 64, dwarfAddressSpace: 0)
!1793 = !{!1794, !1795}
!1794 = !DILocalVariable(name: "self", arg: 1, scope: !1785, file: !797, line: 646, type: !1792)
!1795 = !DILocalVariable(name: "hint", scope: !1796, file: !797, line: 648, type: !683, align: 8)
!1796 = distinct !DILexicalBlock(scope: !1785, file: !797, line: 648, column: 13)
!1797 = !DILocation(line: 646, column: 18, scope: !1785)
!1798 = !DILocation(line: 647, column: 12, scope: !1785)
!1799 = !DILocation(line: 647, column: 25, scope: !1785)
!1800 = !DILocation(line: 651, column: 17, scope: !1785)
!1801 = !DILocation(line: 651, column: 13, scope: !1785)
!1802 = !DILocation(line: 647, column: 9, scope: !1785)
!1803 = !DILocation(line: 648, column: 44, scope: !1785)
!1804 = !DILocation(line: 648, column: 57, scope: !1785)
!1805 = !DILocation(line: 648, column: 24, scope: !1785)
!1806 = !DILocation(line: 648, column: 17, scope: !1796)
!1807 = !DILocation(line: 649, column: 14, scope: !1796)
!1808 = !DILocation(line: 649, column: 13, scope: !1796)
!1809 = !DILocation(line: 653, column: 6, scope: !1785)
!1810 = distinct !DISubprogram(name: "next_back<usize>", linkageName: "_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h4db9249addc4e14cE", scope: !1811, file: !797, line: 740, type: !1775, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1780, retainedNodes: !1812)
!1811 = !DINamespace(name: "{impl#4}", scope: !799)
!1812 = !{!1813}
!1813 = !DILocalVariable(name: "self", arg: 1, scope: !1810, file: !797, line: 740, type: !1777)
!1814 = !DILocation(line: 740, column: 18, scope: !1810)
!1815 = !DILocation(line: 741, column: 9, scope: !1810)
!1816 = !DILocation(line: 742, column: 6, scope: !1810)
!1817 = distinct !DISubprogram(name: "rfold<core::ops::range::Range<usize>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure#0}>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfold17h94d6b93561bea54fE", scope: !1819, file: !1818, line: 289, type: !1821, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1831, retainedNodes: !1823)
!1818 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/traits/double_ended.rs", directory: "", checksumkind: CSK_MD5, checksum: "1af159b56922714b2227672551e94b0e")
!1819 = !DINamespace(name: "DoubleEndedIterator", scope: !1820)
!1820 = !DINamespace(name: "double_ended", scope: !1283)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !209, !312, !1311}
!1823 = !{!1824, !1825, !1826, !1827, !1829}
!1824 = !DILocalVariable(name: "self", arg: 1, scope: !1817, file: !1818, line: 289, type: !209)
!1825 = !DILocalVariable(name: "init", arg: 2, scope: !1817, file: !1818, line: 289, type: !312)
!1826 = !DILocalVariable(name: "f", arg: 3, scope: !1817, file: !1818, line: 289, type: !1311)
!1827 = !DILocalVariable(name: "accum", scope: !1828, file: !1818, line: 294, type: !312, align: 1)
!1828 = distinct !DILexicalBlock(scope: !1817, file: !1818, line: 294, column: 9)
!1829 = !DILocalVariable(name: "x", scope: !1830, file: !1818, line: 295, type: !6, align: 8)
!1830 = distinct !DILexicalBlock(scope: !1828, file: !1818, line: 295, column: 19)
!1831 = !{!1832, !1833, !1834}
!1832 = !DITemplateTypeParameter(name: "Self", type: !209)
!1833 = !DITemplateTypeParameter(name: "B", type: !312)
!1834 = !DITemplateTypeParameter(name: "F", type: !1311)
!1835 = !DILocation(line: 294, column: 13, scope: !1828)
!1836 = !DILocation(line: 289, column: 20, scope: !1817)
!1837 = !DILocation(line: 289, column: 30, scope: !1817)
!1838 = !DILocation(line: 289, column: 39, scope: !1817)
!1839 = !DILocation(line: 295, column: 9, scope: !1828)
!1840 = !DILocation(line: 295, column: 29, scope: !1828)
!1841 = !DILocation(line: 295, column: 19, scope: !1828)
!1842 = !DILocation(line: 295, column: 24, scope: !1828)
!1843 = !DILocation(line: 295, column: 24, scope: !1830)
!1844 = !DILocation(line: 296, column: 21, scope: !1828)
!1845 = !DILocation(line: 297, column: 9, scope: !1828)
!1846 = !DILocation(line: 299, column: 5, scope: !1817)
!1847 = !DILocation(line: 299, column: 6, scope: !1817)
!1848 = distinct !DISubprogram(name: "rev<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17he0cc0d0348a7af5dE", scope: !1281, file: !1849, line: 2816, type: !1850, scopeLine: 2816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1854, retainedNodes: !1852)
!1849 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a638382da20c71c07b5dfc1f48eba32d")
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!205, !209}
!1852 = !{!1853}
!1853 = !DILocalVariable(name: "self", arg: 1, scope: !1848, file: !1849, line: 2816, type: !209)
!1854 = !{!1832}
!1855 = !DILocation(line: 2816, column: 12, scope: !1848)
!1856 = !DILocation(line: 2820, column: 9, scope: !1848)
!1857 = !DILocation(line: 2821, column: 6, scope: !1848)
!1858 = distinct !DISubprogram(name: "fold<core::ops::range::Range<usize>, core::option::Option<usize>, itertools::permutations::{impl#4}::remaining::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h06f585ccccddf3c3E", scope: !1281, file: !1849, line: 2163, type: !1859, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1872, retainedNodes: !1864)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!683, !209, !683, !1861}
!1861 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !1862, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "12d9d790ca56b54d36c7c8f59a07dfe")
!1862 = !DINamespace(name: "remaining", scope: !1863)
!1863 = !DINamespace(name: "{impl#4}", scope: !32)
!1864 = !{!1865, !1866, !1867, !1868, !1870}
!1865 = !DILocalVariable(name: "self", arg: 1, scope: !1858, file: !1849, line: 2163, type: !209)
!1866 = !DILocalVariable(name: "init", arg: 2, scope: !1858, file: !1849, line: 2163, type: !683)
!1867 = !DILocalVariable(name: "f", arg: 3, scope: !1858, file: !1849, line: 2163, type: !1861)
!1868 = !DILocalVariable(name: "accum", scope: !1869, file: !1849, line: 2168, type: !683, align: 8)
!1869 = distinct !DILexicalBlock(scope: !1858, file: !1849, line: 2168, column: 9)
!1870 = !DILocalVariable(name: "x", scope: !1871, file: !1849, line: 2169, type: !6, align: 8)
!1871 = distinct !DILexicalBlock(scope: !1869, file: !1849, line: 2169, column: 19)
!1872 = !{!1832, !1873, !1874}
!1873 = !DITemplateTypeParameter(name: "B", type: !683)
!1874 = !DITemplateTypeParameter(name: "F", type: !1861)
!1875 = !DILocation(line: 2168, column: 13, scope: !1869)
!1876 = !DILocation(line: 2163, column: 19, scope: !1858)
!1877 = !DILocation(line: 2163, column: 29, scope: !1858)
!1878 = !DILocation(line: 2163, column: 38, scope: !1858)
!1879 = !DILocation(line: 2168, column: 25, scope: !1858)
!1880 = !DILocation(line: 2169, column: 9, scope: !1869)
!1881 = !DILocation(line: 2169, column: 29, scope: !1869)
!1882 = !DILocation(line: 2169, column: 19, scope: !1869)
!1883 = !DILocation(line: 2169, column: 24, scope: !1869)
!1884 = !DILocation(line: 2169, column: 24, scope: !1871)
!1885 = !DILocation(line: 2170, column: 23, scope: !1869)
!1886 = !DILocation(line: 2170, column: 21, scope: !1869)
!1887 = !DILocation(line: 2171, column: 9, scope: !1869)
!1888 = !DILocation(line: 2173, column: 5, scope: !1858)
!1889 = !DILocation(line: 2173, column: 6, scope: !1858)
!1890 = !DILocation(line: 2170, column: 13, scope: !1869)
!1891 = distinct !DISubprogram(name: "fold<core::ops::range::Range<usize>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h72329ea0f180af1eE", scope: !1281, file: !1849, line: 2163, type: !1892, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1902, retainedNodes: !1894)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !209, !312, !1278}
!1894 = !{!1895, !1896, !1897, !1898, !1900}
!1895 = !DILocalVariable(name: "self", arg: 1, scope: !1891, file: !1849, line: 2163, type: !209)
!1896 = !DILocalVariable(name: "init", arg: 2, scope: !1891, file: !1849, line: 2163, type: !312)
!1897 = !DILocalVariable(name: "f", arg: 3, scope: !1891, file: !1849, line: 2163, type: !1278)
!1898 = !DILocalVariable(name: "accum", scope: !1899, file: !1849, line: 2168, type: !312, align: 1)
!1899 = distinct !DILexicalBlock(scope: !1891, file: !1849, line: 2168, column: 9)
!1900 = !DILocalVariable(name: "x", scope: !1901, file: !1849, line: 2169, type: !6, align: 8)
!1901 = distinct !DILexicalBlock(scope: !1899, file: !1849, line: 2169, column: 19)
!1902 = !{!1832, !1833, !1903}
!1903 = !DITemplateTypeParameter(name: "F", type: !1278)
!1904 = !DILocation(line: 2168, column: 13, scope: !1899)
!1905 = !DILocation(line: 2163, column: 19, scope: !1891)
!1906 = !DILocation(line: 2163, column: 29, scope: !1891)
!1907 = !DILocation(line: 2163, column: 38, scope: !1891)
!1908 = !DILocation(line: 2169, column: 9, scope: !1899)
!1909 = !DILocation(line: 2169, column: 29, scope: !1899)
!1910 = !DILocation(line: 2169, column: 19, scope: !1899)
!1911 = !DILocation(line: 2169, column: 24, scope: !1899)
!1912 = !DILocation(line: 2169, column: 24, scope: !1901)
!1913 = !DILocation(line: 2170, column: 21, scope: !1899)
!1914 = !DILocation(line: 2171, column: 9, scope: !1899)
!1915 = !DILocation(line: 2173, column: 5, scope: !1891)
!1916 = !DILocation(line: 2173, column: 6, scope: !1891)
!1917 = distinct !DISubprogram(name: "collect<core::ops::range::Range<usize>, alloc::vec::Vec<usize, alloc::alloc::Global>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h5a26c930e6531310E", scope: !1281, file: !1849, line: 1741, type: !240, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1920, retainedNodes: !1918)
!1918 = !{!1919}
!1919 = !DILocalVariable(name: "self", arg: 1, scope: !1917, file: !1849, line: 1741, type: !209)
!1920 = !{!1832, !1921}
!1921 = !DITemplateTypeParameter(name: "B", type: !46)
!1922 = !DILocation(line: 1741, column: 45, scope: !1917)
!1923 = !DILocation(line: 1745, column: 9, scope: !1917)
!1924 = !DILocation(line: 1746, column: 6, scope: !1917)
!1925 = distinct !DISubprogram(name: "collect<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>, alloc::vec::Vec<usize, alloc::alloc::Global>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17hfcb59dd665720e82E", scope: !1281, file: !1849, line: 1741, type: !203, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1928, retainedNodes: !1926)
!1926 = !{!1927}
!1927 = !DILocalVariable(name: "self", arg: 1, scope: !1925, file: !1849, line: 1741, type: !205)
!1928 = !{!1929, !1921}
!1929 = !DITemplateTypeParameter(name: "Self", type: !205)
!1930 = !DILocation(line: 1741, column: 45, scope: !1925)
!1931 = !DILocation(line: 1745, column: 9, scope: !1925)
!1932 = !DILocation(line: 1746, column: 6, scope: !1925)
!1933 = distinct !DISubprogram(name: "for_each<core::ops::range::Range<usize>, alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h0104e08a74c2bf75E", scope: !1281, file: !1849, line: 723, type: !1934, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1939, retainedNodes: !1936)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !209, !1176}
!1936 = !{!1937, !1938}
!1937 = !DILocalVariable(name: "self", arg: 1, scope: !1933, file: !1849, line: 723, type: !209)
!1938 = !DILocalVariable(name: "f", arg: 2, scope: !1933, file: !1849, line: 723, type: !1176)
!1939 = !{!1832, !1940}
!1940 = !DITemplateTypeParameter(name: "F", type: !1176)
!1941 = !DILocation(line: 723, column: 20, scope: !1933)
!1942 = !DILocation(line: 723, column: 26, scope: !1933)
!1943 = !DILocation(line: 733, column: 28, scope: !1933)
!1944 = !DILocation(line: 733, column: 23, scope: !1933)
!1945 = !DILocation(line: 733, column: 9, scope: !1933)
!1946 = !DILocation(line: 734, column: 6, scope: !1933)
!1947 = distinct !DISubprogram(name: "for_each<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>, alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h26800b288d2fb69dE", scope: !1281, file: !1849, line: 723, type: !1948, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1953, retainedNodes: !1950)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{null, !205, !1212}
!1950 = !{!1951, !1952}
!1951 = !DILocalVariable(name: "self", arg: 1, scope: !1947, file: !1849, line: 723, type: !205)
!1952 = !DILocalVariable(name: "f", arg: 2, scope: !1947, file: !1849, line: 723, type: !1212)
!1953 = !{!1929, !1954}
!1954 = !DITemplateTypeParameter(name: "F", type: !1212)
!1955 = !DILocation(line: 723, column: 20, scope: !1947)
!1956 = !DILocation(line: 723, column: 26, scope: !1947)
!1957 = !DILocation(line: 733, column: 28, scope: !1947)
!1958 = !DILocation(line: 733, column: 23, scope: !1947)
!1959 = !DILocation(line: 733, column: 9, scope: !1947)
!1960 = !DILocation(line: 734, column: 6, scope: !1947)
!1961 = distinct !DISubprogram(name: "call<usize, alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h23a97057d9bbe47bE", scope: !1280, file: !1849, line: 729, type: !1962, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1966, retainedNodes: !1964)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!1311, !1212}
!1964 = !{!1965}
!1965 = !DILocalVariable(name: "f", arg: 1, scope: !1961, file: !1849, line: 729, type: !1212)
!1966 = !{!65, !1967}
!1967 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !1212)
!1968 = !DILocation(line: 729, column: 20, scope: !1961)
!1969 = !DILocation(line: 730, column: 13, scope: !1961)
!1970 = !DILocation(line: 731, column: 10, scope: !1961)
!1971 = distinct !DISubprogram(name: "call<usize, alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17hd35227754cdc723bE", scope: !1280, file: !1849, line: 729, type: !1972, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1976, retainedNodes: !1974)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!1278, !1176}
!1974 = !{!1975}
!1975 = !DILocalVariable(name: "f", arg: 1, scope: !1971, file: !1849, line: 729, type: !1176)
!1976 = !{!65, !1977}
!1977 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !1176)
!1978 = !DILocation(line: 729, column: 20, scope: !1971)
!1979 = !DILocation(line: 730, column: 13, scope: !1971)
!1980 = !DILocation(line: 731, column: 10, scope: !1971)
!1981 = distinct !DISubprogram(name: "{closure#0}<usize, alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h39a66a7140c5b165E", scope: !1279, file: !1849, line: 730, type: !1982, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1966, retainedNodes: !1985)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !1984, !312, !6}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !1311, size: 64, align: 64, dwarfAddressSpace: 0)
!1985 = !{!1986, !1987, !1988}
!1986 = !DILocalVariable(name: "item", arg: 3, scope: !1981, file: !1849, line: 730, type: !6)
!1987 = !DILocalVariable(name: "f", scope: !1981, file: !1849, line: 729, type: !1212, align: 8)
!1988 = !DILocalVariable(arg: 2, scope: !1981, file: !1849, line: 730, type: !312)
!1989 = !DILocation(line: 729, column: 20, scope: !1981)
!1990 = !DILocation(line: 730, column: 19, scope: !1981)
!1991 = !DILocation(line: 730, column: 23, scope: !1981)
!1992 = !DILocation(line: 730, column: 29, scope: !1981)
!1993 = !DILocation(line: 730, column: 36, scope: !1981)
!1994 = distinct !DISubprogram(name: "{closure#0}<usize, alloc::vec::spec_extend::{impl#1}::spec_extend::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd8492cc4be316fedE", scope: !1279, file: !1849, line: 730, type: !1995, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1976, retainedNodes: !1998)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{null, !1997, !312, !6}
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !1278, size: 64, align: 64, dwarfAddressSpace: 0)
!1998 = !{!1999, !2000, !2001}
!1999 = !DILocalVariable(name: "item", arg: 3, scope: !1994, file: !1849, line: 730, type: !6)
!2000 = !DILocalVariable(name: "f", scope: !1994, file: !1849, line: 729, type: !1176, align: 8)
!2001 = !DILocalVariable(arg: 2, scope: !1994, file: !1849, line: 730, type: !312)
!2002 = !DILocation(line: 729, column: 20, scope: !1994)
!2003 = !DILocation(line: 730, column: 19, scope: !1994)
!2004 = !DILocation(line: 730, column: 23, scope: !1994)
!2005 = !DILocation(line: 730, column: 29, scope: !1994)
!2006 = !DILocation(line: 730, column: 36, scope: !1994)
!2007 = distinct !DISubprogram(name: "enumerate<core::slice::iter::Iter<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9enumerate17h16d57dbee5ed8c1dE", scope: !1281, file: !1849, line: 890, type: !2008, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2012, retainedNodes: !2010)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!145, !148}
!2010 = !{!2011}
!2011 = !DILocalVariable(name: "self", arg: 1, scope: !2007, file: !1849, line: 890, type: !148)
!2012 = !{!2013}
!2013 = !DITemplateTypeParameter(name: "Self", type: !148)
!2014 = !DILocation(line: 890, column: 18, scope: !2007)
!2015 = !DILocation(line: 894, column: 9, scope: !2007)
!2016 = !DILocation(line: 895, column: 6, scope: !2007)
!2017 = distinct !DISubprogram(name: "new<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h6944f2caf517b4abE", scope: !205, file: !2018, line: 19, type: !1850, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !217, retainedNodes: !2019)
!2018 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/rev.rs", directory: "", checksumkind: CSK_MD5, checksum: "e12e05d45ec334260b2bf4e457d8cd45")
!2019 = !{!2020}
!2020 = !DILocalVariable(name: "iter", arg: 1, scope: !2017, file: !2018, line: 19, type: !209)
!2021 = !DILocation(line: 19, column: 32, scope: !2017)
!2022 = !DILocation(line: 20, column: 9, scope: !2017)
!2023 = !DILocation(line: 21, column: 6, scope: !2017)
!2024 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<usize>>", linkageName: "_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h5466aacd68956aa9E", scope: !145, file: !119, line: 22, type: !2008, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !163, retainedNodes: !2025)
!2025 = !{!2026}
!2026 = !DILocalVariable(name: "iter", arg: 1, scope: !2024, file: !119, line: 22, type: !148)
!2027 = !DILocation(line: 22, column: 32, scope: !2024)
!2028 = !DILocation(line: 23, column: 9, scope: !2024)
!2029 = !DILocation(line: 24, column: 6, scope: !2024)
!2030 = distinct !DISubprogram(name: "size_align<usize>", linkageName: "_ZN4core5alloc6layout10size_align17h16a78acc6b9d6a6dE", scope: !20, file: !2031, line: 13, type: !2032, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4)
!2031 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "b4b6ecfc5f3b5a48d9382f58835da573")
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!2034}
!2034 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !2035, templateParams: !4, identifier: "692671488c701c539e0f5d11a0760e0")
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2034, file: !2, baseType: !6, size: 64, align: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2034, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!2038 = !DILocation(line: 14, column: 6, scope: !2030)
!2039 = !DILocation(line: 448, column: 5, scope: !1518, inlinedAt: !2040)
!2040 = distinct !DILocation(line: 14, column: 27, scope: !2030)
!2041 = !DILocation(line: 14, column: 27, scope: !2030)
!2042 = !DILocation(line: 14, column: 5, scope: !2030)
!2043 = !DILocation(line: 15, column: 2, scope: !2030)
!2044 = distinct !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17hc1669796bbc8a9a3E", scope: !302, file: !2031, line: 264, type: !2045, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2048)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!302, !2047}
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Layout", baseType: !302, size: 64, align: 64, dwarfAddressSpace: 0)
!2048 = !{!2049, !2050, !2052}
!2049 = !DILocalVariable(name: "self", arg: 1, scope: !2044, file: !2031, line: 264, type: !2047)
!2050 = !DILocalVariable(name: "pad", scope: !2051, file: !2031, line: 265, type: !6, align: 8)
!2051 = distinct !DILexicalBlock(scope: !2044, file: !2031, line: 265, column: 9)
!2052 = !DILocalVariable(name: "new_size", scope: !2053, file: !2031, line: 270, type: !6, align: 8)
!2053 = distinct !DILexicalBlock(scope: !2051, file: !2031, line: 270, column: 9)
!2054 = !DILocation(line: 264, column: 25, scope: !2044)
!2055 = !DILocation(line: 265, column: 43, scope: !2044)
!2056 = !DILocation(line: 265, column: 19, scope: !2044)
!2057 = !DILocation(line: 265, column: 13, scope: !2051)
!2058 = !DILocation(line: 270, column: 24, scope: !2051)
!2059 = !DILocation(line: 270, column: 13, scope: !2053)
!2060 = !DILocation(line: 272, column: 43, scope: !2053)
!2061 = !DILocation(line: 272, column: 9, scope: !2053)
!2062 = !DILocation(line: 273, column: 6, scope: !2044)
!2063 = distinct !DISubprogram(name: "from_size_align", linkageName: "_ZN4core5alloc6layout6Layout15from_size_align17h9e2ccb76571229b7E", scope: !302, file: !2031, line: 61, type: !2064, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2066)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!523, !6, !6}
!2066 = !{!2067, !2068}
!2067 = !DILocalVariable(name: "size", arg: 1, scope: !2063, file: !2031, line: 61, type: !6)
!2068 = !DILocalVariable(name: "align", arg: 2, scope: !2063, file: !2031, line: 61, type: !6)
!2069 = !DILocation(line: 61, column: 34, scope: !2063)
!2070 = !DILocation(line: 61, column: 47, scope: !2063)
!2071 = !DILocalVariable(name: "self", arg: 1, scope: !2072, file: !826, line: 1968, type: !6)
!2072 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h704b3d5a98e2274dE", scope: !827, file: !826, line: 1968, type: !2073, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2075)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!26, !6}
!2075 = !{!2071}
!2076 = !DILocation(line: 1968, column: 38, scope: !2072, inlinedAt: !2077)
!2077 = distinct !DILocation(line: 62, column: 13, scope: !2063)
!2078 = !DILocalVariable(name: "self", arg: 1, scope: !2079, file: !826, line: 84, type: !6)
!2079 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h91457f41ee5ed2deE", scope: !827, file: !826, line: 84, type: !2080, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2082)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!580, !6}
!2082 = !{!2078}
!2083 = !DILocation(line: 84, column: 33, scope: !2079, inlinedAt: !2084)
!2084 = distinct !DILocation(line: 1969, column: 13, scope: !2072, inlinedAt: !2077)
!2085 = !DILocation(line: 85, column: 13, scope: !2079, inlinedAt: !2084)
!2086 = !DILocation(line: 1969, column: 13, scope: !2072, inlinedAt: !2077)
!2087 = !DILocation(line: 62, column: 13, scope: !2063)
!2088 = !DILocation(line: 62, column: 12, scope: !2063)
!2089 = !DILocation(line: 80, column: 32, scope: !2063)
!2090 = !DILocation(line: 80, column: 19, scope: !2063)
!2091 = !DILocation(line: 80, column: 12, scope: !2063)
!2092 = !DILocation(line: 63, column: 20, scope: !2063)
!2093 = !DILocation(line: 1, column: 1, scope: !2094)
!2094 = !DILexicalBlockFile(scope: !2063, file: !2095, discriminator: 0)
!2095 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/lib.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "099348265e8e85dd0ca4d6a7c3713231")
!2096 = !DILocation(line: 87, column: 6, scope: !2063)
!2097 = !DILocation(line: 86, column: 21, scope: !2063)
!2098 = !DILocation(line: 81, column: 20, scope: !2063)
!2099 = !DILocation(line: 86, column: 18, scope: !2063)
!2100 = distinct !DISubprogram(name: "padding_needed_for", linkageName: "_ZN4core5alloc6layout6Layout18padding_needed_for17h3658247fc7e144a7E", scope: !302, file: !2031, line: 231, type: !2101, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2103)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!6, !2047, !6}
!2103 = !{!2104, !2105, !2106, !2108}
!2104 = !DILocalVariable(name: "self", arg: 1, scope: !2100, file: !2031, line: 231, type: !2047)
!2105 = !DILocalVariable(name: "align", arg: 2, scope: !2100, file: !2031, line: 231, type: !6)
!2106 = !DILocalVariable(name: "len", scope: !2107, file: !2031, line: 232, type: !6, align: 8)
!2107 = distinct !DILexicalBlock(scope: !2100, file: !2031, line: 232, column: 9)
!2108 = !DILocalVariable(name: "len_rounded_up", scope: !2109, file: !2031, line: 253, type: !6, align: 8)
!2109 = distinct !DILexicalBlock(scope: !2107, file: !2031, line: 253, column: 9)
!2110 = !DILocation(line: 231, column: 37, scope: !2100)
!2111 = !DILocation(line: 231, column: 44, scope: !2100)
!2112 = !DILocation(line: 232, column: 19, scope: !2100)
!2113 = !DILocation(line: 232, column: 13, scope: !2107)
!2114 = !DILocalVariable(name: "self", arg: 1, scope: !2115, file: !826, line: 1113, type: !6)
!2115 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hcae9b8584ee33c9bE", scope: !827, file: !826, line: 1113, type: !817, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2116)
!2116 = !{!2114, !2117}
!2117 = !DILocalVariable(name: "rhs", arg: 2, scope: !2115, file: !826, line: 1113, type: !6)
!2118 = !DILocation(line: 1113, column: 35, scope: !2115, inlinedAt: !2119)
!2119 = distinct !DILocation(line: 253, column: 30, scope: !2107)
!2120 = !DILocation(line: 1113, column: 41, scope: !2115, inlinedAt: !2119)
!2121 = !DILocation(line: 1114, column: 13, scope: !2115, inlinedAt: !2119)
!2122 = !DILocation(line: 253, column: 30, scope: !2107)
!2123 = !DILocalVariable(name: "self", arg: 1, scope: !2124, file: !826, line: 1133, type: !6)
!2124 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hcd6164a347ff4cacE", scope: !827, file: !826, line: 1133, type: !817, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2125)
!2125 = !{!2123, !2126}
!2126 = !DILocalVariable(name: "rhs", arg: 2, scope: !2124, file: !826, line: 1133, type: !6)
!2127 = !DILocation(line: 1133, column: 35, scope: !2124, inlinedAt: !2128)
!2128 = distinct !DILocation(line: 253, column: 30, scope: !2107)
!2129 = !DILocation(line: 1133, column: 41, scope: !2124, inlinedAt: !2128)
!2130 = !DILocation(line: 1134, column: 13, scope: !2124, inlinedAt: !2128)
!2131 = !DILocation(line: 1133, column: 35, scope: !2124, inlinedAt: !2132)
!2132 = distinct !DILocation(line: 253, column: 73, scope: !2107)
!2133 = !DILocation(line: 1133, column: 41, scope: !2124, inlinedAt: !2132)
!2134 = !DILocation(line: 1134, column: 13, scope: !2124, inlinedAt: !2132)
!2135 = !DILocation(line: 253, column: 73, scope: !2107)
!2136 = !DILocation(line: 253, column: 72, scope: !2107)
!2137 = !DILocation(line: 253, column: 13, scope: !2109)
!2138 = !DILocation(line: 1133, column: 35, scope: !2124, inlinedAt: !2139)
!2139 = distinct !DILocation(line: 254, column: 9, scope: !2109)
!2140 = !DILocation(line: 1133, column: 41, scope: !2124, inlinedAt: !2139)
!2141 = !DILocation(line: 1134, column: 13, scope: !2124, inlinedAt: !2139)
!2142 = !DILocation(line: 254, column: 9, scope: !2109)
!2143 = !DILocation(line: 255, column: 6, scope: !2100)
!2144 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3290f94581f3992eE", scope: !302, file: !2031, line: 98, type: !2145, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2147)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!302, !6, !6}
!2147 = !{!2148, !2149}
!2148 = !DILocalVariable(name: "size", arg: 1, scope: !2144, file: !2031, line: 98, type: !6)
!2149 = !DILocalVariable(name: "align", arg: 2, scope: !2144, file: !2031, line: 98, type: !6)
!2150 = !DILocation(line: 98, column: 51, scope: !2144)
!2151 = !DILocation(line: 98, column: 64, scope: !2144)
!2152 = !DILocation(line: 100, column: 48, scope: !2144)
!2153 = !DILocation(line: 100, column: 9, scope: !2144)
!2154 = !DILocation(line: 101, column: 6, scope: !2144)
!2155 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core5alloc6layout6Layout3new17h613820fd98b1e9f4E", scope: !302, file: !2031, line: 123, type: !2156, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2158)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!302}
!2158 = !{!2159, !2161}
!2159 = !DILocalVariable(name: "size", scope: !2160, file: !2031, line: 124, type: !6, align: 8)
!2160 = distinct !DILexicalBlock(scope: !2155, file: !2031, line: 124, column: 9)
!2161 = !DILocalVariable(name: "align", scope: !2160, file: !2031, line: 124, type: !6, align: 8)
!2162 = !DILocation(line: 124, column: 29, scope: !2155)
!2163 = !DILocation(line: 124, column: 14, scope: !2155)
!2164 = !DILocation(line: 124, column: 14, scope: !2160)
!2165 = !DILocation(line: 124, column: 20, scope: !2155)
!2166 = !DILocation(line: 124, column: 20, scope: !2160)
!2167 = !DILocation(line: 129, column: 18, scope: !2160)
!2168 = !DILocation(line: 130, column: 6, scope: !2155)
!2169 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h09575e2345050632E", scope: !302, file: !2031, line: 107, type: !2170, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2172)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{!6, !2047}
!2172 = !{!2173}
!2173 = !DILocalVariable(name: "self", arg: 1, scope: !2169, file: !2031, line: 107, type: !2047)
!2174 = !DILocation(line: 107, column: 23, scope: !2169)
!2175 = !DILocation(line: 108, column: 9, scope: !2169)
!2176 = !DILocation(line: 109, column: 6, scope: !2169)
!2177 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hd70cfb65d645742bE", scope: !302, file: !2031, line: 115, type: !2170, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2178)
!2178 = !{!2179}
!2179 = !DILocalVariable(name: "self", arg: 1, scope: !2177, file: !2031, line: 115, type: !2047)
!2180 = !DILocation(line: 115, column: 24, scope: !2177)
!2181 = !DILocation(line: 116, column: 9, scope: !2177)
!2182 = !DILocation(line: 117, column: 6, scope: !2177)
!2183 = distinct !DISubprogram(name: "array<usize>", linkageName: "_ZN4core5alloc6layout6Layout5array17h07662e3be769a547E", scope: !302, file: !2031, line: 393, type: !2184, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2186)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!523, !6}
!2186 = !{!2187, !2188, !2190, !2191, !2193, !2195, !2199, !2200}
!2187 = !DILocalVariable(name: "n", arg: 1, scope: !2183, file: !2031, line: 393, type: !6)
!2188 = !DILocalVariable(name: "layout", scope: !2189, file: !2031, line: 394, type: !302, align: 8)
!2189 = distinct !DILexicalBlock(scope: !2183, file: !2031, line: 394, column: 9)
!2190 = !DILocalVariable(name: "offset", scope: !2189, file: !2031, line: 394, type: !6, align: 8)
!2191 = !DILocalVariable(name: "residual", scope: !2192, file: !2031, line: 394, type: !385, align: 1)
!2192 = distinct !DILexicalBlock(scope: !2183, file: !2031, line: 394, column: 60)
!2193 = !DILocalVariable(name: "val", scope: !2194, file: !2031, line: 394, type: !373, align: 8)
!2194 = distinct !DILexicalBlock(scope: !2183, file: !2031, line: 394, column: 32)
!2195 = !DILocalVariable(name: "left_val", scope: !2196, file: !2031, line: 395, type: !5, align: 8)
!2196 = !DILexicalBlockFile(scope: !2197, file: !2031, discriminator: 0)
!2197 = distinct !DILexicalBlock(scope: !2189, file: !2198, line: 38, column: 13)
!2198 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e357455d1c19e9b2642585126fa64908")
!2199 = !DILocalVariable(name: "right_val", scope: !2196, file: !2031, line: 395, type: !5, align: 8)
!2200 = !DILocalVariable(name: "kind", scope: !2201, file: !2031, line: 395, type: !107, align: 1)
!2201 = !DILexicalBlockFile(scope: !2202, file: !2031, discriminator: 0)
!2202 = distinct !DILexicalBlock(scope: !2197, file: !2198, line: 40, column: 21)
!2203 = !DILocation(line: 393, column: 21, scope: !2183)
!2204 = !DILocation(line: 394, column: 14, scope: !2189)
!2205 = !DILocation(line: 394, column: 60, scope: !2192)
!2206 = !DILocation(line: 394, column: 32, scope: !2194)
!2207 = !DILocation(line: 394, column: 32, scope: !2183)
!2208 = !DILocation(line: 394, column: 14, scope: !2183)
!2209 = !DILocation(line: 394, column: 22, scope: !2183)
!2210 = !DILocation(line: 394, column: 22, scope: !2189)
!2211 = !DILocation(line: 396, column: 12, scope: !2189)
!2212 = !DILocation(line: 394, column: 32, scope: !2192)
!2213 = !DILocation(line: 397, column: 6, scope: !2183)
!2214 = !DILocation(line: 396, column: 9, scope: !2189)
!2215 = distinct !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17hb3535c5534f05886E", scope: !302, file: !2031, line: 285, type: !2216, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2218)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!365, !2047, !6}
!2218 = !{!2219, !2220, !2221, !2223, !2225, !2227}
!2219 = !DILocalVariable(name: "self", arg: 1, scope: !2215, file: !2031, line: 285, type: !2047)
!2220 = !DILocalVariable(name: "n", arg: 2, scope: !2215, file: !2031, line: 285, type: !6)
!2221 = !DILocalVariable(name: "padded_size", scope: !2222, file: !2031, line: 290, type: !6, align: 8)
!2222 = distinct !DILexicalBlock(scope: !2215, file: !2031, line: 290, column: 9)
!2223 = !DILocalVariable(name: "alloc_size", scope: !2224, file: !2031, line: 291, type: !6, align: 8)
!2224 = distinct !DILexicalBlock(scope: !2222, file: !2031, line: 291, column: 9)
!2225 = !DILocalVariable(name: "residual", scope: !2226, file: !2031, line: 291, type: !385, align: 1)
!2226 = distinct !DILexicalBlock(scope: !2222, file: !2031, line: 291, column: 71)
!2227 = !DILocalVariable(name: "val", scope: !2228, file: !2031, line: 291, type: !6, align: 8)
!2228 = distinct !DILexicalBlock(scope: !2222, file: !2031, line: 291, column: 26)
!2229 = !DILocation(line: 285, column: 19, scope: !2215)
!2230 = !DILocation(line: 285, column: 26, scope: !2215)
!2231 = !DILocation(line: 291, column: 71, scope: !2226)
!2232 = !DILocation(line: 290, column: 27, scope: !2215)
!2233 = !DILocation(line: 290, column: 65, scope: !2215)
!2234 = !DILocation(line: 290, column: 41, scope: !2215)
!2235 = !DILocation(line: 290, column: 13, scope: !2222)
!2236 = !DILocation(line: 291, column: 26, scope: !2222)
!2237 = !DILocation(line: 291, column: 26, scope: !2228)
!2238 = !DILocation(line: 291, column: 13, scope: !2224)
!2239 = !DILocation(line: 295, column: 68, scope: !2224)
!2240 = !DILocation(line: 291, column: 26, scope: !2226)
!2241 = !DILocation(line: 296, column: 6, scope: !2215)
!2242 = !DILocation(line: 295, column: 22, scope: !2224)
!2243 = !DILocation(line: 295, column: 21, scope: !2224)
!2244 = !DILocation(line: 295, column: 18, scope: !2224)
!2245 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h06aa32b083ec2802E", scope: !302, file: !2031, line: 187, type: !2246, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2248)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{!266, !2047}
!2248 = !{!2249}
!2249 = !DILocalVariable(name: "self", arg: 1, scope: !2245, file: !2031, line: 187, type: !2047)
!2250 = !DILocation(line: 187, column: 27, scope: !2245)
!2251 = !DILocation(line: 189, column: 41, scope: !2245)
!2252 = !DILocation(line: 189, column: 18, scope: !2245)
!2253 = !DILocation(line: 190, column: 6, scope: !2245)
!2254 = distinct !DISubprogram(name: "clone<()>", linkageName: "_ZN4core5clone5Clone5clone17hcabb893763a9aadfE", scope: !2256, file: !2255, line: 121, type: !2258, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2263, retainedNodes: !2261)
!2255 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "234b7513444e11fc1c70a64cfc2357fe")
!2256 = !DINamespace(name: "Clone", scope: !2257)
!2257 = !DINamespace(name: "clone", scope: !15)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{null, !2260}
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!2261 = !{!2262}
!2262 = !DILocalVariable(arg: 1, scope: !2254, file: !2255, line: 121, type: !2260)
!2263 = !{!2264}
!2264 = !DITemplateTypeParameter(name: "Self", type: !312)
!2265 = !DILocation(line: 121, column: 5, scope: !2254)
!2266 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2ba7a48a75249146E", scope: !2267, file: !2255, line: 183, type: !2269, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2271)
!2267 = !DINamespace(name: "{impl#5}", scope: !2268)
!2268 = !DINamespace(name: "impls", scope: !2257)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!6, !5}
!2271 = !{!2272}
!2272 = !DILocalVariable(name: "self", arg: 1, scope: !2266, file: !2255, line: 183, type: !5)
!2273 = !DILocation(line: 183, column: 30, scope: !2266)
!2274 = !DILocation(line: 184, column: 25, scope: !2266)
!2275 = !DILocation(line: 185, column: 22, scope: !2266)
!2276 = distinct !DISubprogram(name: "internal_constructor", linkageName: "_ZN4core5panic10panic_info9PanicInfo20internal_constructor17haab071d2c0fa51c2E", scope: !586, file: !2277, line: 44, type: !2278, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2280)
!2277 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/panic/panic_info.rs", directory: "", checksumkind: CSK_MD5, checksum: "bca649dd82ff20f6c800a3744ee1e312")
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!586, !599, !574}
!2280 = !{!2281, !2282}
!2281 = !DILocalVariable(name: "message", arg: 1, scope: !2276, file: !2277, line: 45, type: !599)
!2282 = !DILocalVariable(name: "location", arg: 2, scope: !2276, file: !2277, line: 46, type: !574)
!2283 = !DILocation(line: 45, column: 9, scope: !2276)
!2284 = !DILocation(line: 46, column: 9, scope: !2276)
!2285 = !DILocation(line: 49, column: 9, scope: !2276)
!2286 = !DILocation(line: 50, column: 6, scope: !2276)
!2287 = distinct !DISubprogram(name: "iter<usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h234dbc8e2fe698e1E", scope: !2289, file: !2288, line: 704, type: !2290, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2292)
!2288 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "243cc0697a78f4c8bd2ff0d415c0bd00")
!2289 = !DINamespace(name: "{impl#0}", scope: !150)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!148, !784}
!2292 = !{!2293}
!2293 = !DILocalVariable(name: "self", arg: 1, scope: !2287, file: !2288, line: 704, type: !784)
!2294 = !DILocation(line: 704, column: 17, scope: !2287)
!2295 = !DILocation(line: 705, column: 9, scope: !2287)
!2296 = !DILocation(line: 706, column: 6, scope: !2287)
!2297 = distinct !DISubprogram(name: "swap<usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4swap17ha13932abe406860eE", scope: !2289, file: !2288, line: 563, type: !2298, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2304)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !2300, !6, !6}
!2300 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [usize]", file: !2, size: 128, align: 64, elements: !2301, templateParams: !4, identifier: "26ce51475d714fc088e9ef28b9ab5960")
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2300, file: !2, baseType: !60, size: 64, align: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2300, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!2304 = !{!2305, !2306, !2307, !2308, !2310}
!2305 = !DILocalVariable(name: "self", arg: 1, scope: !2297, file: !2288, line: 563, type: !2300)
!2306 = !DILocalVariable(name: "a", arg: 2, scope: !2297, file: !2288, line: 563, type: !6)
!2307 = !DILocalVariable(name: "b", arg: 3, scope: !2297, file: !2288, line: 563, type: !6)
!2308 = !DILocalVariable(name: "pa", scope: !2309, file: !2288, line: 565, type: !881, align: 8)
!2309 = distinct !DILexicalBlock(scope: !2297, file: !2288, line: 565, column: 9)
!2310 = !DILocalVariable(name: "pb", scope: !2311, file: !2288, line: 566, type: !881, align: 8)
!2311 = distinct !DILexicalBlock(scope: !2309, file: !2288, line: 566, column: 9)
!2312 = !DILocation(line: 563, column: 17, scope: !2297)
!2313 = !DILocation(line: 563, column: 28, scope: !2297)
!2314 = !DILocation(line: 563, column: 38, scope: !2297)
!2315 = !DILocation(line: 565, column: 36, scope: !2297)
!2316 = !DILocation(line: 565, column: 18, scope: !2297)
!2317 = !DILocation(line: 565, column: 13, scope: !2309)
!2318 = !DILocation(line: 566, column: 36, scope: !2309)
!2319 = !DILocation(line: 566, column: 18, scope: !2309)
!2320 = !DILocation(line: 566, column: 13, scope: !2311)
!2321 = !DILocation(line: 572, column: 13, scope: !2311)
!2322 = !DILocation(line: 574, column: 6, scope: !2297)
!2323 = distinct !DISubprogram(name: "as_ptr<usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hda4b4f83376568f3E", scope: !2289, file: !2288, line: 431, type: !2324, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2326)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!60, !784}
!2326 = !{!2327}
!2327 = !DILocalVariable(name: "self", arg: 1, scope: !2323, file: !2288, line: 431, type: !784)
!2328 = !DILocation(line: 431, column: 25, scope: !2323)
!2329 = !DILocation(line: 432, column: 9, scope: !2323)
!2330 = !DILocation(line: 433, column: 6, scope: !2323)
!2331 = distinct !DISubprogram(name: "from_raw_parts<usize>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hd104ccfc67221c9cE", scope: !2333, file: !2332, line: 88, type: !2334, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2336)
!2332 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "5d3d89763d536c3489cc9de04b56e43e")
!2333 = !DINamespace(name: "raw", scope: !150)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!784, !60, !6}
!2336 = !{!2337, !2338}
!2337 = !DILocalVariable(name: "data", arg: 1, scope: !2331, file: !2332, line: 88, type: !60)
!2338 = !DILocalVariable(name: "len", arg: 2, scope: !2331, file: !2332, line: 88, type: !6)
!2339 = !DILocation(line: 88, column: 37, scope: !2331)
!2340 = !DILocation(line: 88, column: 53, scope: !2331)
!2341 = !DILocation(line: 95, column: 16, scope: !2331)
!2342 = !DILocation(line: 96, column: 2, scope: !2331)
!2343 = distinct !DISubprogram(name: "from_raw_parts_mut<usize>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h49db427d64a54585E", scope: !2333, file: !2332, line: 129, type: !2344, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2346)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!2300, !881, !6}
!2346 = !{!2347, !2348}
!2347 = !DILocalVariable(name: "data", arg: 1, scope: !2343, file: !2332, line: 129, type: !881)
!2348 = !DILocalVariable(name: "len", arg: 2, scope: !2343, file: !2332, line: 129, type: !6)
!2349 = !DILocation(line: 129, column: 41, scope: !2343)
!2350 = !DILocation(line: 129, column: 55, scope: !2343)
!2351 = !DILocation(line: 136, column: 20, scope: !2343)
!2352 = !DILocation(line: 137, column: 2, scope: !2343)
!2353 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h36de2283ee374d3bE", scope: !148, file: !2354, line: 87, type: !2290, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2355)
!2354 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "5aaa66a4d49b9ecc9bcb7869337da7d8")
!2355 = !{!2356, !2357, !2359}
!2356 = !DILocalVariable(name: "slice", arg: 1, scope: !2353, file: !2354, line: 87, type: !784)
!2357 = !DILocalVariable(name: "ptr", scope: !2358, file: !2354, line: 88, type: !60, align: 8)
!2358 = distinct !DILexicalBlock(scope: !2353, file: !2354, line: 88, column: 9)
!2359 = !DILocalVariable(name: "end", scope: !2360, file: !2354, line: 93, type: !60, align: 8)
!2360 = distinct !DILexicalBlock(scope: !2358, file: !2354, line: 93, column: 13)
!2361 = !DILocation(line: 87, column: 23, scope: !2353)
!2362 = !DILocation(line: 93, column: 17, scope: !2360)
!2363 = !DILocation(line: 88, column: 19, scope: !2353)
!2364 = !DILocation(line: 88, column: 13, scope: !2358)
!2365 = !DILocation(line: 91, column: 21, scope: !2358)
!2366 = !DILocation(line: 91, column: 20, scope: !2358)
!2367 = !DILocation(line: 91, column: 13, scope: !2358)
!2368 = !DILocation(line: 93, column: 26, scope: !2358)
!2369 = !DILocation(line: 94, column: 17, scope: !2358)
!2370 = !DILocalVariable(name: "self", arg: 1, scope: !2371, file: !1744, line: 638, type: !269)
!2371 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h96ab2bae72bcc4d1E", scope: !1745, file: !1744, line: 638, type: !2372, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !2374)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!269, !269, !6}
!2374 = !{!2370, !2375}
!2375 = !DILocalVariable(name: "count", arg: 2, scope: !2371, file: !1744, line: 638, type: !6)
!2376 = !DILocation(line: 638, column: 31, scope: !2371, inlinedAt: !2377)
!2377 = distinct !DILocation(line: 94, column: 17, scope: !2358)
!2378 = !DILocation(line: 638, column: 37, scope: !2371, inlinedAt: !2377)
!2379 = !DILocalVariable(name: "self", arg: 1, scope: !2380, file: !1744, line: 292, type: !269)
!2380 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hc7cbdace59fcfe9eE", scope: !1745, file: !1744, line: 292, type: !2381, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !2384)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!269, !269, !2383}
!2383 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!2384 = !{!2379, !2385}
!2385 = !DILocalVariable(name: "count", arg: 2, scope: !2380, file: !1744, line: 292, type: !2383)
!2386 = !DILocation(line: 292, column: 34, scope: !2380, inlinedAt: !2387)
!2387 = distinct !DILocation(line: 642, column: 9, scope: !2371, inlinedAt: !2377)
!2388 = !DILocation(line: 292, column: 40, scope: !2380, inlinedAt: !2387)
!2389 = !DILocation(line: 297, column: 18, scope: !2380, inlinedAt: !2387)
!2390 = !DILocalVariable(name: "self", arg: 1, scope: !2391, file: !1744, line: 511, type: !60)
!2391 = distinct !DISubprogram(name: "add<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3c88d83001a525f6E", scope: !1745, file: !1744, line: 511, type: !2392, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2394)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!60, !60, !6}
!2394 = !{!2390, !2395}
!2395 = !DILocalVariable(name: "count", arg: 2, scope: !2391, file: !1744, line: 511, type: !6)
!2396 = !DILocation(line: 511, column: 29, scope: !2391, inlinedAt: !2397)
!2397 = distinct !DILocation(line: 96, column: 17, scope: !2358)
!2398 = !DILocation(line: 511, column: 35, scope: !2391, inlinedAt: !2397)
!2399 = !DILocalVariable(name: "self", arg: 1, scope: !2400, file: !1744, line: 230, type: !60)
!2400 = distinct !DISubprogram(name: "offset<usize>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0a80843e34b6f5fdE", scope: !1745, file: !1744, line: 230, type: !2401, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2403)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!60, !60, !2383}
!2403 = !{!2399, !2404}
!2404 = !DILocalVariable(name: "count", arg: 2, scope: !2400, file: !1744, line: 230, type: !2383)
!2405 = !DILocation(line: 230, column: 32, scope: !2400, inlinedAt: !2406)
!2406 = distinct !DILocation(line: 516, column: 18, scope: !2391, inlinedAt: !2397)
!2407 = !DILocation(line: 230, column: 38, scope: !2400, inlinedAt: !2406)
!2408 = !DILocation(line: 235, column: 18, scope: !2400, inlinedAt: !2406)
!2409 = !DILocation(line: 96, column: 17, scope: !2358)
!2410 = !DILocation(line: 93, column: 23, scope: !2358)
!2411 = !DILocation(line: 99, column: 25, scope: !2360)
!2412 = !DILocation(line: 99, column: 64, scope: !2360)
!2413 = !DILocation(line: 99, column: 13, scope: !2360)
!2414 = !DILocation(line: 101, column: 6, scope: !2353)
!2415 = distinct !DISubprogram(name: "index<usize, usize>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h70c27a217761ca50E", scope: !2417, file: !2416, line: 14, type: !2419, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2424, retainedNodes: !2421)
!2416 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "a82bc19197b1c05f8386d5b2ec2441bd")
!2417 = !DINamespace(name: "{impl#0}", scope: !2418)
!2418 = !DINamespace(name: "index", scope: !150)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!5, !784, !6, !574}
!2421 = !{!2422, !2423}
!2422 = !DILocalVariable(name: "self", arg: 1, scope: !2415, file: !2416, line: 14, type: !784)
!2423 = !DILocalVariable(name: "index", arg: 2, scope: !2415, file: !2416, line: 14, type: !6)
!2424 = !{!65, !2425}
!2425 = !DITemplateTypeParameter(name: "I", type: !6)
!2426 = !DILocation(line: 14, column: 14, scope: !2415)
!2427 = !DILocation(line: 14, column: 21, scope: !2415)
!2428 = !DILocation(line: 15, column: 9, scope: !2415)
!2429 = !DILocation(line: 16, column: 6, scope: !2415)
!2430 = distinct !DISubprogram(name: "index_mut<usize, usize>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf1735b20386b3284E", scope: !2431, file: !2416, line: 25, type: !2432, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2424, retainedNodes: !2434)
!2431 = !DINamespace(name: "{impl#1}", scope: !2418)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!1045, !2300, !6, !574}
!2434 = !{!2435, !2436}
!2435 = !DILocalVariable(name: "self", arg: 1, scope: !2430, file: !2416, line: 25, type: !2300)
!2436 = !DILocalVariable(name: "index", arg: 2, scope: !2430, file: !2416, line: 25, type: !6)
!2437 = !DILocation(line: 25, column: 18, scope: !2430)
!2438 = !DILocation(line: 25, column: 29, scope: !2430)
!2439 = !DILocation(line: 26, column: 9, scope: !2430)
!2440 = !DILocation(line: 27, column: 6, scope: !2430)
!2441 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h22757971a0b2da31E", scope: !683, file: !2442, line: 914, type: !2443, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2453, retainedNodes: !2458)
!2442 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "ae2d10012265ee4a26e1fe00b9dc31b2")
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!2445, !683, !292}
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !96, file: !2, size: 192, align: 64, elements: !2446, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68")
!2446 = !{!2447}
!2447 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 192, align: 64, elements: !2448, templateParams: !2453, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68_variant_part", discriminator: !339)
!2448 = !{!2449, !2454}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2447, file: !2, baseType: !2450, size: 192, align: 64, extraData: i64 0)
!2450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2445, file: !2, size: 192, align: 64, elements: !2451, templateParams: !2453, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68::Ok")
!2451 = !{!2452}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2450, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!2453 = !{!65, !349}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2447, file: !2, baseType: !2455, size: 192, align: 64, extraData: i64 1)
!2455 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2445, file: !2, size: 192, align: 64, elements: !2456, templateParams: !2453, identifier: "58c2fff01bc74c1ffff87f34e3ea1c68::Err")
!2456 = !{!2457}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2455, file: !2, baseType: !292, size: 128, align: 64, offset: 64)
!2458 = !{!2459, !2460, !2461}
!2459 = !DILocalVariable(name: "self", arg: 1, scope: !2441, file: !2442, line: 914, type: !683)
!2460 = !DILocalVariable(name: "err", arg: 2, scope: !2441, file: !2442, line: 914, type: !292)
!2461 = !DILocalVariable(name: "v", scope: !2462, file: !2442, line: 916, type: !6, align: 8)
!2462 = distinct !DILexicalBlock(scope: !2441, file: !2442, line: 916, column: 13)
!2463 = !DILocation(line: 914, column: 21, scope: !2441)
!2464 = !DILocation(line: 914, column: 27, scope: !2441)
!2465 = !DILocation(line: 915, column: 15, scope: !2441)
!2466 = !DILocation(line: 915, column: 9, scope: !2441)
!2467 = !DILocation(line: 917, column: 25, scope: !2441)
!2468 = !DILocation(line: 917, column: 21, scope: !2441)
!2469 = !DILocation(line: 917, column: 28, scope: !2441)
!2470 = !DILocation(line: 916, column: 18, scope: !2441)
!2471 = !DILocation(line: 916, column: 18, scope: !2462)
!2472 = !DILocation(line: 916, column: 24, scope: !2462)
!2473 = !DILocation(line: 916, column: 28, scope: !2441)
!2474 = !DILocation(line: 919, column: 5, scope: !2441)
!2475 = !DILocation(line: 919, column: 6, scope: !2441)
!2476 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h716f966699a133f9E", scope: !1634, file: !2442, line: 914, type: !2477, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2487, retainedNodes: !2492)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!2479, !1634, !431}
!2479 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !96, file: !2, size: 64, align: 64, elements: !2480, identifier: "ae14187b6b914de222cba478783c9cfb")
!2480 = !{!2481}
!2481 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 64, align: 64, elements: !2482, templateParams: !2487, identifier: "ae14187b6b914de222cba478783c9cfb_variant_part", discriminator: !339)
!2482 = !{!2483, !2488}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2481, file: !2, baseType: !2484, size: 64, align: 64)
!2484 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2479, file: !2, size: 64, align: 64, elements: !2485, templateParams: !2487, identifier: "ae14187b6b914de222cba478783c9cfb::Ok")
!2485 = !{!2486}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2484, file: !2, baseType: !266, size: 64, align: 64)
!2487 = !{!1641, !430}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2481, file: !2, baseType: !2489, size: 64, align: 64, extraData: i64 0)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2479, file: !2, size: 64, align: 64, elements: !2490, templateParams: !2487, identifier: "ae14187b6b914de222cba478783c9cfb::Err")
!2490 = !{!2491}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2489, file: !2, baseType: !431, align: 8)
!2492 = !{!2493, !2494, !2495}
!2493 = !DILocalVariable(name: "self", arg: 1, scope: !2476, file: !2442, line: 914, type: !1634)
!2494 = !DILocalVariable(name: "err", arg: 2, scope: !2476, file: !2442, line: 914, type: !431)
!2495 = !DILocalVariable(name: "v", scope: !2496, file: !2442, line: 916, type: !266, align: 8)
!2496 = distinct !DILexicalBlock(scope: !2476, file: !2442, line: 916, column: 13)
!2497 = !DILocation(line: 914, column: 21, scope: !2476)
!2498 = !DILocation(line: 914, column: 27, scope: !2476)
!2499 = !DILocation(line: 915, column: 15, scope: !2476)
!2500 = !DILocation(line: 915, column: 9, scope: !2476)
!2501 = !DILocation(line: 917, column: 25, scope: !2476)
!2502 = !DILocation(line: 917, column: 21, scope: !2476)
!2503 = !DILocation(line: 917, column: 28, scope: !2476)
!2504 = !DILocation(line: 916, column: 18, scope: !2476)
!2505 = !DILocation(line: 916, column: 18, scope: !2496)
!2506 = !DILocation(line: 916, column: 24, scope: !2496)
!2507 = !DILocation(line: 916, column: 28, scope: !2476)
!2508 = !DILocation(line: 919, column: 5, scope: !2476)
!2509 = !DILocation(line: 919, column: 6, scope: !2476)
!2510 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hfdd160600b4f5af3E", scope: !683, file: !2442, line: 914, type: !2511, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2521, retainedNodes: !2526)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!2513, !683, !19}
!2513 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !96, file: !2, size: 128, align: 64, elements: !2514, identifier: "bcfcb322480b2d26d4da0769e4ceae7b")
!2514 = !{!2515}
!2515 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 128, align: 64, elements: !2516, templateParams: !2521, identifier: "bcfcb322480b2d26d4da0769e4ceae7b_variant_part", discriminator: !339)
!2516 = !{!2517, !2522}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2515, file: !2, baseType: !2518, size: 128, align: 64, extraData: i64 0)
!2518 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2513, file: !2, size: 128, align: 64, elements: !2519, templateParams: !2521, identifier: "bcfcb322480b2d26d4da0769e4ceae7b::Ok")
!2519 = !{!2520}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2518, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!2521 = !{!65, !379}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2515, file: !2, baseType: !2523, size: 128, align: 64, extraData: i64 1)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2513, file: !2, size: 128, align: 64, elements: !2524, templateParams: !2521, identifier: "bcfcb322480b2d26d4da0769e4ceae7b::Err")
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2523, file: !2, baseType: !19, align: 8, offset: 64)
!2526 = !{!2527, !2528, !2529}
!2527 = !DILocalVariable(name: "self", arg: 1, scope: !2510, file: !2442, line: 914, type: !683)
!2528 = !DILocalVariable(name: "err", arg: 2, scope: !2510, file: !2442, line: 914, type: !19)
!2529 = !DILocalVariable(name: "v", scope: !2530, file: !2442, line: 916, type: !6, align: 8)
!2530 = distinct !DILexicalBlock(scope: !2510, file: !2442, line: 916, column: 13)
!2531 = !DILocation(line: 914, column: 21, scope: !2510)
!2532 = !DILocation(line: 914, column: 27, scope: !2510)
!2533 = !DILocation(line: 915, column: 15, scope: !2510)
!2534 = !DILocation(line: 915, column: 9, scope: !2510)
!2535 = !DILocation(line: 917, column: 25, scope: !2510)
!2536 = !DILocation(line: 917, column: 21, scope: !2510)
!2537 = !DILocation(line: 917, column: 28, scope: !2510)
!2538 = !DILocation(line: 916, column: 18, scope: !2510)
!2539 = !DILocation(line: 916, column: 18, scope: !2530)
!2540 = !DILocation(line: 916, column: 24, scope: !2530)
!2541 = !DILocation(line: 916, column: 28, scope: !2510)
!2542 = !DILocation(line: 919, column: 5, scope: !2510)
!2543 = !DILocation(line: 919, column: 6, scope: !2510)
!2544 = distinct !DISubprogram(name: "and_then<usize, usize, itertools::permutations::{impl#4}::remaining::{closure#0}::{closure#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h5ec3511ca90332b3E", scope: !683, file: !2442, line: 1041, type: !2545, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2556, retainedNodes: !2551)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!683, !683, !2547}
!2547 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2548, file: !2, size: 64, align: 64, elements: !2549, templateParams: !4, identifier: "4f20fa70faedaba61a652e4adc0242ce")
!2548 = !DINamespace(name: "{closure#0}", scope: !1862)
!2549 = !{!2550}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__i", scope: !2547, file: !2, baseType: !5, size: 64, align: 64)
!2551 = !{!2552, !2553, !2554}
!2552 = !DILocalVariable(name: "self", arg: 1, scope: !2544, file: !2442, line: 1041, type: !683)
!2553 = !DILocalVariable(name: "f", arg: 2, scope: !2544, file: !2442, line: 1041, type: !2547)
!2554 = !DILocalVariable(name: "x", scope: !2555, file: !2442, line: 1043, type: !6, align: 8)
!2555 = distinct !DILexicalBlock(scope: !2544, file: !2442, line: 1043, column: 13)
!2556 = !{!65, !1662, !2557}
!2557 = !DITemplateTypeParameter(name: "F", type: !2547)
!2558 = !DILocation(line: 1041, column: 51, scope: !2544)
!2559 = !DILocation(line: 1041, column: 57, scope: !2544)
!2560 = !DILocation(line: 1042, column: 15, scope: !2544)
!2561 = !DILocation(line: 1042, column: 9, scope: !2544)
!2562 = !DILocation(line: 1044, column: 21, scope: !2544)
!2563 = !DILocation(line: 1043, column: 18, scope: !2544)
!2564 = !DILocation(line: 1043, column: 18, scope: !2555)
!2565 = !DILocation(line: 1043, column: 24, scope: !2555)
!2566 = !DILocation(line: 1046, column: 5, scope: !2544)
!2567 = !DILocation(line: 1046, column: 6, scope: !2544)
!2568 = distinct !DISubprogram(name: "and_then<usize, usize, itertools::permutations::{impl#4}::remaining::{closure#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17he53741757a10c680E", scope: !683, file: !2442, line: 1041, type: !2569, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2579, retainedNodes: !2574)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!683, !683, !2571}
!2571 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#1}", scope: !1862, file: !2, size: 64, align: 64, elements: !2572, templateParams: !4, identifier: "2241b0674f03f1d1b1ec29248864c484")
!2572 = !{!2573}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__c", scope: !2571, file: !2, baseType: !5, size: 64, align: 64)
!2574 = !{!2575, !2576, !2577}
!2575 = !DILocalVariable(name: "self", arg: 1, scope: !2568, file: !2442, line: 1041, type: !683)
!2576 = !DILocalVariable(name: "f", arg: 2, scope: !2568, file: !2442, line: 1041, type: !2571)
!2577 = !DILocalVariable(name: "x", scope: !2578, file: !2442, line: 1043, type: !6, align: 8)
!2578 = distinct !DILexicalBlock(scope: !2568, file: !2442, line: 1043, column: 13)
!2579 = !{!65, !1662, !2580}
!2580 = !DITemplateTypeParameter(name: "F", type: !2571)
!2581 = !DILocation(line: 1041, column: 51, scope: !2568)
!2582 = !DILocation(line: 1041, column: 57, scope: !2568)
!2583 = !DILocation(line: 1042, column: 15, scope: !2568)
!2584 = !DILocation(line: 1042, column: 9, scope: !2568)
!2585 = !DILocation(line: 1044, column: 21, scope: !2568)
!2586 = !DILocation(line: 1043, column: 18, scope: !2568)
!2587 = !DILocation(line: 1043, column: 18, scope: !2578)
!2588 = !DILocation(line: 1043, column: 24, scope: !2578)
!2589 = !DILocation(line: 1046, column: 5, scope: !2568)
!2590 = !DILocation(line: 1046, column: 6, scope: !2568)
!2591 = distinct !DISubprogram(name: "unwrap_or<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd849ad9b75b5bafdE", scope: !683, file: !2442, line: 755, type: !2592, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2594)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!6, !683, !6}
!2594 = !{!2595, !2596, !2597}
!2595 = !DILocalVariable(name: "self", arg: 1, scope: !2591, file: !2442, line: 755, type: !683)
!2596 = !DILocalVariable(name: "default", arg: 2, scope: !2591, file: !2442, line: 755, type: !6)
!2597 = !DILocalVariable(name: "x", scope: !2598, file: !2442, line: 757, type: !6, align: 8)
!2598 = distinct !DILexicalBlock(scope: !2591, file: !2442, line: 757, column: 13)
!2599 = !DILocation(line: 755, column: 22, scope: !2591)
!2600 = !DILocation(line: 755, column: 28, scope: !2591)
!2601 = !DILocation(line: 756, column: 15, scope: !2591)
!2602 = !DILocation(line: 756, column: 9, scope: !2591)
!2603 = !DILocation(line: 758, column: 21, scope: !2591)
!2604 = !DILocation(line: 757, column: 18, scope: !2591)
!2605 = !DILocation(line: 757, column: 18, scope: !2598)
!2606 = !DILocation(line: 757, column: 24, scope: !2598)
!2607 = !DILocation(line: 760, column: 5, scope: !2591)
!2608 = !DILocation(line: 760, column: 6, scope: !2591)
!2609 = distinct !DISubprogram(name: "unwrap<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h51d363fc12d341daE", scope: !523, file: !320, line: 1296, type: !2610, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !531, retainedNodes: !2612)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!302, !523, !574}
!2612 = !{!2613, !2614, !2616}
!2613 = !DILocalVariable(name: "self", arg: 1, scope: !2609, file: !320, line: 1296, type: !523)
!2614 = !DILocalVariable(name: "t", scope: !2615, file: !320, line: 1298, type: !302, align: 8)
!2615 = distinct !DILexicalBlock(scope: !2609, file: !320, line: 1298, column: 13)
!2616 = !DILocalVariable(name: "e", scope: !2617, file: !320, line: 1299, type: !19, align: 1)
!2617 = distinct !DILexicalBlock(scope: !2609, file: !320, line: 1299, column: 13)
!2618 = !DILocation(line: 1296, column: 19, scope: !2609)
!2619 = !DILocation(line: 1299, column: 17, scope: !2617)
!2620 = !DILocation(line: 1297, column: 15, scope: !2609)
!2621 = !DILocation(line: 1297, column: 9, scope: !2609)
!2622 = !DILocation(line: 1298, column: 16, scope: !2609)
!2623 = !DILocation(line: 1298, column: 16, scope: !2615)
!2624 = !DILocation(line: 1301, column: 6, scope: !2609)
!2625 = !DILocation(line: 1299, column: 84, scope: !2617)
!2626 = !DILocation(line: 1299, column: 23, scope: !2617)
!2627 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0b9c678594b474d6E", scope: !408, file: !320, line: 850, type: !2628, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2641, retainedNodes: !2634)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!459, !408, !2630}
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#1}", scope: !2631, file: !2, size: 64, align: 64, elements: !2632, templateParams: !4, identifier: "30a4b3cb8a2a2cdadf86d72dff034734")
!2631 = !DINamespace(name: "finish_grow", scope: !52)
!2632 = !{!2633}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !2630, file: !2, baseType: !2047, size: 64, align: 64)
!2634 = !{!2635, !2636, !2637, !2639}
!2635 = !DILocalVariable(name: "self", arg: 1, scope: !2627, file: !320, line: 850, type: !408)
!2636 = !DILocalVariable(name: "op", arg: 2, scope: !2627, file: !320, line: 850, type: !2630)
!2637 = !DILocalVariable(name: "t", scope: !2638, file: !320, line: 852, type: !416, align: 8)
!2638 = distinct !DILexicalBlock(scope: !2627, file: !320, line: 852, column: 13)
!2639 = !DILocalVariable(name: "e", scope: !2640, file: !320, line: 853, type: !431, align: 1)
!2640 = distinct !DILexicalBlock(scope: !2627, file: !320, line: 853, column: 13)
!2641 = !{!429, !430, !355, !2642}
!2642 = !DITemplateTypeParameter(name: "O", type: !2630)
!2643 = !DILocation(line: 850, column: 42, scope: !2627)
!2644 = !DILocation(line: 850, column: 48, scope: !2627)
!2645 = !DILocation(line: 853, column: 17, scope: !2640)
!2646 = !DILocation(line: 851, column: 15, scope: !2627)
!2647 = !DILocation(line: 851, column: 9, scope: !2627)
!2648 = !DILocation(line: 852, column: 16, scope: !2627)
!2649 = !DILocation(line: 852, column: 16, scope: !2638)
!2650 = !DILocation(line: 852, column: 22, scope: !2638)
!2651 = !DILocation(line: 852, column: 26, scope: !2627)
!2652 = !DILocation(line: 853, column: 27, scope: !2640)
!2653 = !DILocation(line: 853, column: 23, scope: !2640)
!2654 = !DILocation(line: 853, column: 32, scope: !2627)
!2655 = !DILocation(line: 855, column: 5, scope: !2627)
!2656 = !DILocation(line: 855, column: 6, scope: !2627)
!2657 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h366746563dca9873E", scope: !324, file: !320, line: 850, type: !2658, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2682, retainedNodes: !2675)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!2660, !324, !2673}
!2660 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !96, file: !2, size: 192, align: 64, elements: !2661, identifier: "24e52cac73c8c5a047f4c34b088eea69")
!2661 = !{!2662}
!2662 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 192, align: 64, elements: !2663, templateParams: !2668, identifier: "24e52cac73c8c5a047f4c34b088eea69_variant_part", discriminator: !339)
!2663 = !{!2664, !2669}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2662, file: !2, baseType: !2665, size: 192, align: 64, extraData: i64 0)
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2660, file: !2, size: 192, align: 64, elements: !2666, templateParams: !2668, identifier: "24e52cac73c8c5a047f4c34b088eea69::Ok")
!2666 = !{!2667}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2665, file: !2, baseType: !312, align: 8, offset: 64)
!2668 = !{!333, !349}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2662, file: !2, baseType: !2670, size: 192, align: 64, extraData: i64 1)
!2670 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2660, file: !2, size: 192, align: 64, elements: !2671, templateParams: !2668, identifier: "24e52cac73c8c5a047f4c34b088eea69::Err")
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2670, file: !2, baseType: !292, size: 128, align: 64, offset: 64)
!2673 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2674, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "97d0bb9292eae46f438c2e10f9daf6ff")
!2674 = !DINamespace(name: "handle_reserve", scope: !52)
!2675 = !{!2676, !2677, !2678, !2680}
!2676 = !DILocalVariable(name: "self", arg: 1, scope: !2657, file: !320, line: 850, type: !324)
!2677 = !DILocalVariable(name: "op", arg: 2, scope: !2657, file: !320, line: 850, type: !2673)
!2678 = !DILocalVariable(name: "t", scope: !2679, file: !320, line: 852, type: !312, align: 1)
!2679 = distinct !DILexicalBlock(scope: !2657, file: !320, line: 852, column: 13)
!2680 = !DILocalVariable(name: "e", scope: !2681, file: !320, line: 853, type: !289, align: 8)
!2681 = distinct !DILexicalBlock(scope: !2657, file: !320, line: 853, column: 13)
!2682 = !{!333, !334, !2683, !2684}
!2683 = !DITemplateTypeParameter(name: "F", type: !292)
!2684 = !DITemplateTypeParameter(name: "O", type: !2673)
!2685 = !DILocation(line: 850, column: 42, scope: !2657)
!2686 = !DILocation(line: 850, column: 48, scope: !2657)
!2687 = !DILocation(line: 852, column: 16, scope: !2679)
!2688 = !DILocation(line: 851, column: 15, scope: !2657)
!2689 = !DILocation(line: 851, column: 9, scope: !2657)
!2690 = !DILocation(line: 852, column: 22, scope: !2679)
!2691 = !DILocation(line: 852, column: 26, scope: !2657)
!2692 = !DILocation(line: 853, column: 17, scope: !2657)
!2693 = !DILocation(line: 853, column: 17, scope: !2681)
!2694 = !DILocation(line: 853, column: 27, scope: !2681)
!2695 = !DILocation(line: 853, column: 23, scope: !2681)
!2696 = !DILocation(line: 853, column: 32, scope: !2657)
!2697 = !DILocation(line: 855, column: 5, scope: !2657)
!2698 = !DILocation(line: 855, column: 6, scope: !2657)
!2699 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h881173f80a821c84E", scope: !523, file: !320, line: 850, type: !2700, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2723, retainedNodes: !2716)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{!2702, !523, !2715}
!2702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !96, file: !2, size: 192, align: 64, elements: !2703, identifier: "74c4016fe1eef928f05816e275d1c493")
!2703 = !{!2704}
!2704 = !DICompositeType(tag: DW_TAG_variant_part, scope: !96, file: !2, size: 192, align: 64, elements: !2705, templateParams: !2710, identifier: "74c4016fe1eef928f05816e275d1c493_variant_part", discriminator: !339)
!2705 = !{!2706, !2711}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2704, file: !2, baseType: !2707, size: 192, align: 64, extraData: i64 0)
!2707 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2702, file: !2, size: 192, align: 64, elements: !2708, templateParams: !2710, identifier: "74c4016fe1eef928f05816e275d1c493::Ok")
!2708 = !{!2709}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2707, file: !2, baseType: !302, size: 128, align: 64, offset: 64)
!2710 = !{!532, !349}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2704, file: !2, baseType: !2712, size: 192, align: 64, extraData: i64 1)
!2712 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2702, file: !2, size: 192, align: 64, elements: !2713, templateParams: !2710, identifier: "74c4016fe1eef928f05816e275d1c493::Err")
!2713 = !{!2714}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2712, file: !2, baseType: !292, size: 128, align: 64, offset: 64)
!2715 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2631, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "6432d07da548882db6e3de9dedabeb95")
!2716 = !{!2717, !2718, !2719, !2721}
!2717 = !DILocalVariable(name: "self", arg: 1, scope: !2699, file: !320, line: 850, type: !523)
!2718 = !DILocalVariable(name: "op", arg: 2, scope: !2699, file: !320, line: 850, type: !2715)
!2719 = !DILocalVariable(name: "t", scope: !2720, file: !320, line: 852, type: !302, align: 8)
!2720 = distinct !DILexicalBlock(scope: !2699, file: !320, line: 852, column: 13)
!2721 = !DILocalVariable(name: "e", scope: !2722, file: !320, line: 853, type: !19, align: 1)
!2722 = distinct !DILexicalBlock(scope: !2699, file: !320, line: 853, column: 13)
!2723 = !{!532, !379, !2683, !2724}
!2724 = !DITemplateTypeParameter(name: "O", type: !2715)
!2725 = !DILocation(line: 850, column: 42, scope: !2699)
!2726 = !DILocation(line: 850, column: 48, scope: !2699)
!2727 = !DILocation(line: 853, column: 17, scope: !2722)
!2728 = !DILocation(line: 851, column: 15, scope: !2699)
!2729 = !DILocation(line: 851, column: 9, scope: !2699)
!2730 = !DILocation(line: 852, column: 16, scope: !2699)
!2731 = !DILocation(line: 852, column: 16, scope: !2720)
!2732 = !DILocation(line: 852, column: 22, scope: !2720)
!2733 = !DILocation(line: 852, column: 26, scope: !2699)
!2734 = !DILocation(line: 853, column: 27, scope: !2722)
!2735 = !DILocation(line: 853, column: 23, scope: !2722)
!2736 = !DILocation(line: 853, column: 32, scope: !2699)
!2737 = !DILocation(line: 855, column: 5, scope: !2699)
!2738 = !DILocation(line: 855, column: 6, scope: !2699)
!2739 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f039a29a54e3f3aE", scope: !2741, file: !2740, line: 547, type: !2742, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2746, retainedNodes: !2744)
!2740 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "013dcb324a64d449769af1e8bbdf7aa9")
!2741 = !DINamespace(name: "{impl#4}", scope: !180)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{null, !431}
!2744 = !{!2745}
!2745 = !DILocalVariable(name: "t", arg: 1, scope: !2739, file: !2740, line: 547, type: !431)
!2746 = !{!2747}
!2747 = !DITemplateTypeParameter(name: "T", type: !431)
!2748 = !DILocation(line: 547, column: 13, scope: !2739)
!2749 = !DILocation(line: 549, column: 6, scope: !2739)
!2750 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8314695760a1c4e1E", scope: !2741, file: !2740, line: 547, type: !2751, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !1425, retainedNodes: !2753)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{null, !19}
!2753 = !{!2754}
!2754 = !DILocalVariable(name: "t", arg: 1, scope: !2750, file: !2740, line: 547, type: !19)
!2755 = !DILocation(line: 547, column: 13, scope: !2750)
!2756 = !DILocation(line: 549, column: 6, scope: !2750)
!2757 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha071b62114951ebdE", scope: !2741, file: !2740, line: 547, type: !2758, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2762, retainedNodes: !2760)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!289, !289}
!2760 = !{!2761}
!2761 = !DILocalVariable(name: "t", arg: 1, scope: !2757, file: !2740, line: 547, type: !289)
!2762 = !{!2763}
!2763 = !DITemplateTypeParameter(name: "T", type: !289)
!2764 = !DILocation(line: 547, column: 13, scope: !2757)
!2765 = !DILocation(line: 549, column: 6, scope: !2757)
!2766 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h36c1fd4db3113d1aE", scope: !2767, file: !2740, line: 539, type: !264, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2770, retainedNodes: !2768)
!2767 = !DINamespace(name: "{impl#3}", scope: !180)
!2768 = !{!2769}
!2769 = !DILocalVariable(name: "self", arg: 1, scope: !2766, file: !2740, line: 539, type: !272)
!2770 = !{!2771, !2772}
!2771 = !DITemplateTypeParameter(name: "T", type: !272)
!2772 = !DITemplateTypeParameter(name: "U", type: !266)
!2773 = !DILocation(line: 539, column: 13, scope: !2766)
!2774 = !DILocation(line: 540, column: 9, scope: !2766)
!2775 = !DILocation(line: 541, column: 6, scope: !2766)
!2776 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h43a66b6aa6574fabE", scope: !2767, file: !2740, line: 539, type: !287, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2779, retainedNodes: !2777)
!2777 = !{!2778}
!2778 = !DILocalVariable(name: "self", arg: 1, scope: !2776, file: !2740, line: 539, type: !292)
!2779 = !{!2780, !2781}
!2780 = !DITemplateTypeParameter(name: "T", type: !292)
!2781 = !DITemplateTypeParameter(name: "U", type: !289)
!2782 = !DILocation(line: 539, column: 13, scope: !2776)
!2783 = !DILocation(line: 540, column: 9, scope: !2776)
!2784 = !DILocation(line: 541, column: 6, scope: !2776)
!2785 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h89cc6c0df001aa04E", scope: !289, file: !284, line: 73, type: !2786, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2789)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{!292, !2788}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&TryReserveError", baseType: !289, size: 64, align: 64, dwarfAddressSpace: 0)
!2789 = !{!2790}
!2790 = !DILocalVariable(name: "self", arg: 1, scope: !2785, file: !284, line: 73, type: !2788)
!2791 = !DILocation(line: 73, column: 17, scope: !2785)
!2792 = !DILocation(line: 74, column: 9, scope: !2785)
!2793 = !DILocation(line: 75, column: 6, scope: !2785)
!2794 = distinct !DISubprogram(name: "with_capacity<usize>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h55c4238cdfe60bb0E", scope: !46, file: !2795, line: 465, type: !2796, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2798)
!2795 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0dcf6d541d2b937b08991a440659841e")
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!46, !6}
!2798 = !{!2799}
!2799 = !DILocalVariable(name: "capacity", arg: 1, scope: !2794, file: !2795, line: 465, type: !6)
!2800 = !DILocation(line: 465, column: 26, scope: !2794)
!2801 = !DILocation(line: 466, column: 9, scope: !2794)
!2802 = !DILocation(line: 467, column: 6, scope: !2794)
!2803 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h3e9a89ae8e25e418E", scope: !1183, file: !2804, line: 18, type: !2805, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2808)
!2804 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/set_len_on_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "46ffd8255e376b538abacd2d8152b3c0")
!2805 = !DISubroutineType(types: !2806)
!2806 = !{null, !2807, !6}
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut SetLenOnDrop", baseType: !1183, size: 64, align: 64, dwarfAddressSpace: 0)
!2808 = !{!2809, !2810}
!2809 = !DILocalVariable(name: "self", arg: 1, scope: !2803, file: !2804, line: 18, type: !2807)
!2810 = !DILocalVariable(name: "increment", arg: 2, scope: !2803, file: !2804, line: 18, type: !6)
!2811 = !DILocation(line: 18, column: 33, scope: !2803)
!2812 = !DILocation(line: 18, column: 44, scope: !2803)
!2813 = !DILocation(line: 19, column: 9, scope: !2803)
!2814 = !DILocation(line: 20, column: 6, scope: !2803)
!2815 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h94b8eb26438d6741E", scope: !1183, file: !2804, line: 13, type: !2816, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2818)
!2816 = !DISubroutineType(types: !2817)
!2817 = !{!1183, !1045}
!2818 = !{!2819}
!2819 = !DILocalVariable(name: "len", arg: 1, scope: !2815, file: !2804, line: 13, type: !1045)
!2820 = !DILocation(line: 13, column: 23, scope: !2815)
!2821 = !DILocation(line: 14, column: 35, scope: !2815)
!2822 = !DILocation(line: 14, column: 9, scope: !2815)
!2823 = !DILocation(line: 15, column: 6, scope: !2815)
!2824 = distinct !DISubprogram(name: "as_mut_ptr<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h01451c658c6027fcE", scope: !46, file: !2795, line: 1165, type: !2825, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2828)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!881, !2827}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Vec<usize, alloc::alloc::Global>", baseType: !46, size: 64, align: 64, dwarfAddressSpace: 0)
!2828 = !{!2829, !2830}
!2829 = !DILocalVariable(name: "self", arg: 1, scope: !2824, file: !2795, line: 1165, type: !2827)
!2830 = !DILocalVariable(name: "ptr", scope: !2831, file: !2795, line: 1168, type: !881, align: 8)
!2831 = distinct !DILexicalBlock(scope: !2824, file: !2795, line: 1168, column: 9)
!2832 = !DILocation(line: 1165, column: 23, scope: !2824)
!2833 = !DILocation(line: 1168, column: 19, scope: !2824)
!2834 = !DILocation(line: 1168, column: 13, scope: !2831)
!2835 = !DILocation(line: 1170, column: 21, scope: !2831)
!2836 = !DILocation(line: 1170, column: 20, scope: !2831)
!2837 = !DILocation(line: 1170, column: 13, scope: !2831)
!2838 = !DILocation(line: 1173, column: 6, scope: !2824)
!2839 = distinct !DISubprogram(name: "with_capacity_in<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h7d71278b8249aab3E", scope: !46, file: !2795, line: 604, type: !2840, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2842)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!46, !6, !68}
!2842 = !{!2843, !2844}
!2843 = !DILocalVariable(name: "capacity", arg: 1, scope: !2839, file: !2795, line: 604, type: !6)
!2844 = !DILocalVariable(name: "alloc", arg: 2, scope: !2839, file: !2795, line: 604, type: !68)
!2845 = !DILocation(line: 604, column: 29, scope: !2839)
!2846 = !DILocation(line: 604, column: 46, scope: !2839)
!2847 = !DILocation(line: 605, column: 20, scope: !2839)
!2848 = !DILocation(line: 605, column: 9, scope: !2839)
!2849 = !DILocation(line: 606, column: 6, scope: !2839)
!2850 = distinct !DISubprogram(name: "len<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17ha850fc6ef3611ca6E", scope: !46, file: !2795, line: 1831, type: !2851, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2853)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!6, !79}
!2853 = !{!2854}
!2854 = !DILocalVariable(name: "self", arg: 1, scope: !2850, file: !2795, line: 1831, type: !79)
!2855 = !DILocation(line: 1831, column: 16, scope: !2850)
!2856 = !DILocation(line: 1832, column: 9, scope: !2850)
!2857 = !DILocation(line: 1833, column: 6, scope: !2850)
!2858 = distinct !DISubprogram(name: "push<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hecc5dac4ff795d5eE", scope: !46, file: !2795, line: 1670, type: !2859, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2861)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !2827, !6}
!2861 = !{!2862, !2863, !2864}
!2862 = !DILocalVariable(name: "self", arg: 1, scope: !2858, file: !2795, line: 1670, type: !2827)
!2863 = !DILocalVariable(name: "value", arg: 2, scope: !2858, file: !2795, line: 1670, type: !6)
!2864 = !DILocalVariable(name: "end", scope: !2865, file: !2795, line: 1677, type: !881, align: 8)
!2865 = distinct !DILexicalBlock(scope: !2858, file: !2795, line: 1677, column: 13)
!2866 = !DILocation(line: 1670, column: 17, scope: !2858)
!2867 = !DILocation(line: 1670, column: 28, scope: !2858)
!2868 = !DILocation(line: 1673, column: 12, scope: !2858)
!2869 = !DILocation(line: 1673, column: 24, scope: !2858)
!2870 = !DILocalVariable(name: "self", arg: 1, scope: !2871, file: !2872, line: 247, type: !2875)
!2871 = distinct !DISubprogram(name: "capacity<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5c29d82817c27693E", scope: !51, file: !2872, line: 247, type: !2873, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2876)
!2872 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "af779b5d8a9b5b87b5f2ee679bd752ec")
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!6, !2875}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&RawVec<usize, alloc::alloc::Global>", baseType: !51, size: 64, align: 64, dwarfAddressSpace: 0)
!2876 = !{!2870}
!2877 = !DILocation(line: 247, column: 21, scope: !2871, inlinedAt: !2878)
!2878 = distinct !DILocation(line: 1673, column: 24, scope: !2858)
!2879 = !DILocation(line: 248, column: 59, scope: !2871, inlinedAt: !2878)
!2880 = !DILocation(line: 249, column: 6, scope: !2871, inlinedAt: !2878)
!2881 = !DILocation(line: 1677, column: 23, scope: !2858)
!2882 = !DILocation(line: 1674, column: 13, scope: !2858)
!2883 = !DILocation(line: 1673, column: 9, scope: !2858)
!2884 = !DILocation(line: 1677, column: 45, scope: !2858)
!2885 = !DILocalVariable(name: "self", arg: 1, scope: !2886, file: !1235, line: 618, type: !881)
!2886 = distinct !DISubprogram(name: "add<usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h135b5f46dd4c714aE", scope: !1236, file: !1235, line: 618, type: !2887, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2889)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!881, !881, !6}
!2889 = !{!2885, !2890}
!2890 = !DILocalVariable(name: "count", arg: 2, scope: !2886, file: !1235, line: 618, type: !6)
!2891 = !DILocation(line: 618, column: 29, scope: !2886, inlinedAt: !2892)
!2892 = distinct !DILocation(line: 1677, column: 23, scope: !2858)
!2893 = !DILocation(line: 618, column: 35, scope: !2886, inlinedAt: !2892)
!2894 = !DILocalVariable(name: "self", arg: 1, scope: !2895, file: !1235, line: 235, type: !881)
!2895 = distinct !DISubprogram(name: "offset<usize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb653ef7b82e660dcE", scope: !1236, file: !1235, line: 235, type: !2896, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !2898)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!881, !881, !2383}
!2898 = !{!2894, !2899}
!2899 = !DILocalVariable(name: "count", arg: 2, scope: !2895, file: !1235, line: 235, type: !2383)
!2900 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !2901)
!2901 = distinct !DILocation(line: 623, column: 18, scope: !2886, inlinedAt: !2892)
!2902 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !2901)
!2903 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !2901)
!2904 = !DILocation(line: 1677, column: 17, scope: !2865)
!2905 = !DILocation(line: 1678, column: 13, scope: !2865)
!2906 = !DILocation(line: 1679, column: 13, scope: !2865)
!2907 = !DILocation(line: 1681, column: 6, scope: !2858)
!2908 = distinct !DISubprogram(name: "as_ptr<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h394133c042df92d0E", scope: !46, file: !2795, line: 1129, type: !2909, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2911)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{!60, !79}
!2911 = !{!2912, !2913}
!2912 = !DILocalVariable(name: "self", arg: 1, scope: !2908, file: !2795, line: 1129, type: !79)
!2913 = !DILocalVariable(name: "ptr", scope: !2914, file: !2795, line: 1132, type: !881, align: 8)
!2914 = distinct !DILexicalBlock(scope: !2908, file: !2795, line: 1132, column: 9)
!2915 = !DILocation(line: 1129, column: 19, scope: !2908)
!2916 = !DILocation(line: 1132, column: 19, scope: !2908)
!2917 = !DILocation(line: 1132, column: 13, scope: !2914)
!2918 = !DILocation(line: 1134, column: 21, scope: !2914)
!2919 = !DILocation(line: 1134, column: 20, scope: !2914)
!2920 = !DILocation(line: 1134, column: 13, scope: !2914)
!2921 = !DILocation(line: 1137, column: 6, scope: !2908)
!2922 = distinct !DISubprogram(name: "remove<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove17h33a39802b3674e5fE", scope: !46, file: !2795, line: 1386, type: !2923, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2925)
!2923 = !DISubroutineType(types: !2924)
!2924 = !{!6, !2827, !6, !574}
!2925 = !{!2926, !2927, !2928, !2930, !2932}
!2926 = !DILocalVariable(name: "self", arg: 1, scope: !2922, file: !2795, line: 1386, type: !2827)
!2927 = !DILocalVariable(name: "index", arg: 2, scope: !2922, file: !2795, line: 1386, type: !6)
!2928 = !DILocalVariable(name: "len", scope: !2929, file: !2795, line: 1394, type: !6, align: 8)
!2929 = distinct !DILexicalBlock(scope: !2922, file: !2795, line: 1394, column: 9)
!2930 = !DILocalVariable(name: "ret", scope: !2931, file: !2795, line: 1400, type: !6, align: 8)
!2931 = distinct !DILexicalBlock(scope: !2929, file: !2795, line: 1400, column: 13)
!2932 = !DILocalVariable(name: "ptr", scope: !2933, file: !2795, line: 1403, type: !881, align: 8)
!2933 = distinct !DILexicalBlock(scope: !2931, file: !2795, line: 1403, column: 17)
!2934 = !DILocation(line: 1386, column: 19, scope: !2922)
!2935 = !DILocation(line: 1386, column: 30, scope: !2922)
!2936 = !DILocation(line: 1394, column: 19, scope: !2922)
!2937 = !DILocation(line: 1394, column: 13, scope: !2929)
!2938 = !DILocation(line: 1395, column: 12, scope: !2929)
!2939 = !DILocation(line: 1403, column: 27, scope: !2931)
!2940 = !DILocation(line: 1396, column: 13, scope: !2929)
!2941 = !DILocation(line: 618, column: 29, scope: !2886, inlinedAt: !2942)
!2942 = distinct !DILocation(line: 1403, column: 27, scope: !2931)
!2943 = !DILocation(line: 618, column: 35, scope: !2886, inlinedAt: !2942)
!2944 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !2945)
!2945 = distinct !DILocation(line: 623, column: 18, scope: !2886, inlinedAt: !2942)
!2946 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !2945)
!2947 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !2945)
!2948 = !DILocation(line: 1403, column: 21, scope: !2933)
!2949 = !DILocation(line: 1406, column: 23, scope: !2933)
!2950 = !DILocation(line: 1406, column: 17, scope: !2933)
!2951 = !DILocation(line: 1400, column: 17, scope: !2931)
!2952 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !2953)
!2953 = distinct !DILocation(line: 1409, column: 27, scope: !2933)
!2954 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !2953)
!2955 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !2953)
!2956 = !DILocation(line: 1409, column: 27, scope: !2933)
!2957 = !DILocation(line: 1409, column: 47, scope: !2933)
!2958 = !DILocation(line: 1409, column: 17, scope: !2933)
!2959 = !DILocation(line: 1411, column: 26, scope: !2931)
!2960 = !DILocation(line: 1411, column: 13, scope: !2931)
!2961 = !DILocation(line: 1414, column: 6, scope: !2922)
!2962 = distinct !DISubprogram(name: "reserve<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h8f7bc660772fd76eE", scope: !46, file: !2795, line: 804, type: !2859, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2963)
!2963 = !{!2964, !2965}
!2964 = !DILocalVariable(name: "self", arg: 1, scope: !2962, file: !2795, line: 804, type: !2827)
!2965 = !DILocalVariable(name: "additional", arg: 2, scope: !2962, file: !2795, line: 804, type: !6)
!2966 = !DILocation(line: 804, column: 20, scope: !2962)
!2967 = !DILocation(line: 804, column: 31, scope: !2962)
!2968 = !DILocation(line: 805, column: 9, scope: !2962)
!2969 = !DILocation(line: 805, column: 26, scope: !2962)
!2970 = !DILocation(line: 806, column: 6, scope: !2962)
!2971 = distinct !DISubprogram(name: "set_len<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hc820c2ba1cf5c592E", scope: !46, file: !2795, line: 1262, type: !2859, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !2972)
!2972 = !{!2973, !2974}
!2973 = !DILocalVariable(name: "self", arg: 1, scope: !2971, file: !2795, line: 1262, type: !2827)
!2974 = !DILocalVariable(name: "new_len", arg: 2, scope: !2971, file: !2795, line: 1262, type: !6)
!2975 = !DILocation(line: 1262, column: 27, scope: !2971)
!2976 = !DILocation(line: 1262, column: 38, scope: !2971)
!2977 = !DILocation(line: 1265, column: 9, scope: !2971)
!2978 = !DILocation(line: 1266, column: 6, scope: !2971)
!2979 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h6941d27664ec522bE", scope: !69, file: !2980, line: 154, type: !2981, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2983)
!2980 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "0a7e892cc60caf2edd41bc1c0d3c42e0")
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!592, !302}
!2983 = !{!2984}
!2984 = !DILocalVariable(name: "layout", arg: 1, scope: !2979, file: !2980, line: 154, type: !302)
!2985 = !DILocation(line: 154, column: 28, scope: !2979)
!2986 = !DILocation(line: 155, column: 34, scope: !2979)
!2987 = !DILocation(line: 155, column: 49, scope: !2979)
!2988 = !DILocation(line: 155, column: 14, scope: !2979)
!2989 = !DILocation(line: 156, column: 2, scope: !2979)
!2990 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17he898c0cdc28b7a78E", scope: !69, file: !2980, line: 85, type: !2981, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !2991)
!2991 = !{!2992}
!2992 = !DILocalVariable(name: "layout", arg: 1, scope: !2990, file: !2980, line: 85, type: !302)
!2993 = !DILocation(line: 85, column: 21, scope: !2990)
!2994 = !DILocation(line: 86, column: 27, scope: !2990)
!2995 = !DILocation(line: 86, column: 42, scope: !2990)
!2996 = !DILocation(line: 86, column: 14, scope: !2990)
!2997 = !DILocation(line: 87, column: 2, scope: !2990)
!2998 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17hc7de76357b8031baE", scope: !68, file: !2980, line: 161, type: !2999, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3002)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!408, !3001, !302, !26}
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Global", baseType: !68, size: 64, align: 64, dwarfAddressSpace: 0)
!3002 = !{!3003, !3004, !3005, !3006, !3008, !3010, !3012, !3014}
!3003 = !DILocalVariable(name: "self", arg: 1, scope: !2998, file: !2980, line: 161, type: !3001)
!3004 = !DILocalVariable(name: "layout", arg: 2, scope: !2998, file: !2980, line: 161, type: !302)
!3005 = !DILocalVariable(name: "zeroed", arg: 3, scope: !2998, file: !2980, line: 161, type: !26)
!3006 = !DILocalVariable(name: "size", scope: !3007, file: !2980, line: 165, type: !6, align: 8)
!3007 = distinct !DILexicalBlock(scope: !2998, file: !2980, line: 165, column: 13)
!3008 = !DILocalVariable(name: "raw_ptr", scope: !3009, file: !2980, line: 166, type: !592, align: 8)
!3009 = distinct !DILexicalBlock(scope: !3007, file: !2980, line: 166, column: 17)
!3010 = !DILocalVariable(name: "ptr", scope: !3011, file: !2980, line: 167, type: !266, align: 8)
!3011 = distinct !DILexicalBlock(scope: !3009, file: !2980, line: 167, column: 17)
!3012 = !DILocalVariable(name: "residual", scope: !3013, file: !2980, line: 167, type: !436, align: 1)
!3013 = distinct !DILexicalBlock(scope: !3009, file: !2980, line: 167, column: 66)
!3014 = !DILocalVariable(name: "val", scope: !3015, file: !2980, line: 167, type: !266, align: 8)
!3015 = distinct !DILexicalBlock(scope: !3009, file: !2980, line: 167, column: 27)
!3016 = !DILocation(line: 161, column: 19, scope: !2998)
!3017 = !DILocation(line: 161, column: 26, scope: !2998)
!3018 = !DILocation(line: 161, column: 42, scope: !2998)
!3019 = !DILocation(line: 166, column: 21, scope: !3009)
!3020 = !DILocation(line: 167, column: 66, scope: !3013)
!3021 = !DILocation(line: 162, column: 15, scope: !2998)
!3022 = !DILocation(line: 162, column: 9, scope: !2998)
!3023 = !DILocation(line: 163, column: 51, scope: !2998)
!3024 = !DILocation(line: 165, column: 13, scope: !2998)
!3025 = !DILocation(line: 165, column: 13, scope: !3007)
!3026 = !DILocation(line: 166, column: 34, scope: !3007)
!3027 = !DILocation(line: 166, column: 79, scope: !3007)
!3028 = !DILocation(line: 166, column: 73, scope: !3007)
!3029 = !DILocation(line: 166, column: 56, scope: !3007)
!3030 = !DILocation(line: 166, column: 43, scope: !3007)
!3031 = !DILocation(line: 166, column: 31, scope: !3007)
!3032 = !DILocation(line: 167, column: 40, scope: !3009)
!3033 = !DILocation(line: 167, column: 27, scope: !3009)
!3034 = !DILocation(line: 167, column: 27, scope: !3015)
!3035 = !DILocation(line: 167, column: 21, scope: !3011)
!3036 = !DILocation(line: 168, column: 20, scope: !3011)
!3037 = !DILocation(line: 167, column: 27, scope: !3013)
!3038 = !DILocation(line: 171, column: 6, scope: !2998)
!3039 = !DILocation(line: 168, column: 17, scope: !3011)
!3040 = !DILocation(line: 169, column: 13, scope: !2998)
!3041 = !DILocation(line: 163, column: 21, scope: !2998)
!3042 = !DILocation(line: 163, column: 18, scope: !2998)
!3043 = !DILocation(line: 163, column: 72, scope: !2998)
!3044 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17hd0a0dbb0f0af1254E", scope: !68, file: !2980, line: 175, type: !3045, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3047)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!408, !3001, !266, !302, !302, !26}
!3047 = !{!3048, !3049, !3050, !3051, !3052, !3053, !3055, !3056, !3058, !3060, !3062, !3064, !3066, !3068, !3070, !3072}
!3048 = !DILocalVariable(name: "self", arg: 1, scope: !3044, file: !2980, line: 176, type: !3001)
!3049 = !DILocalVariable(name: "ptr", arg: 2, scope: !3044, file: !2980, line: 177, type: !266)
!3050 = !DILocalVariable(name: "old_layout", arg: 3, scope: !3044, file: !2980, line: 178, type: !302)
!3051 = !DILocalVariable(name: "new_layout", arg: 4, scope: !3044, file: !2980, line: 179, type: !302)
!3052 = !DILocalVariable(name: "zeroed", arg: 5, scope: !3044, file: !2980, line: 180, type: !26)
!3053 = !DILocalVariable(name: "old_size", scope: !3054, file: !2980, line: 192, type: !6, align: 8)
!3054 = distinct !DILexicalBlock(scope: !3044, file: !2980, line: 192, column: 13)
!3055 = !DILocalVariable(name: "old_size", scope: !3054, file: !2980, line: 192, type: !5, align: 8)
!3056 = !DILocalVariable(name: "new_size", scope: !3057, file: !2980, line: 193, type: !6, align: 8)
!3057 = distinct !DILexicalBlock(scope: !3054, file: !2980, line: 193, column: 17)
!3058 = !DILocalVariable(name: "raw_ptr", scope: !3059, file: !2980, line: 198, type: !592, align: 8)
!3059 = distinct !DILexicalBlock(scope: !3057, file: !2980, line: 198, column: 17)
!3060 = !DILocalVariable(name: "ptr", scope: !3061, file: !2980, line: 199, type: !266, align: 8)
!3061 = distinct !DILexicalBlock(scope: !3059, file: !2980, line: 199, column: 17)
!3062 = !DILocalVariable(name: "residual", scope: !3063, file: !2980, line: 199, type: !436, align: 1)
!3063 = distinct !DILexicalBlock(scope: !3059, file: !2980, line: 199, column: 66)
!3064 = !DILocalVariable(name: "val", scope: !3065, file: !2980, line: 199, type: !266, align: 8)
!3065 = distinct !DILexicalBlock(scope: !3059, file: !2980, line: 199, column: 27)
!3066 = !DILocalVariable(name: "old_size", scope: !3067, file: !2980, line: 211, type: !6, align: 8)
!3067 = distinct !DILexicalBlock(scope: !3044, file: !2980, line: 211, column: 13)
!3068 = !DILocalVariable(name: "new_ptr", scope: !3069, file: !2980, line: 212, type: !416, align: 8)
!3069 = distinct !DILexicalBlock(scope: !3067, file: !2980, line: 212, column: 17)
!3070 = !DILocalVariable(name: "residual", scope: !3071, file: !2980, line: 212, type: !436, align: 1)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !2980, line: 212, column: 66)
!3072 = !DILocalVariable(name: "val", scope: !3073, file: !2980, line: 212, type: !416, align: 8)
!3073 = distinct !DILexicalBlock(scope: !3067, file: !2980, line: 212, column: 31)
!3074 = !DILocation(line: 176, column: 9, scope: !3044)
!3075 = !DILocation(line: 177, column: 9, scope: !3044)
!3076 = !DILocation(line: 178, column: 9, scope: !3044)
!3077 = !DILocation(line: 179, column: 9, scope: !3044)
!3078 = !DILocation(line: 180, column: 9, scope: !3044)
!3079 = !DILocation(line: 199, column: 66, scope: !3063)
!3080 = !DILocation(line: 212, column: 66, scope: !3071)
!3081 = !DILocation(line: 187, column: 15, scope: !3044)
!3082 = !DILocation(line: 187, column: 9, scope: !3044)
!3083 = !DILocation(line: 188, column: 34, scope: !3044)
!3084 = !DILocation(line: 188, column: 18, scope: !3044)
!3085 = !DILocation(line: 192, column: 13, scope: !3044)
!3086 = !DILocation(line: 192, column: 13, scope: !3054)
!3087 = !DILocation(line: 192, column: 25, scope: !3044)
!3088 = !DILocation(line: 192, column: 47, scope: !3044)
!3089 = !DILocation(line: 211, column: 13, scope: !3044)
!3090 = !DILocation(line: 211, column: 13, scope: !3067)
!3091 = !DILocation(line: 212, column: 47, scope: !3067)
!3092 = !DILocation(line: 212, column: 31, scope: !3067)
!3093 = !DILocation(line: 193, column: 32, scope: !3054)
!3094 = !DILocation(line: 193, column: 21, scope: !3057)
!3095 = !DILocation(line: 196, column: 48, scope: !3057)
!3096 = !DILocation(line: 196, column: 36, scope: !3057)
!3097 = !DILocation(line: 196, column: 17, scope: !3057)
!3098 = !DILocation(line: 198, column: 39, scope: !3057)
!3099 = !DILocation(line: 198, column: 53, scope: !3057)
!3100 = !DILocation(line: 198, column: 31, scope: !3057)
!3101 = !DILocation(line: 198, column: 21, scope: !3059)
!3102 = !DILocation(line: 199, column: 27, scope: !3059)
!3103 = !DILocation(line: 199, column: 27, scope: !3065)
!3104 = !DILocation(line: 199, column: 21, scope: !3061)
!3105 = !DILocation(line: 200, column: 20, scope: !3061)
!3106 = !DILocation(line: 199, column: 27, scope: !3063)
!3107 = !DILocation(line: 1, column: 1, scope: !3108)
!3108 = !DILexicalBlockFile(scope: !3044, file: !2095, discriminator: 0)
!3109 = !DILocation(line: 218, column: 6, scope: !3044)
!3110 = !DILocation(line: 203, column: 20, scope: !3061)
!3111 = !DILocalVariable(name: "self", arg: 1, scope: !3112, file: !1235, line: 618, type: !592)
!3112 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc6bd140b3fa8012fE", scope: !1236, file: !1235, line: 618, type: !3113, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !3115)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!592, !592, !6}
!3115 = !{!3111, !3116}
!3116 = !DILocalVariable(name: "count", arg: 2, scope: !3112, file: !1235, line: 618, type: !6)
!3117 = !DILocation(line: 618, column: 29, scope: !3112, inlinedAt: !3118)
!3118 = distinct !DILocation(line: 201, column: 21, scope: !3061)
!3119 = !DILocation(line: 618, column: 35, scope: !3112, inlinedAt: !3118)
!3120 = !DILocalVariable(name: "self", arg: 1, scope: !3121, file: !1235, line: 235, type: !592)
!3121 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hf8805048948bf4d8E", scope: !1236, file: !1235, line: 235, type: !3122, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !3124)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!592, !592, !2383}
!3124 = !{!3120, !3125}
!3125 = !DILocalVariable(name: "count", arg: 2, scope: !3121, file: !1235, line: 235, type: !2383)
!3126 = !DILocation(line: 235, column: 32, scope: !3121, inlinedAt: !3127)
!3127 = distinct !DILocation(line: 623, column: 18, scope: !3112, inlinedAt: !3118)
!3128 = !DILocation(line: 235, column: 38, scope: !3121, inlinedAt: !3127)
!3129 = !DILocation(line: 242, column: 18, scope: !3121, inlinedAt: !3127)
!3130 = !DILocation(line: 201, column: 21, scope: !3061)
!3131 = !DILocation(line: 201, column: 58, scope: !3061)
!3132 = !DILocalVariable(name: "self", arg: 1, scope: !3133, file: !1235, line: 1024, type: !592)
!3133 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h9c261455a6e47ec7E", scope: !1236, file: !1235, line: 1024, type: !855, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !270, retainedNodes: !3134)
!3134 = !{!3132, !3135, !3136}
!3135 = !DILocalVariable(name: "val", arg: 2, scope: !3133, file: !1235, line: 1024, type: !89)
!3136 = !DILocalVariable(name: "count", arg: 3, scope: !3133, file: !1235, line: 1024, type: !6)
!3137 = !DILocation(line: 1024, column: 31, scope: !3133, inlinedAt: !3138)
!3138 = distinct !DILocation(line: 201, column: 21, scope: !3061)
!3139 = !DILocation(line: 1024, column: 37, scope: !3133, inlinedAt: !3138)
!3140 = !DILocation(line: 1024, column: 46, scope: !3133, inlinedAt: !3138)
!3141 = !DILocation(line: 1029, column: 18, scope: !3133, inlinedAt: !3138)
!3142 = !DILocation(line: 200, column: 17, scope: !3061)
!3143 = !DILocation(line: 203, column: 17, scope: !3061)
!3144 = !DILocation(line: 204, column: 13, scope: !3044)
!3145 = !DILocation(line: 212, column: 31, scope: !3073)
!3146 = !DILocation(line: 212, column: 21, scope: !3069)
!3147 = !DILocation(line: 213, column: 42, scope: !3069)
!3148 = !DILocation(line: 212, column: 31, scope: !3071)
!3149 = !DILocation(line: 213, column: 56, scope: !3069)
!3150 = !DILocation(line: 213, column: 17, scope: !3069)
!3151 = !DILocation(line: 214, column: 38, scope: !3069)
!3152 = !DILocation(line: 214, column: 17, scope: !3069)
!3153 = !DILocation(line: 215, column: 17, scope: !3069)
!3154 = !DILocation(line: 216, column: 13, scope: !3044)
!3155 = !DILocation(line: 188, column: 52, scope: !3044)
!3156 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h6444f098979c6df9E", scope: !69, file: !2980, line: 103, type: !3157, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3159)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !592, !302}
!3159 = !{!3160, !3161}
!3160 = !DILocalVariable(name: "ptr", arg: 1, scope: !3156, file: !2980, line: 103, type: !592)
!3161 = !DILocalVariable(name: "layout", arg: 2, scope: !3156, file: !2980, line: 103, type: !302)
!3162 = !DILocation(line: 103, column: 23, scope: !3156)
!3163 = !DILocation(line: 103, column: 37, scope: !3156)
!3164 = !DILocation(line: 104, column: 34, scope: !3156)
!3165 = !DILocation(line: 104, column: 49, scope: !3156)
!3166 = !DILocation(line: 104, column: 14, scope: !3156)
!3167 = !DILocation(line: 105, column: 2, scope: !3156)
!3168 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h6917010272b404c6E", scope: !69, file: !2980, line: 121, type: !3169, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3171)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{!592, !592, !302, !6}
!3171 = !{!3172, !3173, !3174}
!3172 = !DILocalVariable(name: "ptr", arg: 1, scope: !3168, file: !2980, line: 121, type: !592)
!3173 = !DILocalVariable(name: "layout", arg: 2, scope: !3168, file: !2980, line: 121, type: !302)
!3174 = !DILocalVariable(name: "new_size", arg: 3, scope: !3168, file: !2980, line: 121, type: !6)
!3175 = !DILocation(line: 121, column: 23, scope: !3168)
!3176 = !DILocation(line: 121, column: 37, scope: !3168)
!3177 = !DILocation(line: 121, column: 53, scope: !3168)
!3178 = !DILocation(line: 122, column: 34, scope: !3168)
!3179 = !DILocation(line: 122, column: 49, scope: !3168)
!3180 = !DILocation(line: 122, column: 14, scope: !3168)
!3181 = !DILocation(line: 123, column: 2, scope: !3168)
!3182 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hb2453b78b4db6ba6E", scope: !52, file: !2872, line: 546, type: !3183, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3185)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!324, !6}
!3185 = !{!3186}
!3186 = !DILocalVariable(name: "alloc_size", arg: 1, scope: !3182, file: !2872, line: 546, type: !6)
!3187 = !DILocation(line: 546, column: 16, scope: !3182)
!3188 = !DILocation(line: 547, column: 8, scope: !3182)
!3189 = !DILocation(line: 550, column: 9, scope: !3182)
!3190 = !DILocation(line: 547, column: 5, scope: !3182)
!3191 = !DILocation(line: 548, column: 13, scope: !3182)
!3192 = !DILocation(line: 548, column: 9, scope: !3182)
!3193 = !DILocation(line: 552, column: 2, scope: !3182)
!3194 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h0ae43c3646423906E", scope: !52, file: !2872, line: 489, type: !3195, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3240, retainedNodes: !3214)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!459, !523, !3197, !3213}
!3197 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !127, file: !2, size: 192, align: 64, elements: !3198, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9")
!3198 = !{!3199}
!3199 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 192, align: 64, elements: !3200, templateParams: !3203, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9_variant_part", discriminator: !661)
!3200 = !{!3201, !3209}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3199, file: !2, baseType: !3202, size: 192, align: 64, extraData: i64 0)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3197, file: !2, size: 192, align: 64, elements: !4, templateParams: !3203, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9::None")
!3203 = !{!3204}
!3204 = !DITemplateTypeParameter(name: "T", type: !3205)
!3205 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !3206, templateParams: !4, identifier: "3fe1073d7ca6ffbfe47dfea13e45e84e")
!3206 = !{!3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3205, file: !2, baseType: !266, size: 64, align: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3205, file: !2, baseType: !302, size: 128, align: 64, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3199, file: !2, baseType: !3210, size: 192, align: 64)
!3210 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3197, file: !2, size: 192, align: 64, elements: !3211, templateParams: !3203, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9::Some")
!3211 = !{!3212}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3210, file: !2, baseType: !3205, size: 192, align: 64)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Global", baseType: !68, size: 64, align: 64, dwarfAddressSpace: 0)
!3214 = !{!3215, !3216, !3217, !3218, !3220, !3222, !3224, !3226, !3228, !3230, !3232, !3233, !3236, !3237}
!3215 = !DILocalVariable(name: "new_layout", arg: 1, scope: !3194, file: !2872, line: 490, type: !523)
!3216 = !DILocalVariable(name: "current_memory", arg: 2, scope: !3194, file: !2872, line: 491, type: !3197)
!3217 = !DILocalVariable(name: "alloc", arg: 3, scope: !3194, file: !2872, line: 492, type: !3213)
!3218 = !DILocalVariable(name: "new_layout", scope: !3219, file: !2872, line: 498, type: !302, align: 8)
!3219 = distinct !DILexicalBlock(scope: !3194, file: !2872, line: 498, column: 5)
!3220 = !DILocalVariable(name: "residual", scope: !3221, file: !2872, line: 498, type: !340, align: 8)
!3221 = distinct !DILexicalBlock(scope: !3194, file: !2872, line: 498, column: 62)
!3222 = !DILocalVariable(name: "val", scope: !3223, file: !2872, line: 498, type: !302, align: 8)
!3223 = distinct !DILexicalBlock(scope: !3194, file: !2872, line: 498, column: 22)
!3224 = !DILocalVariable(name: "residual", scope: !3225, file: !2872, line: 500, type: !472, align: 8)
!3225 = distinct !DILexicalBlock(scope: !3219, file: !2872, line: 500, column: 35)
!3226 = !DILocalVariable(name: "val", scope: !3227, file: !2872, line: 500, type: !312, align: 1)
!3227 = distinct !DILexicalBlock(scope: !3219, file: !2872, line: 500, column: 5)
!3228 = !DILocalVariable(name: "memory", scope: !3229, file: !2872, line: 502, type: !408, align: 8)
!3229 = distinct !DILexicalBlock(scope: !3219, file: !2872, line: 502, column: 5)
!3230 = !DILocalVariable(name: "ptr", scope: !3231, file: !2872, line: 502, type: !266, align: 8)
!3231 = distinct !DILexicalBlock(scope: !3219, file: !2872, line: 502, column: 25)
!3232 = !DILocalVariable(name: "old_layout", scope: !3231, file: !2872, line: 502, type: !302, align: 8)
!3233 = !DILocalVariable(name: "left_val", scope: !3234, file: !2872, line: 503, type: !5, align: 8)
!3234 = !DILexicalBlockFile(scope: !3235, file: !2872, discriminator: 0)
!3235 = distinct !DILexicalBlock(scope: !3219, file: !2198, line: 38, column: 13)
!3236 = !DILocalVariable(name: "right_val", scope: !3234, file: !2872, line: 503, type: !5, align: 8)
!3237 = !DILocalVariable(name: "kind", scope: !3238, file: !2872, line: 503, type: !107, align: 1)
!3238 = !DILexicalBlockFile(scope: !3239, file: !2872, discriminator: 0)
!3239 = distinct !DILexicalBlock(scope: !3235, file: !2198, line: 40, column: 21)
!3240 = !{!71}
!3241 = !DILocation(line: 490, column: 5, scope: !3194)
!3242 = !DILocation(line: 491, column: 5, scope: !3194)
!3243 = !DILocation(line: 492, column: 5, scope: !3194)
!3244 = !DILocation(line: 498, column: 9, scope: !3219)
!3245 = !DILocation(line: 500, column: 5, scope: !3227)
!3246 = !DILocation(line: 502, column: 9, scope: !3229)
!3247 = !DILocation(line: 502, column: 36, scope: !3231)
!3248 = !DILocation(line: 498, column: 22, scope: !3194)
!3249 = !DILocation(line: 498, column: 22, scope: !3223)
!3250 = !DILocation(line: 500, column: 17, scope: !3219)
!3251 = !DILocation(line: 498, column: 62, scope: !3194)
!3252 = !DILocation(line: 498, column: 62, scope: !3221)
!3253 = !DILocation(line: 498, column: 22, scope: !3221)
!3254 = !DILocation(line: 1, column: 1, scope: !3255)
!3255 = !DILexicalBlockFile(scope: !3194, file: !2095, discriminator: 0)
!3256 = !DILocation(line: 514, column: 2, scope: !3194)
!3257 = !DILocation(line: 500, column: 5, scope: !3219)
!3258 = !DILocation(line: 502, column: 25, scope: !3219)
!3259 = !DILocation(line: 500, column: 35, scope: !3219)
!3260 = !DILocation(line: 500, column: 35, scope: !3225)
!3261 = !DILocation(line: 500, column: 5, scope: !3225)
!3262 = !DILocation(line: 1, column: 1, scope: !3263)
!3263 = !DILexicalBlockFile(scope: !3219, file: !2095, discriminator: 0)
!3264 = !DILocation(line: 502, column: 31, scope: !3219)
!3265 = !DILocation(line: 502, column: 31, scope: !3231)
!3266 = !DILocation(line: 502, column: 36, scope: !3219)
!3267 = !DILocation(line: 506, column: 32, scope: !3219)
!3268 = !DILocation(line: 510, column: 24, scope: !3219)
!3269 = !DILocation(line: 510, column: 9, scope: !3219)
!3270 = !DILocation(line: 502, column: 18, scope: !3219)
!3271 = !DILocation(line: 513, column: 5, scope: !3229)
!3272 = !DILocation(line: 513, column: 20, scope: !3229)
!3273 = !DILocation(line: 506, column: 54, scope: !3219)
!3274 = !DILocation(line: 506, column: 13, scope: !3219)
!3275 = !DILocation(line: 507, column: 29, scope: !3219)
!3276 = !DILocation(line: 507, column: 41, scope: !3219)
!3277 = !DILocation(line: 507, column: 13, scope: !3219)
!3278 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h0908563c87a93969E", scope: !2631, file: !2872, line: 498, type: !3279, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3240, retainedNodes: !3281)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!292, !2715, !19}
!3281 = !{!3282, !3283}
!3282 = !DILocalVariable(arg: 1, scope: !3278, file: !2872, line: 498, type: !2715)
!3283 = !DILocalVariable(arg: 2, scope: !3278, file: !2872, line: 498, type: !19)
!3284 = !DILocation(line: 498, column: 41, scope: !3278)
!3285 = !DILocation(line: 498, column: 42, scope: !3278)
!3286 = !DILocation(line: 498, column: 45, scope: !3278)
!3287 = !DILocation(line: 498, column: 61, scope: !3278)
!3288 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h0e6bdbc8b92c5b62E", scope: !2631, file: !2872, line: 513, type: !3289, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3240, retainedNodes: !3291)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!289, !2630, !431}
!3291 = !{!3292, !3293}
!3292 = !DILocalVariable(name: "new_layout", scope: !3288, file: !2872, line: 498, type: !302, align: 8)
!3293 = !DILocalVariable(arg: 2, scope: !3288, file: !2872, line: 513, type: !431)
!3294 = !DILocation(line: 498, column: 9, scope: !3288)
!3295 = !DILocation(line: 513, column: 21, scope: !3288)
!3296 = !DILocation(line: 513, column: 45, scope: !3288)
!3297 = !DILocation(line: 513, column: 24, scope: !3288)
!3298 = !DILocation(line: 513, column: 84, scope: !3288)
!3299 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17hab3947554fe20403E", scope: !52, file: !2872, line: 528, type: !3300, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3302)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null, !324}
!3302 = !{!3303, !3304}
!3303 = !DILocalVariable(name: "result", arg: 1, scope: !3299, file: !2872, line: 528, type: !324)
!3304 = !DILocalVariable(name: "layout", scope: !3305, file: !2872, line: 531, type: !302, align: 8)
!3305 = distinct !DILexicalBlock(scope: !3299, file: !2872, line: 531, column: 9)
!3306 = !DILocation(line: 528, column: 19, scope: !3299)
!3307 = !DILocation(line: 529, column: 11, scope: !3299)
!3308 = !DILocation(line: 529, column: 5, scope: !3299)
!3309 = !DILocation(line: 534, column: 2, scope: !3299)
!3310 = !DILocation(line: 530, column: 34, scope: !3299)
!3311 = !DILocation(line: 531, column: 26, scope: !3299)
!3312 = !DILocation(line: 531, column: 26, scope: !3305)
!3313 = !DILocation(line: 531, column: 43, scope: !3305)
!3314 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hbb27177d91402ad8E", scope: !2674, file: !2872, line: 529, type: !3315, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3317)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!292, !2673, !289}
!3317 = !{!3318, !3319}
!3318 = !DILocalVariable(name: "e", arg: 2, scope: !3314, file: !2872, line: 529, type: !289)
!3319 = !DILocalVariable(arg: 1, scope: !3314, file: !2872, line: 529, type: !2673)
!3320 = !DILocation(line: 529, column: 26, scope: !3314)
!3321 = !DILocation(line: 529, column: 27, scope: !3314)
!3322 = !DILocation(line: 529, column: 30, scope: !3314)
!3323 = !DILocation(line: 529, column: 38, scope: !3314)
!3324 = distinct !DISubprogram(name: "allocate_in<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h99993d77f2ba1ae7E", scope: !51, file: !2872, line: 189, type: !3325, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3327)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!51, !6, !113, !68}
!3327 = !{!3328, !3329, !3330, !3331, !3333, !3335, !3337, !3339}
!3328 = !DILocalVariable(name: "capacity", arg: 1, scope: !3324, file: !2872, line: 189, type: !6)
!3329 = !DILocalVariable(name: "init", arg: 2, scope: !3324, file: !2872, line: 189, type: !113)
!3330 = !DILocalVariable(name: "alloc", arg: 3, scope: !3324, file: !2872, line: 189, type: !68)
!3331 = !DILocalVariable(name: "layout", scope: !3332, file: !2872, line: 195, type: !302, align: 8)
!3332 = distinct !DILexicalBlock(scope: !3324, file: !2872, line: 195, column: 13)
!3333 = !DILocalVariable(name: "layout", scope: !3334, file: !2872, line: 196, type: !302, align: 8)
!3334 = distinct !DILexicalBlock(scope: !3324, file: !2872, line: 196, column: 17)
!3335 = !DILocalVariable(name: "result", scope: !3336, file: !2872, line: 203, type: !408, align: 8)
!3336 = distinct !DILexicalBlock(scope: !3332, file: !2872, line: 203, column: 13)
!3337 = !DILocalVariable(name: "ptr", scope: !3338, file: !2872, line: 207, type: !416, align: 8)
!3338 = distinct !DILexicalBlock(scope: !3336, file: !2872, line: 207, column: 13)
!3339 = !DILocalVariable(name: "ptr", scope: !3340, file: !2872, line: 208, type: !416, align: 8)
!3340 = distinct !DILexicalBlock(scope: !3336, file: !2872, line: 208, column: 17)
!3341 = !DILocation(line: 189, column: 20, scope: !3324)
!3342 = !DILocation(line: 189, column: 37, scope: !3324)
!3343 = !DILocation(line: 189, column: 54, scope: !3324)
!3344 = !DILocation(line: 195, column: 17, scope: !3332)
!3345 = !DILocation(line: 203, column: 17, scope: !3336)
!3346 = !DILocation(line: 190, column: 12, scope: !3324)
!3347 = !DILocation(line: 191, column: 13, scope: !3324)
!3348 = !DILocation(line: 195, column: 32, scope: !3324)
!3349 = !DILocation(line: 195, column: 26, scope: !3324)
!3350 = !DILocation(line: 196, column: 20, scope: !3324)
!3351 = !DILocation(line: 196, column: 20, scope: !3334)
!3352 = !DILocation(line: 196, column: 31, scope: !3334)
!3353 = !DILocation(line: 199, column: 31, scope: !3332)
!3354 = !DILocation(line: 197, column: 27, scope: !3324)
!3355 = !DILocation(line: 199, column: 19, scope: !3332)
!3356 = !DILocation(line: 199, column: 13, scope: !3332)
!3357 = !DILocation(line: 203, column: 32, scope: !3332)
!3358 = !DILocation(line: 203, column: 26, scope: !3332)
!3359 = !DILocation(line: 201, column: 27, scope: !3332)
!3360 = !DILocation(line: 204, column: 60, scope: !3332)
!3361 = !DILocation(line: 204, column: 45, scope: !3332)
!3362 = !DILocation(line: 205, column: 60, scope: !3332)
!3363 = !DILocation(line: 205, column: 38, scope: !3332)
!3364 = !DILocation(line: 205, column: 66, scope: !3332)
!3365 = !DILocation(line: 207, column: 29, scope: !3336)
!3366 = !DILocation(line: 207, column: 23, scope: !3336)
!3367 = !DILocation(line: 204, column: 66, scope: !3332)
!3368 = !DILocation(line: 208, column: 20, scope: !3336)
!3369 = !DILocation(line: 208, column: 20, scope: !3340)
!3370 = !DILocation(line: 208, column: 28, scope: !3340)
!3371 = !DILocation(line: 207, column: 17, scope: !3338)
!3372 = !DILocation(line: 213, column: 53, scope: !3338)
!3373 = !DILocation(line: 209, column: 46, scope: !3336)
!3374 = !DILocation(line: 209, column: 27, scope: !3336)
!3375 = !DILocation(line: 213, column: 31, scope: !3338)
!3376 = !DILocation(line: 214, column: 48, scope: !3338)
!3377 = !DILocation(line: 214, column: 22, scope: !3338)
!3378 = !DILocation(line: 212, column: 13, scope: !3338)
!3379 = !DILocation(line: 190, column: 9, scope: !3324)
!3380 = !DILocation(line: 218, column: 6, scope: !3324)
!3381 = distinct !DISubprogram(name: "needs_to_grow<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hf6862b0aff723ea9E", scope: !51, file: !2872, line: 401, type: !3382, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3384)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!26, !2875, !6, !6}
!3384 = !{!3385, !3386, !3387}
!3385 = !DILocalVariable(name: "self", arg: 1, scope: !3381, file: !2872, line: 401, type: !2875)
!3386 = !DILocalVariable(name: "len", arg: 2, scope: !3381, file: !2872, line: 401, type: !6)
!3387 = !DILocalVariable(name: "additional", arg: 3, scope: !3381, file: !2872, line: 401, type: !6)
!3388 = !DILocation(line: 401, column: 22, scope: !3381)
!3389 = !DILocation(line: 401, column: 29, scope: !3381)
!3390 = !DILocation(line: 401, column: 41, scope: !3381)
!3391 = !DILocation(line: 247, column: 21, scope: !2871, inlinedAt: !3392)
!3392 = distinct !DILocation(line: 402, column: 22, scope: !3381)
!3393 = !DILocation(line: 248, column: 59, scope: !2871, inlinedAt: !3392)
!3394 = !DILocation(line: 249, column: 6, scope: !2871, inlinedAt: !3392)
!3395 = !DILocation(line: 402, column: 22, scope: !3381)
!3396 = !DILocation(line: 1133, column: 35, scope: !2124, inlinedAt: !3397)
!3397 = distinct !DILocation(line: 402, column: 22, scope: !3381)
!3398 = !DILocation(line: 1133, column: 41, scope: !2124, inlinedAt: !3397)
!3399 = !DILocation(line: 1134, column: 13, scope: !2124, inlinedAt: !3397)
!3400 = !DILocation(line: 402, column: 9, scope: !3381)
!3401 = !DILocation(line: 403, column: 6, scope: !3381)
!3402 = distinct !DISubprogram(name: "current_memory<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdb4c2006d2bda7d7E", scope: !51, file: !2872, line: 256, type: !3403, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3405)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!3197, !2875}
!3405 = !{!3406, !3407, !3409, !3411}
!3406 = !DILocalVariable(name: "self", arg: 1, scope: !3402, file: !2872, line: 256, type: !2875)
!3407 = !DILocalVariable(name: "align", scope: !3408, file: !2872, line: 263, type: !6, align: 8)
!3408 = distinct !DILexicalBlock(scope: !3402, file: !2872, line: 263, column: 17)
!3409 = !DILocalVariable(name: "size", scope: !3410, file: !2872, line: 264, type: !6, align: 8)
!3410 = distinct !DILexicalBlock(scope: !3408, file: !2872, line: 264, column: 17)
!3411 = !DILocalVariable(name: "layout", scope: !3412, file: !2872, line: 265, type: !302, align: 8)
!3412 = distinct !DILexicalBlock(scope: !3410, file: !2872, line: 265, column: 17)
!3413 = !DILocation(line: 256, column: 23, scope: !3402)
!3414 = !DILocation(line: 257, column: 12, scope: !3402)
!3415 = !DILocation(line: 257, column: 40, scope: !3402)
!3416 = !DILocation(line: 448, column: 5, scope: !1518, inlinedAt: !3417)
!3417 = distinct !DILocation(line: 263, column: 29, scope: !3402)
!3418 = !DILocation(line: 263, column: 29, scope: !3402)
!3419 = !DILocation(line: 263, column: 21, scope: !3408)
!3420 = !DILocation(line: 258, column: 13, scope: !3402)
!3421 = !DILocation(line: 257, column: 9, scope: !3402)
!3422 = !DILocation(line: 269, column: 6, scope: !3402)
!3423 = !DILocation(line: 264, column: 28, scope: !3408)
!3424 = !DILocation(line: 264, column: 50, scope: !3408)
!3425 = !DILocation(line: 264, column: 21, scope: !3410)
!3426 = !DILocation(line: 265, column: 30, scope: !3410)
!3427 = !DILocation(line: 265, column: 21, scope: !3412)
!3428 = !DILocation(line: 266, column: 23, scope: !3412)
!3429 = !DILocation(line: 266, column: 22, scope: !3412)
!3430 = !DILocation(line: 266, column: 17, scope: !3412)
!3431 = distinct !DISubprogram(name: "grow_amortized<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h229ddff007f56f34E", scope: !51, file: !2872, line: 422, type: !3432, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3435)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!324, !3434, !6, !6}
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut RawVec<usize, alloc::alloc::Global>", baseType: !51, size: 64, align: 64, dwarfAddressSpace: 0)
!3435 = !{!3436, !3437, !3438, !3439, !3441, !3443, !3445, !3447, !3449, !3451, !3453, !3455}
!3436 = !DILocalVariable(name: "self", arg: 1, scope: !3431, file: !2872, line: 422, type: !3434)
!3437 = !DILocalVariable(name: "len", arg: 2, scope: !3431, file: !2872, line: 422, type: !6)
!3438 = !DILocalVariable(name: "additional", arg: 3, scope: !3431, file: !2872, line: 422, type: !6)
!3439 = !DILocalVariable(name: "required_cap", scope: !3440, file: !2872, line: 433, type: !6, align: 8)
!3440 = distinct !DILexicalBlock(scope: !3431, file: !2872, line: 433, column: 9)
!3441 = !DILocalVariable(name: "residual", scope: !3442, file: !2872, line: 433, type: !340, align: 8)
!3442 = distinct !DILexicalBlock(scope: !3431, file: !2872, line: 433, column: 79)
!3443 = !DILocalVariable(name: "val", scope: !3444, file: !2872, line: 433, type: !6, align: 8)
!3444 = distinct !DILexicalBlock(scope: !3431, file: !2872, line: 433, column: 28)
!3445 = !DILocalVariable(name: "cap", scope: !3446, file: !2872, line: 437, type: !6, align: 8)
!3446 = distinct !DILexicalBlock(scope: !3440, file: !2872, line: 437, column: 9)
!3447 = !DILocalVariable(name: "cap", scope: !3448, file: !2872, line: 438, type: !6, align: 8)
!3448 = distinct !DILexicalBlock(scope: !3446, file: !2872, line: 438, column: 9)
!3449 = !DILocalVariable(name: "new_layout", scope: !3450, file: !2872, line: 440, type: !523, align: 8)
!3450 = distinct !DILexicalBlock(scope: !3448, file: !2872, line: 440, column: 9)
!3451 = !DILocalVariable(name: "ptr", scope: !3452, file: !2872, line: 443, type: !416, align: 8)
!3452 = distinct !DILexicalBlock(scope: !3450, file: !2872, line: 443, column: 9)
!3453 = !DILocalVariable(name: "residual", scope: !3454, file: !2872, line: 443, type: !472, align: 8)
!3454 = distinct !DILexicalBlock(scope: !3450, file: !2872, line: 443, column: 82)
!3455 = !DILocalVariable(name: "val", scope: !3456, file: !2872, line: 443, type: !416, align: 8)
!3456 = distinct !DILexicalBlock(scope: !3450, file: !2872, line: 443, column: 19)
!3457 = !DILocation(line: 422, column: 23, scope: !3431)
!3458 = !DILocation(line: 422, column: 34, scope: !3431)
!3459 = !DILocation(line: 422, column: 46, scope: !3431)
!3460 = !DILocation(line: 426, column: 12, scope: !3431)
!3461 = !DILocation(line: 429, column: 24, scope: !3431)
!3462 = !DILocation(line: 433, column: 28, scope: !3431)
!3463 = !DILocation(line: 433, column: 62, scope: !3431)
!3464 = !DILocation(line: 433, column: 28, scope: !3444)
!3465 = !DILocation(line: 433, column: 13, scope: !3440)
!3466 = !DILocation(line: 437, column: 28, scope: !3440)
!3467 = !DILocation(line: 437, column: 19, scope: !3440)
!3468 = !DILocation(line: 437, column: 13, scope: !3446)
!3469 = !DILocation(line: 433, column: 79, scope: !3431)
!3470 = !DILocation(line: 433, column: 79, scope: !3442)
!3471 = !DILocation(line: 433, column: 28, scope: !3442)
!3472 = !DILocation(line: 1, column: 1, scope: !3473)
!3473 = !DILexicalBlockFile(scope: !3431, file: !2095, discriminator: 0)
!3474 = !DILocation(line: 438, column: 19, scope: !3446)
!3475 = !DILocation(line: 438, column: 13, scope: !3448)
!3476 = !DILocation(line: 440, column: 26, scope: !3448)
!3477 = !DILocation(line: 440, column: 13, scope: !3450)
!3478 = !DILocation(line: 443, column: 43, scope: !3450)
!3479 = !DILocation(line: 443, column: 66, scope: !3450)
!3480 = !DILocation(line: 443, column: 19, scope: !3450)
!3481 = !DILocation(line: 443, column: 19, scope: !3456)
!3482 = !DILocation(line: 443, column: 13, scope: !3452)
!3483 = !DILocation(line: 444, column: 9, scope: !3452)
!3484 = !DILocation(line: 443, column: 82, scope: !3450)
!3485 = !DILocation(line: 443, column: 82, scope: !3454)
!3486 = !DILocation(line: 443, column: 19, scope: !3454)
!3487 = !DILocation(line: 1, column: 1, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3440, file: !2095, discriminator: 0)
!3489 = !DILocation(line: 446, column: 6, scope: !3431)
!3490 = !DILocation(line: 445, column: 9, scope: !3452)
!3491 = !DILocation(line: 429, column: 20, scope: !3431)
!3492 = distinct !DISubprogram(name: "with_capacity_in<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h45a2e0de12086212E", scope: !51, file: !2872, line: 142, type: !3493, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3495)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!51, !6, !68}
!3495 = !{!3496, !3497}
!3496 = !DILocalVariable(name: "capacity", arg: 1, scope: !3492, file: !2872, line: 142, type: !6)
!3497 = !DILocalVariable(name: "alloc", arg: 2, scope: !3492, file: !2872, line: 142, type: !68)
!3498 = !DILocation(line: 142, column: 29, scope: !3492)
!3499 = !DILocation(line: 142, column: 46, scope: !3492)
!3500 = !DILocation(line: 143, column: 37, scope: !3492)
!3501 = !DILocation(line: 143, column: 9, scope: !3492)
!3502 = !DILocation(line: 144, column: 6, scope: !3492)
!3503 = distinct !DISubprogram(name: "capacity_from_bytes<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h21f921f6a1851c49E", scope: !51, file: !2872, line: 405, type: !3504, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!6, !6}
!3506 = !{!3507, !3508, !3511, !3512}
!3507 = !DILocalVariable(name: "excess", arg: 1, scope: !3503, file: !2872, line: 405, type: !6)
!3508 = !DILocalVariable(name: "left_val", scope: !3509, file: !2872, line: 406, type: !5, align: 8)
!3509 = !DILexicalBlockFile(scope: !3510, file: !2872, discriminator: 0)
!3510 = distinct !DILexicalBlock(scope: !3503, file: !2198, line: 87, column: 13)
!3511 = !DILocalVariable(name: "right_val", scope: !3509, file: !2872, line: 406, type: !5, align: 8)
!3512 = !DILocalVariable(name: "kind", scope: !3513, file: !2872, line: 406, type: !107, align: 1)
!3513 = !DILexicalBlockFile(scope: !3514, file: !2872, discriminator: 0)
!3514 = distinct !DILexicalBlock(scope: !3510, file: !2198, line: 89, column: 21)
!3515 = !DILocation(line: 405, column: 28, scope: !3503)
!3516 = !DILocation(line: 407, column: 18, scope: !3503)
!3517 = !DILocation(line: 407, column: 9, scope: !3503)
!3518 = !DILocation(line: 408, column: 6, scope: !3503)
!3519 = distinct !DISubprogram(name: "ptr<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h13132606554e097cE", scope: !51, file: !2872, line: 239, type: !3520, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3522)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!881, !2875}
!3522 = !{!3523}
!3523 = !DILocalVariable(name: "self", arg: 1, scope: !3519, file: !2872, line: 239, type: !2875)
!3524 = !DILocation(line: 239, column: 16, scope: !3519)
!3525 = !DILocation(line: 240, column: 9, scope: !3519)
!3526 = !DILocation(line: 241, column: 6, scope: !3519)
!3527 = distinct !DISubprogram(name: "new_in<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he457191606588f61E", scope: !51, file: !2872, line: 133, type: !3528, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3530)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!51, !68}
!3530 = !{!3531}
!3531 = !DILocalVariable(name: "alloc", arg: 1, scope: !3527, file: !2872, line: 133, type: !68)
!3532 = !DILocation(line: 133, column: 25, scope: !3527)
!3533 = !DILocation(line: 135, column: 21, scope: !3527)
!3534 = !DILocation(line: 135, column: 9, scope: !3527)
!3535 = !DILocation(line: 136, column: 6, scope: !3527)
!3536 = distinct !DISubprogram(name: "reserve<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h69745c6adc72171eE", scope: !51, file: !2872, line: 323, type: !3537, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3539)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{null, !3434, !6, !6}
!3539 = !{!3540, !3541, !3542}
!3540 = !DILocalVariable(name: "self", arg: 1, scope: !3536, file: !2872, line: 323, type: !3434)
!3541 = !DILocalVariable(name: "len", arg: 2, scope: !3536, file: !2872, line: 323, type: !6)
!3542 = !DILocalVariable(name: "additional", arg: 3, scope: !3536, file: !2872, line: 323, type: !6)
!3543 = !DILocation(line: 323, column: 20, scope: !3536)
!3544 = !DILocation(line: 323, column: 31, scope: !3536)
!3545 = !DILocation(line: 323, column: 43, scope: !3536)
!3546 = !DILocation(line: 337, column: 12, scope: !3536)
!3547 = !DILocation(line: 340, column: 6, scope: !3536)
!3548 = !DILocation(line: 338, column: 13, scope: !3536)
!3549 = !DILocation(line: 337, column: 9, scope: !3536)
!3550 = distinct !DISubprogram(name: "do_reserve_and_handle<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hbb478000ac5cb532E", scope: !3551, file: !2872, line: 329, type: !3537, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3553)
!3551 = !DINamespace(name: "reserve", scope: !3552)
!3552 = !DINamespace(name: "{impl#1}", scope: !52)
!3553 = !{!3554, !3555, !3556}
!3554 = !DILocalVariable(name: "slf", arg: 1, scope: !3550, file: !2872, line: 330, type: !3434)
!3555 = !DILocalVariable(name: "len", arg: 2, scope: !3550, file: !2872, line: 331, type: !6)
!3556 = !DILocalVariable(name: "additional", arg: 3, scope: !3550, file: !2872, line: 332, type: !6)
!3557 = !DILocation(line: 330, column: 13, scope: !3550)
!3558 = !DILocation(line: 331, column: 13, scope: !3550)
!3559 = !DILocation(line: 332, column: 13, scope: !3550)
!3560 = !DILocation(line: 334, column: 28, scope: !3550)
!3561 = !DILocation(line: 334, column: 13, scope: !3550)
!3562 = !DILocation(line: 335, column: 10, scope: !3550)
!3563 = distinct !DISubprogram(name: "set_ptr<usize, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hd887f89df130dd91E", scope: !51, file: !2872, line: 410, type: !3564, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3566)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{null, !3434, !416}
!3566 = !{!3567, !3568}
!3567 = !DILocalVariable(name: "self", arg: 1, scope: !3563, file: !2872, line: 410, type: !3434)
!3568 = !DILocalVariable(name: "ptr", arg: 2, scope: !3563, file: !2872, line: 410, type: !416)
!3569 = !DILocation(line: 410, column: 16, scope: !3563)
!3570 = !DILocation(line: 410, column: 27, scope: !3563)
!3571 = !DILocation(line: 411, column: 51, scope: !3563)
!3572 = !DILocation(line: 411, column: 29, scope: !3563)
!3573 = !DILocation(line: 411, column: 9, scope: !3563)
!3574 = !DILocation(line: 412, column: 46, scope: !3563)
!3575 = !DILocation(line: 412, column: 20, scope: !3563)
!3576 = !DILocation(line: 412, column: 9, scope: !3563)
!3577 = !DILocation(line: 413, column: 6, scope: !3563)
!3578 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h63785f047cdcae07E", scope: !3580, file: !3579, line: 243, type: !3582, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !163, retainedNodes: !3584)
!3579 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "46be48ef08ae744b2af0ec194db882b2")
!3580 = !DINamespace(name: "{impl#0}", scope: !3581)
!3581 = !DINamespace(name: "collect", scope: !1283)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!148, !148}
!3584 = !{!3585}
!3585 = !DILocalVariable(name: "self", arg: 1, scope: !3578, file: !3579, line: 243, type: !148)
!3586 = !DILocation(line: 243, column: 18, scope: !3578)
!3587 = !DILocation(line: 245, column: 6, scope: !3578)
!3588 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hbb24107ab6b8587dE", scope: !3580, file: !3579, line: 243, type: !3589, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3593, retainedNodes: !3591)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!205, !205}
!3591 = !{!3592}
!3592 = !DILocalVariable(name: "self", arg: 1, scope: !3588, file: !3579, line: 243, type: !205)
!3593 = !{!226}
!3594 = !DILocation(line: 243, column: 18, scope: !3588)
!3595 = !DILocation(line: 245, column: 6, scope: !3588)
!3596 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc37f2d173a4bfddfE", scope: !3580, file: !3579, line: 243, type: !3597, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3601, retainedNodes: !3599)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!209, !209}
!3599 = !{!3600}
!3600 = !DILocalVariable(name: "self", arg: 1, scope: !3596, file: !3579, line: 243, type: !209)
!3601 = !{!249}
!3602 = !DILocation(line: 243, column: 18, scope: !3596)
!3603 = !DILocation(line: 245, column: 6, scope: !3596)
!3604 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<usize>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcf5e199d13ae9153E", scope: !3580, file: !3579, line: 243, type: !3605, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3609, retainedNodes: !3607)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!145, !145}
!3607 = !{!3608}
!3608 = !DILocalVariable(name: "self", arg: 1, scope: !3604, file: !3579, line: 243, type: !145)
!3609 = !{!3610}
!3610 = !DITemplateTypeParameter(name: "I", type: !145)
!3611 = !DILocation(line: 243, column: 18, scope: !3604)
!3612 = !DILocation(line: 244, column: 9, scope: !3604)
!3613 = !DILocation(line: 245, column: 6, scope: !3604)
!3614 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hf78e0a3850d2b29bE", scope: !3615, file: !2980, line: 235, type: !3616, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3618)
!3615 = !DINamespace(name: "{impl#1}", scope: !69)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{null, !3001, !266, !302}
!3618 = !{!3619, !3620, !3621}
!3619 = !DILocalVariable(name: "self", arg: 1, scope: !3614, file: !2980, line: 235, type: !3001)
!3620 = !DILocalVariable(name: "ptr", arg: 2, scope: !3614, file: !2980, line: 235, type: !266)
!3621 = !DILocalVariable(name: "layout", arg: 3, scope: !3614, file: !2980, line: 235, type: !302)
!3622 = !DILocation(line: 235, column: 26, scope: !3614)
!3623 = !DILocation(line: 235, column: 33, scope: !3614)
!3624 = !DILocation(line: 235, column: 51, scope: !3614)
!3625 = !DILocation(line: 236, column: 12, scope: !3614)
!3626 = !DILocation(line: 236, column: 9, scope: !3614)
!3627 = !DILocation(line: 239, column: 30, scope: !3614)
!3628 = !DILocation(line: 239, column: 44, scope: !3614)
!3629 = !DILocation(line: 239, column: 22, scope: !3614)
!3630 = !DILocation(line: 241, column: 6, scope: !3614)
!3631 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hccc846e98126c2fbE", scope: !3615, file: !2980, line: 230, type: !3632, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3634)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!408, !3001, !302}
!3634 = !{!3635, !3636}
!3635 = !DILocalVariable(name: "self", arg: 1, scope: !3631, file: !2980, line: 230, type: !3001)
!3636 = !DILocalVariable(name: "layout", arg: 2, scope: !3631, file: !2980, line: 230, type: !302)
!3637 = !DILocation(line: 230, column: 24, scope: !3631)
!3638 = !DILocation(line: 230, column: 31, scope: !3631)
!3639 = !DILocation(line: 231, column: 9, scope: !3631)
!3640 = !DILocation(line: 232, column: 6, scope: !3631)
!3641 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h6dd4a3efa918fe77E", scope: !3615, file: !2980, line: 244, type: !3642, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!408, !3001, !266, !302, !302}
!3644 = !{!3645, !3646, !3647, !3648}
!3645 = !DILocalVariable(name: "self", arg: 1, scope: !3641, file: !2980, line: 245, type: !3001)
!3646 = !DILocalVariable(name: "ptr", arg: 2, scope: !3641, file: !2980, line: 246, type: !266)
!3647 = !DILocalVariable(name: "old_layout", arg: 3, scope: !3641, file: !2980, line: 247, type: !302)
!3648 = !DILocalVariable(name: "new_layout", arg: 4, scope: !3641, file: !2980, line: 248, type: !302)
!3649 = !DILocation(line: 245, column: 9, scope: !3641)
!3650 = !DILocation(line: 246, column: 9, scope: !3641)
!3651 = !DILocation(line: 247, column: 9, scope: !3641)
!3652 = !DILocation(line: 248, column: 9, scope: !3641)
!3653 = !DILocation(line: 251, column: 18, scope: !3641)
!3654 = !DILocation(line: 252, column: 6, scope: !3641)
!3655 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8fbc4f21de7f507dE", scope: !3615, file: !2980, line: 225, type: !3632, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3656)
!3656 = !{!3657, !3658}
!3657 = !DILocalVariable(name: "self", arg: 1, scope: !3655, file: !2980, line: 225, type: !3001)
!3658 = !DILocalVariable(name: "layout", arg: 2, scope: !3655, file: !2980, line: 225, type: !302)
!3659 = !DILocation(line: 225, column: 17, scope: !3655)
!3660 = !DILocation(line: 225, column: 24, scope: !3655)
!3661 = !DILocation(line: 226, column: 9, scope: !3655)
!3662 = !DILocation(line: 227, column: 6, scope: !3655)
!3663 = distinct !DISubprogram(name: "fmt<usize, alloc::alloc::Global>", linkageName: "_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h988cd1f8f8335c60E", scope: !3664, file: !2795, line: 2772, type: !3665, scopeLine: 2772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3667)
!3664 = !DINamespace(name: "{impl#30}", scope: !47)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!95, !79, !676}
!3667 = !{!3668, !3669}
!3668 = !DILocalVariable(name: "self", arg: 1, scope: !3663, file: !2795, line: 2772, type: !79)
!3669 = !DILocalVariable(name: "f", arg: 2, scope: !3663, file: !2795, line: 2772, type: !676)
!3670 = !DILocation(line: 2772, column: 12, scope: !3663)
!3671 = !DILocation(line: 2772, column: 19, scope: !3663)
!3672 = !DILocation(line: 2773, column: 26, scope: !3663)
!3673 = !DILocation(line: 2773, column: 9, scope: !3663)
!3674 = !DILocation(line: 2774, column: 6, scope: !3663)
!3675 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17ha1a3819df367fc22E", scope: !3676, file: !2031, line: 30, type: !2045, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3677)
!3676 = !DINamespace(name: "{impl#3}", scope: !20)
!3677 = !{!3678}
!3678 = !DILocalVariable(name: "self", arg: 1, scope: !3675, file: !2031, line: 30, type: !2047)
!3679 = !DILocation(line: 30, column: 16, scope: !3675)
!3680 = !DILocation(line: 30, column: 21, scope: !3675)
!3681 = distinct !DISubprogram(name: "drop<usize, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc777ebcdf3ffdf11E", scope: !3682, file: !2795, line: 2750, type: !3683, scopeLine: 2750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3685)
!3682 = !DINamespace(name: "{impl#28}", scope: !47)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{null, !2827}
!3685 = !{!3686}
!3686 = !DILocalVariable(name: "self", arg: 1, scope: !3681, file: !2795, line: 2750, type: !2827)
!3687 = !DILocation(line: 2750, column: 13, scope: !3681)
!3688 = !DILocation(line: 2755, column: 62, scope: !3681)
!3689 = !DILocation(line: 2755, column: 81, scope: !3681)
!3690 = !DILocation(line: 2755, column: 32, scope: !3681)
!3691 = !DILocation(line: 2755, column: 13, scope: !3681)
!3692 = !DILocation(line: 2758, column: 6, scope: !3681)
!3693 = distinct !DISubprogram(name: "deref<usize, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h46cbd80f125d07adE", scope: !3694, file: !2795, line: 2370, type: !3695, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3697)
!3694 = !DINamespace(name: "{impl#10}", scope: !47)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!784, !79}
!3697 = !{!3698}
!3698 = !DILocalVariable(name: "self", arg: 1, scope: !3693, file: !2795, line: 2370, type: !79)
!3699 = !DILocation(line: 2370, column: 14, scope: !3693)
!3700 = !DILocation(line: 2371, column: 40, scope: !3693)
!3701 = !DILocation(line: 2371, column: 55, scope: !3693)
!3702 = !DILocation(line: 2371, column: 18, scope: !3693)
!3703 = !DILocation(line: 2372, column: 6, scope: !3693)
!3704 = distinct !DISubprogram(name: "deref_mut<usize, alloc::alloc::Global>", linkageName: "_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h850991fc5bbc9917E", scope: !3705, file: !2795, line: 2377, type: !3706, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3708)
!3705 = !DINamespace(name: "{impl#11}", scope: !47)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!2300, !2827}
!3708 = !{!3709}
!3709 = !DILocalVariable(name: "self", arg: 1, scope: !3704, file: !2795, line: 2377, type: !2827)
!3710 = !DILocation(line: 2377, column: 18, scope: !3704)
!3711 = !DILocation(line: 2378, column: 44, scope: !3704)
!3712 = !DILocation(line: 2378, column: 63, scope: !3704)
!3713 = !DILocation(line: 2378, column: 18, scope: !3704)
!3714 = !DILocation(line: 2379, column: 6, scope: !3704)
!3715 = distinct !DISubprogram(name: "branch<&usize>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h53e0639504ab69baE", scope: !3716, file: !2442, line: 2023, type: !3717, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !160, retainedNodes: !3746)
!3716 = !DINamespace(name: "{impl#40}", scope: !127)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!3719, !3736}
!3719 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &usize>", scope: !3720, file: !2, size: 64, align: 64, elements: !3721, identifier: "38502e91de7074eadf369e7aae12854d")
!3720 = !DINamespace(name: "control_flow", scope: !211)
!3721 = !{!3722}
!3722 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 64, align: 64, elements: !3723, templateParams: !3728, identifier: "38502e91de7074eadf369e7aae12854d_variant_part", discriminator: !3735)
!3723 = !{!3724, !3731}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3722, file: !2, baseType: !3725, size: 64, align: 64)
!3725 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3719, file: !2, size: 64, align: 64, elements: !3726, templateParams: !3728, identifier: "38502e91de7074eadf369e7aae12854d::Continue")
!3726 = !{!3727}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3725, file: !2, baseType: !5, size: 64, align: 64)
!3728 = !{!3729, !3730}
!3729 = !DITemplateTypeParameter(name: "B", type: !171)
!3730 = !DITemplateTypeParameter(name: "C", type: !5)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3722, file: !2, baseType: !3732, size: 64, align: 64, extraData: i64 0)
!3732 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3719, file: !2, size: 64, align: 64, elements: !3733, templateParams: !3728, identifier: "38502e91de7074eadf369e7aae12854d::Break")
!3733 = !{!3734}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3732, file: !2, baseType: !171, align: 8)
!3735 = !DIDerivedType(tag: DW_TAG_member, scope: !3720, file: !2, baseType: !75, size: 64, align: 64, flags: DIFlagArtificial)
!3736 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&usize>", scope: !127, file: !2, size: 64, align: 64, elements: !3737, identifier: "6ef7bf9c3fc6b342df2fba3ffd596d2e")
!3737 = !{!3738}
!3738 = !DICompositeType(tag: DW_TAG_variant_part, scope: !127, file: !2, size: 64, align: 64, elements: !3739, templateParams: !160, identifier: "6ef7bf9c3fc6b342df2fba3ffd596d2e_variant_part", discriminator: !661)
!3739 = !{!3740, !3742}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3738, file: !2, baseType: !3741, size: 64, align: 64, extraData: i64 0)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3736, file: !2, size: 64, align: 64, elements: !4, templateParams: !160, identifier: "6ef7bf9c3fc6b342df2fba3ffd596d2e::None")
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3738, file: !2, baseType: !3743, size: 64, align: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3736, file: !2, size: 64, align: 64, elements: !3744, templateParams: !160, identifier: "6ef7bf9c3fc6b342df2fba3ffd596d2e::Some")
!3744 = !{!3745}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3743, file: !2, baseType: !5, size: 64, align: 64)
!3746 = !{!3747, !3748}
!3747 = !DILocalVariable(name: "self", arg: 1, scope: !3715, file: !2442, line: 2023, type: !3736)
!3748 = !DILocalVariable(name: "v", scope: !3749, file: !2442, line: 2025, type: !5, align: 8)
!3749 = distinct !DILexicalBlock(scope: !3715, file: !2442, line: 2025, column: 13)
!3750 = !DILocation(line: 2023, column: 15, scope: !3715)
!3751 = !DILocation(line: 2024, column: 15, scope: !3715)
!3752 = !DILocation(line: 2024, column: 9, scope: !3715)
!3753 = !DILocation(line: 2026, column: 21, scope: !3715)
!3754 = !DILocation(line: 2026, column: 44, scope: !3715)
!3755 = !DILocation(line: 2025, column: 18, scope: !3715)
!3756 = !DILocation(line: 2025, column: 18, scope: !3749)
!3757 = !DILocation(line: 2025, column: 24, scope: !3749)
!3758 = !DILocation(line: 2028, column: 5, scope: !3715)
!3759 = !DILocation(line: 2028, column: 6, scope: !3715)
!3760 = distinct !DISubprogram(name: "index<usize>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h54ed96977b058a5cE", scope: !3761, file: !2416, line: 182, type: !3762, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !3764)
!3761 = !DINamespace(name: "{impl#2}", scope: !2418)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!5, !6, !784, !574}
!3764 = !{!3765, !3766}
!3765 = !DILocalVariable(name: "self", arg: 1, scope: !3760, file: !2416, line: 182, type: !6)
!3766 = !DILocalVariable(name: "slice", arg: 2, scope: !3760, file: !2416, line: 182, type: !784)
!3767 = !DILocation(line: 182, column: 14, scope: !3760)
!3768 = !DILocation(line: 182, column: 20, scope: !3760)
!3769 = !DILocation(line: 184, column: 10, scope: !3760)
!3770 = !DILocation(line: 184, column: 9, scope: !3760)
!3771 = !DILocation(line: 185, column: 6, scope: !3760)
!3772 = distinct !DISubprogram(name: "index_mut<usize>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa1078989bcca205E", scope: !3761, file: !2416, line: 188, type: !3773, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !3775)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!1045, !6, !2300, !574}
!3775 = !{!3776, !3777}
!3776 = !DILocalVariable(name: "self", arg: 1, scope: !3772, file: !2416, line: 188, type: !6)
!3777 = !DILocalVariable(name: "slice", arg: 2, scope: !3772, file: !2416, line: 188, type: !2300)
!3778 = !DILocation(line: 188, column: 18, scope: !3772)
!3779 = !DILocation(line: 188, column: 24, scope: !3772)
!3780 = !DILocation(line: 190, column: 14, scope: !3772)
!3781 = !DILocation(line: 190, column: 9, scope: !3772)
!3782 = !DILocation(line: 191, column: 6, scope: !3772)
!3783 = distinct !DISubprogram(name: "drop<usize, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h110a0acc4e3d2603E", scope: !3784, file: !2872, line: 518, type: !3785, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !70, retainedNodes: !3787)
!3784 = !DINamespace(name: "{impl#3}", scope: !52)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{null, !3434}
!3787 = !{!3788, !3789, !3791}
!3788 = !DILocalVariable(name: "self", arg: 1, scope: !3783, file: !2872, line: 518, type: !3434)
!3789 = !DILocalVariable(name: "ptr", scope: !3790, file: !2872, line: 519, type: !266, align: 8)
!3790 = distinct !DILexicalBlock(scope: !3783, file: !2872, line: 519, column: 16)
!3791 = !DILocalVariable(name: "layout", scope: !3790, file: !2872, line: 519, type: !302, align: 8)
!3792 = !DILocation(line: 518, column: 13, scope: !3783)
!3793 = !DILocation(line: 519, column: 38, scope: !3783)
!3794 = !DILocation(line: 519, column: 16, scope: !3783)
!3795 = !DILocation(line: 519, column: 22, scope: !3783)
!3796 = !DILocation(line: 519, column: 22, scope: !3790)
!3797 = !DILocation(line: 519, column: 27, scope: !3783)
!3798 = !DILocation(line: 519, column: 27, scope: !3790)
!3799 = !DILocation(line: 520, column: 22, scope: !3783)
!3800 = !DILocation(line: 522, column: 6, scope: !3783)
!3801 = !DILocation(line: 519, column: 9, scope: !3783)
!3802 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hf2e09b6bf199bed4E", scope: !3803, file: !284, line: 79, type: !3804, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !3807)
!3803 = !DINamespace(name: "{impl#10}", scope: !286)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!292, !3806}
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&TryReserveErrorKind", baseType: !292, size: 64, align: 64, dwarfAddressSpace: 0)
!3807 = !{!3808, !3809, !3811}
!3808 = !DILocalVariable(name: "self", arg: 1, scope: !3802, file: !284, line: 79, type: !3806)
!3809 = !DILocalVariable(name: "__self_0", scope: !3810, file: !284, line: 93, type: !2047, align: 8)
!3810 = distinct !DILexicalBlock(scope: !3802, file: !284, line: 79, column: 10)
!3811 = !DILocalVariable(name: "__self_1", scope: !3810, file: !284, line: 104, type: !2260, align: 8)
!3812 = !DILocation(line: 79, column: 10, scope: !3802)
!3813 = !DILocation(line: 93, column: 9, scope: !3802)
!3814 = !DILocation(line: 93, column: 9, scope: !3810)
!3815 = !DILocation(line: 104, column: 9, scope: !3802)
!3816 = !DILocation(line: 104, column: 9, scope: !3810)
!3817 = !DILocation(line: 79, column: 10, scope: !3810)
!3818 = !DILocation(line: 79, column: 14, scope: !3802)
!3819 = !DILocation(line: 79, column: 15, scope: !3802)
!3820 = distinct !DISubprogram(name: "branch<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h065c552dba6da9e3E", scope: !3821, file: !320, line: 1902, type: !3822, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !377, retainedNodes: !3840)
!3821 = !DINamespace(name: "{impl#36}", scope: !96)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!3824, !365}
!3824 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", scope: !3720, file: !2, size: 192, align: 64, elements: !3825, identifier: "c4d497dd31886320b9bdf21802754aec")
!3825 = !{!3826}
!3826 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 192, align: 64, elements: !3827, templateParams: !3832, identifier: "c4d497dd31886320b9bdf21802754aec_variant_part", discriminator: !3839)
!3827 = !{!3828, !3835}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3826, file: !2, baseType: !3829, size: 192, align: 64)
!3829 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3824, file: !2, size: 192, align: 64, elements: !3830, templateParams: !3832, identifier: "c4d497dd31886320b9bdf21802754aec::Continue")
!3830 = !{!3831}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3829, file: !2, baseType: !373, size: 192, align: 64)
!3832 = !{!3833, !3834}
!3833 = !DITemplateTypeParameter(name: "B", type: !385)
!3834 = !DITemplateTypeParameter(name: "C", type: !373)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3826, file: !2, baseType: !3836, size: 192, align: 64, extraData: i64 0)
!3836 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3824, file: !2, size: 192, align: 64, elements: !3837, templateParams: !3832, identifier: "c4d497dd31886320b9bdf21802754aec::Break")
!3837 = !{!3838}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3836, file: !2, baseType: !385, align: 8)
!3839 = !DIDerivedType(tag: DW_TAG_member, scope: !3720, file: !2, baseType: !75, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!3840 = !{!3841, !3842, !3844}
!3841 = !DILocalVariable(name: "self", arg: 1, scope: !3820, file: !320, line: 1902, type: !365)
!3842 = !DILocalVariable(name: "v", scope: !3843, file: !320, line: 1904, type: !373, align: 8)
!3843 = distinct !DILexicalBlock(scope: !3820, file: !320, line: 1904, column: 13)
!3844 = !DILocalVariable(name: "e", scope: !3845, file: !320, line: 1905, type: !19, align: 1)
!3845 = distinct !DILexicalBlock(scope: !3820, file: !320, line: 1905, column: 13)
!3846 = !DILocation(line: 1902, column: 15, scope: !3820)
!3847 = !DILocation(line: 1904, column: 16, scope: !3843)
!3848 = !DILocation(line: 1905, column: 17, scope: !3845)
!3849 = !DILocation(line: 1903, column: 15, scope: !3820)
!3850 = !DILocation(line: 1903, column: 9, scope: !3820)
!3851 = !DILocation(line: 1904, column: 16, scope: !3820)
!3852 = !DILocation(line: 1904, column: 44, scope: !3843)
!3853 = !DILocation(line: 1904, column: 22, scope: !3843)
!3854 = !DILocation(line: 1904, column: 45, scope: !3820)
!3855 = !DILocation(line: 1905, column: 42, scope: !3845)
!3856 = !DILocation(line: 1905, column: 23, scope: !3845)
!3857 = !DILocation(line: 1905, column: 48, scope: !3820)
!3858 = !DILocation(line: 1907, column: 6, scope: !3820)
!3859 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0cdc81fb95297d26E", scope: !3821, file: !320, line: 1902, type: !3860, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !332, retainedNodes: !3877)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!3862, !324}
!3862 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !3720, file: !2, size: 192, align: 64, elements: !3863, identifier: "406dbae85fbf8e15a7db4e6a16836cc9")
!3863 = !{!3864}
!3864 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 192, align: 64, elements: !3865, templateParams: !3870, identifier: "406dbae85fbf8e15a7db4e6a16836cc9_variant_part", discriminator: !3735)
!3865 = !{!3866, !3873}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3864, file: !2, baseType: !3867, size: 192, align: 64, extraData: i64 0)
!3867 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3862, file: !2, size: 192, align: 64, elements: !3868, templateParams: !3870, identifier: "406dbae85fbf8e15a7db4e6a16836cc9::Continue")
!3868 = !{!3869}
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3867, file: !2, baseType: !312, align: 8, offset: 64)
!3870 = !{!3871, !3872}
!3871 = !DITemplateTypeParameter(name: "B", type: !472)
!3872 = !DITemplateTypeParameter(name: "C", type: !312)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3864, file: !2, baseType: !3874, size: 192, align: 64, extraData: i64 1)
!3874 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3862, file: !2, size: 192, align: 64, elements: !3875, templateParams: !3870, identifier: "406dbae85fbf8e15a7db4e6a16836cc9::Break")
!3875 = !{!3876}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3874, file: !2, baseType: !472, size: 128, align: 64, offset: 64)
!3877 = !{!3878, !3879, !3881}
!3878 = !DILocalVariable(name: "self", arg: 1, scope: !3859, file: !320, line: 1902, type: !324)
!3879 = !DILocalVariable(name: "v", scope: !3880, file: !320, line: 1904, type: !312, align: 1)
!3880 = distinct !DILexicalBlock(scope: !3859, file: !320, line: 1904, column: 13)
!3881 = !DILocalVariable(name: "e", scope: !3882, file: !320, line: 1905, type: !289, align: 8)
!3882 = distinct !DILexicalBlock(scope: !3859, file: !320, line: 1905, column: 13)
!3883 = !DILocation(line: 1902, column: 15, scope: !3859)
!3884 = !DILocation(line: 1904, column: 16, scope: !3880)
!3885 = !DILocation(line: 1903, column: 15, scope: !3859)
!3886 = !DILocation(line: 1903, column: 9, scope: !3859)
!3887 = !DILocation(line: 1904, column: 22, scope: !3880)
!3888 = !DILocation(line: 1904, column: 45, scope: !3859)
!3889 = !DILocation(line: 1905, column: 17, scope: !3859)
!3890 = !DILocation(line: 1905, column: 17, scope: !3882)
!3891 = !DILocation(line: 1905, column: 42, scope: !3882)
!3892 = !DILocation(line: 1905, column: 23, scope: !3882)
!3893 = !DILocation(line: 1905, column: 48, scope: !3859)
!3894 = !DILocation(line: 1907, column: 6, scope: !3859)
!3895 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3ecc933418ec8cf1E", scope: !3821, file: !320, line: 1902, type: !3896, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2521, retainedNodes: !3912)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!3898, !2513}
!3898 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !3720, file: !2, size: 128, align: 64, elements: !3899, identifier: "9684fe477d2dc57caff34cda2f8fb57b")
!3899 = !{!3900}
!3900 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 128, align: 64, elements: !3901, templateParams: !3906, identifier: "9684fe477d2dc57caff34cda2f8fb57b_variant_part", discriminator: !3735)
!3901 = !{!3902, !3908}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3900, file: !2, baseType: !3903, size: 128, align: 64, extraData: i64 0)
!3903 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3898, file: !2, size: 128, align: 64, elements: !3904, templateParams: !3906, identifier: "9684fe477d2dc57caff34cda2f8fb57b::Continue")
!3904 = !{!3905}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3903, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!3906 = !{!3833, !3907}
!3907 = !DITemplateTypeParameter(name: "C", type: !6)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3900, file: !2, baseType: !3909, size: 128, align: 64, extraData: i64 1)
!3909 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3898, file: !2, size: 128, align: 64, elements: !3910, templateParams: !3906, identifier: "9684fe477d2dc57caff34cda2f8fb57b::Break")
!3910 = !{!3911}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3909, file: !2, baseType: !385, align: 8, offset: 64)
!3912 = !{!3913, !3914, !3916}
!3913 = !DILocalVariable(name: "self", arg: 1, scope: !3895, file: !320, line: 1902, type: !2513)
!3914 = !DILocalVariable(name: "v", scope: !3915, file: !320, line: 1904, type: !6, align: 8)
!3915 = distinct !DILexicalBlock(scope: !3895, file: !320, line: 1904, column: 13)
!3916 = !DILocalVariable(name: "e", scope: !3917, file: !320, line: 1905, type: !19, align: 1)
!3917 = distinct !DILexicalBlock(scope: !3895, file: !320, line: 1905, column: 13)
!3918 = !DILocation(line: 1902, column: 15, scope: !3895)
!3919 = !DILocation(line: 1905, column: 17, scope: !3917)
!3920 = !DILocation(line: 1903, column: 15, scope: !3895)
!3921 = !DILocation(line: 1903, column: 9, scope: !3895)
!3922 = !DILocation(line: 1904, column: 16, scope: !3895)
!3923 = !DILocation(line: 1904, column: 16, scope: !3915)
!3924 = !DILocation(line: 1904, column: 22, scope: !3915)
!3925 = !DILocation(line: 1904, column: 45, scope: !3895)
!3926 = !DILocation(line: 1905, column: 42, scope: !3917)
!3927 = !DILocation(line: 1905, column: 23, scope: !3917)
!3928 = !DILocation(line: 1905, column: 48, scope: !3895)
!3929 = !DILocation(line: 1907, column: 6, scope: !3895)
!3930 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h67ec81356394838eE", scope: !3821, file: !320, line: 1902, type: !3931, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2710, retainedNodes: !3948)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!3933, !2702}
!3933 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !3720, file: !2, size: 192, align: 64, elements: !3934, identifier: "5dd15888cc37c44e70c60a403546fcc")
!3934 = !{!3935}
!3935 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 192, align: 64, elements: !3936, templateParams: !3941, identifier: "5dd15888cc37c44e70c60a403546fcc_variant_part", discriminator: !3735)
!3936 = !{!3937, !3944}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3935, file: !2, baseType: !3938, size: 192, align: 64, extraData: i64 0)
!3938 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3933, file: !2, size: 192, align: 64, elements: !3939, templateParams: !3941, identifier: "5dd15888cc37c44e70c60a403546fcc::Continue")
!3939 = !{!3940}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3938, file: !2, baseType: !302, size: 128, align: 64, offset: 64)
!3941 = !{!3942, !3943}
!3942 = !DITemplateTypeParameter(name: "B", type: !340)
!3943 = !DITemplateTypeParameter(name: "C", type: !302)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3935, file: !2, baseType: !3945, size: 192, align: 64, extraData: i64 1)
!3945 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3933, file: !2, size: 192, align: 64, elements: !3946, templateParams: !3941, identifier: "5dd15888cc37c44e70c60a403546fcc::Break")
!3946 = !{!3947}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3945, file: !2, baseType: !340, size: 128, align: 64, offset: 64)
!3948 = !{!3949, !3950, !3952}
!3949 = !DILocalVariable(name: "self", arg: 1, scope: !3930, file: !320, line: 1902, type: !2702)
!3950 = !DILocalVariable(name: "v", scope: !3951, file: !320, line: 1904, type: !302, align: 8)
!3951 = distinct !DILexicalBlock(scope: !3930, file: !320, line: 1904, column: 13)
!3952 = !DILocalVariable(name: "e", scope: !3953, file: !320, line: 1905, type: !292, align: 8)
!3953 = distinct !DILexicalBlock(scope: !3930, file: !320, line: 1905, column: 13)
!3954 = !DILocation(line: 1902, column: 15, scope: !3930)
!3955 = !DILocation(line: 1903, column: 15, scope: !3930)
!3956 = !DILocation(line: 1903, column: 9, scope: !3930)
!3957 = !DILocation(line: 1904, column: 16, scope: !3930)
!3958 = !DILocation(line: 1904, column: 16, scope: !3951)
!3959 = !DILocation(line: 1904, column: 22, scope: !3951)
!3960 = !DILocation(line: 1904, column: 45, scope: !3930)
!3961 = !DILocation(line: 1905, column: 17, scope: !3930)
!3962 = !DILocation(line: 1905, column: 17, scope: !3953)
!3963 = !DILocation(line: 1905, column: 42, scope: !3953)
!3964 = !DILocation(line: 1905, column: 23, scope: !3953)
!3965 = !DILocation(line: 1905, column: 48, scope: !3930)
!3966 = !DILocation(line: 1907, column: 6, scope: !3930)
!3967 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h82d443200786b337E", scope: !3821, file: !320, line: 1902, type: !3968, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !467, retainedNodes: !3984)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!3970, !459}
!3970 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !3720, file: !2, size: 192, align: 64, elements: !3971, identifier: "4f55b3b4872357f9cfcb8e183921969b")
!3971 = !{!3972}
!3972 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 192, align: 64, elements: !3973, templateParams: !3978, identifier: "4f55b3b4872357f9cfcb8e183921969b_variant_part", discriminator: !3735)
!3973 = !{!3974, !3980}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3972, file: !2, baseType: !3975, size: 192, align: 64, extraData: i64 0)
!3975 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3970, file: !2, size: 192, align: 64, elements: !3976, templateParams: !3978, identifier: "4f55b3b4872357f9cfcb8e183921969b::Continue")
!3976 = !{!3977}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3975, file: !2, baseType: !416, size: 128, align: 64, offset: 64)
!3978 = !{!3871, !3979}
!3979 = !DITemplateTypeParameter(name: "C", type: !416)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3972, file: !2, baseType: !3981, size: 192, align: 64, extraData: i64 1)
!3981 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3970, file: !2, size: 192, align: 64, elements: !3982, templateParams: !3978, identifier: "4f55b3b4872357f9cfcb8e183921969b::Break")
!3982 = !{!3983}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3981, file: !2, baseType: !472, size: 128, align: 64, offset: 64)
!3984 = !{!3985, !3986, !3988}
!3985 = !DILocalVariable(name: "self", arg: 1, scope: !3967, file: !320, line: 1902, type: !459)
!3986 = !DILocalVariable(name: "v", scope: !3987, file: !320, line: 1904, type: !416, align: 8)
!3987 = distinct !DILexicalBlock(scope: !3967, file: !320, line: 1904, column: 13)
!3988 = !DILocalVariable(name: "e", scope: !3989, file: !320, line: 1905, type: !289, align: 8)
!3989 = distinct !DILexicalBlock(scope: !3967, file: !320, line: 1905, column: 13)
!3990 = !DILocation(line: 1902, column: 15, scope: !3967)
!3991 = !DILocation(line: 1903, column: 15, scope: !3967)
!3992 = !DILocation(line: 1903, column: 9, scope: !3967)
!3993 = !DILocation(line: 1904, column: 16, scope: !3967)
!3994 = !DILocation(line: 1904, column: 16, scope: !3987)
!3995 = !DILocation(line: 1904, column: 22, scope: !3987)
!3996 = !DILocation(line: 1904, column: 45, scope: !3967)
!3997 = !DILocation(line: 1905, column: 17, scope: !3967)
!3998 = !DILocation(line: 1905, column: 17, scope: !3989)
!3999 = !DILocation(line: 1905, column: 42, scope: !3989)
!4000 = !DILocation(line: 1905, column: 23, scope: !3989)
!4001 = !DILocation(line: 1905, column: 48, scope: !3967)
!4002 = !DILocation(line: 1907, column: 6, scope: !3967)
!4003 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd052563c46ed1ac7E", scope: !3821, file: !320, line: 1902, type: !4004, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2453, retainedNodes: !4019)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!4006, !2445}
!4006 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !3720, file: !2, size: 192, align: 64, elements: !4007, identifier: "648424dd8317cc9ec53a377a5dcf09bf")
!4007 = !{!4008}
!4008 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 192, align: 64, elements: !4009, templateParams: !4014, identifier: "648424dd8317cc9ec53a377a5dcf09bf_variant_part", discriminator: !3735)
!4009 = !{!4010, !4015}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4008, file: !2, baseType: !4011, size: 192, align: 64, extraData: i64 0)
!4011 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4006, file: !2, size: 192, align: 64, elements: !4012, templateParams: !4014, identifier: "648424dd8317cc9ec53a377a5dcf09bf::Continue")
!4012 = !{!4013}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4011, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!4014 = !{!3942, !3907}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4008, file: !2, baseType: !4016, size: 192, align: 64, extraData: i64 1)
!4016 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4006, file: !2, size: 192, align: 64, elements: !4017, templateParams: !4014, identifier: "648424dd8317cc9ec53a377a5dcf09bf::Break")
!4017 = !{!4018}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4016, file: !2, baseType: !340, size: 128, align: 64, offset: 64)
!4019 = !{!4020, !4021, !4023}
!4020 = !DILocalVariable(name: "self", arg: 1, scope: !4003, file: !320, line: 1902, type: !2445)
!4021 = !DILocalVariable(name: "v", scope: !4022, file: !320, line: 1904, type: !6, align: 8)
!4022 = distinct !DILexicalBlock(scope: !4003, file: !320, line: 1904, column: 13)
!4023 = !DILocalVariable(name: "e", scope: !4024, file: !320, line: 1905, type: !292, align: 8)
!4024 = distinct !DILexicalBlock(scope: !4003, file: !320, line: 1905, column: 13)
!4025 = !DILocation(line: 1902, column: 15, scope: !4003)
!4026 = !DILocation(line: 1903, column: 15, scope: !4003)
!4027 = !DILocation(line: 1903, column: 9, scope: !4003)
!4028 = !DILocation(line: 1904, column: 16, scope: !4003)
!4029 = !DILocation(line: 1904, column: 16, scope: !4022)
!4030 = !DILocation(line: 1904, column: 22, scope: !4022)
!4031 = !DILocation(line: 1904, column: 45, scope: !4003)
!4032 = !DILocation(line: 1905, column: 17, scope: !4003)
!4033 = !DILocation(line: 1905, column: 17, scope: !4024)
!4034 = !DILocation(line: 1905, column: 42, scope: !4024)
!4035 = !DILocation(line: 1905, column: 23, scope: !4024)
!4036 = !DILocation(line: 1905, column: 48, scope: !4003)
!4037 = !DILocation(line: 1907, column: 6, scope: !4003)
!4038 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he12c8b5904f92314E", scope: !3821, file: !320, line: 1902, type: !4039, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !428, retainedNodes: !4055)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!4041, !408}
!4041 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !3720, file: !2, size: 128, align: 64, elements: !4042, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7")
!4042 = !{!4043}
!4043 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 128, align: 64, elements: !4044, templateParams: !4049, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7_variant_part", discriminator: !3735)
!4044 = !{!4045, !4051}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4043, file: !2, baseType: !4046, size: 128, align: 64)
!4046 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4041, file: !2, size: 128, align: 64, elements: !4047, templateParams: !4049, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7::Continue")
!4047 = !{!4048}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4046, file: !2, baseType: !416, size: 128, align: 64)
!4049 = !{!4050, !3979}
!4050 = !DITemplateTypeParameter(name: "B", type: !436)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4043, file: !2, baseType: !4052, size: 128, align: 64, extraData: i64 0)
!4052 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4041, file: !2, size: 128, align: 64, elements: !4053, templateParams: !4049, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7::Break")
!4053 = !{!4054}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4052, file: !2, baseType: !436, align: 8)
!4055 = !{!4056, !4057, !4059}
!4056 = !DILocalVariable(name: "self", arg: 1, scope: !4038, file: !320, line: 1902, type: !408)
!4057 = !DILocalVariable(name: "v", scope: !4058, file: !320, line: 1904, type: !416, align: 8)
!4058 = distinct !DILexicalBlock(scope: !4038, file: !320, line: 1904, column: 13)
!4059 = !DILocalVariable(name: "e", scope: !4060, file: !320, line: 1905, type: !431, align: 1)
!4060 = distinct !DILexicalBlock(scope: !4038, file: !320, line: 1905, column: 13)
!4061 = !DILocation(line: 1902, column: 15, scope: !4038)
!4062 = !DILocation(line: 1905, column: 17, scope: !4060)
!4063 = !DILocation(line: 1903, column: 15, scope: !4038)
!4064 = !DILocation(line: 1903, column: 9, scope: !4038)
!4065 = !DILocation(line: 1904, column: 16, scope: !4038)
!4066 = !DILocation(line: 1904, column: 16, scope: !4058)
!4067 = !DILocation(line: 1904, column: 22, scope: !4058)
!4068 = !DILocation(line: 1904, column: 45, scope: !4038)
!4069 = !DILocation(line: 1905, column: 42, scope: !4060)
!4070 = !DILocation(line: 1905, column: 23, scope: !4060)
!4071 = !DILocation(line: 1905, column: 48, scope: !4038)
!4072 = !DILocation(line: 1907, column: 6, scope: !4038)
!4073 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6eef7ca3949bd8aE", scope: !3821, file: !320, line: 1902, type: !4074, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !2487, retainedNodes: !4090)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!4076, !2479}
!4076 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !3720, file: !2, size: 64, align: 64, elements: !4077, identifier: "aba8f8de5c30a5a713a7e2dd6a715755")
!4077 = !{!4078}
!4078 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3720, file: !2, size: 64, align: 64, elements: !4079, templateParams: !4084, identifier: "aba8f8de5c30a5a713a7e2dd6a715755_variant_part", discriminator: !3735)
!4079 = !{!4080, !4086}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4078, file: !2, baseType: !4081, size: 64, align: 64)
!4081 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4076, file: !2, size: 64, align: 64, elements: !4082, templateParams: !4084, identifier: "aba8f8de5c30a5a713a7e2dd6a715755::Continue")
!4082 = !{!4083}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4081, file: !2, baseType: !266, size: 64, align: 64)
!4084 = !{!4050, !4085}
!4085 = !DITemplateTypeParameter(name: "C", type: !266)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4078, file: !2, baseType: !4087, size: 64, align: 64, extraData: i64 0)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4076, file: !2, size: 64, align: 64, elements: !4088, templateParams: !4084, identifier: "aba8f8de5c30a5a713a7e2dd6a715755::Break")
!4088 = !{!4089}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4087, file: !2, baseType: !436, align: 8)
!4090 = !{!4091, !4092, !4094}
!4091 = !DILocalVariable(name: "self", arg: 1, scope: !4073, file: !320, line: 1902, type: !2479)
!4092 = !DILocalVariable(name: "v", scope: !4093, file: !320, line: 1904, type: !266, align: 8)
!4093 = distinct !DILexicalBlock(scope: !4073, file: !320, line: 1904, column: 13)
!4094 = !DILocalVariable(name: "e", scope: !4095, file: !320, line: 1905, type: !431, align: 1)
!4095 = distinct !DILexicalBlock(scope: !4073, file: !320, line: 1905, column: 13)
!4096 = !DILocation(line: 1902, column: 15, scope: !4073)
!4097 = !DILocation(line: 1905, column: 17, scope: !4095)
!4098 = !DILocation(line: 1903, column: 15, scope: !4073)
!4099 = !DILocation(line: 1903, column: 9, scope: !4073)
!4100 = !DILocation(line: 1904, column: 16, scope: !4073)
!4101 = !DILocation(line: 1904, column: 16, scope: !4093)
!4102 = !DILocation(line: 1904, column: 22, scope: !4093)
!4103 = !DILocation(line: 1904, column: 45, scope: !4073)
!4104 = !DILocation(line: 1905, column: 42, scope: !4095)
!4105 = !DILocation(line: 1905, column: 23, scope: !4095)
!4106 = !DILocation(line: 1905, column: 48, scope: !4073)
!4107 = !DILocation(line: 1907, column: 6, scope: !4073)
!4108 = distinct !DISubprogram(name: "index<usize, usize, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h86fdf4e92a23c4c2E", scope: !4109, file: !2795, line: 2464, type: !4110, scopeLine: 2464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4115, retainedNodes: !4112)
!4109 = !DINamespace(name: "{impl#16}", scope: !47)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!5, !79, !6, !574}
!4112 = !{!4113, !4114}
!4113 = !DILocalVariable(name: "self", arg: 1, scope: !4108, file: !2795, line: 2464, type: !79)
!4114 = !DILocalVariable(name: "index", arg: 2, scope: !4108, file: !2795, line: 2464, type: !6)
!4115 = !{!65, !2425, !71}
!4116 = !DILocation(line: 2464, column: 14, scope: !4108)
!4117 = !DILocation(line: 2464, column: 21, scope: !4108)
!4118 = !DILocation(line: 2465, column: 23, scope: !4108)
!4119 = !DILocation(line: 2465, column: 9, scope: !4108)
!4120 = !DILocation(line: 2466, column: 6, scope: !4108)
!4121 = distinct !DISubprogram(name: "drop", linkageName: "_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha5f8fbfab3675821E", scope: !4122, file: !2804, line: 25, type: !4123, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4125)
!4122 = !DINamespace(name: "{impl#1}", scope: !1184)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{null, !2807}
!4125 = !{!4126}
!4126 = !DILocalVariable(name: "self", arg: 1, scope: !4121, file: !2804, line: 25, type: !2807)
!4127 = !DILocation(line: 25, column: 13, scope: !4121)
!4128 = !DILocation(line: 26, column: 21, scope: !4121)
!4129 = !DILocation(line: 26, column: 9, scope: !4121)
!4130 = !DILocation(line: 27, column: 6, scope: !4121)
!4131 = distinct !DISubprogram(name: "index_mut<usize, usize, alloc::alloc::Global>", linkageName: "_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17h50fbdcb1a730885fE", scope: !4132, file: !2795, line: 2476, type: !4133, scopeLine: 2476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4115, retainedNodes: !4135)
!4132 = !DINamespace(name: "{impl#17}", scope: !47)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!1045, !2827, !6, !574}
!4135 = !{!4136, !4137}
!4136 = !DILocalVariable(name: "self", arg: 1, scope: !4131, file: !2795, line: 2476, type: !2827)
!4137 = !DILocalVariable(name: "index", arg: 2, scope: !4131, file: !2795, line: 2476, type: !6)
!4138 = !DILocation(line: 2476, column: 18, scope: !4131)
!4139 = !DILocation(line: 2476, column: 29, scope: !4131)
!4140 = !DILocation(line: 2477, column: 34, scope: !4131)
!4141 = !DILocation(line: 2477, column: 9, scope: !4131)
!4142 = !DILocation(line: 2478, column: 6, scope: !4131)
!4143 = distinct !DISubprogram(name: "from_residual<(usize, &usize)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hbb5d4cabaf1a504dE", scope: !4144, file: !2442, line: 2034, type: !4145, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !133, retainedNodes: !4147)
!4144 = !DINamespace(name: "{impl#41}", scope: !127)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!126, !171}
!4147 = !{!4148}
!4148 = !DILocalVariable(name: "residual", arg: 1, scope: !4143, file: !2442, line: 2034, type: !171)
!4149 = !DILocation(line: 2034, column: 22, scope: !4143)
!4150 = !DILocation(line: 2036, column: 21, scope: !4143)
!4151 = !DILocation(line: 2038, column: 6, scope: !4143)
!4152 = distinct !DISubprogram(name: "spec_next_back<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h12317ff84a91bd31E", scope: !4153, file: !797, line: 611, type: !1775, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4154)
!4153 = !DINamespace(name: "{impl#2}", scope: !799)
!4154 = !{!4155}
!4155 = !DILocalVariable(name: "self", arg: 1, scope: !4152, file: !797, line: 611, type: !1777)
!4156 = !DILocation(line: 611, column: 23, scope: !4152)
!4157 = !DILocation(line: 612, column: 12, scope: !4152)
!4158 = !DILocation(line: 612, column: 25, scope: !4152)
!4159 = !DILocation(line: 617, column: 13, scope: !4152)
!4160 = !DILocation(line: 612, column: 9, scope: !4152)
!4161 = !DILocation(line: 614, column: 58, scope: !4152)
!4162 = !DILocation(line: 614, column: 33, scope: !4152)
!4163 = !DILocation(line: 614, column: 13, scope: !4152)
!4164 = !DILocation(line: 615, column: 18, scope: !4152)
!4165 = !DILocation(line: 615, column: 13, scope: !4152)
!4166 = !DILocation(line: 619, column: 6, scope: !4152)
!4167 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd3bca098422bb437E", scope: !4153, file: !797, line: 586, type: !1775, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4168)
!4168 = !{!4169, !4170}
!4169 = !DILocalVariable(name: "self", arg: 1, scope: !4167, file: !797, line: 586, type: !1777)
!4170 = !DILocalVariable(name: "n", scope: !4171, file: !797, line: 589, type: !6, align: 8)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !797, line: 589, column: 13)
!4172 = !DILocation(line: 586, column: 18, scope: !4167)
!4173 = !DILocation(line: 587, column: 12, scope: !4167)
!4174 = !DILocation(line: 587, column: 25, scope: !4167)
!4175 = !DILocation(line: 592, column: 13, scope: !4167)
!4176 = !DILocation(line: 587, column: 9, scope: !4167)
!4177 = !DILocation(line: 589, column: 54, scope: !4167)
!4178 = !DILocation(line: 589, column: 30, scope: !4167)
!4179 = !DILocation(line: 589, column: 17, scope: !4171)
!4180 = !DILocation(line: 590, column: 31, scope: !4171)
!4181 = !DILocation(line: 590, column: 18, scope: !4171)
!4182 = !DILocation(line: 590, column: 13, scope: !4171)
!4183 = !DILocation(line: 594, column: 6, scope: !4167)
!4184 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb7a26fabf560e407E", scope: !4186, file: !4185, line: 134, type: !4187, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4190)
!4185 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "eaa73f4306714798d2867dabeabed334")
!4186 = !DINamespace(name: "{impl#172}", scope: !149)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!3736, !4189}
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Iter<usize>", baseType: !148, size: 64, align: 64, dwarfAddressSpace: 0)
!4190 = !{!4191}
!4191 = !DILocalVariable(name: "self", arg: 1, scope: !4184, file: !4185, line: 134, type: !4189)
!4192 = !DILocation(line: 134, column: 21, scope: !4184)
!4193 = !DILocation(line: 142, column: 29, scope: !4184)
!4194 = !DILocation(line: 142, column: 28, scope: !4184)
!4195 = !DILocation(line: 142, column: 21, scope: !4184)
!4196 = !DILocation(line: 143, column: 24, scope: !4184)
!4197 = !DILocation(line: 143, column: 21, scope: !4184)
!4198 = !DILocation(line: 144, column: 33, scope: !4184)
!4199 = !DILocation(line: 144, column: 32, scope: !4184)
!4200 = !DILocation(line: 144, column: 25, scope: !4184)
!4201 = !DILocation(line: 146, column: 24, scope: !4184)
!4202 = !DILocalVariable(name: "self", arg: 1, scope: !4203, file: !4185, line: 85, type: !4189)
!4203 = distinct !DISubprogram(name: "post_inc_start<usize>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h34a60a34de49144cE", scope: !148, file: !4185, line: 85, type: !4204, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !64, retainedNodes: !4206)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!60, !4189, !2383}
!4206 = !{!4202, !4207, !4208}
!4207 = !DILocalVariable(name: "offset", arg: 2, scope: !4203, file: !4185, line: 85, type: !2383)
!4208 = !DILocalVariable(name: "old", scope: !4209, file: !4185, line: 90, type: !881, align: 8)
!4209 = distinct !DILexicalBlock(scope: !4203, file: !4185, line: 90, column: 21)
!4210 = !DILocation(line: 85, column: 38, scope: !4203, inlinedAt: !4211)
!4211 = distinct !DILocation(line: 149, column: 30, scope: !4184)
!4212 = !DILocation(line: 85, column: 49, scope: !4203, inlinedAt: !4211)
!4213 = !DILocation(line: 90, column: 31, scope: !4203, inlinedAt: !4211)
!4214 = !DILocation(line: 90, column: 25, scope: !4209, inlinedAt: !4211)
!4215 = !DILocation(line: 93, column: 64, scope: !4209, inlinedAt: !4211)
!4216 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !4217)
!4217 = distinct !DILocation(line: 93, column: 64, scope: !4209, inlinedAt: !4211)
!4218 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !4217)
!4219 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !4217)
!4220 = !DILocation(line: 93, column: 41, scope: !4209, inlinedAt: !4211)
!4221 = !DILocation(line: 93, column: 21, scope: !4209, inlinedAt: !4211)
!4222 = !DILocation(line: 94, column: 21, scope: !4209, inlinedAt: !4211)
!4223 = !DILocation(line: 96, column: 14, scope: !4203, inlinedAt: !4211)
!4224 = !DILocation(line: 149, column: 30, scope: !4184)
!4225 = !DILocation(line: 147, column: 25, scope: !4184)
!4226 = !DILocation(line: 146, column: 21, scope: !4184)
!4227 = !DILocation(line: 152, column: 14, scope: !4184)
!4228 = !DILocation(line: 149, column: 25, scope: !4184)
!4229 = distinct !DISubprogram(name: "from_iter<usize, core::ops::range::Range<usize>>", linkageName: "_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h8c5a26dccc21557eE", scope: !4230, file: !2795, line: 2485, type: !240, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !248, retainedNodes: !4231)
!4230 = !DINamespace(name: "{impl#18}", scope: !47)
!4231 = !{!4232}
!4232 = !DILocalVariable(name: "iter", arg: 1, scope: !4229, file: !2795, line: 2485, type: !209)
!4233 = !DILocation(line: 2485, column: 45, scope: !4229)
!4234 = !DILocation(line: 2486, column: 59, scope: !4229)
!4235 = !DILocation(line: 2486, column: 9, scope: !4229)
!4236 = !DILocation(line: 2487, column: 6, scope: !4229)
!4237 = distinct !DISubprogram(name: "from_iter<usize, core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17he381db13525916a3E", scope: !4230, file: !2795, line: 2485, type: !203, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !225, retainedNodes: !4238)
!4238 = !{!4239}
!4239 = !DILocalVariable(name: "iter", arg: 1, scope: !4237, file: !2795, line: 2485, type: !205)
!4240 = !DILocation(line: 2485, column: 45, scope: !4237)
!4241 = !DILocation(line: 2486, column: 59, scope: !4237)
!4242 = !DILocation(line: 2486, column: 9, scope: !4237)
!4243 = !DILocation(line: 2487, column: 6, scope: !4237)
!4244 = distinct !DISubprogram(name: "spec_extend<usize, core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h384af5a6d3d098cfE", scope: !1178, file: !4245, line: 26, type: !4246, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4278, retainedNodes: !4248)
!4245 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "84dcaee8455004b919775423d785cbec")
!4246 = !DISubroutineType(types: !4247)
!4247 = !{null, !2827, !205}
!4248 = !{!4249, !4250, !4251, !4253, !4254, !4256, !4259, !4260, !4263, !4267, !4274, !4276}
!4249 = !DILocalVariable(name: "self", arg: 1, scope: !4244, file: !4245, line: 26, type: !2827)
!4250 = !DILocalVariable(name: "iterator", arg: 2, scope: !4244, file: !4245, line: 26, type: !205)
!4251 = !DILocalVariable(name: "low", scope: !4252, file: !4245, line: 28, type: !6, align: 8)
!4252 = distinct !DILexicalBlock(scope: !4244, file: !4245, line: 28, column: 9)
!4253 = !DILocalVariable(name: "high", scope: !4252, file: !4245, line: 28, type: !683, align: 8)
!4254 = !DILocalVariable(name: "additional", scope: !4255, file: !4245, line: 29, type: !6, align: 8)
!4255 = distinct !DILexicalBlock(scope: !4252, file: !4245, line: 29, column: 16)
!4256 = !DILocalVariable(name: "left_val", scope: !4257, file: !4245, line: 30, type: !5, align: 8)
!4257 = !DILexicalBlockFile(scope: !4258, file: !4245, discriminator: 0)
!4258 = distinct !DILexicalBlock(scope: !4252, file: !2198, line: 51, column: 13)
!4259 = !DILocalVariable(name: "right_val", scope: !4257, file: !4245, line: 30, type: !5, align: 8)
!4260 = !DILocalVariable(name: "kind", scope: !4261, file: !4245, line: 30, type: !107, align: 1)
!4261 = !DILexicalBlockFile(scope: !4262, file: !4245, discriminator: 0)
!4262 = distinct !DILexicalBlock(scope: !4258, file: !2198, line: 53, column: 21)
!4263 = !DILocalVariable(name: "arg0", scope: !4264, file: !4245, line: 30, type: !4266, align: 8)
!4264 = !DILexicalBlockFile(scope: !4265, file: !4245, discriminator: 0)
!4265 = distinct !DILexicalBlock(scope: !4262, file: !2198, line: 57, column: 114)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&(usize, core::option::Option<usize>)", baseType: !1788, size: 64, align: 64, dwarfAddressSpace: 0)
!4267 = !DILocalVariable(name: "args", scope: !4268, file: !4245, line: 30, type: !4270, align: 8)
!4268 = !DILexicalBlockFile(scope: !4269, file: !4245, discriminator: 0)
!4269 = distinct !DILexicalBlock(scope: !4262, file: !2198, line: 57, column: 114)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[core::fmt::ArgumentV1; 1]", baseType: !4271, size: 64, align: 64, dwarfAddressSpace: 0)
!4271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 128, align: 64, elements: !4272)
!4272 = !{!4273}
!4273 = !DISubrange(count: 1, lowerBound: 0)
!4274 = !DILocalVariable(name: "ptr", scope: !4275, file: !4245, line: 38, type: !881, align: 8)
!4275 = distinct !DILexicalBlock(scope: !4252, file: !4245, line: 38, column: 17)
!4276 = !DILocalVariable(name: "local_len", scope: !4277, file: !4245, line: 39, type: !1183, align: 8)
!4277 = distinct !DILexicalBlock(scope: !4275, file: !4245, line: 39, column: 17)
!4278 = !{!65, !226, !71}
!4279 = !DILocation(line: 26, column: 28, scope: !4244)
!4280 = !DILocation(line: 26, column: 39, scope: !4244)
!4281 = !DILocation(line: 28, column: 19, scope: !4252)
!4282 = !DILocation(line: 28, column: 27, scope: !4244)
!4283 = !DILocation(line: 28, column: 14, scope: !4244)
!4284 = !DILocation(line: 28, column: 14, scope: !4252)
!4285 = !DILocation(line: 28, column: 19, scope: !4244)
!4286 = !DILocation(line: 29, column: 16, scope: !4252)
!4287 = !DILocation(line: 29, column: 21, scope: !4252)
!4288 = !DILocation(line: 29, column: 21, scope: !4255)
!4289 = !DILocation(line: 36, column: 13, scope: !4252)
!4290 = !DILocation(line: 55, column: 13, scope: !4252)
!4291 = !DILocation(line: 38, column: 31, scope: !4252)
!4292 = !DILocation(line: 38, column: 53, scope: !4252)
!4293 = !DILocation(line: 618, column: 29, scope: !2886, inlinedAt: !4294)
!4294 = distinct !DILocation(line: 38, column: 31, scope: !4252)
!4295 = !DILocation(line: 618, column: 35, scope: !2886, inlinedAt: !4294)
!4296 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !4297)
!4297 = distinct !DILocation(line: 623, column: 18, scope: !2886, inlinedAt: !4294)
!4298 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !4297)
!4299 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !4297)
!4300 = !DILocation(line: 38, column: 21, scope: !4275)
!4301 = !DILocation(line: 39, column: 55, scope: !4275)
!4302 = !DILocation(line: 39, column: 37, scope: !4275)
!4303 = !DILocation(line: 39, column: 21, scope: !4277)
!4304 = !DILocation(line: 40, column: 17, scope: !4277)
!4305 = !DILocation(line: 40, column: 35, scope: !4277)
!4306 = !DILocation(line: 57, column: 6, scope: !4244)
!4307 = distinct !DISubprogram(name: "spec_extend<usize, core::ops::range::Range<usize>, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17hc93b117c5de546beE", scope: !1178, file: !4245, line: 26, type: !4308, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4335, retainedNodes: !4310)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{null, !2827, !209}
!4310 = !{!4311, !4312, !4313, !4315, !4316, !4318, !4321, !4322, !4325, !4328, !4331, !4333}
!4311 = !DILocalVariable(name: "self", arg: 1, scope: !4307, file: !4245, line: 26, type: !2827)
!4312 = !DILocalVariable(name: "iterator", arg: 2, scope: !4307, file: !4245, line: 26, type: !209)
!4313 = !DILocalVariable(name: "low", scope: !4314, file: !4245, line: 28, type: !6, align: 8)
!4314 = distinct !DILexicalBlock(scope: !4307, file: !4245, line: 28, column: 9)
!4315 = !DILocalVariable(name: "high", scope: !4314, file: !4245, line: 28, type: !683, align: 8)
!4316 = !DILocalVariable(name: "additional", scope: !4317, file: !4245, line: 29, type: !6, align: 8)
!4317 = distinct !DILexicalBlock(scope: !4314, file: !4245, line: 29, column: 16)
!4318 = !DILocalVariable(name: "left_val", scope: !4319, file: !4245, line: 30, type: !5, align: 8)
!4319 = !DILexicalBlockFile(scope: !4320, file: !4245, discriminator: 0)
!4320 = distinct !DILexicalBlock(scope: !4314, file: !2198, line: 51, column: 13)
!4321 = !DILocalVariable(name: "right_val", scope: !4319, file: !4245, line: 30, type: !5, align: 8)
!4322 = !DILocalVariable(name: "kind", scope: !4323, file: !4245, line: 30, type: !107, align: 1)
!4323 = !DILexicalBlockFile(scope: !4324, file: !4245, discriminator: 0)
!4324 = distinct !DILexicalBlock(scope: !4320, file: !2198, line: 53, column: 21)
!4325 = !DILocalVariable(name: "arg0", scope: !4326, file: !4245, line: 30, type: !4266, align: 8)
!4326 = !DILexicalBlockFile(scope: !4327, file: !4245, discriminator: 0)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !2198, line: 57, column: 114)
!4328 = !DILocalVariable(name: "args", scope: !4329, file: !4245, line: 30, type: !4270, align: 8)
!4329 = !DILexicalBlockFile(scope: !4330, file: !4245, discriminator: 0)
!4330 = distinct !DILexicalBlock(scope: !4324, file: !2198, line: 57, column: 114)
!4331 = !DILocalVariable(name: "ptr", scope: !4332, file: !4245, line: 38, type: !881, align: 8)
!4332 = distinct !DILexicalBlock(scope: !4314, file: !4245, line: 38, column: 17)
!4333 = !DILocalVariable(name: "local_len", scope: !4334, file: !4245, line: 39, type: !1183, align: 8)
!4334 = distinct !DILexicalBlock(scope: !4332, file: !4245, line: 39, column: 17)
!4335 = !{!65, !249, !71}
!4336 = !DILocation(line: 26, column: 28, scope: !4307)
!4337 = !DILocation(line: 26, column: 39, scope: !4307)
!4338 = !DILocation(line: 28, column: 19, scope: !4314)
!4339 = !DILocation(line: 28, column: 27, scope: !4307)
!4340 = !DILocation(line: 28, column: 14, scope: !4307)
!4341 = !DILocation(line: 28, column: 14, scope: !4314)
!4342 = !DILocation(line: 28, column: 19, scope: !4307)
!4343 = !DILocation(line: 29, column: 16, scope: !4314)
!4344 = !DILocation(line: 29, column: 21, scope: !4314)
!4345 = !DILocation(line: 29, column: 21, scope: !4317)
!4346 = !DILocation(line: 36, column: 13, scope: !4314)
!4347 = !DILocation(line: 55, column: 13, scope: !4314)
!4348 = !DILocation(line: 38, column: 31, scope: !4314)
!4349 = !DILocation(line: 38, column: 53, scope: !4314)
!4350 = !DILocation(line: 618, column: 29, scope: !2886, inlinedAt: !4351)
!4351 = distinct !DILocation(line: 38, column: 31, scope: !4314)
!4352 = !DILocation(line: 618, column: 35, scope: !2886, inlinedAt: !4351)
!4353 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !4354)
!4354 = distinct !DILocation(line: 623, column: 18, scope: !2886, inlinedAt: !4351)
!4355 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !4354)
!4356 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !4354)
!4357 = !DILocation(line: 38, column: 21, scope: !4332)
!4358 = !DILocation(line: 39, column: 55, scope: !4332)
!4359 = !DILocation(line: 39, column: 37, scope: !4332)
!4360 = !DILocation(line: 39, column: 21, scope: !4334)
!4361 = !DILocation(line: 40, column: 17, scope: !4334)
!4362 = !DILocation(line: 40, column: 35, scope: !4334)
!4363 = !DILocation(line: 57, column: 6, scope: !4307)
!4364 = distinct !DISubprogram(name: "{closure#0}<usize, core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend28_$u7b$$u7b$closure$u7d$$u7d$17h1f4afca403b92a5dE", scope: !1177, file: !4245, line: 40, type: !4365, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4278, retainedNodes: !4368)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{null, !4367, !6}
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !1212, size: 64, align: 64, dwarfAddressSpace: 0)
!4368 = !{!4369, !4370, !4371}
!4369 = !DILocalVariable(name: "element", arg: 2, scope: !4364, file: !4245, line: 40, type: !6)
!4370 = !DILocalVariable(name: "ptr", scope: !4364, file: !4245, line: 38, type: !881, align: 8)
!4371 = !DILocalVariable(name: "local_len", scope: !4364, file: !4245, line: 39, type: !1183, align: 8)
!4372 = !DILocation(line: 38, column: 21, scope: !4364)
!4373 = !DILocation(line: 39, column: 21, scope: !4364)
!4374 = !DILocation(line: 40, column: 41, scope: !4364)
!4375 = !DILocation(line: 41, column: 32, scope: !4364)
!4376 = !DILocation(line: 41, column: 21, scope: !4364)
!4377 = !DILocation(line: 42, column: 27, scope: !4364)
!4378 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !4379)
!4379 = distinct !DILocation(line: 42, column: 27, scope: !4364)
!4380 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !4379)
!4381 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !4379)
!4382 = !DILocation(line: 42, column: 21, scope: !4364)
!4383 = !DILocation(line: 46, column: 21, scope: !4364)
!4384 = !DILocation(line: 47, column: 18, scope: !4364)
!4385 = distinct !DISubprogram(name: "{closure#0}<usize, core::ops::range::Range<usize>, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend28_$u7b$$u7b$closure$u7d$$u7d$17hbd2720235c2ff086E", scope: !1177, file: !4245, line: 40, type: !4386, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4335, retainedNodes: !4389)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{null, !4388, !6}
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !1176, size: 64, align: 64, dwarfAddressSpace: 0)
!4389 = !{!4390, !4391, !4392}
!4390 = !DILocalVariable(name: "element", arg: 2, scope: !4385, file: !4245, line: 40, type: !6)
!4391 = !DILocalVariable(name: "ptr", scope: !4385, file: !4245, line: 38, type: !881, align: 8)
!4392 = !DILocalVariable(name: "local_len", scope: !4385, file: !4245, line: 39, type: !1183, align: 8)
!4393 = !DILocation(line: 38, column: 21, scope: !4385)
!4394 = !DILocation(line: 39, column: 21, scope: !4385)
!4395 = !DILocation(line: 40, column: 41, scope: !4385)
!4396 = !DILocation(line: 41, column: 32, scope: !4385)
!4397 = !DILocation(line: 41, column: 21, scope: !4385)
!4398 = !DILocation(line: 42, column: 27, scope: !4385)
!4399 = !DILocation(line: 235, column: 32, scope: !2895, inlinedAt: !4400)
!4400 = distinct !DILocation(line: 42, column: 27, scope: !4385)
!4401 = !DILocation(line: 235, column: 38, scope: !2895, inlinedAt: !4400)
!4402 = !DILocation(line: 242, column: 18, scope: !2895, inlinedAt: !4400)
!4403 = !DILocation(line: 42, column: 21, scope: !4385)
!4404 = !DILocation(line: 46, column: 21, scope: !4385)
!4405 = !DILocation(line: 47, column: 18, scope: !4385)
!4406 = distinct !DISubprogram(name: "from_iter<usize, core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h0032758469ac5cafE", scope: !4408, file: !4407, line: 32, type: !203, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !225, retainedNodes: !4410)
!4407 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/spec_from_iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "b039a84bf3a4bff93117713671450099")
!4408 = !DINamespace(name: "{impl#0}", scope: !4409)
!4409 = !DINamespace(name: "spec_from_iter", scope: !47)
!4410 = !{!4411}
!4411 = !DILocalVariable(name: "iterator", arg: 1, scope: !4406, file: !4407, line: 32, type: !205)
!4412 = !DILocation(line: 32, column: 26, scope: !4406)
!4413 = !DILocation(line: 33, column: 9, scope: !4406)
!4414 = !DILocation(line: 34, column: 6, scope: !4406)
!4415 = distinct !DISubprogram(name: "from_iter<usize, core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h523f95f18044ec97E", scope: !4408, file: !4407, line: 32, type: !240, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !248, retainedNodes: !4416)
!4416 = !{!4417}
!4417 = !DILocalVariable(name: "iterator", arg: 1, scope: !4415, file: !4407, line: 32, type: !209)
!4418 = !DILocation(line: 32, column: 26, scope: !4415)
!4419 = !DILocation(line: 33, column: 9, scope: !4415)
!4420 = !DILocation(line: 34, column: 6, scope: !4415)
!4421 = distinct !DISubprogram(name: "fold<core::ops::range::Range<usize>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure#0}>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h3c12418a31000f3cE", scope: !4422, file: !2018, line: 59, type: !4423, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4429, retainedNodes: !4425)
!4422 = !DINamespace(name: "{impl#1}", scope: !206)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{null, !205, !312, !1311}
!4425 = !{!4426, !4427, !4428}
!4426 = !DILocalVariable(name: "self", arg: 1, scope: !4421, file: !2018, line: 59, type: !205)
!4427 = !DILocalVariable(name: "init", arg: 2, scope: !4421, file: !2018, line: 59, type: !312)
!4428 = !DILocalVariable(name: "f", arg: 3, scope: !4421, file: !2018, line: 59, type: !1311)
!4429 = !{!249, !4430, !1834}
!4430 = !DITemplateTypeParameter(name: "Acc", type: !312)
!4431 = !DILocation(line: 59, column: 21, scope: !4421)
!4432 = !DILocation(line: 59, column: 27, scope: !4421)
!4433 = !DILocation(line: 59, column: 38, scope: !4421)
!4434 = !DILocation(line: 63, column: 31, scope: !4421)
!4435 = !DILocation(line: 63, column: 9, scope: !4421)
!4436 = !DILocation(line: 64, column: 6, scope: !4421)
!4437 = distinct !DISubprogram(name: "next<core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbb390563d53103dcE", scope: !4422, file: !2018, line: 32, type: !4438, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3601, retainedNodes: !4441)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!683, !4440}
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Rev<core::ops::range::Range<usize>>", baseType: !205, size: 64, align: 64, dwarfAddressSpace: 0)
!4441 = !{!4442}
!4442 = !DILocalVariable(name: "self", arg: 1, scope: !4437, file: !2018, line: 32, type: !4440)
!4443 = !DILocation(line: 32, column: 13, scope: !4437)
!4444 = !DILocation(line: 33, column: 9, scope: !4437)
!4445 = !DILocation(line: 34, column: 6, scope: !4437)
!4446 = distinct !DISubprogram(name: "size_hint<core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18fe86b74cb9542cE", scope: !4422, file: !2018, line: 36, type: !4447, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !3601, retainedNodes: !4450)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!1788, !4449}
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Rev<core::ops::range::Range<usize>>", baseType: !205, size: 64, align: 64, dwarfAddressSpace: 0)
!4450 = !{!4451}
!4451 = !DILocalVariable(name: "self", arg: 1, scope: !4446, file: !2018, line: 36, type: !4449)
!4452 = !DILocation(line: 36, column: 18, scope: !4446)
!4453 = !DILocation(line: 37, column: 9, scope: !4446)
!4454 = !DILocation(line: 38, column: 6, scope: !4446)
!4455 = distinct !DISubprogram(name: "from_complete", linkageName: "_ZN105_$LT$itertools..permutations..Permutations$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count13from_complete17h765e2b8e3e0ab1caE", scope: !4457, file: !4456, line: 129, type: !4459, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4461)
!4456 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/permutations.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "670b8f8948b00632d1666f0a6e40ddac")
!4457 = !DINamespace(name: "count", scope: !4458)
!4458 = !DINamespace(name: "{impl#2}", scope: !32)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!6, !31}
!4461 = !{!4462, !4463}
!4462 = !DILocalVariable(name: "complete_state", arg: 1, scope: !4455, file: !4456, line: 129, type: !31)
!4463 = !DILocalVariable(name: "count", scope: !4464, file: !4456, line: 131, type: !6, align: 8)
!4464 = distinct !DILexicalBlock(scope: !4455, file: !4456, line: 131, column: 17)
!4465 = !DILocation(line: 129, column: 26, scope: !4455)
!4466 = !DILocation(line: 130, column: 19, scope: !4455)
!4467 = !DILocation(line: 130, column: 13, scope: !4455)
!4468 = !DILocation(line: 131, column: 47, scope: !4455)
!4469 = !DILocation(line: 131, column: 47, scope: !4464)
!4470 = !DILocation(line: 136, column: 9, scope: !4455)
!4471 = !DILocation(line: 133, column: 21, scope: !4455)
!4472 = !DILocation(line: 136, column: 10, scope: !4455)
!4473 = distinct !DISubprogram(name: "advance", linkageName: "_ZN9itertools12permutations13CompleteState7advance17ha0f1ae3f40041a8dE", scope: !31, file: !4456, line: 209, type: !4474, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4477)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{null, !4476}
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut CompleteState", baseType: !31, size: 64, align: 64, dwarfAddressSpace: 0)
!4477 = !{!4478, !4479, !4481, !4482, !4484, !4486, !4488, !4489, !4491, !4493, !4495, !4497, !4499, !4501, !4503}
!4478 = !DILocalVariable(name: "self", arg: 1, scope: !4473, file: !4456, line: 209, type: !4476)
!4479 = !DILocalVariable(name: "n", scope: !4480, file: !4456, line: 211, type: !6, align: 8)
!4480 = distinct !DILexicalBlock(scope: !4473, file: !4456, line: 211, column: 13)
!4481 = !DILocalVariable(name: "k", scope: !4480, file: !4456, line: 211, type: !6, align: 8)
!4482 = !DILocalVariable(name: "indices", scope: !4483, file: !4456, line: 212, type: !46, align: 8)
!4483 = distinct !DILexicalBlock(scope: !4480, file: !4456, line: 212, column: 17)
!4484 = !DILocalVariable(name: "cycles", scope: !4485, file: !4456, line: 213, type: !46, align: 8)
!4485 = distinct !DILexicalBlock(scope: !4483, file: !4456, line: 213, column: 17)
!4486 = !DILocalVariable(name: "indices", scope: !4487, file: !4456, line: 220, type: !2827, align: 8)
!4487 = distinct !DILexicalBlock(scope: !4473, file: !4456, line: 220, column: 13)
!4488 = !DILocalVariable(name: "cycles", scope: !4487, file: !4456, line: 220, type: !2827, align: 8)
!4489 = !DILocalVariable(name: "n", scope: !4490, file: !4456, line: 221, type: !6, align: 8)
!4490 = distinct !DILexicalBlock(scope: !4487, file: !4456, line: 221, column: 17)
!4491 = !DILocalVariable(name: "k", scope: !4492, file: !4456, line: 222, type: !6, align: 8)
!4492 = distinct !DILexicalBlock(scope: !4490, file: !4456, line: 222, column: 17)
!4493 = !DILocalVariable(name: "iter", scope: !4494, file: !4456, line: 224, type: !205, align: 8)
!4494 = distinct !DILexicalBlock(scope: !4492, file: !4456, line: 224, column: 17)
!4495 = !DILocalVariable(name: "__next", scope: !4496, file: !4456, line: 224, type: !6, align: 8)
!4496 = distinct !DILexicalBlock(scope: !4494, file: !4456, line: 224, column: 26)
!4497 = !DILocalVariable(name: "val", scope: !4498, file: !4456, line: 224, type: !6, align: 8)
!4498 = distinct !DILexicalBlock(scope: !4496, file: !4456, line: 224, column: 21)
!4499 = !DILocalVariable(name: "i", scope: !4500, file: !4456, line: 224, type: !6, align: 8)
!4500 = distinct !DILexicalBlock(scope: !4496, file: !4456, line: 224, column: 26)
!4501 = !DILocalVariable(name: "to_push", scope: !4502, file: !4456, line: 228, type: !6, align: 8)
!4502 = distinct !DILexicalBlock(scope: !4500, file: !4456, line: 228, column: 25)
!4503 = !DILocalVariable(name: "swap_index", scope: !4504, file: !4456, line: 231, type: !6, align: 8)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !4456, line: 231, column: 25)
!4505 = !DILocation(line: 209, column: 16, scope: !4473)
!4506 = !DILocation(line: 212, column: 21, scope: !4483)
!4507 = !DILocation(line: 213, column: 21, scope: !4485)
!4508 = !DILocation(line: 224, column: 26, scope: !4494)
!4509 = !DILocation(line: 210, column: 23, scope: !4473)
!4510 = !DILocation(line: 210, column: 17, scope: !4473)
!4511 = !DILocation(line: 211, column: 36, scope: !4473)
!4512 = !DILocation(line: 211, column: 36, scope: !4480)
!4513 = !DILocation(line: 211, column: 39, scope: !4473)
!4514 = !DILocation(line: 211, column: 39, scope: !4480)
!4515 = !DILocation(line: 212, column: 31, scope: !4480)
!4516 = !DILocation(line: 220, column: 38, scope: !4473)
!4517 = !DILocation(line: 220, column: 38, scope: !4487)
!4518 = !DILocation(line: 220, column: 55, scope: !4473)
!4519 = !DILocation(line: 220, column: 55, scope: !4487)
!4520 = !DILocation(line: 221, column: 25, scope: !4487)
!4521 = !DILocation(line: 221, column: 21, scope: !4490)
!4522 = !DILocation(line: 222, column: 25, scope: !4490)
!4523 = !DILocation(line: 222, column: 21, scope: !4492)
!4524 = !DILocation(line: 224, column: 26, scope: !4492)
!4525 = !DILocation(line: 224, column: 17, scope: !4494)
!4526 = !DILocation(line: 224, column: 26, scope: !4496)
!4527 = !DILocation(line: 239, column: 17, scope: !4492)
!4528 = !DILocation(line: 240, column: 13, scope: !4473)
!4529 = !DILocation(line: 224, column: 21, scope: !4496)
!4530 = !DILocation(line: 224, column: 21, scope: !4498)
!4531 = !DILocation(line: 224, column: 21, scope: !4500)
!4532 = !DILocation(line: 225, column: 24, scope: !4500)
!4533 = !DILocation(line: 226, column: 37, scope: !4500)
!4534 = !DILocation(line: 231, column: 46, scope: !4500)
!4535 = !DILocation(line: 231, column: 42, scope: !4500)
!4536 = !DILocation(line: 231, column: 29, scope: !4504)
!4537 = !DILocation(line: 232, column: 25, scope: !4504)
!4538 = !DILocation(line: 234, column: 25, scope: !4504)
!4539 = !DILocation(line: 242, column: 6, scope: !4473)
!4540 = !DILocation(line: 226, column: 25, scope: !4500)
!4541 = !DILocation(line: 228, column: 39, scope: !4500)
!4542 = !DILocation(line: 228, column: 29, scope: !4502)
!4543 = !DILocation(line: 229, column: 25, scope: !4502)
!4544 = !DILocation(line: 210, column: 9, scope: !4473)
!4545 = !DILocation(line: 213, column: 31, scope: !4483)
!4546 = !DILocation(line: 213, column: 30, scope: !4483)
!4547 = !DILocation(line: 216, column: 21, scope: !4485)
!4548 = !DILocation(line: 217, column: 21, scope: !4485)
!4549 = !DILocation(line: 215, column: 17, scope: !4485)
!4550 = !DILocation(line: 219, column: 13, scope: !4473)
!4551 = distinct !DISubprogram(name: "remaining", linkageName: "_ZN9itertools12permutations13CompleteState9remaining17h539d98e43185ef11E", scope: !31, file: !4456, line: 244, type: !4552, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4564)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!4554, !30}
!4554 = !DICompositeType(tag: DW_TAG_structure_type, name: "CompleteStateRemaining", scope: !32, file: !2, size: 128, align: 64, elements: !4555, identifier: "b47add4563bbf6d2d92a2a460b4c5671")
!4555 = !{!4556}
!4556 = !DICompositeType(tag: DW_TAG_variant_part, scope: !32, file: !2, size: 128, align: 64, elements: !4557, templateParams: !4, identifier: "b47add4563bbf6d2d92a2a460b4c5671_variant_part", discriminator: !74)
!4557 = !{!4558, !4562}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "Known", scope: !4556, file: !2, baseType: !4559, size: 128, align: 64, extraData: i64 0)
!4559 = !DICompositeType(tag: DW_TAG_structure_type, name: "Known", scope: !4554, file: !2, size: 128, align: 64, elements: !4560, templateParams: !4, identifier: "b47add4563bbf6d2d92a2a460b4c5671::Known")
!4560 = !{!4561}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4559, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "Overflow", scope: !4556, file: !2, baseType: !4563, size: 128, align: 64, extraData: i64 1)
!4563 = !DICompositeType(tag: DW_TAG_structure_type, name: "Overflow", scope: !4554, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "b47add4563bbf6d2d92a2a460b4c5671::Overflow")
!4564 = !{!4565, !4566, !4568, !4569, !4571, !4573, !4575, !4576, !4578, !4580, !4582, !4584, !4586, !4587, !4589, !4591}
!4565 = !DILocalVariable(name: "self", arg: 1, scope: !4551, file: !4456, line: 244, type: !30)
!4566 = !DILocalVariable(name: "n", scope: !4567, file: !4456, line: 248, type: !6, align: 8)
!4567 = distinct !DILexicalBlock(scope: !4551, file: !4456, line: 248, column: 13)
!4568 = !DILocalVariable(name: "k", scope: !4567, file: !4456, line: 248, type: !6, align: 8)
!4569 = !DILocalVariable(name: "count", scope: !4570, file: !4456, line: 253, type: !683, align: 8)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !4456, line: 253, column: 17)
!4571 = !DILocalVariable(name: "count", scope: !4572, file: !4456, line: 258, type: !6, align: 8)
!4572 = distinct !DILexicalBlock(scope: !4570, file: !4456, line: 258, column: 21)
!4573 = !DILocalVariable(name: "indices", scope: !4574, file: !4456, line: 262, type: !79, align: 8)
!4574 = distinct !DILexicalBlock(scope: !4551, file: !4456, line: 262, column: 13)
!4575 = !DILocalVariable(name: "cycles", scope: !4574, file: !4456, line: 262, type: !79, align: 8)
!4576 = !DILocalVariable(name: "count", scope: !4577, file: !4456, line: 263, type: !6, align: 8)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !4456, line: 263, column: 17)
!4578 = !DILocalVariable(name: "iter", scope: !4579, file: !4456, line: 265, type: !145, align: 8)
!4579 = distinct !DILexicalBlock(scope: !4577, file: !4456, line: 265, column: 17)
!4580 = !DILocalVariable(name: "__next", scope: !4581, file: !4456, line: 265, type: !135, align: 8)
!4581 = distinct !DILexicalBlock(scope: !4579, file: !4456, line: 265, column: 32)
!4582 = !DILocalVariable(name: "val", scope: !4583, file: !4456, line: 265, type: !135, align: 8)
!4583 = distinct !DILexicalBlock(scope: !4581, file: !4456, line: 265, column: 21)
!4584 = !DILocalVariable(name: "i", scope: !4585, file: !4456, line: 265, type: !6, align: 8)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !4456, line: 265, column: 32)
!4586 = !DILocalVariable(name: "c", scope: !4585, file: !4456, line: 265, type: !6, align: 8)
!4587 = !DILocalVariable(name: "radix", scope: !4588, file: !4456, line: 266, type: !6, align: 8)
!4588 = distinct !DILexicalBlock(scope: !4585, file: !4456, line: 266, column: 21)
!4589 = !DILocalVariable(name: "next_count", scope: !4590, file: !4456, line: 267, type: !683, align: 8)
!4590 = distinct !DILexicalBlock(scope: !4588, file: !4456, line: 267, column: 21)
!4591 = !DILocalVariable(name: "count", scope: !4592, file: !4456, line: 271, type: !6, align: 8)
!4592 = distinct !DILexicalBlock(scope: !4590, file: !4456, line: 271, column: 25)
!4593 = !DILocation(line: 244, column: 18, scope: !4551)
!4594 = !DILocation(line: 253, column: 21, scope: !4570)
!4595 = !DILocation(line: 263, column: 21, scope: !4577)
!4596 = !DILocation(line: 265, column: 32, scope: !4579)
!4597 = !DILocation(line: 265, column: 26, scope: !4585)
!4598 = !DILocation(line: 267, column: 25, scope: !4590)
!4599 = !DILocation(line: 247, column: 15, scope: !4551)
!4600 = !DILocation(line: 247, column: 9, scope: !4551)
!4601 = !DILocation(line: 248, column: 36, scope: !4551)
!4602 = !DILocation(line: 248, column: 36, scope: !4567)
!4603 = !DILocation(line: 248, column: 39, scope: !4551)
!4604 = !DILocation(line: 248, column: 39, scope: !4567)
!4605 = !DILocation(line: 249, column: 20, scope: !4567)
!4606 = !DILocation(line: 262, column: 38, scope: !4551)
!4607 = !DILocation(line: 262, column: 38, scope: !4574)
!4608 = !DILocation(line: 262, column: 51, scope: !4551)
!4609 = !DILocation(line: 262, column: 51, scope: !4574)
!4610 = !DILocation(line: 263, column: 40, scope: !4574)
!4611 = !DILocation(line: 265, column: 32, scope: !4577)
!4612 = !DILocation(line: 265, column: 17, scope: !4579)
!4613 = !DILocation(line: 265, column: 32, scope: !4581)
!4614 = !DILocation(line: 276, column: 23, scope: !4577)
!4615 = !DILocation(line: 276, column: 17, scope: !4577)
!4616 = !DILocation(line: 279, column: 6, scope: !4551)
!4617 = !DILocation(line: 265, column: 21, scope: !4581)
!4618 = !DILocation(line: 265, column: 21, scope: !4583)
!4619 = !DILocation(line: 265, column: 26, scope: !4581)
!4620 = !DILocation(line: 265, column: 22, scope: !4581)
!4621 = !DILocation(line: 265, column: 22, scope: !4585)
!4622 = !DILocation(line: 266, column: 33, scope: !4585)
!4623 = !DILocation(line: 266, column: 25, scope: !4588)
!4624 = !DILocation(line: 267, column: 38, scope: !4588)
!4625 = !DILocation(line: 268, column: 35, scope: !4588)
!4626 = !DILocation(line: 270, column: 35, scope: !4590)
!4627 = !DILocation(line: 270, column: 29, scope: !4590)
!4628 = !DILocation(line: 272, column: 42, scope: !4590)
!4629 = !DILocation(line: 1, column: 1, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4551, file: !2095, discriminator: 0)
!4631 = !DILocation(line: 271, column: 30, scope: !4590)
!4632 = !DILocation(line: 271, column: 30, scope: !4592)
!4633 = !DILocation(line: 270, column: 21, scope: !4590)
!4634 = !DILocation(line: 253, column: 45, scope: !4567)
!4635 = !DILocation(line: 250, column: 28, scope: !4567)
!4636 = !DILocation(line: 253, column: 56, scope: !4567)
!4637 = !DILocation(line: 253, column: 44, scope: !4567)
!4638 = !DILocation(line: 253, column: 68, scope: !4567)
!4639 = !DILocation(line: 257, column: 23, scope: !4570)
!4640 = !DILocation(line: 257, column: 17, scope: !4570)
!4641 = !DILocation(line: 259, column: 29, scope: !4570)
!4642 = !DILocation(line: 258, column: 26, scope: !4570)
!4643 = !DILocation(line: 258, column: 26, scope: !4572)
!4644 = !DILocation(line: 258, column: 36, scope: !4572)
!4645 = !DILocation(line: 258, column: 47, scope: !4570)
!4646 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h74e25cc91fb07503E", scope: !2548, file: !4456, line: 254, type: !4647, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4649)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!683, !2547, !6}
!4649 = !{!4650, !4651}
!4650 = !DILocalVariable(name: "acc", arg: 2, scope: !4646, file: !4456, line: 254, type: !6)
!4651 = !DILocalVariable(name: "i", scope: !4646, file: !4456, line: 253, type: !6, align: 8)
!4652 = !DILocation(line: 253, column: 83, scope: !4646)
!4653 = !DILocation(line: 254, column: 35, scope: !4646)
!4654 = !DILocation(line: 254, column: 56, scope: !4646)
!4655 = !DILocation(line: 254, column: 40, scope: !4646)
!4656 = !DILocation(line: 254, column: 58, scope: !4646)
!4657 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$17hb67bd229eb5fa747E", scope: !1862, file: !4456, line: 253, type: !4658, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4661)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!683, !4660, !683, !6}
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !1861, size: 64, align: 64, dwarfAddressSpace: 0)
!4661 = !{!4662, !4663, !4664}
!4662 = !DILocalVariable(name: "acc", arg: 2, scope: !4657, file: !4456, line: 253, type: !683)
!4663 = !DILocalVariable(name: "i", arg: 3, scope: !4657, file: !4456, line: 253, type: !6)
!4664 = !DILocalVariable(arg: 1, scope: !4657, file: !4456, line: 253, type: !4660)
!4665 = !DILocation(line: 253, column: 77, scope: !4657)
!4666 = !DILocation(line: 253, column: 78, scope: !4657)
!4667 = !DILocation(line: 253, column: 83, scope: !4657)
!4668 = !DILocation(line: 254, column: 34, scope: !4657)
!4669 = !DILocation(line: 254, column: 21, scope: !4657)
!4670 = !DILocation(line: 255, column: 18, scope: !4657)
!4671 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN9itertools12permutations13CompleteState9remaining28_$u7b$$u7b$closure$u7d$$u7d$17h5eaa2b78323fef38E", scope: !1862, file: !4456, line: 268, type: !4672, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4674)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!683, !2571, !6}
!4674 = !{!4675, !4676}
!4675 = !DILocalVariable(name: "count", arg: 2, scope: !4671, file: !4456, line: 268, type: !6)
!4676 = !DILocalVariable(name: "c", scope: !4671, file: !4456, line: 265, type: !6, align: 8)
!4677 = !DILocation(line: 265, column: 26, scope: !4671)
!4678 = !DILocation(line: 268, column: 36, scope: !4671)
!4679 = !DILocation(line: 268, column: 61, scope: !4671)
!4680 = !DILocation(line: 268, column: 43, scope: !4671)
!4681 = !DILocation(line: 268, column: 63, scope: !4671)
!4682 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN75_$LT$itertools..adaptors..coalesce..DedupEq$u20$as$u20$core..fmt..Debug$GT$3fmt17h610de8b47af7f87cE", scope: !4684, file: !4683, line: 144, type: !4687, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4691)
!4683 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/adaptors/coalesce.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "54926b7847fd26f8ba878aa28b6eee56")
!4684 = !DINamespace(name: "{impl#12}", scope: !4685)
!4685 = !DINamespace(name: "coalesce", scope: !4686)
!4686 = !DINamespace(name: "adaptors", scope: !33)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!95, !4689, !676}
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&DedupEq", baseType: !4690, size: 64, align: 64, dwarfAddressSpace: 0)
!4690 = !DICompositeType(tag: DW_TAG_structure_type, name: "DedupEq", scope: !4685, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "806208dcea5fed1519c388473fd8049b")
!4691 = !{!4692, !4693, !4694}
!4692 = !DILocalVariable(name: "self", arg: 1, scope: !4682, file: !4683, line: 144, type: !4689)
!4693 = !DILocalVariable(name: "f", arg: 2, scope: !4682, file: !4683, line: 144, type: !676)
!4694 = !DILocalVariable(name: "debug_trait_builder", scope: !4695, file: !4683, line: 144, type: !4696, align: 8)
!4695 = distinct !DILexicalBlock(scope: !4682, file: !4683, line: 144, column: 17)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugTuple", baseType: !4697, size: 64, align: 64, dwarfAddressSpace: 0)
!4697 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugTuple", scope: !1002, file: !2, size: 192, align: 64, elements: !4698, templateParams: !4, identifier: "b87e16a2b5c8e5fbfa596aeab6e7643")
!4698 = !{!4699, !4700, !4701, !4702}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4697, file: !2, baseType: !676, size: 64, align: 64)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4697, file: !2, baseType: !95, size: 8, align: 8, offset: 128)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !4697, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "empty_name", scope: !4697, file: !2, baseType: !26, size: 8, align: 8, offset: 136)
!4703 = !DILocation(line: 144, column: 17, scope: !4682)
!4704 = !DILocation(line: 144, column: 17, scope: !4695)
!4705 = !DILocation(line: 144, column: 22, scope: !4682)
!4706 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN94_$LT$itertools..adaptors..multi_product..MultiProductIterState$u20$as$u20$core..fmt..Debug$GT$3fmt17h99481a852b99f818E", scope: !4708, file: !4707, line: 54, type: !4710, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4724)
!4707 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/adaptors/multi_product.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "b20238a8f69e38d71729227e502b69a6")
!4708 = !DINamespace(name: "{impl#7}", scope: !4709)
!4709 = !DINamespace(name: "multi_product", scope: !4686)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{!95, !4712, !676}
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&MultiProductIterState", baseType: !4713, size: 64, align: 64, dwarfAddressSpace: 0)
!4713 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiProductIterState", scope: !4709, file: !2, size: 8, align: 8, elements: !4714, identifier: "3eed67707768892a26b9dbd6a507c05b")
!4714 = !{!4715}
!4715 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4709, file: !2, size: 8, align: 8, elements: !4716, templateParams: !4, identifier: "3eed67707768892a26b9dbd6a507c05b_variant_part", discriminator: !4723)
!4716 = !{!4717, !4719}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "StartOfIter", scope: !4715, file: !2, baseType: !4718, size: 8, align: 8, extraData: i64 2)
!4718 = !DICompositeType(tag: DW_TAG_structure_type, name: "StartOfIter", scope: !4713, file: !2, size: 8, align: 8, elements: !4, templateParams: !4, identifier: "3eed67707768892a26b9dbd6a507c05b::StartOfIter")
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "MidIter", scope: !4715, file: !2, baseType: !4720, size: 8, align: 8)
!4720 = !DICompositeType(tag: DW_TAG_structure_type, name: "MidIter", scope: !4713, file: !2, size: 8, align: 8, elements: !4721, templateParams: !4, identifier: "3eed67707768892a26b9dbd6a507c05b::MidIter")
!4721 = !{!4722}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "on_first_iter", scope: !4720, file: !2, baseType: !26, size: 8, align: 8)
!4723 = !DIDerivedType(tag: DW_TAG_member, scope: !4709, file: !2, baseType: !89, size: 8, align: 8, flags: DIFlagArtificial)
!4724 = !{!4725, !4726, !4727, !4729, !4731}
!4725 = !DILocalVariable(name: "self", arg: 1, scope: !4706, file: !4707, line: 54, type: !4712)
!4726 = !DILocalVariable(name: "f", arg: 2, scope: !4706, file: !4707, line: 54, type: !676)
!4727 = !DILocalVariable(name: "debug_trait_builder", scope: !4728, file: !4707, line: 54, type: !4696, align: 8)
!4728 = distinct !DILexicalBlock(scope: !4706, file: !4707, line: 54, column: 10)
!4729 = !DILocalVariable(name: "__self_0", scope: !4730, file: !4707, line: 57, type: !25, align: 8)
!4730 = distinct !DILexicalBlock(scope: !4706, file: !4707, line: 54, column: 10)
!4731 = !DILocalVariable(name: "debug_trait_builder", scope: !4732, file: !2095, line: 1, type: !4734, align: 8)
!4732 = !DILexicalBlockFile(scope: !4733, file: !2095, discriminator: 0)
!4733 = distinct !DILexicalBlock(scope: !4730, file: !4707, line: 54, column: 10)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugStruct", baseType: !4735, size: 64, align: 64, dwarfAddressSpace: 0)
!4735 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugStruct", scope: !1002, file: !2, size: 128, align: 64, elements: !4736, templateParams: !4, identifier: "b8ccb8ae22ce0b331b3e3a943d09da82")
!4736 = !{!4737, !4738, !4739}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4735, file: !2, baseType: !676, size: 64, align: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4735, file: !2, baseType: !95, size: 8, align: 8, offset: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !4735, file: !2, baseType: !26, size: 8, align: 8, offset: 72)
!4740 = !DILocation(line: 54, column: 10, scope: !4706)
!4741 = !{i8 0, i8 3}
!4742 = !DILocation(line: 57, column: 15, scope: !4706)
!4743 = !DILocation(line: 57, column: 15, scope: !4730)
!4744 = !DILocation(line: 54, column: 10, scope: !4730)
!4745 = !DILocation(line: 1, column: 1, scope: !4732)
!4746 = !DILocation(line: 57, column: 15, scope: !4733)
!4747 = !DILocation(line: 54, column: 10, scope: !4733)
!4748 = !DILocation(line: 54, column: 15, scope: !4706)
!4749 = !DILocation(line: 54, column: 10, scope: !4728)
!4750 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$itertools..adaptors..MergeLte$u20$as$u20$core..fmt..Debug$GT$3fmt17hd4e54d3313e2d5b0E", scope: !4752, file: !4751, line: 480, type: !4753, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4757)
!4751 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/adaptors/mod.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "82f539ec51ecadf37dec6fe8a2a52e50")
!4752 = !DINamespace(name: "{impl#53}", scope: !4686)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!95, !4755, !676}
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&MergeLte", baseType: !4756, size: 64, align: 64, dwarfAddressSpace: 0)
!4756 = !DICompositeType(tag: DW_TAG_structure_type, name: "MergeLte", scope: !4686, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "eb74775f0413c8a082ebefde377c5b80")
!4757 = !{!4758, !4759, !4760}
!4758 = !DILocalVariable(name: "self", arg: 1, scope: !4750, file: !4751, line: 480, type: !4755)
!4759 = !DILocalVariable(name: "f", arg: 2, scope: !4750, file: !4751, line: 480, type: !676)
!4760 = !DILocalVariable(name: "debug_trait_builder", scope: !4761, file: !4751, line: 480, type: !4696, align: 8)
!4761 = distinct !DILexicalBlock(scope: !4750, file: !4751, line: 480, column: 17)
!4762 = !DILocation(line: 480, column: 17, scope: !4750)
!4763 = !DILocation(line: 480, column: 17, scope: !4761)
!4764 = !DILocation(line: 480, column: 22, scope: !4750)
!4765 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN71_$LT$itertools..groupbylazy..ChunkIndex$u20$as$u20$core..fmt..Debug$GT$3fmt17hf8c108500e70bd3fE", scope: !4767, file: !4766, line: 22, type: !4769, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4777)
!4766 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/groupbylazy.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "6dc991754ab93f4bdbab43c3614ad66d")
!4767 = !DINamespace(name: "{impl#15}", scope: !4768)
!4768 = !DINamespace(name: "groupbylazy", scope: !33)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{!95, !4771, !676}
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&ChunkIndex", baseType: !4772, size: 64, align: 64, dwarfAddressSpace: 0)
!4772 = !DICompositeType(tag: DW_TAG_structure_type, name: "ChunkIndex", scope: !4768, file: !2, size: 192, align: 64, elements: !4773, templateParams: !4, identifier: "69df93ea63b4485c1aba16c2fe1f3227")
!4773 = !{!4774, !4775, !4776}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4772, file: !2, baseType: !6, size: 64, align: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4772, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4772, file: !2, baseType: !6, size: 64, align: 64, offset: 128)
!4777 = !{!4778, !4779, !4780, !4782, !4783, !4784}
!4778 = !DILocalVariable(name: "self", arg: 1, scope: !4765, file: !4766, line: 22, type: !4771)
!4779 = !DILocalVariable(name: "f", arg: 2, scope: !4765, file: !4766, line: 22, type: !676)
!4780 = !DILocalVariable(name: "__self_0_0", scope: !4781, file: !4766, line: 24, type: !5, align: 8)
!4781 = distinct !DILexicalBlock(scope: !4765, file: !4766, line: 22, column: 10)
!4782 = !DILocalVariable(name: "__self_0_1", scope: !4781, file: !4766, line: 25, type: !5, align: 8)
!4783 = !DILocalVariable(name: "__self_0_2", scope: !4781, file: !4766, line: 26, type: !5, align: 8)
!4784 = !DILocalVariable(name: "debug_trait_builder", scope: !4785, file: !2095, line: 1, type: !4734, align: 8)
!4785 = !DILexicalBlockFile(scope: !4786, file: !2095, discriminator: 0)
!4786 = distinct !DILexicalBlock(scope: !4781, file: !4766, line: 22, column: 10)
!4787 = !DILocation(line: 22, column: 10, scope: !4765)
!4788 = !DILocation(line: 24, column: 5, scope: !4765)
!4789 = !DILocation(line: 24, column: 5, scope: !4781)
!4790 = !DILocation(line: 25, column: 5, scope: !4765)
!4791 = !DILocation(line: 25, column: 5, scope: !4781)
!4792 = !DILocation(line: 26, column: 5, scope: !4765)
!4793 = !DILocation(line: 26, column: 5, scope: !4781)
!4794 = !DILocation(line: 22, column: 10, scope: !4781)
!4795 = !DILocation(line: 1, column: 1, scope: !4785)
!4796 = !DILocation(line: 24, column: 5, scope: !4786)
!4797 = !DILocation(line: 22, column: 10, scope: !4786)
!4798 = !DILocation(line: 25, column: 5, scope: !4786)
!4799 = !DILocation(line: 26, column: 5, scope: !4786)
!4800 = !DILocation(line: 22, column: 15, scope: !4765)
!4801 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN71_$LT$itertools..kmerge_impl..KMergeByLt$u20$as$u20$core..fmt..Debug$GT$3fmt17h22767f63915318a8E", scope: !4803, file: !4802, line: 114, type: !4805, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4809)
!4802 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/kmerge_impl.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "e51c7cbc4f4f330bf3f4be712e8d57a1")
!4803 = !DINamespace(name: "{impl#10}", scope: !4804)
!4804 = !DINamespace(name: "kmerge_impl", scope: !33)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!95, !4807, !676}
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&KMergeByLt", baseType: !4808, size: 64, align: 64, dwarfAddressSpace: 0)
!4808 = !DICompositeType(tag: DW_TAG_structure_type, name: "KMergeByLt", scope: !4804, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "7cdad39f0d97e05bf239775a4fbbe983")
!4809 = !{!4810, !4811, !4812}
!4810 = !DILocalVariable(name: "self", arg: 1, scope: !4801, file: !4802, line: 114, type: !4807)
!4811 = !DILocalVariable(name: "f", arg: 2, scope: !4801, file: !4802, line: 114, type: !676)
!4812 = !DILocalVariable(name: "debug_trait_builder", scope: !4813, file: !4802, line: 114, type: !4696, align: 8)
!4813 = distinct !DILexicalBlock(scope: !4801, file: !4802, line: 114, column: 17)
!4814 = !DILocation(line: 114, column: 17, scope: !4801)
!4815 = !DILocation(line: 114, column: 17, scope: !4813)
!4816 = !DILocation(line: 114, column: 22, scope: !4801)
!4817 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN78_$LT$itertools..permutations..PermutationState$u20$as$u20$core..fmt..Debug$GT$3fmt17h7b0ab50a0a2c174fE", scope: !4818, file: !4456, line: 25, type: !4819, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4841)
!4818 = !DINamespace(name: "{impl#6}", scope: !32)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!95, !4821, !676}
!4821 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&PermutationState", baseType: !4822, size: 64, align: 64, dwarfAddressSpace: 0)
!4822 = !DICompositeType(tag: DW_TAG_structure_type, name: "PermutationState", scope: !32, file: !2, size: 512, align: 64, elements: !4823, identifier: "be800c2202b2072116b5cb1b272bf7c")
!4823 = !{!4824}
!4824 = !DICompositeType(tag: DW_TAG_variant_part, scope: !32, file: !2, size: 512, align: 64, elements: !4825, templateParams: !4, identifier: "be800c2202b2072116b5cb1b272bf7c_variant_part", discriminator: !74)
!4825 = !{!4826, !4830, !4835, !4839}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "StartUnknownLen", scope: !4824, file: !2, baseType: !4827, size: 512, align: 64, extraData: i64 0)
!4827 = !DICompositeType(tag: DW_TAG_structure_type, name: "StartUnknownLen", scope: !4822, file: !2, size: 512, align: 64, elements: !4828, templateParams: !4, identifier: "be800c2202b2072116b5cb1b272bf7c::StartUnknownLen")
!4828 = !{!4829}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4827, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "OngoingUnknownLen", scope: !4824, file: !2, baseType: !4831, size: 512, align: 64, extraData: i64 1)
!4831 = !DICompositeType(tag: DW_TAG_structure_type, name: "OngoingUnknownLen", scope: !4822, file: !2, size: 512, align: 64, elements: !4832, templateParams: !4, identifier: "be800c2202b2072116b5cb1b272bf7c::OngoingUnknownLen")
!4832 = !{!4833, !4834}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4831, file: !2, baseType: !6, size: 64, align: 64, offset: 64)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "min_n", scope: !4831, file: !2, baseType: !6, size: 64, align: 64, offset: 128)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "Complete", scope: !4824, file: !2, baseType: !4836, size: 512, align: 64, extraData: i64 2)
!4836 = !DICompositeType(tag: DW_TAG_structure_type, name: "Complete", scope: !4822, file: !2, size: 512, align: 64, elements: !4837, templateParams: !4, identifier: "be800c2202b2072116b5cb1b272bf7c::Complete")
!4837 = !{!4838}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4836, file: !2, baseType: !31, size: 448, align: 64, offset: 64)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !4824, file: !2, baseType: !4840, size: 512, align: 64, extraData: i64 3)
!4840 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !4822, file: !2, size: 512, align: 64, elements: !4, templateParams: !4, identifier: "be800c2202b2072116b5cb1b272bf7c::Empty")
!4841 = !{!4842, !4843, !4844, !4846, !4849, !4851, !4852, !4855, !4857, !4859}
!4842 = !DILocalVariable(name: "self", arg: 1, scope: !4817, file: !4456, line: 25, type: !4821)
!4843 = !DILocalVariable(name: "f", arg: 2, scope: !4817, file: !4456, line: 25, type: !676)
!4844 = !DILocalVariable(name: "__self_0", scope: !4845, file: !4456, line: 28, type: !5, align: 8)
!4845 = distinct !DILexicalBlock(scope: !4817, file: !4456, line: 25, column: 17)
!4846 = !DILocalVariable(name: "debug_trait_builder", scope: !4847, file: !2095, line: 1, type: !4734, align: 8)
!4847 = !DILexicalBlockFile(scope: !4848, file: !2095, discriminator: 0)
!4848 = distinct !DILexicalBlock(scope: !4845, file: !4456, line: 25, column: 17)
!4849 = !DILocalVariable(name: "__self_0", scope: !4850, file: !4456, line: 31, type: !5, align: 8)
!4850 = distinct !DILexicalBlock(scope: !4817, file: !4456, line: 25, column: 17)
!4851 = !DILocalVariable(name: "__self_1", scope: !4850, file: !4456, line: 32, type: !5, align: 8)
!4852 = !DILocalVariable(name: "debug_trait_builder", scope: !4853, file: !2095, line: 1, type: !4734, align: 8)
!4853 = !DILexicalBlockFile(scope: !4854, file: !2095, discriminator: 0)
!4854 = distinct !DILexicalBlock(scope: !4850, file: !4456, line: 25, column: 17)
!4855 = !DILocalVariable(name: "__self_0", scope: !4856, file: !4456, line: 34, type: !30, align: 8)
!4856 = distinct !DILexicalBlock(scope: !4817, file: !4456, line: 25, column: 17)
!4857 = !DILocalVariable(name: "debug_trait_builder", scope: !4858, file: !4456, line: 25, type: !4696, align: 8)
!4858 = distinct !DILexicalBlock(scope: !4856, file: !4456, line: 25, column: 17)
!4859 = !DILocalVariable(name: "debug_trait_builder", scope: !4860, file: !4456, line: 25, type: !4696, align: 8)
!4860 = distinct !DILexicalBlock(scope: !4817, file: !4456, line: 25, column: 17)
!4861 = !DILocation(line: 25, column: 17, scope: !4817)
!4862 = !{i64 0, i64 4}
!4863 = !DILocation(line: 28, column: 9, scope: !4817)
!4864 = !DILocation(line: 28, column: 9, scope: !4845)
!4865 = !DILocation(line: 25, column: 17, scope: !4845)
!4866 = !DILocation(line: 31, column: 9, scope: !4817)
!4867 = !DILocation(line: 31, column: 9, scope: !4850)
!4868 = !DILocation(line: 32, column: 9, scope: !4817)
!4869 = !DILocation(line: 32, column: 9, scope: !4850)
!4870 = !DILocation(line: 25, column: 17, scope: !4850)
!4871 = !DILocation(line: 34, column: 14, scope: !4817)
!4872 = !DILocation(line: 34, column: 14, scope: !4856)
!4873 = !DILocation(line: 25, column: 17, scope: !4856)
!4874 = !DILocation(line: 25, column: 17, scope: !4860)
!4875 = !DILocation(line: 25, column: 22, scope: !4817)
!4876 = !DILocation(line: 25, column: 17, scope: !4858)
!4877 = !DILocation(line: 34, column: 14, scope: !4858)
!4878 = !DILocation(line: 1, column: 1, scope: !4853)
!4879 = !DILocation(line: 31, column: 9, scope: !4854)
!4880 = !DILocation(line: 25, column: 17, scope: !4854)
!4881 = !DILocation(line: 32, column: 9, scope: !4854)
!4882 = !DILocation(line: 1, column: 1, scope: !4847)
!4883 = !DILocation(line: 28, column: 9, scope: !4848)
!4884 = !DILocation(line: 25, column: 17, scope: !4848)
!4885 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN75_$LT$itertools..permutations..CompleteState$u20$as$u20$core..fmt..Debug$GT$3fmt17h095a9a725735a5baE", scope: !4886, file: !4456, line: 38, type: !4887, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4889)
!4886 = !DINamespace(name: "{impl#8}", scope: !32)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{!95, !30, !676}
!4889 = !{!4890, !4891, !4892, !4894, !4895, !4898, !4900, !4901}
!4890 = !DILocalVariable(name: "self", arg: 1, scope: !4885, file: !4456, line: 38, type: !30)
!4891 = !DILocalVariable(name: "f", arg: 2, scope: !4885, file: !4456, line: 38, type: !676)
!4892 = !DILocalVariable(name: "__self_0", scope: !4893, file: !4456, line: 41, type: !5, align: 8)
!4893 = distinct !DILexicalBlock(scope: !4885, file: !4456, line: 38, column: 17)
!4894 = !DILocalVariable(name: "__self_1", scope: !4893, file: !4456, line: 42, type: !5, align: 8)
!4895 = !DILocalVariable(name: "debug_trait_builder", scope: !4896, file: !2095, line: 1, type: !4734, align: 8)
!4896 = !DILexicalBlockFile(scope: !4897, file: !2095, discriminator: 0)
!4897 = distinct !DILexicalBlock(scope: !4893, file: !4456, line: 38, column: 17)
!4898 = !DILocalVariable(name: "__self_0", scope: !4899, file: !4456, line: 45, type: !79, align: 8)
!4899 = distinct !DILexicalBlock(scope: !4885, file: !4456, line: 38, column: 17)
!4900 = !DILocalVariable(name: "__self_1", scope: !4899, file: !4456, line: 46, type: !79, align: 8)
!4901 = !DILocalVariable(name: "debug_trait_builder", scope: !4902, file: !2095, line: 1, type: !4734, align: 8)
!4902 = !DILexicalBlockFile(scope: !4903, file: !2095, discriminator: 0)
!4903 = distinct !DILexicalBlock(scope: !4899, file: !4456, line: 38, column: 17)
!4904 = !DILocation(line: 38, column: 17, scope: !4885)
!4905 = !DILocation(line: 41, column: 9, scope: !4885)
!4906 = !DILocation(line: 41, column: 9, scope: !4893)
!4907 = !DILocation(line: 42, column: 9, scope: !4885)
!4908 = !DILocation(line: 42, column: 9, scope: !4893)
!4909 = !DILocation(line: 38, column: 17, scope: !4893)
!4910 = !DILocation(line: 45, column: 9, scope: !4885)
!4911 = !DILocation(line: 45, column: 9, scope: !4899)
!4912 = !DILocation(line: 46, column: 9, scope: !4885)
!4913 = !DILocation(line: 46, column: 9, scope: !4899)
!4914 = !DILocation(line: 38, column: 17, scope: !4899)
!4915 = !DILocation(line: 1, column: 1, scope: !4902)
!4916 = !DILocation(line: 45, column: 9, scope: !4903)
!4917 = !DILocation(line: 38, column: 17, scope: !4903)
!4918 = !DILocation(line: 46, column: 9, scope: !4903)
!4919 = !DILocation(line: 38, column: 22, scope: !4885)
!4920 = !DILocation(line: 1, column: 1, scope: !4896)
!4921 = !DILocation(line: 41, column: 9, scope: !4897)
!4922 = !DILocation(line: 38, column: 17, scope: !4897)
!4923 = !DILocation(line: 42, column: 9, scope: !4897)
!4924 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN78_$LT$itertools..duplicates_impl..private..ById$u20$as$u20$core..fmt..Debug$GT$3fmt17h92b401dec2386badE", scope: !4926, file: !4925, line: 125, type: !4929, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, templateParams: !4, retainedNodes: !4933)
!4925 = !DIFile(filename: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3/src/duplicates_impl.rs", directory: "/home/seaceved/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.3", checksumkind: CSK_MD5, checksum: "de218302daf9f0cbc4fc1169a6ac9b42")
!4926 = !DINamespace(name: "{impl#12}", scope: !4927)
!4927 = !DINamespace(name: "private", scope: !4928)
!4928 = !DINamespace(name: "duplicates_impl", scope: !33)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!95, !4931, !676}
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&ById", baseType: !4932, size: 64, align: 64, dwarfAddressSpace: 0)
!4932 = !DICompositeType(tag: DW_TAG_structure_type, name: "ById", scope: !4927, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "44dd9935507c8d76d3f808b447ad8705")
!4933 = !{!4934, !4935, !4936}
!4934 = !DILocalVariable(name: "self", arg: 1, scope: !4924, file: !4925, line: 125, type: !4931)
!4935 = !DILocalVariable(name: "f", arg: 2, scope: !4924, file: !4925, line: 125, type: !676)
!4936 = !DILocalVariable(name: "debug_trait_builder", scope: !4937, file: !4925, line: 125, type: !4696, align: 8)
!4937 = distinct !DILexicalBlock(scope: !4924, file: !4925, line: 125, column: 14)
!4938 = !DILocation(line: 125, column: 14, scope: !4924)
!4939 = !DILocation(line: 125, column: 14, scope: !4937)
!4940 = !DILocation(line: 125, column: 19, scope: !4924)
